"openapi": "3.1.0"
"info": {"title": "Gcore OpenAPI â€“ CDN Reseller API", "description": "This OpenAPI is an aggregated OpenAPI specification that unifies all Gcore products into a single file. It covers Cloud, CDN, DNS, WAAP, DDoS Protection, Object Storage, Streaming, and FastEdge services.", "version": "2025-09-22T14:46:55.476624+00:00"}
"servers": ["url": "https://api.gcore.com"]
paths:
  "/cdn/resellers/me":
    "get": {"operationId": "get-account-settings", "tags": ["CDN Reseller Account"], "summary": "Get account settings", "description": "Get information about CDN product settings in your account.", "responses": {"200": {"$ref": "#/components/responses/account/ResellersMe"}}}
    "put": {"operationId": "change-account-settings", "tags": ["CDN Reseller Account"], "summary": "Change account settings", "description": "Change the CDN service settings in your account.", "requestBody": {"$ref": "#/components/requests/body/resellers/ChangeResellersAccountDetails"}, "responses": {"200": {"$ref": "#/components/responses/account/ResellersMe"}, "400": {"$ref": "#/components/responses/account/errors/ChangeResellersAccountDetailsFailed"}}}
  "/cdn/clients":
    "get": {"operationId": "get-cdn-service", "tags": ["CDN Reseller service"], "summary": "Get CDN service", "description": "Get information about CDN services of all clients accounts.", "responses": {"200": {"$ref": "#/components/responses/clients/AccountsList"}}}
  "/cdn/clients/{client_id}":
    "put": {"operationId": "change-cdn-service-details", "tags": ["CDN Reseller service"], "summary": "Change CDN service details", "description": "Change CDN service details of the specific client account.", "parameters": ["$ref": "#/components/parameters/path/clients/ID"], "requestBody": {"$ref": "#/components/requests/body/clients/ChangeAccountDetails"}, "responses": {"200": {"$ref": "#/components/responses/clients/AccountDetails"}, "400": {"$ref": "#/components/responses/clients/errors/ChangeAccountDetailsFailed"}, "404": {"$ref": "#/components/responses/clients/errors/NotFound"}}}
  "/cdn/clients/{client_id}/service":
    "get": {"operationId": "get-cdn-service-status-details", "tags": ["CDN Reseller service"], "summary": "Get CDN service status details", "description": "Get information about CDN service status of the specific client account.", "parameters": ["$ref": "#/components/parameters/path/clients/ID"], "responses": {"200": {"$ref": "#/components/responses/clients/service/Details"}, "404": {"$ref": "#/components/responses/clients/errors/NotFound"}}}
  "/cdn/admin/feature":
    "get": {"operationId": "get-features-list", "tags": ["CDN Reseller Features"], "summary": "Get features list", "description": "Get information about all available features that you can manage.", "responses": {"200": {"$ref": "#/components/responses/features/FeaturesList"}}}
  "/cdn/admin/feature/{feature_id}":
    "get": {"operationId": "get-feature-details", "tags": ["CDN Reseller Features"], "summary": "Get feature details", "description": "Get information about the feature details.", "parameters": ["$ref": "#/components/parameters/path/features/ID"], "responses": {"200": {"$ref": "#/components/responses/features/FeaturesDetail"}, "404": {"$ref": "#/components/responses/features/errors/FeatureNotFound"}}}
  "/cdn/admin/paid_features":
    "get": {"operationId": "get-paid-features-list", "tags": ["CDN Reseller Features"], "summary": "Get paid features list", "description": "Get information about all paid features activated for the clients.", "responses": {"200": {"$ref": "#/components/responses/features/PaidFeaturesList"}}}
    "post": {"operationId": "enable-paid-feature", "tags": ["CDN Reseller Features"], "summary": "Enable paid feature", "description": "Enable information about the paid feature for a specific client.", "requestBody": {"$ref": "#/components/requests/body/features/PaidFeaturesCreate"}, "responses": {"201": {"$ref": "#/components/responses/features/PaidFeaturesCreated"}, "400": {"$ref": "#/components/responses/features/errors/ValidationError"}}}
  "/cdn/admin/paid_features/{paid_feature_id}":
    "get": {"operationId": "get-paid-feature-details", "tags": ["CDN Reseller Features"], "summary": "Get paid feature details", "description": "Get details of the activated paid feature.", "parameters": ["$ref": "#/components/parameters/path/features/PaidFeatureID"], "responses": {"200": {"$ref": "#/components/responses/features/PaidFeaturesDetail"}, "404": {"$ref": "#/components/responses/features/errors/PaidFeatureNotFound"}}}
    "delete": {"operationId": "disable-paid-feature", "tags": ["CDN Reseller Features"], "summary": "Disable paid feature", "description": "Disable the paid feature for a specific client.", "parameters": ["$ref": "#/components/parameters/path/features/PaidFeatureID"], "responses": {"204": {"description": "Successful."}, "404": {"$ref": "#/components/responses/features/errors/PaidFeatureNotFound"}}}
  "/cdn/admin/free_features":
    "get": {"operationId": "get-free-features-list", "tags": ["CDN Reseller Features"], "summary": "Get free features list", "description": "Get information about all free features activated for the clients.", "responses": {"200": {"$ref": "#/components/responses/features/FreeFeaturesList"}}}
    "post": {"operationId": "enable-free-feature", "tags": ["CDN Reseller Features"], "summary": "Enable free feature", "description": "Enable the free feature for a specific client.", "requestBody": {"$ref": "#/components/requests/body/features/PaidFeaturesCreate"}, "responses": {"201": {"$ref": "#/components/responses/features/FreeFeaturesCreated"}, "400": {"$ref": "#/components/responses/features/errors/ValidationError"}}}
  "/cdn/admin/free_features/{free_feature_id}":
    "get": {"operationId": "get-free-feature-details", "tags": ["CDN Reseller Features"], "summary": "Get free feature details", "description": "Get information about the details of the activated free feature.", "parameters": ["$ref": "#/components/parameters/path/features/FreeFeatureID"], "responses": {"200": {"$ref": "#/components/responses/features/FreeFeaturesDetail"}, "404": {"$ref": "#/components/responses/features/errors/FreeFeatureNotFound"}}}
    "delete": {"operationId": "disable-free-feature", "tags": ["CDN Reseller Features"], "summary": "Disable free feature", "description": "Disable the free feature for a specific client.", "parameters": ["$ref": "#/components/parameters/path/features/FreeFeatureID"], "responses": {"204": {"description": "Successful."}, "404": {"$ref": "#/components/responses/features/errors/FreeFeatureNotFound"}}}
  "/cdn/admin/billing_regions":
    "get": {"operationId": "get-client-content-delivery-regions-list", "tags": ["Balancer"], "summary": "Get client content delivery regions list", "description": "Get information about all regions that might be used for content delivery for a specific client.", "parameters": ["$ref": "#/components/parameters/query/client_id"], "responses": {"200": {"$ref": "#/components/responses/balancer/BillingRegionsList"}, "400": {"$ref": "#/components/responses/clients/errors/NotFound"}}}
  "/cdn/admin/clients":
    "get": {"operationId": "get-clients-using-balancer", "tags": ["Balancer"], "summary": "Get clients using balancer", "description": "Get IDs of clients that use the load balancer.", "parameters": ["$ref": "#/components/parameters/path/clients/ID"], "responses": {"200": {"$ref": "#/components/responses/balancer/ClientsThatUseBalancer"}}}
  "/cdn/admin/clients/{client_id}":
    "get": {"operationId": "get-client-balancer-settings", "tags": ["Balancer"], "summary": "Get client balancer settings", "description": "Get information about all regions used for content delivery for a specific client.", "parameters": ["$ref": "#/components/parameters/path/clients/ID"], "responses": {"200": {"$ref": "#/components/responses/balancer/ClientBalancerSettingsDetails"}, "404": {"$ref": "#/components/responses/balancer/errors/settings/get/UnableReceiveSettings"}}}
    "post": {"operationId": "set-client-balancer-settings", "tags": ["Balancer"], "summary": "Set client balancer settings", "description": "Set regions that will be used for content delivery for a specific client.", "parameters": ["$ref": "#/components/parameters/path/clients/ID"], "requestBody": {"$ref": "#/components/requests/body/balancer/SetClientsBalancerSettings"}, "responses": {"204": {"description": "Successful."}, "400": {"$ref": "#/components/responses/balancer/errors/settings/set/RegionNotFound"}, "409": {"$ref": "#/components/responses/balancer/errors/settings/set/RegionIsAbsent"}}}
    "delete": {"operationId": "delete-client-balancer-settings", "tags": ["Balancer"], "summary": "Delete client balancer settings", "description": "Delete balancer settings for a specific client. Balancer will be deactivated.", "parameters": ["$ref": "#/components/parameters/path/clients/ID"], "responses": {"204": {"description": "Successful."}, "404": {"$ref": "#/components/responses/clients/errors/NotFound"}}}
  "/cdn/admin/default_region":
    "get": {"operationId": "get-client-default-location-handler", "tags": ["Balancer"], "summary": "Get client default location handler", "description": "Get the default location handler that is used to redirect traffic from locations that are not used in content delivery and\nto deliver content when the user region has not been defined.", "parameters": ["$ref": "#/components/parameters/query/client_id_required"], "responses": {"200": {"$ref": "#/components/responses/balancer/DefaultLocationHandler"}, "404": {"$ref": "#/components/responses/clients/errors/NotFound"}}}
    "post": {"operationId": "set-client-default-location-handler", "tags": ["Balancer"], "summary": "Set client default location handler", "description": "Set the default location handler that will be used to redirect traffic from locations not used in content\ndelivery and to deliver content when the user's region has not been defined.\n\nThe location must be included in the list of regions used for content delivery.", "requestBody": {"$ref": "#/components/requests/body/balancer/SetDefaultHandler"}, "responses": {"204": {"description": "Successful."}, "400": {"$ref": "#/components/responses/balancer/errors/DefaultHandler"}}}
  "/cdn/clients/{client_id}/disabled_shield_locations_v2":
    "get": {"operationId": "get-information-about-disabled-origin-shielding-locations", "tags": ["CDN Reseller Origin shielding"], "summary": "Get information about disabled origin shielding locations", "description": "Get information about origin shielding locations disabled for a specific client.", "parameters": ["$ref": "#/components/parameters/path/clients/ID"], "responses": {"200": {"$ref": "#/components/responses/clients/DisabledShieldLocations"}, "404": {"$ref": "#/components/responses/clients/errors/NotFound"}}}
tags:
- {"name": "CDN Reseller Account", "description": "Information about CDN product settings in your account.", "x-displayName": "Account"}
- {"name": "CDN Reseller service", "description": "Information about the current state of CDN service in your account.", "x-displayName": "CDN service"}
- {"name": "CDN Reseller Features", "description": "Information about free and paid features available for you account.", "x-displayName": "Features"}
- {"name": "Balancer", "description": "Balancer allows choosing CDN server locations that will be used for content delivery.\n\nTo activate balancer, [set clientâ€™s balancer settings](/docs/api-reference/cdn-resellers/balancer/set-client-balancer-settings).", "x-displayName": "Balancer"}
- {"name": "CDN Reseller Origin shielding", "description": "Origin shielding helps protect your origin server from being overloaded with requests from multiple CDN servers.\nThe option accumulates all CDN server requests at a special server called a shield or precache server.\n\nWhen shielding is enabled, only one precache server communicates with the origin host, not the entire CDN.", "x-displayName": "Origin shielding"}
x-tagGroups:
- {"name": "CDN Reseller API", "tags": ["CDN Reseller Account", "CDN Reseller service", "CDN Reseller Features", "Balancer", "CDN Reseller Origin shielding"]}
security: ["APIKey": []]
components:
  responses:
    account:
      ResellersMe: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/account/ResellersMe"}, "example": {"id": 1, "available_features": [1, 2, 3], "default_enabled_features": [2, 3]}}}}
      errors:
        ChangeResellersAccountDetailsFailed: {"description": "Invalid value of \"`default_enabled_features`\" parameter is provided.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/account/errors/UpdateResellerMeDetailsFailed"}}}}
    features:
      PaidFeaturesList: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/features/PaidFeaturesList"}, "example": [{"id": 1, "client_id": 1, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": false}, "feature_id": 1, "create_date": "2021-01-01T00:00:00.000000Z"}, {"id": 2, "client_id": 2, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": false}, "feature_id": 1, "create_date": "2021-01-01T00:00:00.000000Z"}]}}}
      errors:
        PaidFeatureNotFound: {"description": "Paid feature is not found."}
        FeatureNotFound: {"description": "Feature is not found."}
        ValidationError: {"description": "Validation error.", "content": {"application/json": {"schema": {"type": "object", "properties": {"errors": {"type": "object", "properties": {"client_id": {"type": "array", "items": {"type": "string"}, "description": "List of errors for specified client ID.", "example": ["Client with id:1 does not exists."]}, "feature_id": {"type": "array", "items": {"type": "string"}, "description": "List of errors for specified feature ID.", "example": ["Feature with id:1 does not exists."]}}}}}}}}
        FreeFeatureNotFound: {"description": "Free feature is not found."}
      FreeFeaturesCreated: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/features/PaidFeaturesDetail"}, "example": {"id": 1, "client_id": 1, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": true}, "feature_id": 1, "create_date": "2021-01-01T00:00:00.000000Z"}}}}
      PaidFeaturesDetail: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/features/PaidFeaturesDetail"}, "example": {"id": 2, "client_id": 2, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": false}, "feature_id": 1, "create_date": "2021-01-01T00:00:00.000000Z"}}}}
      FreeFeaturesList: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/features/PaidFeaturesList"}, "example": [{"id": 1, "client_id": 1, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": true}, "feature_id": 1, "create_date": "2021-01-01T00:00:00.000000Z"}, {"id": 2, "client_id": 2, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": true}, "feature_id": 1, "create_date": "2021-01-01T00:00:00.000000Z"}]}}}
      FeaturesList: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/features/FeaturesList"}, "example": [{"id": 1, "name": "Example 1", "service": "CDN", "is_free": false}, {"id": 2, "name": "Example 2", "service": "CDN", "is_free": true}]}}}
      PaidFeaturesCreated: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/features/PaidFeaturesDetail"}, "example": {"id": 2, "client_id": 2, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": false}, "feature_id": 1, "create_date": "2021-01-01T00:00:00.000000Z"}}}}
      FreeFeaturesDetail: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/features/PaidFeaturesDetail"}, "example": {"id": 1, "client_id": 1, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": true}, "feature_id": 1, "create_date": "2021-01-01T00:00:00.000000Z"}}}}
      FeaturesDetail: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/features/FeaturesDetail"}, "example": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": false}}}}
    balancer:
      errors:
        DefaultHandler: {"description": "Failed to set client default location handler.", "content": {"application/json": {"schema": {"oneOf": ["$ref": "#/components/responses/balancer/errors/UnacceptableHandler", "$ref": "#/components/responses/balancer/errors/ClientForDefaultHandlerNotFound"]}}}}
        settings:
          get:
            UnableReceiveSettings: {"description": "Failed to get client balancer settings.", "content": {"application/json": {"schema": {"oneOf": ["$ref": "#/components/responses/balancer/errors/NoSuchClientID", "$ref": "#/components/responses/balancer/errors/ClientNotFound"]}}}}
          set:
            RegionIsAbsent: {"description": "Some required billing regions are missing."}
            RegionNotFound: {"description": "Region is not found in regions list."}
        UnacceptableHandler: {"title": "Unacceptable handler", "type": "object", "properties": {"error": {"type": "string", "description": "The specified region is not allowed as the default location handler. \n\nTo get the list of allowed regions, use [Get client content delivery regions list](/docs/api-reference/cdn-resellers/balancer/get-client-content-delivery-regions-list).", "example": "unacceptable handler"}}}
        ClientNotFound: {"title": "Client not found", "type": "object", "properties": {"error": {"description": "Client with the specified account ID is not found."}}, "example": {}}
        NoSuchClientID: {"title": "No such client_id", "type": "object", "properties": {"error": {"type": "string", "description": "Balancer has not been activated for the client and the client does not have balancer settings.\n\nTo activate balancer, [set clientâ€™s balancer settings](/docs/api-reference/cdn-resellers/balancer/set-client-balancer-settings).", "example": "No such client_id"}}}
        ClientForDefaultHandlerNotFound: {"title": "Client not found", "type": "object", "properties": {"errors": {"type": "object", "properties": {"client_id": {"type": "array", "items": {"type": "string"}, "description": "Client with the specified account ID is not found.", "example": ["Client with ID 174 not found."]}}}}}
      DefaultLocationHandler: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/balancer/DefaultLocationHandler"}, "example": {"current_handler": "region1", "possible_handlers": ["region2", "region3"]}}}}
      ClientsThatUseBalancer: {"description": "Successful.", "content": {"application/json": {"type": "array", "items": {"type": "integer"}, "example": [1, 2, 3]}}}
      BillingRegionsList: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/balancer/BillingRegionsList"}, "example": [{"id": 1, "name": "region1", "created_at": "", "changed_at": "", "description": "Region 1", "required": false, "visible": false, "localization": null}, {"id": 2, "name": "region2", "created_at": "", "changed_at": "", "description": "Region 2", "required": false, "visible": false, "localization": null}]}}}
      ClientBalancerSettingsDetails: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/balancer/ClientSettingsDetails"}, "example": {"is_in": true, "region_list": [1, 2]}}}}
    clients:
      errors:
        ChangeAccountDetailsFailed: {"description": "Invalid value of \"`utilization_level`\" parameter is provided.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/clients/errors/ChangeAccountDetailsFailed"}}}}
        NotFound: {"description": "The client is not found."}
      AccountDetails: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/clients/AccountDetails"}, "example": {"id": 1, "created": "2017-06-10T10:30:04.954354Z", "updated": "2017-06-10T10:30:04.954354Z", "service": {"enabled": true, "status": "active", "updated": "2017-06-10T10:30:04.954354Z"}, "utilization_level": 500, "cname": "cli-1-hash.example.com", "use_balancer": false}}}}
      DisabledShieldLocations: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/clients/DisabledShieldLocations"}}}}
      AccountsList: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/clients/AccountsList"}, "example": [{"id": 1, "created": "2020-07-10T10:30:04.954354Z", "updated": "2021-06-11T10:30:04.954354Z", "service": {"enabled": true, "status": "active", "updated": "2021-06-11T10:30:04.954354Z"}, "cname": "cli-12345.example.com", "use_balancer": false}, {"id": 2, "created": "2020-06-10T10:30:04.954354Z", "updated": "2021-06-10T10:30:04.954354Z", "service": {"enabled": true, "status": "trial", "updated": "2021-06-10T10:30:04.954354Z"}, "cname": "cli-23456.example.com", "use_balancer": true}]}}}
      service:
        Details: {"description": "Successful.", "content": {"application/json": {"schema": {"$ref": "#/components/parameters/body/response/client/Service"}, "example": {"enabled": true, "status": "active", "updated": "2021-06-10T10:30:04.954354Z"}}}}
  parameters:
    path:
      clients:
        ID: {"name": "client_id", "in": "path", "required": true, "schema": {"$ref": "#/components/parameters/body/response/client/ID"}}
      features:
        FreeFeatureID: {"name": "free_feature_id", "in": "path", "required": true, "schema": {"$ref": "#/components/parameters/body/response/PaidFeatures/ID"}}
        ID: {"name": "feature_id", "in": "path", "required": true, "schema": {"$ref": "#/components/parameters/body/response/Features/ID"}}
        PaidFeatureID: {"name": "paid_feature_id", "in": "path", "required": true, "schema": {"$ref": "#/components/parameters/body/response/PaidFeatures/ID"}}
    query:
      client_id_required: {"required": true, "name": "client_id", "in": "query", "schema": {"type": "integer"}, "description": "Client account ID."}
      client_id: {"name": "client_id", "in": "query", "schema": {"type": "integer"}, "description": "Client account ID."}
    body:
      response:
        client:
          ID: {"type": "integer", "description": "Client account ID."}
          Service: {"type": "object", "description": "CDN service status.", "properties": {"enabled": {"$ref": "#/components/parameters/body/response/service/Enabled"}, "status": {"$ref": "#/components/parameters/body/response/service/Status"}, "updated": {"$ref": "#/components/parameters/body/response/service/Updated"}}}
          Updated: {"type": "string", "description": "Date of the last CDN service update."}
          Cname: {"type": "string", "description": "Domain zone to which a CNAME record of the client CDN resources should be pointed."}
          Created: {"type": "string", "description": "Date of the first synchronization with the Platform."}
          AutoSuspendEnabled: {"type": "boolean", "description": "Defines whether resources will be deactivated automatically by inactivity.", "example": true}
          UseBalancer: {"type": "boolean", "description": "Defines whether custom balancing is used for content delivery."}
          DisabledShieldLocationsV2: {"type": "array", "items": {"type": "integer"}, "description": "Origin shielding location IDs disabled for the client.", "example": [1, 2, 3]}
          UtilizationLevel: {"type": "integer", "description": "CDN traffic usage limit in gigabytes.\n\nWhen the limit is reached, we will send an email notification to a client."}
        PaidFeatures:
          CreateDate: {"type": "string", "format": "date-time", "description": "Date and time when the feature was activated (ISO 8601/RFC 3339 format, UTC.)"}
          ID: {"type": "integer", "description": "Internal feature activation ID."}
        Features:
          ID: {"type": "integer", "description": "Feature ID."}
          IsFree: {"type": "boolean", "description": "Defines whether a feature is free or paid.\n\nPossible values:\n- **true** - Feature is free.\n- **false** - Feature is paid."}
          Name: {"type": "string", "description": "Feature name."}
        reseller:
          DefaultEnabledFeatures: {"type": "array", "description": "IDs of paid features that will be enabled for new clients.", "items": {"$ref": "#/components/parameters/body/response/Features/ID"}}
          ID: {"type": "integer", "description": "Reseller account ID."}
          AvailableFeatures: {"type": "array", "description": "IDs of paid features that you can manage for your clients accounts.", "items": {"$ref": "#/components/parameters/body/response/Features/ID"}}
        service:
          Enabled: {"type": "boolean", "description": "Defines whether the service is activated.\n\nPossible values are:\n- **true** - Service is activated.\n- **false** - Service is not activated."}
          Status: {"type": "string", "description": "Service status.\n\nPossible values:\n- **new** - CDN service is not activated.\n- **trial** - Free trial is in progress.\n- **trialend** - Free trial has ended and CDN service is stopped. All client CDN resources are suspended.\n- **activating** - CDN service is being activated. It can take up to 15 minutes.\n- **active** - CDN service is active.\n- **paused** - CDN service is stopped. All client CDN resources are suspended.\n- **deleted** - CDN service is stopped. All client CDN resources are deleted."}
          Updated: {"type": "string", "description": "Date of the last status update."}
        balancer:
          regions_settings:
            IsIn: {"type": "boolean", "description": "Defines whether regions are used for content delivery for a client or not.\n\nPossible values:\n- **true** - Region is used for content delivery.\n- **false** - Region is not used for content delivery."}
            RegionList: {"type": "array", "items": {"type": "integer"}, "description": "List of region IDs.\n\nIf you specified regions used for content delivery, the regions IDs list must not contain the ID of the default location handler region.\n\nIf you specified regions not used for content delivery, the regions IDs list must contain the ID of the default location handler region."}
          default_handler:
            PossibleHandlers: {"type": "array", "items": {"type": "string"}, "description": "Names of regions that can be used as the default location handler."}
            CurrantHandler: {"type": "string", "description": "Name of the region used as the default location handler."}
          billing_regions:
            CreatedAt: {"type": "string", "description": "Date of region creation."}
            Name: {"type": "string", "description": "Region abbreviation."}
            Localization: {"description": "Region full name translated into different languages.", "type": "array", "items": {"type": "object"}}
            Required: {"type": "boolean", "description": "Defines whether the region is the default location handler or not.\n\nDefault location handler cannot be excluded from the content delivery.\n\nPossible values:\n- **true** - Region is the default location handler.\n- **false** - Region is not the default location handler."}
            ID: {"type": "integer", "description": "Region ID."}
            Description: {"type": "string", "description": "Region full name."}
            Visible: {"$ref": "#/components/parameters/LegacyField"}
            ChangedAt: {"type": "string", "description": "Date of the last update of the information about the region."}
      request:
        resellers:
          DefaultEnabledFeatures: {"type": "array", "items": {"type": "integer"}, "description": "Paid features IDs that will be enabled for new clients created after the field value is specified. \n\nThe list must contain available features only."}
        balancer:
          DefaultNameHandler: {"type": "string", "description": "Region name. \n\n[Get the client default location handler](/docs/api-reference/cdn-resellers/balancer/get-client-default-location-handler) to learn more about regions that can be used as the default location handler."}
          ClientID: {"$ref": "#/components/parameters/body/response/client/ID"}
        clients:
          UtilizationLevel: {"name": "client_id", "type": "integer", "in": "body", "description": "CDN traffic usage limit in gigabytes.\n\nThe value must be greater than or equal to 0.\n\nWhen the limit is reached, we will send an email notification to the client."}
    LegacyField: {"type": "string", "description": "Parameter is **legacy**."}
  schemas:
    features:
      PaidFeaturesDetail: {"type": "object", "properties": {"id": {"$ref": "#/components/parameters/body/response/PaidFeatures/ID"}, "client_id": {"$ref": "#/components/parameters/body/response/client/ID"}, "feature": {"$ref": "#/components/schemas/features/FeaturesDetail"}, "feature_id": {"$ref": "#/components/parameters/body/response/Features/ID"}, "create_date": {"$ref": "#/components/parameters/body/response/PaidFeatures/CreateDate"}}}
      FeaturesDetail: {"type": "object", "properties": {"id": {"$ref": "#/components/parameters/body/response/Features/ID"}, "name": {"$ref": "#/components/parameters/body/response/Features/Name"}, "service": {"$ref": "#/components/parameters/LegacyField"}, "is_free": {"$ref": "#/components/parameters/body/response/Features/IsFree"}}}
      PaidFeaturesList: {"type": "array", "items": {"$ref": "#/components/schemas/features/PaidFeaturesDetail"}}
      FeaturesList: {"type": "array", "items": {"$ref": "#/components/schemas/features/FeaturesDetail"}}
      PaidFeaturesCreate: {"type": "object", "properties": {"client_id": {"$ref": "#/components/parameters/body/response/client/ID"}, "feature_id": {"$ref": "#/components/parameters/body/response/Features/ID"}}, "required": ["client_id", "feature_id"]}
    account:
      ResellersMe: {"type": "object", "properties": {"id": {"$ref": "#/components/parameters/body/response/reseller/ID"}, "available_features": {"$ref": "#/components/parameters/body/response/reseller/AvailableFeatures"}, "default_enabled_features": {"$ref": "#/components/parameters/body/response/reseller/DefaultEnabledFeatures"}}}
      UpdateResellerMeDetails: {"type": "object", "properties": {"default_enabled_features": {"$ref": "#/components/parameters/body/request/resellers/DefaultEnabledFeatures"}}}
      errors:
        UpdateResellerMeDetailsFailed: {"description": "Invalid value of \"`default_enabled_features`\" parameter is provided.", "type": "object", "properties": {"errors": {"type": "object", "properties": {"default_enabled_features": {"type": "array", "description": "List of paid features IDs that you cannot manage.\n\nTo get information about available features, use [Get account settings](/docs/api-reference/cdn-resellers/account/get-account-settings) section.", "items": {"type": "string"}, "example": ["You have no permission to manage these features: [4]. Use only these: [1, 2, 3]."]}}}}}
    balancer:
      DefaultLocationHandler: {"type": "object", "properties": {"current_handler": {"$ref": "#/components/parameters/body/response/balancer/default_handler/CurrantHandler"}, "possible_handlers": {"$ref": "#/components/parameters/body/response/balancer/default_handler/PossibleHandlers"}}}
      BillingRegionsList: {"type": "array", "items": {"$ref": "#/components/schemas/balancer/BillingRegionDetails"}}
      SetClientsBalancerSettings: {"type": "object", "properties": {"is_in": {"$ref": "#/components/parameters/body/response/balancer/regions_settings/IsIn"}, "region_list": {"$ref": "#/components/parameters/body/response/balancer/regions_settings/RegionList"}}, "required": ["is_in", "region_list"]}
      SetDefaultHandler: {"type": "object", "properties": {"client_id": {"$ref": "#/components/parameters/body/request/balancer/ClientID"}, "name": {"$ref": "#/components/parameters/body/request/balancer/DefaultNameHandler"}}, "required": ["client_id", "name"]}
      ClientSettingsDetails: {"type": "object", "properties": {"is_in": {"$ref": "#/components/parameters/body/response/balancer/regions_settings/IsIn"}, "region_list": {"$ref": "#/components/parameters/body/response/balancer/regions_settings/RegionList"}}}
      BillingRegionDetails: {"type": "object", "properties": {"id": {"$ref": "#/components/parameters/body/response/balancer/billing_regions/ID"}, "name": {"$ref": "#/components/parameters/body/response/balancer/billing_regions/Name"}, "created_at": {"$ref": "#/components/parameters/body/response/balancer/billing_regions/CreatedAt"}, "changed_at": {"$ref": "#/components/parameters/body/response/balancer/billing_regions/ChangedAt"}, "description": {"$ref": "#/components/parameters/body/response/balancer/billing_regions/Description"}, "required": {"$ref": "#/components/parameters/body/response/balancer/billing_regions/Required"}, "visible": {"$ref": "#/components/parameters/body/response/balancer/billing_regions/Visible"}, "localization": {"$ref": "#/components/parameters/body/response/balancer/billing_regions/Localization"}}}
    clients:
      ChangeAccountDetails: {"type": "object", "properties": {"utilization_level": {"$ref": "#/components/parameters/body/request/clients/UtilizationLevel"}}}
      errors:
        ChangeAccountDetailsFailed: {"description": "Invalid value of \"`utilization_level`\" parameter is provided.", "type": "object", "properties": {"errors": {"type": "object", "properties": {"utilization_level": {"type": "array", "description": "The specified limit has an unacceptable value. The value must be greater than or equal to 0.", "items": {"type": "string"}, "example": ["Ensure this value is greater than or equal to 0."]}}}}}
      AccountsList: {"type": "array", "items": {"$ref": "#/components/schemas/clients/AccountDetails"}}
      AccountDetails: {"type": "object", "properties": {"id": {"$ref": "#/components/parameters/body/response/client/ID"}, "created": {"$ref": "#/components/parameters/body/response/client/Created"}, "updated": {"$ref": "#/components/parameters/body/response/client/Updated"}, "service": {"$ref": "#/components/parameters/body/response/client/Service"}, "utilization_level": {"$ref": "#/components/parameters/body/response/client/UtilizationLevel"}, "cname": {"$ref": "#/components/parameters/body/response/client/Cname"}, "use_balancer": {"$ref": "#/components/parameters/body/response/client/UseBalancer"}, "auto_suspend_enabled": {"$ref": "#/components/parameters/body/response/client/AutoSuspendEnabled"}}}
      DisabledShieldLocations: {"type": "object", "properties": {"disabled_shield_locations_v2": {"$ref": "#/components/parameters/body/response/client/DisabledShieldLocationsV2"}}}
  requests:
    body:
      balancer:
        SetDefaultHandler: {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/balancer/SetDefaultHandler"}, "example": {"is_in": true, "region_list": [1, 2]}}}}
        SetClientsBalancerSettings: {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/balancer/SetClientsBalancerSettings"}, "example": {"is_in": true, "region_list": [1, 2]}}}}
      resellers:
        ChangeResellersAccountDetails: {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/account/UpdateResellerMeDetails"}, "example": {"default_enabled_features": [2, 3]}}}}
      clients:
        ChangeAccountDetails: {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/clients/ChangeAccountDetails"}, "example": {"utilization_level": 500}}}}
      features:
        PaidFeaturesCreate: {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/features/PaidFeaturesCreate"}, "example": {"client_id": 1, "feature_id": 1}}}}
  securitySchemes:
    APIKey:
      description: "API key for authentication. Make sure to include the word `apikey`, followed by a single space and then your token.\nExample: `apikey 1234$abcdef`"
      type: apiKey
      in: header
      name: Authorization
