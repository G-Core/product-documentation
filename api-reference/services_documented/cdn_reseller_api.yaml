"openapi": "3.1.0"
"info": {"title": "Gcore OpenAPI â€“ CDN Reseller API", "version": "2025-07-28T13:38:25.175224+00:00", "description": "This OpenAPI is an aggregated OpenAPI specification that unifies all Gcore products into a single file. It covers Cloud, CDN, DNS, WAAP, DDoS Protection, Object Storage, Streaming, and FastEdge services."}
"servers": ["url": "https://api.gcore.com"]
paths:
  "/cdn/resellers/me":
    "get": {"tags": ["Account"], "summary": "Get account settings", "description": "Get information about CDN product settings in your account.", "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Reseller account ID."}, "available_features": {"type": "array", "description": "IDs of paid features that you can manage for your clients accounts.", "items": {"type": "integer", "description": "Feature ID."}}, "default_enabled_features": {"type": "array", "description": "IDs of paid features that will be enabled for new clients.", "items": {"type": "integer", "description": "Feature ID."}}}}, "example": {"id": 1, "available_features": [1, 2, 3], "default_enabled_features": [2, 3]}}}}}}
    "put": {"tags": ["Account"], "summary": "Change account settings", "description": "Change the CDN service settings in your account.", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"default_enabled_features": {"type": "array", "items": {"type": "integer"}, "description": "Paid features IDs that will be enabled for new clients created after the field value is specified.\nThe list must contain available features only."}}}, "example": {"default_enabled_features": [2, 3]}}}}, "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Reseller account ID."}, "available_features": {"type": "array", "description": "IDs of paid features that you can manage for your clients accounts.", "items": {"type": "integer", "description": "Feature ID."}}, "default_enabled_features": {"type": "array", "description": "IDs of paid features that will be enabled for new clients.", "items": {"type": "integer", "description": "Feature ID."}}}}, "example": {"id": 1, "available_features": [1, 2, 3], "default_enabled_features": [2, 3]}}}}, "400": {"description": "Invalid value of \"`default_enabled_features`\" parameter is provided.", "content": {"application/json": {"schema": {"description": "Invalid value of \"`default_enabled_features`\" parameter is provided.", "type": "object", "properties": {"errors": {"type": "object", "properties": {"default_enabled_features": {"type": "array", "description": "List of paid features IDs that you cannot manage.\nTo get information about available features, use [Get account settings section][1].\n[1]: #tag/Account/paths/~1cdn~1resellers~1me/get", "items": {"type": "string"}, "example": ["You have no permission to manage these features: [4]. Use only these: [1, 2, 3]."]}}}}}}}}}}
  "/cdn/clients":
    "get": {"tags": ["CDN service"], "summary": "Get CDN service", "description": "Get information about CDN services of all clients accounts.", "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Client account ID."}, "created": {"type": "string", "description": "Date of the first synchronization with the Platform."}, "updated": {"type": "string", "description": "Date of the last CDN service update."}, "service": {"type": "object", "description": "CDN service status.", "properties": {"enabled": {"type": "boolean", "description": "Defines whether the service is activated.\nPossible values are:\n- **true** - Service is activated.\n- **false** - Service is not activated."}, "status": {"type": "string", "description": "Service status.\nPossible values:\n- **new** - CDN service is not activated.\n- **trial** - Free trial is in progress.\n- **trialend** - Free trial has ended and CDN service is stopped. All client CDN resources are suspended.\n- **activating** - CDN service is being activated. It can take up to 15 minutes.\n- **active** - CDN service is active.\n- **paused** - CDN service is stopped. All client CDN resources are suspended.\n- **deleted** - CDN service is stopped. All client CDN resources are deleted."}, "updated": {"type": "string", "description": "Date of the last status update."}}}, "utilization_level": {"type": "integer", "description": "CDN traffic usage limit in gigabytes.\nWhen the limit is reached, we will send an email notification to a client."}, "cname": {"type": "string", "description": "Domain zone to which a CNAME record of the client CDN resources should be pointed."}, "use_balancer": {"type": "boolean", "description": "Defines whether custom balancing is used for content delivery."}, "auto_suspend_enabled": {"type": "boolean", "description": "Defines whether resources will be deactivated automatically by inactivity.", "example": true}}}}, "example": [{"id": 1, "created": "2020-07-10 10:30:04.954354+00:00", "updated": "2021-06-11 10:30:04.954354+00:00", "service": {"enabled": true, "status": "active", "updated": "2021-06-11 10:30:04.954354+00:00"}, "cname": "cli-12345.example.com", "use_balancer": false}, {"id": 2, "created": "2020-06-10 10:30:04.954354+00:00", "updated": "2021-06-10 10:30:04.954354+00:00", "service": {"enabled": true, "status": "trial", "updated": "2021-06-10 10:30:04.954354+00:00"}, "cname": "cli-23456.example.com", "use_balancer": true}]}}}}}
  "/cdn/clients/{client_id}":
    "get": {"tags": ["CDN service"], "summary": "Get CDN service details", "description": "Get information about CDN service of the specific client account.", "parameters": [{"name": "client_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Client account ID."}}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Client account ID."}, "created": {"type": "string", "description": "Date of the first synchronization with the Platform."}, "updated": {"type": "string", "description": "Date of the last CDN service update."}, "service": {"type": "object", "description": "CDN service status.", "properties": {"enabled": {"type": "boolean", "description": "Defines whether the service is activated.\nPossible values are:\n- **true** - Service is activated.\n- **false** - Service is not activated."}, "status": {"type": "string", "description": "Service status.\nPossible values:\n- **new** - CDN service is not activated.\n- **trial** - Free trial is in progress.\n- **trialend** - Free trial has ended and CDN service is stopped. All client CDN resources are suspended.\n- **activating** - CDN service is being activated. It can take up to 15 minutes.\n- **active** - CDN service is active.\n- **paused** - CDN service is stopped. All client CDN resources are suspended.\n- **deleted** - CDN service is stopped. All client CDN resources are deleted."}, "updated": {"type": "string", "description": "Date of the last status update."}}}, "utilization_level": {"type": "integer", "description": "CDN traffic usage limit in gigabytes.\nWhen the limit is reached, we will send an email notification to a client."}, "cname": {"type": "string", "description": "Domain zone to which a CNAME record of the client CDN resources should be pointed."}, "use_balancer": {"type": "boolean", "description": "Defines whether custom balancing is used for content delivery."}, "auto_suspend_enabled": {"type": "boolean", "description": "Defines whether resources will be deactivated automatically by inactivity.", "example": true}}}, "example": {"id": 1, "created": "2017-06-10 10:30:04.954354+00:00", "updated": "2017-06-10 10:30:04.954354+00:00", "service": {"enabled": true, "status": "active", "updated": "2017-06-10 10:30:04.954354+00:00"}, "utilization_level": 500, "cname": "cli-1-hash.example.com", "use_balancer": false}}}}, "404": {"description": "The client is not found."}}}
    "put": {"tags": ["CDN service"], "summary": "Change CDN service details", "description": "Change CDN service details of the specific client account.", "parameters": [{"name": "client_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Client account ID."}}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"utilization_level": {"name": "client_id", "type": "integer", "in": "body", "description": "CDN traffic usage limit in gigabytes.\nThe value must be greater than or equal to 0.\nWhen the limit is reached, we will send an email notification to the client."}}}, "example": {"utilization_level": 500}}}}, "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Client account ID."}, "created": {"type": "string", "description": "Date of the first synchronization with the Platform."}, "updated": {"type": "string", "description": "Date of the last CDN service update."}, "service": {"type": "object", "description": "CDN service status.", "properties": {"enabled": {"type": "boolean", "description": "Defines whether the service is activated.\nPossible values are:\n- **true** - Service is activated.\n- **false** - Service is not activated."}, "status": {"type": "string", "description": "Service status.\nPossible values:\n- **new** - CDN service is not activated.\n- **trial** - Free trial is in progress.\n- **trialend** - Free trial has ended and CDN service is stopped. All client CDN resources are suspended.\n- **activating** - CDN service is being activated. It can take up to 15 minutes.\n- **active** - CDN service is active.\n- **paused** - CDN service is stopped. All client CDN resources are suspended.\n- **deleted** - CDN service is stopped. All client CDN resources are deleted."}, "updated": {"type": "string", "description": "Date of the last status update."}}}, "utilization_level": {"type": "integer", "description": "CDN traffic usage limit in gigabytes.\nWhen the limit is reached, we will send an email notification to a client."}, "cname": {"type": "string", "description": "Domain zone to which a CNAME record of the client CDN resources should be pointed."}, "use_balancer": {"type": "boolean", "description": "Defines whether custom balancing is used for content delivery."}, "auto_suspend_enabled": {"type": "boolean", "description": "Defines whether resources will be deactivated automatically by inactivity.", "example": true}}}, "example": {"id": 1, "created": "2017-06-10 10:30:04.954354+00:00", "updated": "2017-06-10 10:30:04.954354+00:00", "service": {"enabled": true, "status": "active", "updated": "2017-06-10 10:30:04.954354+00:00"}, "utilization_level": 500, "cname": "cli-1-hash.example.com", "use_balancer": false}}}}, "400": {"description": "Invalid value of \"`utilization_level`\" parameter is provided.", "content": {"application/json": {"schema": {"description": "Invalid value of \"`utilization_level`\" parameter is provided.", "type": "object", "properties": {"errors": {"type": "object", "properties": {"utilization_level": {"type": "array", "description": "The specified limit has an unacceptable value. The value must be greater than or equal to 0.", "items": {"type": "string"}, "example": ["Ensure this value is greater than or equal to 0."]}}}}}}}}, "404": {"description": "The client is not found."}}}
  "/cdn/clients/{client_id}/service":
    "get": {"tags": ["CDN service"], "summary": "Get CDN service status details", "description": "Get information about CDN service status of the specific client account.", "parameters": [{"name": "client_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Client account ID."}}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "description": "CDN service status.", "properties": {"enabled": {"type": "boolean", "description": "Defines whether the service is activated.\nPossible values are:\n- **true** - Service is activated.\n- **false** - Service is not activated."}, "status": {"type": "string", "description": "Service status.\nPossible values:\n- **new** - CDN service is not activated.\n- **trial** - Free trial is in progress.\n- **trialend** - Free trial has ended and CDN service is stopped. All client CDN resources are suspended.\n- **activating** - CDN service is being activated. It can take up to 15 minutes.\n- **active** - CDN service is active.\n- **paused** - CDN service is stopped. All client CDN resources are suspended.\n- **deleted** - CDN service is stopped. All client CDN resources are deleted."}, "updated": {"type": "string", "description": "Date of the last status update."}}}, "example": {"enabled": true, "status": "active", "updated": "2021-06-10 10:30:04.954354+00:00"}}}}, "404": {"description": "The client is not found."}}}
  "/cdn/clients/{client_id}/features":
    "get": {"tags": ["CDN service"], "summary": "Get CDN features details", "description": "Get information about CDN features available in the specific client account.", "parameters": [{"name": "client_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Client account ID."}}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Client account ID."}, "paid_features": {"type": "array", "description": "Paid features available for the account.", "items": {"type": "object", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "name": {"type": "string", "description": "Feature name."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}, "create_date": {"type": "string", "format": "date-time", "description": "Date and time when the feature was activated (ISO 8601/RFC 3339 format, UTC.)"}}}}, "free_features": {"type": "array", "description": "Free features available for the specified account.", "items": {"type": "object", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "name": {"type": "string", "description": "Feature name."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}, "create_date": {"type": "string", "format": "date-time", "description": "Date and time when the feature was activated (ISO 8601/RFC 3339 format, UTC.)"}}}}}}, "example": {"id": 1, "paid_features": [{"feature_id": 1, "name": "Example 1"}, {"feature_id": 2, "name": "Example 2", "paid_feature_id": 100, "create_date": "2021-01-01 00:00:00+00:00"}], "free_features": [{"feature_id": 10, "name": "Free Example 1"}, {"feature_id": 11, "name": "Free Example 2", "free_feature_id": 200, "create_date": "2021-01-01 00:00:00+00:00"}]}}}}, "404": {"description": "The client is not found."}}}
  "/cdn/clients/{client_id}/limits":
    "get": {"tags": ["CDN service"], "summary": "Get CDN limits details", "description": "Get information about CDN limits for the specific client account.", "parameters": [{"name": "client_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Client account ID."}}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Account ID.", "example": 100}, "resources_limit": {"type": "integer", "description": "Maximum number of CDN resources that can be created on your tariff plan.", "example": 30}, "rules_limit": {"type": "integer", "description": "Maximum number of rules that can be created per CDN resource on your tariff plan.", "example": 5}, "origins_in_group_limit": {"type": "integer", "description": "Maximum number of origins that can be added to the origin group on your tariff plan.", "example": 10}}}}}}, "404": {"description": "The client is not found."}}}
  "/cdn/admin/feature":
    "get": {"tags": ["Features"], "summary": "Get features list", "description": "Get information about all available features that you can manage.", "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Feature ID."}, "name": {"type": "string", "description": "Feature name."}, "service": {"type": "string", "description": "Parameter is **legacy**."}, "is_free": {"type": "boolean", "description": "Defines whether a feature is free or paid.\nPossible values:\n- **true** - Feature is free.\n- **false** - Feature is paid."}}}}, "example": [{"id": 1, "name": "Example 1", "service": "CDN", "is_free": false}, {"id": 2, "name": "Example 2", "service": "CDN", "is_free": true}]}}}}}
  "/cdn/admin/feature/{feature_id}":
    "get": {"tags": ["Features"], "summary": "Get feature details", "description": "Get information about the feature details.", "parameters": [{"name": "feature_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Feature ID."}}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Feature ID."}, "name": {"type": "string", "description": "Feature name."}, "service": {"type": "string", "description": "Parameter is **legacy**."}, "is_free": {"type": "boolean", "description": "Defines whether a feature is free or paid.\nPossible values:\n- **true** - Feature is free.\n- **false** - Feature is paid."}}}, "example": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": false}}}}, "404": {"description": "Feature is not found."}}}
  "/cdn/admin/paid_features":
    "get": {"tags": ["Features"], "summary": "Get paid features list", "description": "Get information about all paid features activated for the clients.", "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Internal feature activation ID."}, "client_id": {"type": "integer", "description": "Client account ID."}, "feature": {"type": "object", "properties": {"id": {"type": "integer", "description": "Feature ID."}, "name": {"type": "string", "description": "Feature name."}, "service": {"type": "string", "description": "Parameter is **legacy**."}, "is_free": {"type": "boolean", "description": "Defines whether a feature is free or paid.\nPossible values:\n- **true** - Feature is free.\n- **false** - Feature is paid."}}}, "feature_id": {"type": "integer", "description": "Feature ID."}, "create_date": {"type": "string", "format": "date-time", "description": "Date and time when the feature was activated (ISO 8601/RFC 3339 format, UTC.)"}}}}, "example": [{"id": 1, "client_id": 1, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": false}, "feature_id": 1, "create_date": "2021-01-01 00:00:00+00:00"}, {"id": 2, "client_id": 2, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": false}, "feature_id": 1, "create_date": "2021-01-01 00:00:00+00:00"}]}}}}}
    "post": {"tags": ["Features"], "summary": "Enable paid feature", "description": "Enable information about the paid feature for a specific client.", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"client_id": {"type": "integer", "description": "Client account ID."}, "feature_id": {"type": "integer", "description": "Feature ID."}}, "required": ["client_id", "feature_id"]}, "example": {"client_id": 1, "feature_id": 1}}}}, "responses": {"201": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Internal feature activation ID."}, "client_id": {"type": "integer", "description": "Client account ID."}, "feature": {"type": "object", "properties": {"id": {"type": "integer", "description": "Feature ID."}, "name": {"type": "string", "description": "Feature name."}, "service": {"type": "string", "description": "Parameter is **legacy**."}, "is_free": {"type": "boolean", "description": "Defines whether a feature is free or paid.\nPossible values:\n- **true** - Feature is free.\n- **false** - Feature is paid."}}}, "feature_id": {"type": "integer", "description": "Feature ID."}, "create_date": {"type": "string", "format": "date-time", "description": "Date and time when the feature was activated (ISO 8601/RFC 3339 format, UTC.)"}}}, "example": {"id": 2, "client_id": 2, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": false}, "feature_id": 1, "create_date": "2021-01-01 00:00:00+00:00"}}}}, "400": {"description": "Validation error.", "content": {"application/json": {"schema": {"type": "object", "properties": {"errors": {"type": "object", "properties": {"client_id": {"type": "array", "items": {"type": "string"}, "description": "List of errors for specified client ID.", "example": ["Client with id:1 does not exists."]}, "feature_id": {"type": "array", "items": {"type": "string"}, "description": "List of errors for specified feature ID.", "example": ["Feature with id:1 does not exists."]}}}}}}}}}}
  "/cdn/admin/paid_features/{paid_feature_id}":
    "get": {"tags": ["Features"], "summary": "Get paid feature details", "description": "Get details of the activated paid feature.", "parameters": [{"name": "paid_feature_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Internal feature activation ID."}}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Internal feature activation ID."}, "client_id": {"type": "integer", "description": "Client account ID."}, "feature": {"type": "object", "properties": {"id": {"type": "integer", "description": "Feature ID."}, "name": {"type": "string", "description": "Feature name."}, "service": {"type": "string", "description": "Parameter is **legacy**."}, "is_free": {"type": "boolean", "description": "Defines whether a feature is free or paid.\nPossible values:\n- **true** - Feature is free.\n- **false** - Feature is paid."}}}, "feature_id": {"type": "integer", "description": "Feature ID."}, "create_date": {"type": "string", "format": "date-time", "description": "Date and time when the feature was activated (ISO 8601/RFC 3339 format, UTC.)"}}}, "example": {"id": 2, "client_id": 2, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": false}, "feature_id": 1, "create_date": "2021-01-01 00:00:00+00:00"}}}}, "404": {"description": "Paid feature is not found."}}}
    "delete": {"tags": ["Features"], "summary": "Disable paid feature", "description": "Disable the paid feature for a specific client.", "parameters": [{"name": "paid_feature_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Internal feature activation ID."}}], "responses": {"204": {"description": "Successful."}, "404": {"description": "Paid feature is not found."}}}
  "/cdn/admin/free_features":
    "get": {"tags": ["Features"], "summary": "Get free features list", "description": "Get information about all free features activated for the clients.", "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Internal feature activation ID."}, "client_id": {"type": "integer", "description": "Client account ID."}, "feature": {"type": "object", "properties": {"id": {"type": "integer", "description": "Feature ID."}, "name": {"type": "string", "description": "Feature name."}, "service": {"type": "string", "description": "Parameter is **legacy**."}, "is_free": {"type": "boolean", "description": "Defines whether a feature is free or paid.\nPossible values:\n- **true** - Feature is free.\n- **false** - Feature is paid."}}}, "feature_id": {"type": "integer", "description": "Feature ID."}, "create_date": {"type": "string", "format": "date-time", "description": "Date and time when the feature was activated (ISO 8601/RFC 3339 format, UTC.)"}}}}, "example": [{"id": 1, "client_id": 1, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": true}, "feature_id": 1, "create_date": "2021-01-01 00:00:00+00:00"}, {"id": 2, "client_id": 2, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": true}, "feature_id": 1, "create_date": "2021-01-01 00:00:00+00:00"}]}}}}}
    "post": {"tags": ["Features"], "summary": "Enable free feature", "description": "Enable the free feature for a specific client.", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"client_id": {"type": "integer", "description": "Client account ID."}, "feature_id": {"type": "integer", "description": "Feature ID."}}, "required": ["client_id", "feature_id"]}, "example": {"client_id": 1, "feature_id": 1}}}}, "responses": {"201": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Internal feature activation ID."}, "client_id": {"type": "integer", "description": "Client account ID."}, "feature": {"type": "object", "properties": {"id": {"type": "integer", "description": "Feature ID."}, "name": {"type": "string", "description": "Feature name."}, "service": {"type": "string", "description": "Parameter is **legacy**."}, "is_free": {"type": "boolean", "description": "Defines whether a feature is free or paid.\nPossible values:\n- **true** - Feature is free.\n- **false** - Feature is paid."}}}, "feature_id": {"type": "integer", "description": "Feature ID."}, "create_date": {"type": "string", "format": "date-time", "description": "Date and time when the feature was activated (ISO 8601/RFC 3339 format, UTC.)"}}}, "example": {"id": 1, "client_id": 1, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": true}, "feature_id": 1, "create_date": "2021-01-01 00:00:00+00:00"}}}}, "400": {"description": "Validation error.", "content": {"application/json": {"schema": {"type": "object", "properties": {"errors": {"type": "object", "properties": {"client_id": {"type": "array", "items": {"type": "string"}, "description": "List of errors for specified client ID.", "example": ["Client with id:1 does not exists."]}, "feature_id": {"type": "array", "items": {"type": "string"}, "description": "List of errors for specified feature ID.", "example": ["Feature with id:1 does not exists."]}}}}}}}}}}
  "/cdn/admin/free_features/{free_feature_id}":
    "get": {"tags": ["Features"], "summary": "Get free feature details", "description": "Get information about the details of the activated free feature.", "parameters": [{"name": "free_feature_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Internal feature activation ID."}}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Internal feature activation ID."}, "client_id": {"type": "integer", "description": "Client account ID."}, "feature": {"type": "object", "properties": {"id": {"type": "integer", "description": "Feature ID."}, "name": {"type": "string", "description": "Feature name."}, "service": {"type": "string", "description": "Parameter is **legacy**."}, "is_free": {"type": "boolean", "description": "Defines whether a feature is free or paid.\nPossible values:\n- **true** - Feature is free.\n- **false** - Feature is paid."}}}, "feature_id": {"type": "integer", "description": "Feature ID."}, "create_date": {"type": "string", "format": "date-time", "description": "Date and time when the feature was activated (ISO 8601/RFC 3339 format, UTC.)"}}}, "example": {"id": 1, "client_id": 1, "feature": {"id": 1, "name": "Example 1", "service": "CDN", "is_free": true}, "feature_id": 1, "create_date": "2021-01-01 00:00:00+00:00"}}}}, "404": {"description": "Free feature is not found."}}}
    "delete": {"tags": ["Features"], "summary": "Disable free feature", "description": "Disable the free feature for a specific client.", "parameters": [{"name": "free_feature_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Internal feature activation ID."}}], "responses": {"204": {"description": "Successful."}, "404": {"description": "Free feature is not found."}}}
  "/cdn/admin/billing_regions":
    "get": {"tags": ["Balancer"], "summary": "Get client content delivery regions list", "description": "Get information about all regions that might be used for content delivery for a specific client.", "parameters": [{"name": "client_id", "in": "query", "schema": {"type": "integer"}, "description": "Client account ID."}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Region ID."}, "name": {"type": "string", "description": "Region abbreviation."}, "created_at": {"type": "string", "description": "Date of region creation."}, "changed_at": {"type": "string", "description": "Date of the last update of the information about the region."}, "description": {"type": "string", "description": "Region full name."}, "required": {"type": "boolean", "description": "Defines whether the region is the default location handler or not.\nDefault location handler cannot be excluded from the content delivery.\nPossible values:\n- **true** - Region is the default location handler.\n- **false** - Region is not the default location handler."}, "visible": {"type": "string", "description": "Parameter is **legacy**."}, "localization": {"description": "Region full name translated into different languages.", "type": "array", "items": {"type": "object"}}}}}, "example": [{"id": 1, "name": "region1", "created_at": "", "changed_at": "", "description": "Region 1", "required": false, "visible": false, "localization": null}, {"id": 2, "name": "region2", "created_at": "", "changed_at": "", "description": "Region 2", "required": false, "visible": false, "localization": null}]}}}, "400": {"description": "The client is not found."}}}
  "/cdn/admin/clients":
    "get": {"tags": ["Balancer"], "summary": "Get clients using balancer", "description": "Get IDs of clients that use the load balancer.", "responses": {"200": {"description": "Successful.", "content": {"application/json": { "schema": {"type": "array", "items": {"type": "integer"}, "example": [1, 2, 3]}}}}}}
  "/cdn/admin/clients/{client_id}":
    "get": {"tags": ["Balancer"], "summary": "Get client balancer settings", "description": "Get information about all regions used for content delivery for a specific client.", "parameters": [{"name": "client_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Client account ID."}}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"is_in": {"type": "boolean", "description": "Defines whether regions are used for content delivery for a client or not.\nPossible values:\n- **true** - Region is used for content delivery.\n- **false** - Region is not used for content delivery."}, "region_list": {"type": "array", "items": {"type": "integer"}, "description": "List of region IDs.\nIf you specified regions used for content delivery, the regions IDs list must not contain the ID of the default location handler region.\nIf you specified regions not used for content delivery, the regions IDs list must contain the ID of the default location handler region."}}}, "example": {"is_in": true, "region_list": [1, 2]}}}}, "404": {"description": "Failed to get client balancer settings.", "content": {"application/json": {"schema": {"oneOf": [{"title": "No such client_id", "type": "object", "properties": {"error": {"type": "string", "description": "Balancer has not been activated for the client and the client does not have balancer settings.\nUse [Set client balancer settings][1] to activate Balancer.\n[1]: #tag/Balancer/paths/~1cdn~1admin~1clients~1{`client_id`}/post", "example": "No such client_id"}}}, {"title": "Client not found", "type": "object", "properties": {"error": {"description": "Client with the specified account ID is not found."}}, "example": {}}]}}}}}}
    "post": {"tags": ["Balancer"], "summary": "Set client balancer settings", "description": "Set regions that will be used for content delivery for a specific client.", "parameters": [{"name": "client_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Client account ID."}}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"is_in": {"type": "boolean", "description": "Defines whether regions are used for content delivery for a client or not.\nPossible values:\n- **true** - Region is used for content delivery.\n- **false** - Region is not used for content delivery."}, "region_list": {"type": "array", "items": {"type": "integer"}, "description": "List of region IDs.\nIf you specified regions used for content delivery, the regions IDs list must not contain the ID of the default location handler region.\nIf you specified regions not used for content delivery, the regions IDs list must contain the ID of the default location handler region."}}, "required": ["is_in", "region_list"]}, "example": {"is_in": true, "region_list": [1, 2]}}}}, "responses": {"204": {"description": "Successful."}, "400": {"description": "Region is not found in regions list."}, "409": {"description": "Some required billing regions are missing."}}}
    "delete": {"tags": ["Balancer"], "summary": "Delete client balancer settings", "description": "Delete balancer settings for a specific client. Balancer will be deactivated.", "parameters": [{"name": "client_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Client account ID."}}], "responses": {"204": {"description": "Successful."}, "404": {"description": "The client is not found."}}}
  "/cdn/admin/default_region":
    "get": {"tags": ["Balancer"], "summary": "Get client default location handler", "description": "Get the default location handler that is used to redirect traffic from locations that are not used in content delivery and\nto deliver content when the user region has not been defined.", "parameters": [{"required": true, "name": "client_id", "in": "query", "schema": {"type": "integer"}, "description": "Client account ID."}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"current_handler": {"type": "string", "description": "Name of the region used as the default location handler."}, "possible_handlers": {"type": "array", "items": {"type": "string"}, "description": "Names of regions that can be used as the default location handler."}}}, "example": {"current_handler": "region1", "possible_handlers": ["region2", "region3"]}}}}, "404": {"description": "The client is not found."}}}
    "post": {"tags": ["Balancer"], "summary": "Set client default location handler", "description": "Set the default location handler that will be used to redirect traffic from locations not used in content\ndelivery and to deliver content when the user's region has not been defined.\nThe location must be included in the list of regions used for content delivery.", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"client_id": {"type": "integer", "description": "Client account ID."}, "name": {"type": "string", "description": "Region name.\n[Get the client default location handler][1] to learn more about regions that can be used as the default location handler.\n[1]: #tag/Balancer/paths/~1cdn~1admin~`1default_region`/get"}}, "required": ["client_id", "name"]}, "example": {"is_in": true, "region_list": [1, 2]}}}}, "responses": {"204": {"description": "Successful."}, "400": {"description": "Failed to set client default location handler.", "content": {"application/json": {"schema": {"oneOf": [{"title": "Unacceptable handler", "type": "object", "properties": {"error": {"type": "string", "description": "The specified region is not allowed as the default location handler.\nTo get the list of allowed regions, use [Get client content delivery regions list][1] .\n[1]: #tag/Balancer/paths/~1cdn~1admin~`1default_region`/get", "example": "unacceptable handler"}}}, {"title": "Client not found", "type": "object", "properties": {"errors": {"type": "object", "properties": {"client_id": {"type": "array", "items": {"type": "string"}, "description": "Client with the specified account ID is not found.", "example": ["Client with ID 174 not found."]}}}}}]}}}}}}
  "/cdn/activity_log/requests":
    "get": {"tags": ["CDN activity logs"], "summary": "Get CDN activity logs", "description": "Get information about all CDN activity logs records.", "parameters": [{"name": "path", "in": "query", "schema": {"type": "string"}, "description": "Path that a requested URL should contain."}, {"name": "user_id", "in": "query", "schema": {"type": "integer"}, "description": "User ID."}, {"name": "token_id", "in": "query", "schema": {"type": "integer"}, "description": "Permanent API token ID. Requests made with this token should be displayed."}, {"name": "client_id", "in": "query", "schema": {"type": "integer"}, "description": "Client ID."}, {"name": "method", "in": "query", "schema": {"type": "string"}, "description": "HTTP method type of requests.\nUse upper case only.\nExample:\n\\* ?method=DELETE"}, {"name": "min_requested_at", "in": "query", "schema": {"type": "string"}, "description": "Beginning of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nYou can specify a date with a time separated by a space, or just a date.\nExamples:\n\\* &`min_requested_at`=2021-05-05 12:00:00\n\\* &`min_requested_at`=2021-05-05"}, {"name": "max_requested_at", "in": "query", "schema": {"type": "string"}, "description": "End of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nYou can specify a date with a time separated by a space, or just a date.\nExamples:\n\\* &`max_requested_at`=2021-05-05 12:00:00\n\\* &`max_requested_at`=2021-05-05"}, {"name": "remote_ip_address", "in": "query", "schema": {"type": "string"}, "description": "IP address or part of it from which requests are sent."}, {"name": "status_code", "in": "query", "schema": {"type": "integer"}, "description": "Status code returned in the response.\nSpecify the first numbers of a status code to get requests for a group of status codes.\nTo filter the activity logs by 4xx codes, use:\n\\* &`status_code`=4 -"}, {"name": "limit", "in": "query", "schema": {"type": "integer"}, "description": "Maximum number of items in response."}, {"name": "offset", "in": "query", "schema": {"type": "integer"}, "description": "Offset relative to the beginning of activity logs."}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"oneOf": [{"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Activity logs record ID."}, "user_id": {"type": "integer", "description": "ID of the user who made the request."}, "token_id": {"type": "integer", "description": "Permanent API token ID with which the request was made."}, "client_id": {"type": "integer", "description": "ID of the client who made the request."}, "requested_at": {"type": "string", "description": "Date and time when the request was made."}, "path": {"type": "string", "description": "Request URL."}, "remote_ip_address": {"type": "string", "description": "IP address from which the request was made."}, "host": {"type": "string", "description": "Host from which the request was made."}, "method": {"type": "string", "description": "Request HTTP method."}, "query_params": {"type": "string", "description": "Request parameters."}, "data": {"type": "string", "description": "Request body."}, "status_code": {"type": "integer", "description": "Status code that is returned in the response."}, "actions": {"type": "object", "description": "State of a requested object before and after the request.", "properties": {"action_type": {"type": "sting", "description": "Type of change.\nPossible values:\n- **D** - Object is deleted.\n- **C** - Object is created.\n- **U** - Object is updated."}, "state_before_request": {"type": "object", "description": "JSON representation of object before the request."}, "state_after_request": {"type": "object", "description": "JSON representation of object after the request."}}}}}}, {"type": "object", "properties": {"count": {"type": "integer", "description": "Total number of activity logs records."}, "next": {"type": "string", "description": "URL to the next activity logs records slice."}, "previous": {"type": "string",
                        "description": "URL to the previous activity logs records slice."}, "result": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Activity logs record ID."}, "user_id": {"type": "integer", "description": "ID of the user who made the request."}, "token_id": {"type": "integer", "description": "Permanent API token ID with which the request was made."}, "client_id": {"type": "integer", "description": "ID of the client who made the request."}, "requested_at": {"type": "string", "description": "Date and time when the request was made."}, "path": {"type": "string", "description": "Request URL."}, "remote_ip_address": {"type": "string", "description": "IP address from which the request was made."}, "host": {"type": "string", "description": "Host from which the request was made."}, "method": {"type": "string", "description": "Request HTTP method."}, "query_params": {"type": "string", "description": "Request parameters."}, "data": {"type": "string", "description": "Request body."}, "status_code": {"type": "integer", "description": "Status code that is returned in the response."}, "actions": {"type": "object", "description": "State of a requested object before and after the request.", "properties": {"action_type": {"type": "sting", "description": "Type of change.\nPossible values:\n- **D** - Object is deleted.\n- **C** - Object is created.\n- **U** - Object is updated."}, "state_before_request": {"type": "object", "description": "JSON representation of object before the request."}, "state_after_request": {"type": "object", "description": "JSON representation of object after the request."}}}}}, "description": "Activity logs records."}}}]}, "example": [{"count": 1, "next": "https://api.gcore.com/cdn/activity_log/requests?offset=20&limit=10", "previous": "https://api.gcore.com/cdn/activity_log/requests?offset=10&limit=10", "result": [{"id": 1, "user_id": 174, "token_id": 3, "client_id": 174, "requested_at": "2021-07-07 09:02:29.871030+00:00", "path": "/resources/1/purge", "remote_ip_address": "1.2.3.4", "host": "api.gcore.com", "method": "POST", "query_params": {}, "data": {"paths": ["/url-path-1", "/url-path-2"]}, "status_code": 201, "actions": []}]}]}}}, "401": {"description": "Authentication credentials were not provided or the given token is not valid for any token type."}}}
  "/cdn/activity_log/requests/{log_id}":
    "get": {"tags": ["CDN activity logs"], "summary": "Get CDN activity logs details", "description": "Get information about CDN activity logs record.", "parameters": [{"name": "log_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Activity logs record ID."}}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Activity logs record ID."}, "user_id": {"type": "integer", "description": "ID of the user who made the request."}, "token_id": {"type": "integer", "description": "Permanent API token ID with which the request was made."}, "client_id": {"type": "integer", "description": "ID of the client who made the request."}, "requested_at": {"type": "string", "description": "Date and time when the request was made."}, "path": {"type": "string", "description": "Request URL."}, "remote_ip_address": {"type": "string", "description": "IP address from which the request was made."}, "host": {"type": "string", "description": "Host from which the request was made."}, "method": {"type": "string", "description": "Request HTTP method."}, "query_params": {"type": "string", "description": "Request parameters."}, "data": {"type": "string", "description": "Request body."}, "status_code": {"type": "integer", "description": "Status code that is returned in the response."}, "actions": {"type": "object", "description": "State of a requested object before and after the request.", "properties": {"action_type": {"type": "sting", "description": "Type of change.\nPossible values:\n- **D** - Object is deleted.\n- **C** - Object is created.\n- **U** - Object is updated."}, "state_before_request": {"type": "object", "description": "JSON representation of object before the request."}, "state_after_request": {"type": "object", "description": "JSON representation of object after the request."}}}}}, "example": {"id": 1, "user_id": 174, "token_id": 3, "client_id": 174, "requested_at": "2021-07-07 09:02:29.871030+00:00", "path": "/resources/1/purge", "remote_ip_address": "1.2.3.4", "host": "api.gcore.com", "method": "POST", "query_params": {}, "data": {"paths": ["/url-path-1", "/url-path-2"]}, "status_code": 201, "actions": []}}}}, "401": {"description": "Authentication credentials were not provided or the given token is not valid for any token type."}, "404": {"description": "Activity logs record is not found."}}}
  "/cdn/raw_log_settings":
    "get": {"tags": ["Log forwarding"], "summary": "Get raw logs settings", "description": "Get information about raw logs feature settings.", "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"allOf": [{"type": "object", "properties": {"folders": {"items": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- **s3** - S3 bucket ID.\n- **ftp/sftp** - FTP/SFTP folder ID."}, "bucket": {"type": "string", "description": "S3 bucket name.\nThe field is required if \"`storage_type`\": **s3**."}, "folder": {"type": "string", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- **s3** - S3 bucket sub-folder name (optional.)\n- **ftp/sftp** - FTP/SFTP folder name (required.)"}}}, "properties": {"cdn_resource": {"type": "integer", "description": "CDN resource ID. You can specify client CDN resources in this field."}}]}}}}, {"type": "object", "properties": {"client": {"type": "integer", "description": "Client ID."}, "enabled": {"type": "boolean", "description": "Enables or disables a log forwarding feature.\nPossible values:\n- **true** - log forwarding feature is active.\n- **false** - log forwarding feature is deactivated."}, "ignore_empty_logs": {"type": "boolean", "description": "Enables or disables the forwarding of empty logs.\nPossible values:\n- **true** - Empty logs are not sent.\n- **false** - Empty logs are sent."}, "storage_type": {"type": "string", "description": "Storage type.\nPossible values:\n- **ftp**\n- **sftp**\n- **s3**"}, "for_all_resources": {"type": "boolean", "description": "Defines whether logs of all CDN resources are delivered to one folder/bucket or to separate ones.\nPossible values:\n- **true** - Logs of all CDN resources are delivered to one folder/bucket.\n- **false** - Logs of CDN resources are delivered to separate folders/buckets."}, "all_resources_bucket": {"type": "string", "description": "Name of the S3 bucket to which logs of all CDN resources are delivered.\nApplicable for \"`storage_type`\": S3."}, "all_resources_folder": {"type": "string", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- **s3** - Name of the S3 bucket sub-folder to which logs for all CDN resources are delivered.\n- **ftp/sftp** - Name of the folder (or path) to which logs for all CDN resources are delivered."}, "s3_type": {"type": "string", "description": "Storage type compatible with S3.\nPossible values:\n- **amazon** â€“ AWS S3 storage.\n- **other** â€“ Other (not AWS) S3 compatible storage."}, "s3_aws_region": {"type": "string", "description": "Amazon AWS region."}, "s3_hostname": {"type": "string", "description": "S3 storage hostname."}, "s3_host_bucket": {"type": "string", "description": "S3 storage bucket hostname.\nRestrictions:\n- Maximum 255 symbols.\n- Latin letters (A-Z, a-z,) digits (0-9,) dots, colons, dashes, and underscores."}, "s3_bucket_location": {"type": "string", "description": "S3 storage location.\nRestrictions:\n- Maximum 255 symbols.\n- Latin letters (A-Z, a-z,) digits (0-9,) dots, colons, dashes, and underscores (.:_-)."}, "s3_access_key_id": {"type": "string", "description": "Access key ID for the S3 account.\nAccess Key ID is 20 alpha-numeric characters like 022QF06E7MXBSH9DHM02"}, "ftp_hostname": {"type": "string", "description": "FTP storage hostname."}, "ftp_login": {"type": "string", "description": "FTP storage login."}, "ftp_prepend_folder": {"type": "string", "description": "Name of prepend FTP folder for log delivery."}, "sftp_hostname": {"type": "string", "description": "SFTP storage hostname."}, "sftp_login": {"type": "string", "description": "SFTP storage login."}, "sftp_prepend_folder": {"type": "string", "description": "Name of prepend SFTP folder for log delivery."}, "folders": {"type": "array", "items": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Parameter meaning depends on the value of the \"`storage_type`\"\
                                    \ value:\n- **s3** - S3 bucket ID.\n- **ftp/sftp** - FTP/SFTP folder ID."}, "bucket": {"type": "string", "description": "S3 bucket name.\nThe field is required if \"`storage_type`\": **s3**."}, "folder": {"type": "string", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- **s3** - S3 bucket sub-folder name (optional.)\n- **ftp/sftp** - FTP/SFTP folder name (required.)"}}}, "properties": {"cdn_resource": {"type": "integer", "description": "CDN resource ID."}}]}, "description": "List of folders/buckets for receiving CDN resources logs."}, "status": {"type": "string", "description": "Log delivery status.\nPossible values:\n- **ok** â€“ All/part of attempts to deliver logs were successful.\n- **failed** â€“ All attempts to deliver logs failed.\n- **pending** - No logs delivery attempts yet.\n- **disabled** - Log delivery is disabled."}, "comment": {"type": "string", "readOnly": true, "nullable": true, "description": "System comment on the status of settings, if they are suspended."}, "archive_size_mb": {"type": "integer", "nullable": true, "minimum": 500, "maximum": 2000, "description": "The size of a single piece of the archive in MB.\nIn case of **null** value logs are delivered without slicing."}}, "example": {"id": 123, "ignore_empty_logs": true, "enabled": true, "storage_type": "s3", "client": 1, "created": "2018-07-23 13:27:01.047356+00:00", "updated": "2018-07-23 13:33:44.229959+00:00", "for_all_resources": true, "all_resources_bucket": "some-bucket", "all_resources_folder": "folder-all", "s3_type": "amazon ", "s3_host_bucket": null, "s3_bucket_location": null, "s3_hostname": null, "s3_access_key_id": "AJKHGJDKHFG", "s3_aws_region": 1, "status": "ok", "comment": null, "folders": [], "archive_size_mb": null}}]}}}}, "403": {"description": "Feature is disabled for your account."}, "404": {"description": "Feature settings do not exist or have been deleted."}}}
    "post": {"tags": ["Log forwarding"], "summary": "Setup raw logs settings", "requestBody": {"required": true, "content": {"application/json": {"schema": {"allOf": [{"type": "object", "properties": {"folders": {"items": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- **s3** - S3 bucket ID.\n- **ftp/sftp** - FTP/SFTP folder ID."}, "bucket": {"type": "string", "description": "S3 bucket name.\nThe field is required if \"`storage_type`\": **s3**."}, "folder": {"type": "string", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- **s3** - S3 bucket sub-folder name (optional.)\n- **ftp/sftp** - FTP/SFTP folder name (required.)"}}}, "properties": {"cdn_resource": {"type": "integer", "description": "CDN resource ID. You can specify client CDN resources in this field."}}]}}}}, {"type": "object", "properties": {"enabled": {"type": "boolean", "description": "Enables or disables a log forwarding feature.\nPossible values:\n- **true** - log forwarding feature is active.\n- **false** - log forwarding feature is deactivated."}, "storage_type": {"type": "string", "description": "Storage type.\nPossible values:\n- **ftp**\n- **sftp**\n- **s3**"}, "ignore_empty_logs": {"type": "boolean", "description": "Enables or disables the forwarding of empty logs.\nPossible values:\n- **true** - Empty logs are not sent.\n- **false** - Empty logs are sent."}, "for_all_resources": {"type": "boolean", "description": "Defines whether logs of all CDN resources are delivered to one folder/bucket or to separate ones.\nPossible values:\n- **true** - Logs of all CDN resources are delivered to one folder/bucket.\n- **false** - Logs of different CDN resources are delivered to separate folders/buckets."}, "all_resources_bucket": {"type": "string", "description": "Name of the S3 bucket to which logs for all CDN resources are delivered."}, "all_resources_folder": {"type": "string", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- If \"`storage_type`\": s3 - Name of the S3 bucket sub-folder to which logs for all CDN resources are delivered.\n- If \"`storage_type`\": ftp/sftp - Name of the folder (or path) to which logs for all CDN resources are delivered."}, "folders": {"type": "array", "items": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- **s3** - S3 bucket ID.\n- **ftp/sftp** - FTP/SFTP folder ID."}, "bucket": {"type": "string", "description": "S3 bucket name.\nThe field is required if \"`storage_type`\": **s3**."}, "folder": {"type": "string", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- **s3** - S3 bucket sub-folder name (optional.)\n- **ftp/sftp** - FTP/SFTP folder name (required.)"}}}, "properties": {"cdn_resource": {"type": "integer", "description": "CDN resource ID."}}]}, "description": "List of folders/buckets for receiving CDN resources logs."}, "s3_type": {"type": "string", "description": "Storage type compatible with S3.\nPossible values:\n- **amazon** â€“ AWS S3 storage.\n- **other** â€“ Other (not AWS) S3 compatible storage."}, "s3_aws_region": {"type": "integer", "description": "Amazon AWS region."}, "s3_access_key_id": {"type": "string", "description": "Access key ID for the S3 account.\nAccess Key ID is 20 alpha-numeric characters like 022QF06E7MXBSH9DHM02"}, "s3_secret_key": {"type": "string", "description": "Secret access key for the S3 account.\nSecret Access Key is 20-50 alpha-numeric-slash-plus characters like kWcrlUX5JEDGM/LtmEENI/aVmYvHNif5zB+d9+ct"}, "s3_hostname": {"type": "string", "description": "S3 storage hostname.\nIt is required if \"`s3_type`\": other."}, "s3_host_bucket": {"type": "string", "description": "S3 bucket hostname.\nRestrictions:\n- Maximum of 255 symbols.\n- Latin letters (A-Z, a-z,) digits (0-9,) dots, colons, dashes, and underscores.\n- Required if \"`s3_type`\"\
                        : other."}, "s3_bucket_location": {"type": "string", "description": "Location of S3 storage.\nRestrictions:\n- Maximum of 255 symbols.\n- Latin letters (A-Z, a-z), digits (0-9), dots, colons, dashes, and underscores (.:_-)."}, "ftp_hostname": {"type": "string", "description": "FTP storage hostname."}, "ftp_prepend_folder": {"type": "string", "description": "Name of the FTP prepend folder for log delivery.\n**Null** is allowed."}, "ftp_login": {"type": "string", "description": "FTP storage login."}, "ftp_password": {"type": "string", "description": "FTP storage password."}, "sftp_hostname": {"type": "string", "description": "SFTP storage hostname."}, "sftp_prepend_folder": {"type": "string", "description": "Name of the SFTP prepend folder for log delivery.\n**Null** is allowed."}, "sftp_login": {"type": "string", "description": "SFTP storage login."}, "sftp_password": {"type": "string", "description": "SFTP storage password.\nIt should be empty if \"`sftp_private_key`\" is set."}, "sftp_private_key": {"type": "string", "description": "Private key for SFTP authorization.\nPossible values:\n- **RSA**\n- **ED25519**\nIt should be empty if \"`sftp_password`\" is set."}, "sftp_key_passphrase": {"type": "string", "description": "Passphrase for SFTP private key.\nRestrictions:\n- Should be set if private key encoded with passphrase.\n- Should be empty if \"`sftp_password`\" is set."}, "archive_size_mb": {"type": "integer", "nullable": true, "minimum": 500, "maximum": 2000, "description": "The size of a single piece of the archive in MB.\nIn case of **null** value logs are delivered without slicing."}}, "required": ["storage_type", "for_all_resources", "all_resources_bucket", "all_resources_folder", "folders", "s3_type", "s3_access_key_id", "s3_secret_key", "s3_hostname", "ftp_hostname", "ftp_login", "ftp_password", "sftp_hostname", "sftp_login", "sftp_password"], "example": {"storage_type": "s3", "enabled": true, "ignore_empty_logs": true, "for_all_resources": false, "all_resources_bucket": null, "all_resources_folder": null, "s3_type": "amazon", "s3_aws_region": 1, "s3_hostname": null, "s3_access_key_id": "AJKHGJDKHFG", "s3_host_bucket": null, "s3_bucket_location": null, "folders": [{"folder": "bucket-subfolder", "bucket": "first", "cdn_resource": 111}, {"bucket": "second", "cdn_resource": 222}], "archive_size_mb": 1000}}]}}}}, "responses": {"201": {"description": "Successful."}, "400": {"description": "You will receive an error with the invalid parameter mentioned."}}}
    "put": {"tags": ["Log forwarding"], "summary": "Change raw logs settings", "description": "PATCH method is not allowed.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"allOf": [{"type": "object", "properties": {"folders": {"items": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- **s3** - S3 bucket ID.\n- **ftp/sftp** - FTP/SFTP folder ID."}, "bucket": {"type": "string", "description": "S3 bucket name.\nThe field is required if \"`storage_type`\": **s3**."}, "folder": {"type": "string", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- **s3** - S3 bucket sub-folder name (optional.)\n- **ftp/sftp** - FTP/SFTP folder name (required.)"}}}, "properties": {"cdn_resource": {"type": "integer", "description": "CDN resource ID. You can specify client CDN resources in this field."}}]}}}}, {"type": "object", "properties": {"enabled": {"type": "boolean", "description": "Enables or disables a log forwarding feature.\nPossible values:\n- **true** - log forwarding feature is active.\n- **false** - log forwarding feature is deactivated."}, "storage_type": {"type": "string", "description": "Storage type.\nPossible values:\n- **ftp**\n- **sftp**\n- **s3**"}, "ignore_empty_logs": {"type": "boolean", "description": "Enables or disables the forwarding of empty logs.\nPossible values:\n- **true** - Empty logs are not sent.\n- **false** - Empty logs are sent."}, "for_all_resources": {"type": "boolean", "description": "Defines whether logs of all CDN resources are delivered to one folder/bucket or to separate ones.\nPossible values:\n- **true** - Logs of all CDN resources are delivered to one folder/bucket.\n- **false** - Logs of different CDN resources are delivered to separate folders/buckets."}, "all_resources_bucket": {"type": "string", "description": "Name of the S3 bucket to which logs for all CDN resources are delivered."}, "all_resources_folder": {"type": "string", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- If \"`storage_type`\": s3 - Name of the S3 bucket sub-folder to which logs for all CDN resources are delivered.\n- If \"`storage_type`\": ftp/sftp - Name of the folder (or path) to which logs for all CDN resources are delivered."}, "folders": {"type": "array", "items": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- **s3** - S3 bucket ID.\n- **ftp/sftp** - FTP/SFTP folder ID."}, "bucket": {"type": "string", "description": "S3 bucket name.\nThe field is required if \"`storage_type`\": **s3**."}, "folder": {"type": "string", "description": "Parameter meaning depends on the value of the \"`storage_type`\" value:\n- **s3** - S3 bucket sub-folder name (optional.)\n- **ftp/sftp** - FTP/SFTP folder name (required.)"}}}, "properties": {"cdn_resource": {"type": "integer", "description": "CDN resource ID."}}]}, "description": "List of folders/buckets for receiving CDN resources logs."}, "s3_type": {"type": "string", "description": "Storage type compatible with S3.\nPossible values:\n- **amazon** â€“ AWS S3 storage.\n- **other** â€“ Other (not AWS) S3 compatible storage."}, "s3_aws_region": {"type": "integer", "description": "Amazon AWS region."}, "s3_access_key_id": {"type": "string", "description": "Access key ID for the S3 account.\nAccess Key ID is 20 alpha-numeric characters like 022QF06E7MXBSH9DHM02"}, "s3_secret_key": {"type": "string", "description": "Secret access key for the S3 account.\nSecret Access Key is 20-50 alpha-numeric-slash-plus characters like kWcrlUX5JEDGM/LtmEENI/aVmYvHNif5zB+d9+ct"}, "s3_hostname": {"type": "string", "description": "S3 storage hostname.\nIt is required if \"`s3_type`\": other."}, "s3_host_bucket": {"type": "string", "description": "S3 bucket hostname.\nRestrictions:\n- Maximum of 255 symbols.\n- Latin letters (A-Z, a-z,) digits (0-9,) dots, colons, dashes,
                        and underscores.\n- Required if \"`s3_type`\": other."}, "s3_bucket_location": {"type": "string", "description": "Location of S3 storage.\nRestrictions:\n- Maximum of 255 symbols.\n- Latin letters (A-Z, a-z), digits (0-9), dots, colons, dashes, and underscores (.:_-)."}, "ftp_hostname": {"type": "string", "description": "FTP storage hostname."}, "ftp_prepend_folder": {"type": "string", "description": "Name of the FTP prepend folder for log delivery.\n**Null** is allowed."}, "ftp_login": {"type": "string", "description": "FTP storage login."}, "ftp_password": {"type": "string", "description": "FTP storage password."}, "sftp_hostname": {"type": "string", "description": "SFTP storage hostname."}, "sftp_prepend_folder": {"type": "string", "description": "Name of the SFTP prepend folder for log delivery.\n**Null** is allowed."}, "sftp_login": {"type": "string", "description": "SFTP storage login."}, "sftp_password": {"type": "string", "description": "SFTP storage password.\nIt should be empty if \"`sftp_private_key`\" is set."}, "sftp_private_key": {"type": "string", "description": "Private key for SFTP authorization.\nPossible values:\n- **RSA**\n- **ED25519**\nIt should be empty if \"`sftp_password`\" is set."}, "sftp_key_passphrase": {"type": "string", "description": "Passphrase for SFTP private key.\nRestrictions:\n- Should be set if private key encoded with passphrase.\n- Should be empty if \"`sftp_password`\" is set."}, "archive_size_mb": {"type": "integer", "nullable": true, "minimum": 500, "maximum": 2000, "description": "The size of a single piece of the archive in MB.\nIn case of **null** value logs are delivered without slicing."}}, "required": ["storage_type", "for_all_resources", "all_resources_bucket", "all_resources_folder", "folders", "s3_type", "s3_access_key_id", "s3_secret_key", "s3_hostname", "ftp_hostname", "ftp_login", "ftp_password", "sftp_hostname", "sftp_login", "sftp_password"], "example": {"storage_type": "s3", "enabled": true, "ignore_empty_logs": true, "for_all_resources": false, "all_resources_bucket": null, "all_resources_folder": null, "s3_type": "amazon", "s3_aws_region": 1, "s3_hostname": null, "s3_access_key_id": "AJKHGJDKHFG", "s3_host_bucket": null, "s3_bucket_location": null, "folders": [{"folder": "bucket-subfolder", "bucket": "first", "cdn_resource": 111}, {"bucket": "second", "cdn_resource": 222}], "archive_size_mb": 1000}}]}}}}, "responses": {"200": {"description": "Successful."}}}
    "delete": {"tags": ["Log forwarding"], "summary": "Delete raw logs settings", "description": "Delete the raw logs delivery configuration from the system permanently.\nNotes:\n- **Deactivation Requirement**: Set the `enabled` attribute to `false` before deletion.\n- **Irreversibility**: This action is irreversible. Once deleted, the raw logs delivery configuration cannot be recovered.", "responses": {"204": {"description": "Successful."}, "400": {"description": "Failed to delete the log forwarding configuration.", "content": {"application/json": {"schema": {"oneOf": [{"title": "Cannot delete an active instance.", "type": "object", "properties": {"errors": {"type": "array", "items": {"type": "string"}, "description": "Deletion of an active instance is prohibited. Please deactivate it before attempting deletion.", "example": ["Deletion of this instance is currently not possible as it is in an active state. Please deactivate it before attempting the deletion request again."]}}}]}}}}}}
  "/cdn/aws_regions":
    "get": {"operationId": "aws_regions", "tags": ["Log forwarding"], "summary": "Get AWS regions list", "description": "Get the list of Amazon AWS regions.", "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Region ID."}, "code": {"type": "string", "description": "Region code."}, "name": {"type": "string", "description": "Region name."}}, "example": [{"id": 1, "code": "us-east-1", "name": "US East (N. Virginia)"}, {"id": 2, "code": "us-east-2", "name": "US East (Ohio)"}]}}}}}}
  "/cdn/statistics/series":
    "get": {"tags": ["CDN Statistics"], "summary": "CDN resource statistics", "description": "Get information about CDN resource statistics for up to 365 days starting today.", "parameters": [{"in": "query", "name": "service", "schema": {"type": "string"}, "required": true, "description": "Service name.\nPossible value:\n- CDN"}, {"in": "query", "name": "from", "schema": {"type": "string"}, "required": true, "description": "Beginning of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nExample:\n\\* &from=2018-12-01T00:00:00.000"}, {"in": "query", "name": "to", "schema": {"type": "string"}, "required": true, "description": "End of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nExample:\n\\* &to=2018-12-01T01:00:00.000"}, {"in": "query", "name": "granularity", "schema": {"type": "string"}, "required": true, "description": "Duration of time chunks into which the data will be divided.\nPossible values:\n- **1m** - available only for up to 1 month in the past.\n- **5m**\n- **15m**\n- **1h**\n- **1d**"}, {"in": "query", "name": "metrics", "schema": {"type": "string"}, "required": true, "description": "Types of statistics data.\nPossible values:\n- **`upstream_bytes`** - Traffic in bytes from an origin server to CDN servers or to origin shielding when used.\n- **`sent_bytes`** - Traffic in bytes from CDN servers to clients.\n- **`shield_bytes`** - Traffic in bytes from Origin shielding to CDN servers.\n- **`total_bytes`** - `shield_bytes`, `upstream_bytes` and `sent_bytes` combined.\n- **`cdn_bytes`** - `sent_bytes` and `shield_bytes` combined.\n- **requests** - Number of requests to edge servers.\n- **`responses_2xx`** - Number of 2xx response codes.\n- **`responses_3xx`** - Number of 3xx response codes.\n- **`responses_4xx`** - Number of 4xx response codes.\n- **`responses_5xx`** - Number of 5xx response codes.\n- **`responses_hit`** - Number of responses with the header Cache: HIT.\n- **`responses_miss`** - Number of responses with the header Cache: MISS.\n- **`cache_hit_traffic_ratio`** - Formula: 1 - `upstream_bytes` / `sent_bytes`. We deduct the non-cached traffic from the total traffic amount."}, {"in": "query", "name": "group_by", "schema": {"type": "string"}, "description": "Output data grouping.\nPossible values:\n- **client** - Data is grouped by clients.\n- **resource** - Data is grouped by CDN resources.\n- **region** - Data is grouped by regions of CDN edge servers.\n- **country** - Data is grouped by countries of CDN edge servers.\n- **vhost** - Data is grouped by resources CNAMEs.\nTo request multiple values, use:\n\\* &`group_by`=client&`group_by`=resource"}, {"in": "query", "name": "countries", "schema": {"type": "string"}, "description": "Names of countries for which data should be displayed.\nEnglish short names from [ISO 3166 standard][1] without the definite article (\"the\") should be used.\n[1]: https://www.iso.org/obp/ui/#search/code/\nTo request multiple values, use:\n\\* &countries=france&countries=denmark"}, {"in": "query", "name": "regions", "schema": {"type": "string"}, "description": "Regions for which data is displayed.\nPossible values:\n- **na** - North America\n- **eu** - Europe\n- **cis** - Commonwealth of Independent States\n- **asia** - Asia\n- **au** - Australia\n- **latam** - Latin America\n- **me** - Middle East\n- **africa** - Africa\n- **sa** - South America"}, {"in": "query", "name": "resource", "schema": {"type": "integer"}, "description": "CDN resources IDs.\nTo request multiple values, use:\n\\* &resource=1&resource=2"}, {"in": "query", "name": "client", "schema": {"type": "integer"}, "description": "Client accounts IDs.\nTo request multiple values, use:\n\\* &client=1&client=2"}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"client": {"type": "object", "description": "Statistics information grouped by client accounts IDs."}, "resource": {"type": "object", "description": "Statistics information grouped by CDN resources."}, "region": {"type": "object", "description": "Regions
                      for which data is displayed.\nPossible values:\n- **asia** - Asia\n- **au** - Australia\n- **cis** - CIS (Commonwealth of Independent States)\n- **eu** - Europe\n- **latam** - Latin America\n- **me** - Middle East\n- **na** - North America.\n- **africa** - Africa\n- **sa** - South America"}, "metrics": {"type": "object", "description": "Statistics parameters."}, "upstream_bytes": {"type": "array", "items": {"type": "integer"}, "description": "Bytes from the upstream to the CDN servers.\nRepresented by two values, for example:\n\\* 1543622400 - time in the UNIX timestamp when statistics were received.\n\\* 17329220573 - bytes."}, "sent_bytes": {"type": "array", "items": {"type": "integer"}, "description": "Bytes from CDN servers to the end-users.\nRepresented by two values, for example:\n\\* 1543622400 - time in the UNIX timestamp when statistics were received.\n\\* 17329220573 - bytes."}, "total_bytes": {"type": "array", "items": {"type": "integer"}, "description": "Upstream bytes and `sent_bytes` combined.\nRepresented by two values, for example:\n\\* 1543622400 - time in the UNIX timestamp when statistics were received.\n\\* 17329220573 - bytes."}}}, "example": {"resource": {"1": {"region": {"asia": {"metrics": {"sent_bytes": [[1543622400, 17329220573]], "total_bytes": [[1543622400, 17384617989]], "upstream_bytes": [[1543622400, 55397416]]}}}}}}}}}, "204": {"description": "There is no data for the requested time period."}}}
  "/cdn/statistics/aggregate/stats":
    "get": {"tags": ["CDN Statistics"], "summary": "Aggregated statistics", "description": "Get information about monthly CDN traffic data.\nRequest URL parameters should be added as a query string after the endpoint.", "parameters": [{"in": "query", "name": "service", "schema": {"type": "string"}, "required": true, "description": "Service name.\nPossible value:\n- CDN"}, {"in": "query", "name": "from", "schema": {"type": "string"}, "required": true, "description": "Beginning of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nExample:\n\\* &from=2018-12-01T00:00:00.000"}, {"in": "query", "name": "to", "schema": {"type": "string"}, "required": true, "description": "End of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nExample:\n\\* &to=2018-12-01T01:00:00.000"}, {"in": "query", "name": "granularity", "schema": {"type": "string"}, "required": true, "description": "Duration of time chunks into which the data will be divided.\nPossible values:\n- **1m** - available only for up to 1 month in the past.\n- **5m**\n- **15m**\n- **1h**\n- **1d**"}, {"in": "query", "name": "metrics", "schema": {"type": "string"}, "required": true, "description": "Types of statistics data.\nPossible values:\n- **`upstream_bytes`** - Traffic in bytes from an origin server to CDN servers or to origin shielding when used.\n- **`sent_bytes`** - Traffic in bytes from CDN servers to clients.\n- **`shield_bytes`** - Traffic in bytes from origin shielding to CDN servers.\n- **`total_bytes`** - `shield_bytes`, `upstream_bytes` and `sent_bytes` combined.\n- **`cdn_bytes`** - `sent_bytes` and `shield_bytes` combined.\n- **requests** - Number of requests to edge servers.\n- **`responses_2xx`** - Number of 2xx response codes.\n- **`responses_3xx`** - Number of 3xx response codes.\n- **`responses_4xx`** - Number of 4xx response codes.\n- **`responses_5xx`** - Number of 5xx response codes.\n- **`responses_hit`** - Number of responses with the header Cache: HIT.\n- **`responses_miss`** - Number of responses with the header Cache: MISS.\n- **`cache_hit_traffic_ratio`** - Formula: 1 - `upstream_bytes` / `sent_bytes`. We deduct the non-cached traffic from the total traffic amount.\n- **`shield_usage`** - Origin shielding usage. To get accurate results, you must use grouping or filtering by a client or by a CDN resource.\n- **`raw_logs_usage`** - Raw logs usage. To get accurate results, you should use grouping or filtering by a client or by a CDN resource."}, {"in": "query", "name": "group_by", "schema": {"type": "string"}, "description": "Output data grouping.\nPossible values:\n- **client** - Data is grouped by clients.\n- **resource** - Data is grouped by CDN resources.\n- **region** - Data is grouped by regions of CDN edge servers.\n- **country** - Data is grouped by countries of CDN edge servers.\n- **vhost** - Data is grouped by resources CNAMEs.\nTo request multiple values, use:\n\\* &`group_by`=client&`group_by`=resource"}, {"in": "query", "name": "countries", "schema": {"type": "string"}, "description": "Names of countries for which data should be displayed.\nEnglish short names from [ISO 3166 standard][1] without the definite article (\"the\") should be used.\n[1]: https://www.iso.org/obp/ui/#search/code/\nTo request multiple values, use:\n\\* &countries=france&countries=denmark"}, {"in": "query", "name": "regions", "schema": {"type": "string"}, "description": "Regions for which data is displayed.\nPossible values:\n- **na** - North America\n- **eu** - Europe\n- **cis** - Commonwealth of Independent States\n- **asia** - Asia\n- **au** - Australia\n- **latam** - Latin America\n- **me** - Middle East\n- **africa** - Africa\n- **sa** - South America"}, {"in": "query", "name": "resource", "schema": {"type": "integer"}, "description": "CDN resources IDs.\nTo request multiple values, use:\n\\* &resource=1&resource=2"}, {"in": "query", "name": "client", "schema": {"type": "integer"}, "description": "Client accounts IDs.\nTo request multiple values, use:\n\\* &client=1&client=2"}], "responses": {"200": {"description": "Successful.",
          "content": {"application/json": {"schema": {"type": "object", "properties": {"client": {"type": "object", "description": "Statistics information grouped by client accounts IDs."}, "resource": {"type": "object", "description": "Statistics information grouped by CDN resources."}, "region": {"type": "object", "description": "Statistics information grouped by regions."}, "metrics": {"type": "object", "description": "Statistics parameters."}, "upstream_bytes": {"type": "integer", "description": "Traffic in bytes from the upstream to CDN servers."}, "sent_bytes": {"type": "integer", "description": "Traffic in bytes from CDN servers to clients."}, "total_bytes": {"type": "integer", "description": "Upstream bytes and `sent_bytes` combined."}, "shield_usage": {"type": "string", "description": "Number of CDN resources that used origin shielding."}, "raw_logs_usage": {"type": "string", "description": "Number of CDN resources that used raw logs."}, "requests": {"type": "integer", "description": "Number of requests to edge servers."}, "responses_2xx": {"type": "integer", "description": "Number of 2xx response codes."}, "responses_3xx": {"type": "integer", "description": "Number of 3xx response codes."}, "responses_4xx": {"type": "integer", "description": "Number of 4xx response codes."}, "responses_5xx": {"type": "integer", "description": "Number of 5xx response codes."}, "responses_hit": {"type": "integer", "description": "Number of responses with the header Cache: HIT."}, "responses_miss": {"type": "integer", "description": "Number of responses with the header Cache: MISS."}, "cache_hit_traffic_ratio": {"type": "integer", "description": "Formula: 1 - `upstream_bytes` / `sent_bytes`. We deduct the non-cached traffic from the total traffic amount."}, "95_percentile": {"type": "integer", "description": "95 percentile bandwidth value."}, "min_bandwidth": {"type": "integer", "description": "Minimum bandwidth."}, "max_bandwidth": {"type": "integer", "description": "Maximum bandwidth."}}}, "example": {"resource": {"1": {"region": {"cis": {"metrics": {"95_percentile": 20023536, "cache_hit_traffic_ratio": 0.9958449964158854, "max_bandwidth": 34794756, "min_bandwidth": 379257, "requests": 21575631, "responses_2xx": 21095299, "responses_3xx": 278225, "responses_4xx\"": 202026, "responses_5xx\"": 81, "sent_bytes\"": 22014089592053, "total_bytes\"": 22105558213209, "upstream_bytes\"": 91468621156, "responses_hit\"": 63368252, "responses_miss\"": 866237}}, "eu": {"metrics": {"95_percentile": 14324356, "cache_hit_traffic_ratio": 0.9852247660029627, "max_bandwidth": 22215199, "min_bandwidth": 299608, "requests": 64234595, "responses_2xx": 62616980, "responses_3xx": 1196666, "responses_4xx": 420718, "responses_5xx": 216, "sent_bytes": 16552226067556, "total_bytes": 16796789080876, "upstream_bytes": 244563013320, "responses_hit": 21235829, "responses_miss\"": 339566}}}}}}}}}, "204": {"description": "There is no data for the requested time period."}}}
  "/cdn/statistics/shield_usage/series":
    "get": {"tags": ["CDN Statistics"], "summary": "Origin shielding usage statistics", "description": "Get information about the origin shielding usage statistics for up to 365 days starting today.\nRequest URL parameters should be added as a query string after the endpoint.", "parameters": [{"in": "query", "name": "from", "schema": {"type": "string"}, "required": true, "description": "Beginning of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nExample:\n\\* &from=2018-12-01T00:00:00.000"}, {"in": "query", "name": "to", "schema": {"type": "string"}, "required": true, "description": "End of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nExample:\n\\* &to=2018-12-01T01:00:00.000"}, {"in": "query", "name": "resource", "schema": {"type": "integer"}, "description": "CDN resources IDs.\nTo request multiple values, use:\n\\* &resource=1&resource=2"}, {"in": "query", "name": "client", "schema": {"type": "integer"}, "description": "Client accounts IDs.\nTo request multiple values, use:\n\\* &client=1&client=2"}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "object", "properties": {"active_from": {"type": "string", "description": "Date and time when paid feature was enabled (ISO 8601/RFC 3339 format, UTC.)"}, "active_to": {"type": "string", "description": "Date and time when paid feature was disabled (ISO 8601/RFC 3339 format, UTC.)\nReturns **null** if the paid feature is enabled."}, "client_id": {"type": "integer", "description": "Client account ID."}, "cname": {"type": "string", "description": "CDN resource CNAME."}}}}, "example": [{"id": 1, "active_from": "2020-01-21 04:36:35.473000+00:00", "active_to": null, "client_id": 1, "cname": "resource-1.com"}, {"id": 2, "active_from": "2020-03-21 04:36:30.269000+00:00", "active_to": "2020-04-21 04:36:33.062000+00:00", "client_id": 1, "cname": "resource-2.com"}]}}}, "204": {"description": "There is no data for the requested time period."}}}
  "/cdn/statistics/shield_usage/aggregated":
    "get": {"tags": ["CDN Statistics"], "summary": "Aggregated origin shielding usage statistics", "description": "Get the number of CDN resources that used origin shielding.\nRequest URL parameters should be added as a query string after the endpoint.", "parameters": [{"in": "query", "name": "from", "schema": {"type": "string"}, "required": true, "description": "Beginning of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nExample:\n\\* &from=2018-12-01T00:00:00.000"}, {"in": "query", "name": "to", "schema": {"type": "string"}, "required": true, "description": "End of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nExample:\n\\* &to=2018-12-01T01:00:00.000"}, {"in": "query", "name": "group_by", "schema": {"type": "string"}, "description": "Output data grouping.\nPossible values:\n- **client** - Data is grouped by clients.\n- **resource** - Data is grouped by CDN resources.\nTo request multiple values, use:\n\\* &`group_by`=client&`group_by`=resource"}, {"in": "query", "name": "resource", "schema": {"type": "integer"}, "description": "CDN resources IDs.\nTo request multiple values, use:\n\\* &resource=1&resource=2"}, {"in": "query", "name": "client", "schema": {"type": "integer"}, "description": "Client accounts IDs.\nTo request multiple values, use:\n\\* &client=1&client=2"}, {"in": "query", "name": "flat", "schema": { "type": "boolean" }, "description": "The waÑƒ the parameters are arranged in the response.\nPossible values:\n- **true** â€“ Flat structure is used.\n- **false** â€“ Embedded structure is used (default.)"}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"resource": {"type": "object", "description": "Statistics information grouped by CDN resources."}, "metrics": {"type": "object", "description": "Statistics parameters."}, "shield_usage": {"type": "string", "description": "Number of CDN resources that used origin shielding."}}}, "example": {"resource": {"1": {"metrics": {"shield_usage": 1}}}}}}}, "204": {"description": "There is no data for the requested time period."}}}
  "/cdn/statistics/raw_logs_usage/series":
    "get": {"tags": ["CDN Statistics"], "summary": "Raw logs usage statistics", "description": "Get information about raw logs usage statistics for up to 90 days starting today.\nRequest URL parameters should be added as a query string after the endpoint.", "parameters": [{"in": "query", "name": "from", "schema": {"type": "string"}, "required": true, "description": "Beginning of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nExample:\n\\* &from=2018-12-01T00:00:00.000"}, {"in": "query", "name": "to", "schema": {"type": "string"}, "required": true, "description": "End of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nExample:\n\\* &to=2018-12-01T01:00:00.000"}, {"in": "query", "name": "resource", "schema": {"type": "integer"}, "description": "CDN resources IDs.\nTo request multiple values, use:\n\\* &resource=1&resource=2"}, {"in": "query", "name": "client", "schema": {"type": "integer"}, "description": "Client accounts IDs.\nTo request multiple values, use:\n\\* &client=1&client=2"}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "object", "properties": {"active_from": {"type": "string", "description": "Date and time when paid feature was enabled (ISO 8601/RFC 3339 format, UTC.)"}, "active_to": {"type": "string", "description": "Date and time when paid feature was disabled (ISO 8601/RFC 3339 format, UTC.)\nReturns **null** if the paid feature is enabled."}, "client_id": {"type": "integer", "description": "Client account ID."}, "cname": {"type": "string", "description": "CDN resource CNAME."}}}}, "example": [{"id": 1, "active_from": "2020-01-21 04:36:35.473000+00:00", "active_to": null, "client_id": 1, "cname": "resource-1.com"}, {"id": 2, "active_from": "2020-03-21 04:36:30.269000+00:00", "active_to": "2020-04-21 04:36:33.062000+00:00", "client_id": 1, "cname": "resource-2.com"}]}}}, "204": {"description": "No data for the requested time period."}}}
  "/cdn/statistics/raw_logs_usage/aggregated":
    "get": {"tags": ["CDN Statistics"], "summary": "Aggregated raw logs usage statistics", "description": "Get the number of CDN resources that used raw Logs.\nRequest URL parameters should be added as a query string after the endpoint.", "parameters": [{"in": "query", "name": "from", "schema": {"type": "string"}, "required": true, "description": "Beginning of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nExample:\n\\* &from=2018-12-01T00:00:00.000"}, {"in": "query", "name": "to", "schema": {"type": "string"}, "required": true, "description": "End of the requested time period (ISO 8601/RFC 3339 format, UTC.)\nExample:\n\\* &to=2018-12-01T01:00:00.000"}, {"in": "query", "name": "group_by", "schema": {"type": "string"}, "description": "Output data grouping.\nPossible values:\n- **client** - Data is grouped by clients.\n- **resource** - Data is grouped by CDN resources.\nTo request multiple values, use:\n\\* &`group_by`=client&`group_by`=resource"}, {"in": "query", "name": "resource", "schema": {"type": "integer"}, "description": "CDN resources IDs.\nTo request multiple values, use:\n\\* &resource=1&resource=2"}, {"in": "query", "name": "client", "schema": {"type": "integer"}, "description": "Client accounts IDs.\nTo request multiple values, use:\n\\* &client=1&client=2"}, {"in": "query", "name": "flat", "schema": { "type": "boolean" }, "description": "The waÑƒ the parameters are arranged in the response.\nPossible values:\n- **true** â€“ Flat structure is used.\n- **false** â€“ Embedded structure is used (default.)"}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"resource": {"type": "object", "description": "Statistics information grouped by CDN resources."}, "metrics": {"type": "object", "description": "Statistics parameters."}, "raw_logs_usage": {"type": "string", "description": "Number of CDN resources that used raw logs."}}}, "example": {"resource": {"1": {"metrics": {"raw_logs_usage": 1}}}}}}}, "204": {"description": "There is no data for the requested time period."}}}
  "/cdn/clients/{client_id}/disabled_shield_locations_v2":
    "get": {"tags": ["Origin shielding"], "summary": "Get information about disabled origin shielding locations", "description": "Get information about origin shielding locations disabled for a specific client.", "parameters": [{"name": "client_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Client account ID."}}], "responses": {"200": {"description": "Successful.", "content": {"application/json": {"schema": {"type": "object", "properties": {"disabled_shield_locations_v2": {"type": "array", "items": {"type": "integer"}, "description": "Origin shielding location IDs disabled for the client.", "example": [1, 2, 3]}}}}}}, "404": {"description": "The client is not found."}}}
tags:
- {"name": "Account", "description": "Information about CDN product settings in your account.", "x-displayName": "Account"}
- {"name": "CDN service", "description": "Information about the current state of CDN service in your account.", "x-displayName": "CDN service"}
- {"name": "Features", "description": "Information about free and paid features available for you account.", "x-displayName": "Features"}
- {"name": "Balancer", "description": "Balancer allows choosing CDN server locations that will be used for content delivery.\nTo activate balancer, [set clientâ€™s balancer settings][1].\n[1]: #tag/Balancer/paths/~1cdn~1admin~1clients~1{`client_id`}/post", "x-displayName": "Balancer"}
- {"name": "CDN activity logs", "description": "Get the history of users requests to CDN.\nIt contains requests made both via the API and via the control panel.\nThe following methods are not tracked in the activity logs:\n- HEAD\n- OPTIONS", "x-displayName": "CDN activity logs"}
- {"name": "Log forwarding", "description": "Raw logs option allows to enable or disable the automatic export of CDN resource logs to your storage.", "x-displayName": "Log forwarding"}
- {"name": "CDN Statistics", "description": "Statistics CDN usage and paid features usage.", "x-displayName": "Statistics"}
- {"name": "Origin shielding", "description": "Origin shielding helps protect your origin server from being overloaded with requests from multiple CDN servers.\nThe option accumulates all CDN server requests at a special server called a shield or precache server.\nWhen shielding is enabled, only one precache server communicates with the origin host, not the entire CDN.", "x-displayName": "Origin shielding"}
x-tagGroups:
- {"name": "CDN Reseller API", "tags": ["Account", "CDN service", "Features", "Balancer", "CDN activity logs", "Log forwarding", "CDN Statistics", "Origin shielding"]}
security: ["APIKey": []]
components:
  securitySchemes:
    APIKey:
      description: "API key for authentication. Make sure to include the word `apikey`, followed by a single space and then your token.\nExample: `apikey 1234$abcdef`"
      type: apiKey
      in: header
      name: Authorization
