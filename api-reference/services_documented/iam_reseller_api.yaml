"openapi": "3.1.0"
"info": {"title": "Gcore OpenAPI – IAM Reseller API", "description": "This OpenAPI is an aggregated OpenAPI specification that unifies all Gcore products into a single file. It covers Cloud, CDN, DNS, WAAP, DDoS Protection, Object Storage, Streaming, and FastEdge services.", "version": "2025-09-16T08:01:07.318631+00:00"}
"servers": ["url": "https://api.gcore.com"]
paths:
  "/iam/users":
    "post": {"tags": ["IAM Reseller Users"], "summary": "Create a new user", "description": "Create a new user with client. The user and client will be activated automatically.", "requestBody": {"content": {"application/json": {"schema": {"required": ["company", "email", "password"], "type": "object", "properties": {"email": {"type": "string", "description": "User's email address. This address will be used as client's email address by default.", "format": "email"}, "password": {"type": "string", "description": "User's password.", "format": "password"}, "company": {"type": "string", "description": "Client's company name."}, "user_type": {"type": "string", "description": "User's type. It must be `common`.", "enum": ["common"]}, "name": {"type": "string", "description": "User's name. This name will be used as client's name by default."}, "phone": {"type": "string", "description": "User's phone number. This phone will be used as client's phone by default."}, "seller": {"type": "integer", "description": "Client's seller ID."}, "services": {"type": "array", "description": "Specify products if you want to override [default product availability](#tag/Products'-availability/paths/~1products~1availability~1defaults/get) for this client.\n`null` – the product will inherit the [default availability](#tag/Products'-availability/paths/~1products~1availability~1defaults/get) for this product.\n`true` – set personal availability for a client as available. Please be informed that product will not be enabled for a client until you\n[enable it and change the service status](#tag/Services/paths/~1clients~1{clientId}~1services~1{serviceId}/patch).\n`false` – set personal availability for a client as unavailable.", "items": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, "available": {"type": "boolean", "description": "`true` – the product will be available to activate.\n`false` – the product will not be available to activate.\n`null` – the product will inherit the default availability for this product."}}}}, "lang": {"type": "string", "description": "Language code.", "enum": ["de", "en", "ru", "zh", "az"]}, "custom_id": {"type": "string", "description": "Client's custom ID. You can use this field for your internal identification."}, "country_code": {"type": "string", "description": "Client's country code."}, "is_test": {"type": "boolean", "description": "System field:\n- `true` — a test account;\n- `false` — a production account."}}}}}}, "responses": {"201": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "User's ID.", "readOnly": true}, "email": {"type": "string", "format": "email", "description": "User's email address."}, "name": {"type": "string", "description": "User's name.", "nullable": true}, "lang": {"type": "string", "description": "User's language.\nDefines language of the control panel and email messages.", "enum": ["de", "en", "ru", "zh", "az"]}, "phone": {"type": "string", "description": "User's phone.", "nullable": true}, "company": {"type": "string", "description": "User's company."}, "reseller": {"type": "integer", "description": "Services provider ID.", "readOnly": true}, "client": {"type": "number", "description": "User's account ID.", "readOnly": true}, "deleted": {"type": "boolean", "description": "Deletion flag. If `true` then user was deleted.", "readOnly": true}, "groups": {"type": "array", "description": "User's group in the current account.\nIAM supports 5 groups:\n- Users\n- Administrators\n- Engineers\n- Purge and Prefetch only (API)\n- Purge and Prefetch only (API+Web)", "items": {"type": "object", "properties": {"id": {"type": "integer", "example": 1, "description": "Group's ID: Possible values are:   \n\n* 1 - Administrators* 2 - Users* 5 - Engineers* 3009 - Purge and Prefetch only (API+Web)* 3022 - Purge and Prefetch only (API)"}, "name": {"type": "string", "example": "Administrators", "description": "Group's
                            name.", "enum": ["Users", "Administrators", "Engineers", "Purge and Prefetch only (API)", "Purge and Prefetch only (API+Web)"]}}}}, "activated": {"type": "boolean", "description": "Email confirmation:\n- `true` – user confirmed the email;\n- `false` – user did not confirm the email.", "readOnly": true}, "sso_auth": {"type": "boolean", "description": "SSO authentication flag. If `true` then user can login via SAML SSO.", "readOnly": true}, "two_fa": {"type": "boolean", "description": "Two-step verification:\n- `true` – user enabled two-step verification;\n- `false` – user disabled two-step verification.", "readOnly": true}, "auth_types": {"type": "array", "items": {"type": "string", "description": "Auth types.", "enum": ["password", "sso", "github", "google-oauth2"]}, "description": "System field. List of auth types available for the account."}, "user_type": {"type": "string", "description": "User's type.", "enum": ["common", "reseller", "seller"], "readOnly": true}, "is_active": {"type": "boolean", "description": "User activity flag.", "readOnly": true}, "client_and_roles": {"type": "array", "description": "List of user's clients. User can access to one or more clients.", "readOnly": true, "items": {"required": ["client_company_name", "client_id", "user_id", "user_roles"], "type": "object", "properties": {"client_id": {"type": "integer"}, "client_company_name": {"type": "string"}, "user_roles": {"type": "array", "description": "User role in this client.", "example": ["2"], "items": {"type": "string", "description": "String representation of role id."}}, "user_id": {"type": "integer", "description": "User's ID."}}}}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}}}
  "/iam/users/{userId}":
    "delete": {"tags": ["IAM Reseller Users"], "summary": "Delete user", "description": "Deletes user from current account. If a user has access to multiple accounts, you must [revoke access](#tag/Users/paths/~1clients~1{clientId}~1client-users~1{userId}/delete) to other accounts before deleting.", "parameters": [{"name": "userId", "in": "path", "required": true, "description": "User's ID.", "schema": {"type": "integer"}}], "responses": {"200": {"description": "User has been successfully deleted."}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "You do not have permission to perform this action.", "content": {"application/json": {"schema": {"anyOf": [{"title": "The specified user has access to multiple accounts.", "type": "object", "properties": {"errors": {"type": "object", "description": "The specified user has access to multiple accounts. Please [revoke access](#tag/Users/paths/~1clients~1{clientId}~1client-users~1{userId}/delete) to other accounts before deleting."}}, "example": {"message": "Cannot delete user with multiple accounts.\nUse /clients/:client_id/client-users/:user_id to delete the user from a specific account.\n"}}, {"title": "The specified user has API tokens.", "type": "object", "properties": {"message": {"type": "string", "description": "The specified user has API tokens.\nPlease [delete API tokens](DELETE /clients/{clientId}/tokens/{tokenId}) before the user deleting."}}, "example": {"message": "You can't remove the user as they have active tokens"}}]}}}}, "404": {"description": "User not found."}}}
  "/iam/auth/jwt/clients/{clientId}/admin_token":
    "get": {"tags": ["IAM Reseller Account"], "summary": "Get client's token", "description": "Get the token of a user with administrative privileges to the given client.\nTo manage client's account, add the access token after\nBearer in the authorization header like described in [Authentication section](#section/Authentication).", "parameters": [{"name": "clientId", "in": "path", "required": true, "description": "Account ID.", "schema": {"type": "integer"}}], "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "properties": {"refresh": {"type": "string", "description": "Use this token to refresh the access token via\n[`/auth/jwt/refresh`](POST /auth/jwt/refresh) method.", "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTYwMTcwNzA5MiwianRpIjoiMGFmOGU3NTMzYWEyNDM0YmI4M2NmMjA1ZWM2NTMwZjQiLCJ1c2VyX2lkIjo1LCJ1c2VyX3R5cGUiOiJjb21tb24iLCJ1c2VyX2dyb3VwcyI6WyJBZG1pbmlzdHJhdG9ycyJdLCJjbGllbnRfaWQiOjIsImVtYWlsIjoidGVzdHVzZXJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyQGV4YW1wbGUuY29tIiwic3NvX2VudGl0eSI6bnVsbCwiaXNfYWRtaW4iOmZhbHNlLCJjbGllbnRfbmFtZSI6IlRlc3QgQ29tcGFueSIsImV4Y2hhbmdlYWJsZSI6dHJ1ZX0.C-RuHDWLpu1bd0_SoZgbkqSqA65egSBigKikeEKXkdK-PRVx4ZUIMdkJd-L4ebeydDHgeq3AwXbDBSqPuXZMTKTFKe1HTvpLycTNkTKa-dp9nTq0VwfUlf3G7QajEJA1UiQ7IhSDZJK5NBkEzs_-PFtPOQjeE2u2AbKKJ_SK3hNi1BVU3uVjfWsMVwGDkVnPIa0aLtYDTYd2QKN5InBGh06XITFD_P_IETfwhw7yG4PvLWGejGQO9jJx1ViFYCQi-O8vLR9-mjwaD8Ngc5O8v3mnzRkkxeWoukSW1p8eWiGf7QaLg-zSI6pNFO3_LO-ILHcJ394GJzW2rSpaAgvxwRHDIulDxJtAbqyxykLgnDSHUZbKq8mgQqkeshbmQ-BUT_nkYj1LcQisNTGp4QsDRdi095QQIXLntJiGC59BxpZQ5y3j67AZHG9qiVuHQSlHBaQKBAFdA_d7CRqV7TzsT4p3cHVXF_VccBM06pItkYYY5Xj0bQPU6qWf26bONnYh1FHOlaejw2mGc_FsPpi0soGUh-1v_Qs6C4N086VJ5uYSHw_M3MNcGBjAahnUdrKNX_8gmbTDwYNw7h1ELPYfBAFeQJrdTOOQPfUHzkt9g67DHdxRDHMQxz933Wxmfl_5fiHWoWE82n5ZA110BZB9JQoP7Tqtg4qIZoE1M6Knh14"}, "access": {"type": "string", "description": "Use this token to access API.", "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjAxNjI0MjkyLCJqdGkiOiI0Mjk1ZjZhMjI4ZTE0MmE3YjA1ZmIxYjE5MjlhZjZlYyIsInVzZXJfaWQiOjUsInVzZXJfdHlwZSI6ImNvbW1vbiIsInVzZXJfZ3JvdXBzIjpbIkFkbWluaXN0cmF0b3JzIl0sImNsaWVudF9pZCI6MiwiZW1haWwiOiJ0ZXN0dXNlckBleGFtcGxlLmNvbSIsInVzZXJuYW1lIjoidGVzdHVzZXJAZXhhbXBsZS5jb20iLCJzc29fZW50aXR5IjpudWxsLCJpc19hZG1pbiI6ZmFsc2UsImNsaWVudF9uYW1lIjoiVGVzdCBDb21wYW55IiwiZXhjaGFuZ2VhYmxlIjp0cnVlLCJyanRpIjoiMGFmOGU3NTMzYWEyNDM0YmI4M2NmMjA1ZWM2NTMwZjQifQ.aJjVE3_mC8fimclIPggD0ynh0EIwO8kCEffhFN4CxbaDBGz4R2Xn2mJQqhsRB2YoDCx_oH3uLii6aM_6OQtc2DbIElfN1KHoQmzzEjxKKXlgTOF_gsq9dVwQ9hajeOsQu5ly1rMk41WW1LrQ6Nkb_v6LC8g57Ah4h2pGot44h87BDsG6uUyMFVV3ZTJjkVNWJxceljFeDPO5rhx-ujtkX5iYwAeVh6HAq3I4Sw7OO5LZHF9pnhNBJVRNu8HlBNyk5UVB7uyStc9vjAnjGJyqc4yWL3QVTz7BMtvXX19W6sypl_YQiYzz5dsOiL4dzsI5RERBVt9DtOytSqDNigF_WTVUn0VsmXEK1oDGb8I2AWuAmiKYxizKY2JEOHoUz7B1L87fiPg5fNlv3QDrFJhuy1M6A-72jL1-N4tCGhUCQubvZEv90JshAhc6A5W88ghtjS_W80xt63gpvK81vE9b3coutIBnh-yvzEwTvudm3YKTnRrNBxRT01tdiJVEKoJ1poST0BxzxtGAvW_JgASTcOqQcFR6-Rr5smDSOki_mKVqODbRgcAj7CeNOvrwDZqC2XlQkTLvlo6msNvyVQH8vugRzPsbZK7F3pCvOEB5ub2WY6a1ui7lm-mAVyAs1VbzCHEnLu5GiXmyNE-mlNXQlAS1xz5P751rANnwODJJFz0"}}}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "You do not have permission to perform this action."}, "404": {"description": "Resource not found."}}}
  "/iam/auth/jwt/users/{userId}/token":
    "get": {"tags": ["IAM Reseller Account"], "summary": "Get user's token", "description": "Get the token of a user.\nTo manage user's account, add the access token after\nBearer in the authorization header like described in [Authentication section](#section/Authentication).", "parameters": [{"name": "userId", "in": "path", "description": "Numeric ID of the user.", "required": true, "schema": {"type": "integer"}}], "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "properties": {"refresh": {"type": "string", "description": "Use this token to refresh the access token via\n[`/auth/jwt/refresh`](POST /auth/jwt/refresh) method.", "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTYwMTcwNzA5MiwianRpIjoiMGFmOGU3NTMzYWEyNDM0YmI4M2NmMjA1ZWM2NTMwZjQiLCJ1c2VyX2lkIjo1LCJ1c2VyX3R5cGUiOiJjb21tb24iLCJ1c2VyX2dyb3VwcyI6WyJBZG1pbmlzdHJhdG9ycyJdLCJjbGllbnRfaWQiOjIsImVtYWlsIjoidGVzdHVzZXJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyQGV4YW1wbGUuY29tIiwic3NvX2VudGl0eSI6bnVsbCwiaXNfYWRtaW4iOmZhbHNlLCJjbGllbnRfbmFtZSI6IlRlc3QgQ29tcGFueSIsImV4Y2hhbmdlYWJsZSI6dHJ1ZX0.C-RuHDWLpu1bd0_SoZgbkqSqA65egSBigKikeEKXkdK-PRVx4ZUIMdkJd-L4ebeydDHgeq3AwXbDBSqPuXZMTKTFKe1HTvpLycTNkTKa-dp9nTq0VwfUlf3G7QajEJA1UiQ7IhSDZJK5NBkEzs_-PFtPOQjeE2u2AbKKJ_SK3hNi1BVU3uVjfWsMVwGDkVnPIa0aLtYDTYd2QKN5InBGh06XITFD_P_IETfwhw7yG4PvLWGejGQO9jJx1ViFYCQi-O8vLR9-mjwaD8Ngc5O8v3mnzRkkxeWoukSW1p8eWiGf7QaLg-zSI6pNFO3_LO-ILHcJ394GJzW2rSpaAgvxwRHDIulDxJtAbqyxykLgnDSHUZbKq8mgQqkeshbmQ-BUT_nkYj1LcQisNTGp4QsDRdi095QQIXLntJiGC59BxpZQ5y3j67AZHG9qiVuHQSlHBaQKBAFdA_d7CRqV7TzsT4p3cHVXF_VccBM06pItkYYY5Xj0bQPU6qWf26bONnYh1FHOlaejw2mGc_FsPpi0soGUh-1v_Qs6C4N086VJ5uYSHw_M3MNcGBjAahnUdrKNX_8gmbTDwYNw7h1ELPYfBAFeQJrdTOOQPfUHzkt9g67DHdxRDHMQxz933Wxmfl_5fiHWoWE82n5ZA110BZB9JQoP7Tqtg4qIZoE1M6Knh14"}, "access": {"type": "string", "description": "Use this token to access API.", "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjAxNjI0MjkyLCJqdGkiOiI0Mjk1ZjZhMjI4ZTE0MmE3YjA1ZmIxYjE5MjlhZjZlYyIsInVzZXJfaWQiOjUsInVzZXJfdHlwZSI6ImNvbW1vbiIsInVzZXJfZ3JvdXBzIjpbIkFkbWluaXN0cmF0b3JzIl0sImNsaWVudF9pZCI6MiwiZW1haWwiOiJ0ZXN0dXNlckBleGFtcGxlLmNvbSIsInVzZXJuYW1lIjoidGVzdHVzZXJAZXhhbXBsZS5jb20iLCJzc29fZW50aXR5IjpudWxsLCJpc19hZG1pbiI6ZmFsc2UsImNsaWVudF9uYW1lIjoiVGVzdCBDb21wYW55IiwiZXhjaGFuZ2VhYmxlIjp0cnVlLCJyanRpIjoiMGFmOGU3NTMzYWEyNDM0YmI4M2NmMjA1ZWM2NTMwZjQifQ.aJjVE3_mC8fimclIPggD0ynh0EIwO8kCEffhFN4CxbaDBGz4R2Xn2mJQqhsRB2YoDCx_oH3uLii6aM_6OQtc2DbIElfN1KHoQmzzEjxKKXlgTOF_gsq9dVwQ9hajeOsQu5ly1rMk41WW1LrQ6Nkb_v6LC8g57Ah4h2pGot44h87BDsG6uUyMFVV3ZTJjkVNWJxceljFeDPO5rhx-ujtkX5iYwAeVh6HAq3I4Sw7OO5LZHF9pnhNBJVRNu8HlBNyk5UVB7uyStc9vjAnjGJyqc4yWL3QVTz7BMtvXX19W6sypl_YQiYzz5dsOiL4dzsI5RERBVt9DtOytSqDNigF_WTVUn0VsmXEK1oDGb8I2AWuAmiKYxizKY2JEOHoUz7B1L87fiPg5fNlv3QDrFJhuy1M6A-72jL1-N4tCGhUCQubvZEv90JshAhc6A5W88ghtjS_W80xt63gpvK81vE9b3coutIBnh-yvzEwTvudm3YKTnRrNBxRT01tdiJVEKoJ1poST0BxzxtGAvW_JgASTcOqQcFR6-Rr5smDSOki_mKVqODbRgcAj7CeNOvrwDZqC2XlQkTLvlo6msNvyVQH8vugRzPsbZK7F3pCvOEB5ub2WY6a1ui7lm-mAVyAs1VbzCHEnLu5GiXmyNE-mlNXQlAS1xz5P751rANnwODJJFz0"}}}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "You do not have permission to perform this action."}, "404": {"description": "Resource not found."}}}
  "/iam/auth/renew_invitation":
    "post": {"tags": ["IAM Reseller Account"], "summary": "Resend invitation", "description": "Resend the activation link to email address.", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": ["email"], "properties": {"email": {"type": "string", "format": "email", "description": "User's email address."}}}}}}, "responses": {"200": {"description": "OK."}, "400": {"description": "Bad request.", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"type": "object", "title": "User related errors", "properties": {"message": {"type": "string", "enum": ["This user already activated."]}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "User with given email not found."}}}
  "/iam/auth/reset_password":
    "post": {"tags": ["IAM Reseller Account"], "summary": "Reset password", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": ["email"], "properties": {"email": {"type": "string", "format": "email", "description": "User's email address."}}}}}}, "responses": {"200": {"description": "OK."}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "404": {"description": "User with given email not found."}}}
  "/iam/activity_log/account_status_changes":
    "get": {"tags": ["IAM Reseller Account"], "summary": "Account Status Changes", "description": "Information about the account's changes.", "parameters": [{"name": "limit", "in": "query", "description": "The maximum number of items.", "schema": {"type": "integer", "x-stainless-skip": ["terraform"]}}, {"name": "offset", "in": "query", "description": "Offset relative to the beginning of list.", "schema": {"type": "integer"}}], "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "properties": {"count": {"type": "number", "description": "Total number of users"}, "next": {"type": "string", "description": "URL to the next users slice", "example": "/activity_log/account_status_changes?offset=20&limit=10"}, "previous": {"type": "string", "description": "URL to the previous users slice", "example": "/activity_log/account_status_changes?offset=10&limit=10"}, "result": {"items": {"type": "object", "properties": {"id": {"type": "integer", "description": "ID.", "example": 123456}, "status_change_at": {"type": "string", "description": "ISO 8086/RFC 3339 format", "example": "2024-11-13 15:23:30+00:00"}, "old_status": {"type": "string", "description": "Old account status", "example": "status"}, "new_status": {"type": "string", "description": "New account status", "example": "status"}, "federation_id": {"type": "string", "description": "Account federation", "example": "GCL"}, "client": {"type": "integer", "description": "The account ID.", "example": 123456}}}}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "You do not have permission to perform this action."}}}
  "/iam/activity_log/requests":
    "get": {"tags": ["IAM Reseller Account"], "summary": "Account Requests", "description": "Information about the account's requests.", "parameters": [{"name": "limit", "in": "query", "description": "The maximum number of items.", "schema": {"type": "integer", "x-stainless-skip": ["terraform"]}}, {"name": "offset", "in": "query", "description": "Offset relative to the beginning of list.", "schema": {"type": "integer"}}], "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "properties": {"count": {"type": "number", "description": "Total number of users"}, "next": {"type": "string", "description": "URL to the next users slice", "example": "/activity_log/requests?offset=20&limit=10"}, "previous": {"type": "string", "description": "URL to the previous users slice", "example": "/activity_log/requests?offset=10&limit=10"}, "result": {"items": {"type": "object", "properties": {"id": {"type": "integer", "description": "ID.", "example": 123456}, "actions": {"type": "string", "description": "Actions type", "example": "2024-11-13 15:23:30+00:00"}, "data": {"type": "string", "description": "Request body", "example": "string"}, "user_email": {"type": "string", "description": "User Email", "example": "some@email.com"}, "client": {"type": "integer", "description": "Account ID.", "example": 123456}, "token": {"type": "integer", "description": "Token ID.", "example": 123456}, "requested_at": {"type": "string", "description": "DateTime of request", "example": "2024-11-13 15:23:30+00:00"}, "path": {"type": "string", "description": "Request path", "example": "/users"}, "remote_ip_address": {"type": "string", "description": "IP Address", "example": "192.168.1.1"}, "host": {"type": "string", "description": "Host", "example": "example.com"}, "method": {"type": "string", "description": "Request method", "example": "GET"}, "query_params": {"type": "string", "description": "Request query params", "example": "offset=20&limit=10"}, "status_code": {"type": "integer", "description": "Request status", "example": 200}, "reverted": {"type": "boolean", "description": "Request request", "example": true}, "user": {"type": "integer", "description": "User ID", "example": 123456}}}}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "You do not have permission to perform this action."}}}
  "/iam/activity_log/requests/{id}":
    "get": {"tags": ["IAM Reseller Account"], "summary": "Account Request Detail", "description": "Information about the account's request detail.", "parameters": [{"name": "requestId", "in": "path", "required": true, "description": "Request ID.", "schema": {"type": "integer"}}], "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "ID.", "example": 123456}, "actions": {"type": "string", "description": "Actions type", "example": "2024-11-13 15:23:30+00:00"}, "data": {"type": "string", "description": "Request body", "example": "string"}, "user_email": {"type": "string", "description": "User Email", "example": "some@email.com"}, "client": {"type": "integer", "description": "Account ID.", "example": 123456}, "token": {"type": "integer", "description": "Token ID.", "example": 123456}, "requested_at": {"type": "string", "description": "DateTime of request", "example": "2024-11-13 15:23:30+00:00"}, "path": {"type": "string", "description": "Request path", "example": "/users"}, "remote_ip_address": {"type": "string", "description": "IP Address", "example": "192.168.1.1"}, "host": {"type": "string", "description": "Host", "example": "example.com"}, "method": {"type": "string", "description": "Request method", "example": "GET"}, "query_params": {"type": "string", "description": "Request query params", "example": "offset=20&limit=10"}, "status_code": {"type": "integer", "description": "Request status", "example": 200}, "reverted": {"type": "boolean", "description": "Request request", "example": true}, "user": {"type": "integer", "description": "User ID", "example": 123456}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "You do not have permission to perform this action."}, "404": {"description": "Not found."}}}
  "/iam/clients/{clientId}/client-users/create":
    "post": {"tags": ["IAM Reseller Users"], "summary": "Create client users", "description": "Create client users, this endpoint is enabled for each reseller manually by request", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name.", "nullable": true}, "username": {"type": "string", "format": "email", "description": "User's email address."}, "password": {"type": "string", "description": "User's password.", "format": "password"}, "user_role": {"type": "object", "description": "User's group.", "properties": {"user_role": {"type": "object", "properties": {"id": {"type": "integer", "example": 1, "description": "Group's ID: Possible values are:   \n\n* 1 - Administrators* 2 - Users* 5 - Engineers* 3009 - Purge and Prefetch only (API+Web)* 3022 - Purge and Prefetch only (API)"}, "name": {"type": "string", "example": "Administrators", "description": "Group's name.", "enum": ["Users", "Administrators", "Engineers", "Purge and Prefetch only (API)", "Purge and Prefetch only (API+Web)"]}}}}}}}}}}, "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name.", "nullable": true}, "username": {"type": "string", "format": "email", "description": "User's email address."}, "user_role": {"type": "object", "description": "User's group.", "properties": {"user_role": {"type": "object", "properties": {"id": {"type": "integer", "example": 1, "description": "Group's ID: Possible values are:   \n\n* 1 - Administrators* 2 - Users* 5 - Engineers* 3009 - Purge and Prefetch only (API+Web)* 3022 - Purge and Prefetch only (API)"}, "name": {"type": "string", "example": "Administrators", "description": "Group's name.", "enum": ["Users", "Administrators", "Engineers", "Purge and Prefetch only (API)", "Purge and Prefetch only (API+Web)"]}}}}}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "Resource not found."}, "404": {"description": "Resource not found."}}}
  "/iam/clients":
    "get": {"tags": ["IAM Reseller Clients"], "summary": "Get clients", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"anyOf": ["allOf": [{"type": "array", "description": "Simple array without pagination", "items": {"type": "object"}}, "items": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "The account ID."}, "users": {"type": "array", "description": "List of account users.", "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "User's ID.", "readOnly": true}, "email": {"type": "string", "format": "email", "description": "User's email address."}, "name": {"type": "string", "description": "User's name.", "nullable": true}, "lang": {"type": "string", "description": "User's language.\nDefines language of the control panel and email messages.", "enum": ["de", "en", "ru", "zh", "az"]}, "phone": {"type": "string", "description": "User's phone.", "nullable": true}, "company": {"type": "string", "description": "User's company."}, "reseller": {"type": "integer", "description": "Services provider ID.", "readOnly": true}, "client": {"type": "number", "description": "User's account ID.", "readOnly": true}, "deleted": {"type": "boolean", "description": "Deletion flag. If `true` then user was deleted.", "readOnly": true}, "groups": {"type": "array", "description": "User's group in the current account.\nIAM supports 5 groups:\n- Users\n- Administrators\n- Engineers\n- Purge and Prefetch only (API)\n- Purge and Prefetch only (API+Web)", "items": {"type": "object", "properties": {"id": {"type": "integer", "example": 1, "description": "Group's ID: Possible values are:   \n\n* 1 - Administrators* 2 - Users* 5 - Engineers* 3009 - Purge and Prefetch only (API+Web)* 3022 - Purge and Prefetch only (API)"}, "name": {"type": "string", "example": "Administrators", "description": "Group's name.", "enum": ["Users", "Administrators", "Engineers", "Purge and Prefetch only (API)", "Purge and Prefetch only (API+Web)"]}}}}, "activated": {"type": "boolean", "description": "Email confirmation:\n- `true` – user confirmed the email;\n- `false` – user did not confirm the email.", "readOnly": true}, "sso_auth": {"type": "boolean", "description": "SSO authentication flag. If `true` then user can login via SAML SSO.", "readOnly": true}, "two_fa": {"type": "boolean", "description": "Two-step verification:\n- `true` – user enabled two-step verification;\n- `false` – user disabled two-step verification.", "readOnly": true}, "auth_types": {"type": "array", "items": {"type": "string", "description": "Auth types.", "enum": ["password", "sso", "github", "google-oauth2"]}, "description": "System field. List of auth types available for the account."}}}}, "email": {"type": "string", "format": "email", "description": "The account email."}, "phone": {"type": "string", "description": "Phone of a user who registered the requested account.", "nullable": true}, "name": {"type": "string", "description": "Name of a user who registered the requested account.", "nullable": true}, "status": {"type": "string", "description": "Status of the account.", "enum": ["new", "trial", "trialend", "active", "integration", "paused", "preparation", "ready"]}, "companyName": {"type": "string", "description": "The company name."}, "website": {"type": "string", "description": "The company website."}, "currentUser": {"type": "integer", "description": "ID of the current user."}, "capabilities": {"type": "array", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, "description": "System field. List of services available for the account."}, "serviceStatuses": {"type": "object", "description": "An object of arrays which contains information about all services available for the requested account.", "properties": {"CDN": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean",
                                          "description": "`true` - service is available in the Control Panel."}}}, "CLOUD": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "DDOS": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "DNS": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "STORAGE": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "STREAMING": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}}}, "paidFeatures": {"type": "object", "description": "An object of arrays which contains information about paid features available for the requested account.", "properties": {"CDN": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "CLOUD": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DDOS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DNS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": [
                                                  "CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STORAGE": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STREAMING": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}}, "example": {"CDN": [{"feature_id": 1, "name": "paid feature name", "service": "CDN"}], "STREAMING": [{"feature_id": 2, "name": "another paid feature name", "service": "STREAMING"}]}}, "freeFeatures": {"type": "object", "description": "An object of arrays which contains information about free features available for the requested account.", "properties": {"CDN": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "CLOUD": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DDOS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DNS": {"type": "array",
                                      "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STORAGE": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STREAMING": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}}, "example": {"CDN": [{"feature_id": 1, "name": "free feature name", "service": "CDN"}], "STREAMING": [{"feature_id": 2, "name": "another free feature name", "service": "STREAMING"}]}}, "entryBaseDomain": {"type": "string", "nullable": true, "description": "System field. Control panel domain."}, "signup_process": {"type": "string", "nullable": true, "description": "System field. Type of the account registration process.", "enum": ["sign_up_full", "sign_up_simple"]}, "deleted": {"type": "boolean", "description": "The field shows the status of the account:\n- `true` – the account has been deleted\n- `false` – the account is not deleted", "readOnly": true}, "bill_type": {"type": "string", "description": "System field. Billing type of the account."}, "custom_id": {"type": "string", "nullable": true, "description": "The account custom ID."}, "country_code": {"type": "string", "description": "System field. The company country (ISO 3166-1 alpha-2 format)."}, "is_test": {"type": "boolean", "description": "System field:\n- `true` — a test account;\n- `false` — a production account."}, "has_active_admin": {"type": "boolean", "description": "System field."}}}, {"type": "object", "properties": {"seller": {"type": "integer", "nullable": true, "description": "ID of the Seller."}, "resellers": {"type": "integer", "description": "ID of the Reseller."}, "client_type": {"type": "string", "description": "Client's type.", "enum": ["common", "reseller", "sales"]}, "owner": {"type": "number", "description": "Id of the user, who created client."}}}]}], "allOf": [{"type": "object", "properties": {"count": {"type": "number", "description": "Total number of users"}, "next": {"type": "string", "description": "URL to the next users slice", "example": "/users?offset=20&limit=10"}, "previous": {"type": "string", "description": "URL to the previous users slice", "example": "/users?offset=10&limit=10"}, "results": {"type": "array", "items": {"type": "object"}}}}, {"type": "object", "properties": {"results": {"type": "array", "items": {"allOf": [{"type": "object", "properties": {"id": {
                                      "type": "integer", "description": "The account ID."}, "users": {"type": "array", "description": "List of account users.", "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "User's ID.", "readOnly": true}, "email": {"type": "string", "format": "email", "description": "User's email address."}, "name": {"type": "string", "description": "User's name.", "nullable": true}, "lang": {"type": "string", "description": "User's language.\nDefines language of the control panel and email messages.", "enum": ["de", "en", "ru", "zh", "az"]}, "phone": {"type": "string", "description": "User's phone.", "nullable": true}, "company": {"type": "string", "description": "User's company."}, "reseller": {"type": "integer", "description": "Services provider ID.", "readOnly": true}, "client": {"type": "number", "description": "User's account ID.", "readOnly": true}, "deleted": {"type": "boolean", "description": "Deletion flag. If `true` then user was deleted.", "readOnly": true}, "groups": {"type": "array", "description": "User's group in the current account.\nIAM supports 5 groups:\n- Users\n- Administrators\n- Engineers\n- Purge and Prefetch only (API)\n- Purge and Prefetch only (API+Web)", "items": {"type": "object", "properties": {"id": {"type": "integer", "example": 1, "description": "Group's ID: Possible values are:   \n\n* 1 - Administrators* 2 - Users* 5 - Engineers* 3009 - Purge and Prefetch only (API+Web)* 3022 - Purge and Prefetch only (API)"}, "name": {"type": "string", "example": "Administrators", "description": "Group's name.", "enum": ["Users", "Administrators", "Engineers", "Purge and Prefetch only (API)", "Purge and Prefetch only (API+Web)"]}}}}, "activated": {"type": "boolean", "description": "Email confirmation:\n- `true` – user confirmed the email;\n- `false` – user did not confirm the email.", "readOnly": true}, "sso_auth": {"type": "boolean", "description": "SSO authentication flag. If `true` then user can login via SAML SSO.", "readOnly": true}, "two_fa": {"type": "boolean", "description": "Two-step verification:\n- `true` – user enabled two-step verification;\n- `false` – user disabled two-step verification.", "readOnly": true}, "auth_types": {"type": "array", "items": {"type": "string", "description": "Auth types.", "enum": ["password", "sso", "github", "google-oauth2"]}, "description": "System field. List of auth types available for the account."}}}}, "email": {"type": "string", "format": "email", "description": "The account email."}, "phone": {"type": "string", "description": "Phone of a user who registered the requested account.", "nullable": true}, "name": {"type": "string", "description": "Name of a user who registered the requested account.", "nullable": true}, "status": {"type": "string", "description": "Status of the account.", "enum": ["new", "trial", "trialend", "active", "integration", "paused", "preparation", "ready"]}, "companyName": {"type": "string", "description": "The company name."}, "website": {"type": "string", "description": "The company website."}, "currentUser": {"type": "integer", "description": "ID of the current user."}, "capabilities": {"type": "array", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, "description": "System field. List of services available for the account."}, "serviceStatuses": {"type": "object", "description": "An object of arrays which contains information about all services available for the requested account.", "properties": {"CDN": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "CLOUD": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean",
                                              "description": "`true` - service is available in the Control Panel."}}}, "DDOS": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "DNS": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "STORAGE": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "STREAMING": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}}}, "paidFeatures": {"type": "object", "description": "An object of arrays which contains information about paid features available for the requested account.", "properties": {"CDN": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "CLOUD": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DDOS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DNS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal
                                                  feature activation ID."}}}}, "STORAGE": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STREAMING": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}}, "example": {"CDN": [{"feature_id": 1, "name": "paid feature name", "service": "CDN"}], "STREAMING": [{"feature_id": 2, "name": "another paid feature name", "service": "STREAMING"}]}}, "freeFeatures": {"type": "object", "description": "An object of arrays which contains information about free features available for the requested account.", "properties": {"CDN": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "CLOUD": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DDOS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DNS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING",
                                                      "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STORAGE": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STREAMING": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}}, "example": {"CDN": [{"feature_id": 1, "name": "free feature name", "service": "CDN"}], "STREAMING": [{"feature_id": 2, "name": "another free feature name", "service": "STREAMING"}]}}, "entryBaseDomain": {"type": "string", "nullable": true, "description": "System field. Control panel domain."}, "signup_process": {"type": "string", "nullable": true, "description": "System field. Type of the account registration process.", "enum": ["sign_up_full", "sign_up_simple"]}, "deleted": {"type": "boolean", "description": "The field shows the status of the account:\n- `true` – the account has been deleted\n- `false` – the account is not deleted", "readOnly": true}, "bill_type": {"type": "string", "description": "System field. Billing type of the account."}, "custom_id": {"type": "string", "nullable": true, "description": "The account custom ID."}, "country_code": {"type": "string", "description": "System field. The company country (ISO 3166-1 alpha-2 format)."}, "is_test": {"type": "boolean", "description": "System field:\n- `true` — a test account;\n- `false` — a production account."}, "has_active_admin": {"type": "boolean", "description": "System field."}}}, {"type": "object", "properties": {"seller": {"type": "integer", "nullable": true, "description": "ID of the Seller."}, "resellers": {"type": "integer", "description": "ID of the Reseller."}, "client_type": {"type": "string", "description": "Client's type.", "enum": ["common", "reseller", "sales"]}, "owner": {"type": "number", "description": "Id of the user, who created client."}}}]}}}}]]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}}, "parameters": [{"name": "limit", "in": "query", "description": "The maximum number of items.", "schema": {"type": "integer", "x-stainless-skip": ["terraform"]}}, {"name": "offset", "in": "query", "description": "Offset relative to the beginning of list.", "schema": {"type": "integer"}}, {"name": "ordering", "in": "query", "description": "The parameter using for sorting data.\nDefault sort order is ascending. Put `-` before value for descending sort order: `-id`.\nFor sorting by multiple parameters write them as comma separated string: `id,-status`.\n- `id` sort by client's ID.\n- `email` sort by client's email.\n- `name` sort by client's name.\n- `status` sort by client's status.\n- `companyName` sort by client's
            company name.\n- `created_at` sort by client's created datetime.\nUse comma separated string for multiple-field sorting.", "schema": {"type": "string", "example": "email,-created"}}, {"name": "email", "in": "query", "description": "Filter byemail address.", "schema": {"type": "string", "format": "email"}}, {"name": "companyName", "in": "query", "description": "Filter by client's company name.", "schema": {"type": "string"}}, {"name": "name", "in": "query", "description": "Filter by client's name.", "schema": {"type": "string"}}, {"name": "deleted", "in": "query", "description": "Filter by status of deletion:\n- `true` — only deleted;\n- `false` — only non-deleted clients;\n- other value — return all.", "schema": {"type": "string", "enum": [true, false]}}, {"name": "reseller_id", "in": "query", "description": "Filter by reseller ID.", "schema": {"type": "integer"}}, {"name": "seller_id", "in": "query", "description": "Filter by seller ID.", "schema": {"type": "integer"}}, {"name": "custom_id", "in": "query", "description": "Filter by client's custom ID.", "schema": {"type": "string"}}, {"name": "cdn", "in": "query", "description": "Filter by CDN service status.", "schema": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}}, {"name": "storage", "in": "query", "description": "Filter by Storage service status.", "schema": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}}, {"name": "ddos", "in": "query", "description": "Filter by DDOS service status.", "schema": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}}, {"name": "dns", "in": "query", "description": "Filter by DNS service status.", "schema": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}}, {"name": "cloud", "in": "query", "description": "Filter by CLOUD service status.", "schema": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}}, {"name": "infrastructure_protection", "in": "query", "description": "Filter by Infrastructure Protection service status.", "schema": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}}, {"name": "connect", "in": "query", "description": "Filter by Connect service status.", "schema": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}}, {"name": "min_traffic", "in": "query", "description": "Filter by allowed traffic volume (GB).", "schema": {"type": "number"}}, {"name": "max_traffic", "in": "query", "description": "Filter by allowed traffic volume (GB).", "schema": {"type": "number"}}, {"name": "secondaryhostnames", "in": "query", "schema": {"type": "string"}, "description": "Filter by name of secondary hostnames."}, {"name": "activated", "in": "query", "description": "Filter by status of activation:\n- `true` - activated;\n- `false` - non-activated.", "schema": {"type": "string", "enum": [true, false]}}, {"name": "id__in__exclude", "in": "query", "description": "Exclude clients with these IDs.\nUse comma separated string for multiple values.", "schema": {"type": "string"}}, {"name": "bill_type", "in": "query", "description": "Filter by bill type.", "schema": {"type": "string"}}, {"name": "users_name", "in": "query", "description": "Filter by users name.", "schema": {"type": "string"}}, {"name": "users_email", "in": "query", "description": "Filter by users email.", "schema": {"type": "string"}}, {"name": "created_at_gte", "in": "query", "description": "Filter all client's that created after this date.", "schema": {"type": "string", "format": "date-time"}}, {"name": "created_at_lte", "in": "query",
          "description": "Filter all client's that created before this date.", "schema": {"type": "string", "format": "date-time"}}, {"name": "feature_id_in", "in": "query", "description": "Filter by feature ids.", "schema": {"type": "string"}}, {"name": "is_test", "in": "query", "description": "Filter test clients:\n- `true` - only test clients;\n- `false` - only non-test clients.", "schema": {"type": "string", "enum": [true, false]}}, {"name": "client_type", "in": "query", "description": "Filter by client's type.", "schema": {"type": "string", "enum": ["reseller", "sales", "common"]}}, {"name": "personal_product_availability", "in": "query", "description": "Filter clients with enabled personal availability on specific products.\nUse comma separated string for multiple values.", "schema": {"type": "string"}}, {"name": "promocode", "in": "query", "description": "Filter by promocode.", "schema": {"type": "string"}}, {"name": "country_code", "in": "query", "description": "Filter by country (ISO 3166-1 alpha-2 format).\n`null` - to get clients without country code.", "schema": {"type": "string"}}]}
  "/iam/clients/{clientId}":
    "get": {"tags": ["IAM Reseller Clients"], "summary": "Get client's details", "parameters": [{"name": "clientId", "in": "path", "required": true, "description": "Account ID.", "schema": {"type": "integer"}}], "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "The account ID."}, "users": {"type": "array", "description": "List of account users.", "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "User's ID.", "readOnly": true}, "email": {"type": "string", "format": "email", "description": "User's email address."}, "name": {"type": "string", "description": "User's name.", "nullable": true}, "lang": {"type": "string", "description": "User's language.\nDefines language of the control panel and email messages.", "enum": ["de", "en", "ru", "zh", "az"]}, "phone": {"type": "string", "description": "User's phone.", "nullable": true}, "company": {"type": "string", "description": "User's company."}, "reseller": {"type": "integer", "description": "Services provider ID.", "readOnly": true}, "client": {"type": "number", "description": "User's account ID.", "readOnly": true}, "deleted": {"type": "boolean", "description": "Deletion flag. If `true` then user was deleted.", "readOnly": true}, "groups": {"type": "array", "description": "User's group in the current account.\nIAM supports 5 groups:\n- Users\n- Administrators\n- Engineers\n- Purge and Prefetch only (API)\n- Purge and Prefetch only (API+Web)", "items": {"type": "object", "properties": {"id": {"type": "integer", "example": 1, "description": "Group's ID: Possible values are:   \n\n* 1 - Administrators* 2 - Users* 5 - Engineers* 3009 - Purge and Prefetch only (API+Web)* 3022 - Purge and Prefetch only (API)"}, "name": {"type": "string", "example": "Administrators", "description": "Group's name.", "enum": ["Users", "Administrators", "Engineers", "Purge and Prefetch only (API)", "Purge and Prefetch only (API+Web)"]}}}}, "activated": {"type": "boolean", "description": "Email confirmation:\n- `true` – user confirmed the email;\n- `false` – user did not confirm the email.", "readOnly": true}, "sso_auth": {"type": "boolean", "description": "SSO authentication flag. If `true` then user can login via SAML SSO.", "readOnly": true}, "two_fa": {"type": "boolean", "description": "Two-step verification:\n- `true` – user enabled two-step verification;\n- `false` – user disabled two-step verification.", "readOnly": true}, "auth_types": {"type": "array", "items": {"type": "string", "description": "Auth types.", "enum": ["password", "sso", "github", "google-oauth2"]}, "description": "System field. List of auth types available for the account."}}}}, "email": {"type": "string", "format": "email", "description": "The account email."}, "phone": {"type": "string", "description": "Phone of a user who registered the requested account.", "nullable": true}, "name": {"type": "string", "description": "Name of a user who registered the requested account.", "nullable": true}, "status": {"type": "string", "description": "Status of the account.", "enum": ["new", "trial", "trialend", "active", "integration", "paused", "preparation", "ready"]}, "companyName": {"type": "string", "description": "The company name."}, "website": {"type": "string", "description": "The company website."}, "currentUser": {"type": "integer", "description": "ID of the current user."}, "capabilities": {"type": "array", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, "description": "System field. List of services available for the account."}, "serviceStatuses": {"type": "object", "description": "An object of arrays which contains information about all services available for the requested account.", "properties": {"CDN": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {
                                "type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "CLOUD": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "DDOS": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "DNS": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "STORAGE": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "STREAMING": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}}}, "paidFeatures": {"type": "object", "description": "An object of arrays which contains information about paid features available for the requested account.", "properties": {"CDN": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "CLOUD": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DDOS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DNS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.",
                                      "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STORAGE": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STREAMING": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}}, "example": {"CDN": [{"feature_id": 1, "name": "paid feature name", "service": "CDN"}], "STREAMING": [{"feature_id": 2, "name": "another paid feature name", "service": "STREAMING"}]}}, "freeFeatures": {"type": "object", "description": "An object of arrays which contains information about free features available for the requested account.", "properties": {"CDN": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "CLOUD": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DDOS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DNS": {"type": "array", "items": {
                              "type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STORAGE": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STREAMING": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}}, "example": {"CDN": [{"feature_id": 1, "name": "free feature name", "service": "CDN"}], "STREAMING": [{"feature_id": 2, "name": "another free feature name", "service": "STREAMING"}]}}, "entryBaseDomain": {"type": "string", "nullable": true, "description": "System field. Control panel domain."}, "signup_process": {"type": "string", "nullable": true, "description": "System field. Type of the account registration process.", "enum": ["sign_up_full", "sign_up_simple"]}, "deleted": {"type": "boolean", "description": "The field shows the status of the account:\n- `true` – the account has been deleted\n- `false` – the account is not deleted", "readOnly": true}, "bill_type": {"type": "string", "description": "System field. Billing type of the account."}, "custom_id": {"type": "string", "nullable": true, "description": "The account custom ID."}, "country_code": {"type": "string", "description": "System field. The company country (ISO 3166-1 alpha-2 format)."}, "is_test": {"type": "boolean", "description": "System field:\n- `true` — a test account;\n- `false` — a production account."}, "has_active_admin": {"type": "boolean", "description": "System field."}}}, {"type": "object", "properties": {"seller": {"type": "integer", "nullable": true, "description": "ID of the Seller."}, "resellers": {"type": "integer", "description": "ID of the Reseller."}, "client_type": {"type": "string", "description": "Client's type.", "enum": ["common", "reseller", "sales"]}, "owner": {"type": "number", "description": "Id of the user, who created client."}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
    "patch": {"tags": ["IAM Reseller Clients"], "summary": "Update client's details", "parameters": [{"name": "clientId", "in": "path", "required": true, "description": "Account ID.", "schema": {"type": "integer"}}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"email": {"type": "string", "format": "email", "description": "The account email."}, "companyName": {"type": "string", "description": "The company name."}, "custom_id": {"type": "string", "nullable": true, "description": "The account custom ID."}, "name": {"type": "string", "description": "Name of a user who registered the requested account.", "nullable": true}, "phone": {"type": "string", "description": "Phone of a user who registered the requested account.", "nullable": true}, "reseller": {"type": "integer", "description": "ID of the Reseller."}, "seller": {"type": "integer", "nullable": true, "description": "ID of the Seller."}, "is_test": {"type": "boolean", "description": "System field:\n- `true` — a test account;\n- `false` — a production account."}}}}}}, "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "The account ID."}, "users": {"type": "array", "description": "List of account users.", "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "User's ID.", "readOnly": true}, "email": {"type": "string", "format": "email", "description": "User's email address."}, "name": {"type": "string", "description": "User's name.", "nullable": true}, "lang": {"type": "string", "description": "User's language.\nDefines language of the control panel and email messages.", "enum": ["de", "en", "ru", "zh", "az"]}, "phone": {"type": "string", "description": "User's phone.", "nullable": true}, "company": {"type": "string", "description": "User's company."}, "reseller": {"type": "integer", "description": "Services provider ID.", "readOnly": true}, "client": {"type": "number", "description": "User's account ID.", "readOnly": true}, "deleted": {"type": "boolean", "description": "Deletion flag. If `true` then user was deleted.", "readOnly": true}, "groups": {"type": "array", "description": "User's group in the current account.\nIAM supports 5 groups:\n- Users\n- Administrators\n- Engineers\n- Purge and Prefetch only (API)\n- Purge and Prefetch only (API+Web)", "items": {"type": "object", "properties": {"id": {"type": "integer", "example": 1, "description": "Group's ID: Possible values are:   \n\n* 1 - Administrators* 2 - Users* 5 - Engineers* 3009 - Purge and Prefetch only (API+Web)* 3022 - Purge and Prefetch only (API)"}, "name": {"type": "string", "example": "Administrators", "description": "Group's name.", "enum": ["Users", "Administrators", "Engineers", "Purge and Prefetch only (API)", "Purge and Prefetch only (API+Web)"]}}}}, "activated": {"type": "boolean", "description": "Email confirmation:\n- `true` – user confirmed the email;\n- `false` – user did not confirm the email.", "readOnly": true}, "sso_auth": {"type": "boolean", "description": "SSO authentication flag. If `true` then user can login via SAML SSO.", "readOnly": true}, "two_fa": {"type": "boolean", "description": "Two-step verification:\n- `true` – user enabled two-step verification;\n- `false` – user disabled two-step verification.", "readOnly": true}, "auth_types": {"type": "array", "items": {"type": "string", "description": "Auth types.", "enum": ["password", "sso", "github", "google-oauth2"]}, "description": "System field. List of auth types available for the account."}}}}, "email": {"type": "string", "format": "email", "description": "The account email."}, "phone": {"type": "string", "description": "Phone of a user who registered the requested account.", "nullable": true}, "name": {"type": "string", "description": "Name of a user who registered the requested account.", "nullable": true}, "status": {"type": "string", "description": "Status of the account.", "enum": ["new", "trial", "trialend", "active", "integration",
                          "paused", "preparation", "ready"]}, "companyName": {"type": "string", "description": "The company name."}, "website": {"type": "string", "description": "The company website."}, "currentUser": {"type": "integer", "description": "ID of the current user."}, "capabilities": {"type": "array", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, "description": "System field. List of services available for the account."}, "serviceStatuses": {"type": "object", "description": "An object of arrays which contains information about all services available for the requested account.", "properties": {"CDN": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "CLOUD": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "DDOS": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "DNS": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "STORAGE": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}, "STREAMING": {"type": "object", "properties": {"status": {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}, "enabled": {"type": "boolean", "description": "`true` - service is available in the Control Panel."}}}}}, "paidFeatures": {"type": "object", "description": "An object of arrays which contains information about paid features available for the requested account.", "properties": {"CDN": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "CLOUD": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DDOS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {
                                "feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DNS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STORAGE": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STREAMING": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "paid_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}}, "example": {"CDN": [{"feature_id": 1, "name": "paid feature name", "service": "CDN"}], "STREAMING": [{"feature_id": 2, "name": "another paid feature name", "service": "STREAMING"}]}}, "freeFeatures": {"type": "object", "description": "An object of arrays which contains information about free features available for the requested account.", "properties": {"CDN": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "CLOUD": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date
                                    and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DDOS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "DNS": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STORAGE": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}, "STREAMING": {"type": "array", "items": {"type": "object", "description": "Feature object.", "properties": {"feature_id": {"type": "integer", "description": "Feature ID."}, "service": {"allOf": ["description": "Name of a service which the feature belongs to.", {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "name": {"type": "string", "description": "Name of the feature."}, "create_date": {"type": "string", "description": "Date and time when the feature was activated (ISO 8086/RFC 3339 format)."}, "free_feature_id": {"type": "integer", "description": "Internal feature activation ID."}}}}}, "example": {"CDN": [{"feature_id": 1, "name": "free feature name", "service": "CDN"}], "STREAMING": [{"feature_id": 2, "name": "another free feature name", "service": "STREAMING"}]}}, "entryBaseDomain": {"type": "string", "nullable": true, "description": "System field. Control panel domain."}, "signup_process": {"type": "string", "nullable": true, "description": "System field. Type of the account registration process.", "enum": ["sign_up_full", "sign_up_simple"]}, "deleted": {"type": "boolean", "description": "The field shows the status of the account:\n- `true` – the account has been deleted\n- `false` – the account is not deleted", "readOnly": true}, "bill_type": {"type": "string", "description": "System field. Billing type of the account."}, "custom_id": {"type": "string", "nullable": true, "description": "The account custom ID."}, "country_code": {"type": "string", "description": "System field. The company country (ISO 3166-1 alpha-2 format)."}, "is_test": {"type": "boolean", "description": "System field:\n- `true` — a test account;\n- `false` — a production account."}, "has_active_admin": {"type": "boolean", "description": "System field."}}}, {"type": "object", "properties": {"seller": {"type": "integer", "nullable": 
                          true, "description": "ID of the Seller."}, "resellers": {"type": "integer", "description": "ID of the Reseller."}, "client_type": {"type": "string", "description": "Client's type.", "enum": ["common", "reseller", "sales"]}, "owner": {"type": "number", "description": "Id of the user, who created client."}}}]}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
  "/iam/docs/platform/resellers":
    "get": {"tags": ["Other"], "summary": "Get HTTP API documentation", "description": "Returns this documentation as OpenAPI 3.0 yaml-document.", "responses": {"200": {"description": "OK."}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}}}
  "/iam/admin/sellers":
    "post": {"tags": ["Sellers"], "summary": "Create a new seller", "description": "Create a Seller account. Created Seller gets an email with an account activation link (stays active\nfor 24 hours). The link opens the password setup page. Once the password is set up, the Seller is\nredirected to the admin panel.", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": ["email", "full_name"], "properties": {"id": {"type": "integer", "description": "Seller's ID.", "readOnly": true}, "email": {"type": "string", "description": "Seller's email address.", "format": "email", "maxLength": 150}, "full_name": {"type": "string", "description": "Seller's full name.", "maxLength": 255}, "phone": {"type": "string", "description": "Seller's phone number.", "maxLength": 30, "pattern": "^[a-z0-9+\\-()#, *]*$"}, "reseller_name": {"type": "string", "readOnly": true, "description": "Seller's reseller's name."}, "company": {"type": "string", "readOnly": true, "description": "Seller's company."}, "date_joined": {"type": "string", "readOnly": true, "description": "Registration date."}, "activated": {"type": "boolean", "readOnly": true, "description": "Show the activation status of seller's account:\n- `true` – a seller has clicked on the activation link and has set up a password;\n- `false` – a seller hasn't clicked on the activation link."}, "deleted": {"type": "boolean", "readOnly": true, "description": "Show the deletion status of seller's account:\n- `true` – a seller has been deleted;\n- `false` – a seller is active."}}}}}}, "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "required": ["email", "full_name"], "properties": {"id": {"type": "integer", "description": "Seller's ID.", "readOnly": true}, "email": {"type": "string", "description": "Seller's email address.", "format": "email", "maxLength": 150}, "full_name": {"type": "string", "description": "Seller's full name.", "maxLength": 255}, "phone": {"type": "string", "description": "Seller's phone number.", "maxLength": 30, "pattern": "^[a-z0-9+\\-()#, *]*$"}, "reseller_name": {"type": "string", "readOnly": true, "description": "Seller's reseller's name."}, "company": {"type": "string", "readOnly": true, "description": "Seller's company."}, "date_joined": {"type": "string", "readOnly": true, "description": "Registration date."}, "activated": {"type": "boolean", "readOnly": true, "description": "Show the activation status of seller's account:\n- `true` – a seller has clicked on the activation link and has set up a password;\n- `false` – a seller hasn't clicked on the activation link."}, "deleted": {"type": "boolean", "readOnly": true, "description": "Show the deletion status of seller's account:\n- `true` – a seller has been deleted;\n- `false` – a seller is active."}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}}}
    "get": {"tags": ["Sellers"], "summary": "Get a list of sellers", "description": "Get a list of sellers.\nPass a value for the `limit` parameter in your request if you want retrieve a paginated result.\nOtherwise API returns a list with all users without pagination.\nYou can combine parameters for pagination, filtering and ordering. All parameters are independent.", "parameters": [{"name": "limit", "in": "query", "description": "The maximum number of items.", "schema": {"type": "integer", "x-stainless-skip": ["terraform"]}}, {"name": "offset", "in": "query", "description": "Offset relative to the beginning of list.", "schema": {"type": "integer"}}, {"name": "ordering", "in": "query", "description": "The parameter using for sorting data.\nDefault sort order is ascending. Put `-` before value for descending sort order: `-id`.\n- `id` - sort by seller's ID.\n- `email` - sort by seller's email.\n- `full_name` - sort by seller's full name.\n- `date_joined` - sort by seller's registration date.\n- `activated` - sort by activated field.\n- `deleted` - sort by deleted field.\nUse comma separated string for multiple-field sorting.", "schema": {"type": "string", "example": "activated,-date_joined"}}, {"name": "id", "in": "query", "description": "Filter by id.", "schema": {"type": "number", "example": 1}}, {"name": "id__in", "in": "query", "description": "Filter by id list.\nUse comma separated string for multiple values.", "schema": {"type": "string", "example": "1,2,3"}}, {"name": "id__contains", "in": "query", "description": "Filter by part of ID.", "schema": {"type": "string", "example": "22"}}, {"name": "email", "in": "query", "description": "Filter byemail address.", "schema": {"type": "string", "format": "email"}}, {"name": "full_name", "in": "query", "description": "Filter by full name.", "schema": {"type": "string"}}, {"name": "activated", "in": "query", "description": "Filter by status of activation:\n- `true` - activated;\n- `false` - non-activated.", "schema": {"type": "string", "enum": [true, false]}}, {"name": "deleted", "in": "query", "description": "Filter by status of deletion:\n- `true` — only deleted;\n- `false` — only non-deleted clients;\n- other value — return all.", "schema": {"type": "string", "enum": [true, false]}}, {"name": "reseller_name", "in": "query", "description": "Filter by reseller's name.", "schema": {"type": "string"}}], "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"anyOf": ["allOf": [{"type": "array", "description": "Simple array without pagination", "items": {"type": "object"}}, "items": {"type": "object", "required": ["email", "full_name"], "properties": {"id": {"type": "integer", "description": "Seller's ID.", "readOnly": true}, "email": {"type": "string", "description": "Seller's email address.", "format": "email", "maxLength": 150}, "full_name": {"type": "string", "description": "Seller's full name.", "maxLength": 255}, "phone": {"type": "string", "description": "Seller's phone number.", "maxLength": 30, "pattern": "^[a-z0-9+\\-()#, *]*$"}, "reseller_name": {"type": "string", "readOnly": true, "description": "Seller's reseller's name."}, "company": {"type": "string", "readOnly": true, "description": "Seller's company."}, "date_joined": {"type": "string", "readOnly": true, "description": "Registration date."}, "activated": {"type": "boolean", "readOnly": true, "description": "Show the activation status of seller's account:\n- `true` – a seller has clicked on the activation link and has set up a password;\n- `false` – a seller hasn't clicked on the activation link."}, "deleted": {"type": "boolean", "readOnly": true, "description": "Show the deletion status of seller's account:\n- `true` – a seller has been deleted;\n- `false` – a seller is active."}}}], "allOf": [{"type": "object", "properties": {"count": {"type": "number", "description": "Total number of users"}, "next": {"type": "string", "description": "URL to the next users slice", "example": "/users?offset=20&limit=10"}, "previous": {"type": "string", "description": "URL to the previous users
                              slice", "example": "/users?offset=10&limit=10"}, "results": {"type": "array", "items": {"type": "object"}}}}, {"type": "object", "properties": {"results": {"type": "array", "items": {"type": "object", "required": ["email", "full_name"], "properties": {"id": {"type": "integer", "description": "Seller's ID.", "readOnly": true}, "email": {"type": "string", "description": "Seller's email address.", "format": "email", "maxLength": 150}, "full_name": {"type": "string", "description": "Seller's full name.", "maxLength": 255}, "phone": {"type": "string", "description": "Seller's phone number.", "maxLength": 30, "pattern": "^[a-z0-9+\\-()#, *]*$"}, "reseller_name": {"type": "string", "readOnly": true, "description": "Seller's reseller's name."}, "company": {"type": "string", "readOnly": true, "description": "Seller's company."}, "date_joined": {"type": "string", "readOnly": true, "description": "Registration date."}, "activated": {"type": "boolean", "readOnly": true, "description": "Show the activation status of seller's account:\n- `true` – a seller has clicked on the activation link and has set up a password;\n- `false` – a seller hasn't clicked on the activation link."}, "deleted": {"type": "boolean", "readOnly": true, "description": "Show the deletion status of seller's account:\n- `true` – a seller has been deleted;\n- `false` – a seller is active."}}}}}}]]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}}}
  "/iam/admin/sellers/{sellerId}":
    "get": {"tags": ["Sellers"], "summary": "Get seller's details", "parameters": [{"name": "sellerId", "in": "path", "required": true, "description": "Seller's ID.", "schema": {"type": "integer"}}], "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "required": ["email", "full_name"], "properties": {"id": {"type": "integer", "description": "Seller's ID.", "readOnly": true}, "email": {"type": "string", "description": "Seller's email address.", "format": "email", "maxLength": 150}, "full_name": {"type": "string", "description": "Seller's full name.", "maxLength": 255}, "phone": {"type": "string", "description": "Seller's phone number.", "maxLength": 30, "pattern": "^[a-z0-9+\\-()#, *]*$"}, "reseller_name": {"type": "string", "readOnly": true, "description": "Seller's reseller's name."}, "company": {"type": "string", "readOnly": true, "description": "Seller's company."}, "date_joined": {"type": "string", "readOnly": true, "description": "Registration date."}, "activated": {"type": "boolean", "readOnly": true, "description": "Show the activation status of seller's account:\n- `true` – a seller has clicked on the activation link and has set up a password;\n- `false` – a seller hasn't clicked on the activation link."}, "deleted": {"type": "boolean", "readOnly": true, "description": "Show the deletion status of seller's account:\n- `true` – a seller has been deleted;\n- `false` – a seller is active."}}}}}}}}
    "patch": {"tags": ["Sellers"], "summary": "Update seller's details", "parameters": [{"name": "sellerId", "in": "path", "required": true, "description": "Seller's ID.", "schema": {"type": "integer"}}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": ["email", "full_name"], "properties": {"id": {"type": "integer", "description": "Seller's ID.", "readOnly": true}, "email": {"type": "string", "description": "Seller's email address.", "format": "email", "maxLength": 150}, "full_name": {"type": "string", "description": "Seller's full name.", "maxLength": 255}, "phone": {"type": "string", "description": "Seller's phone number.", "maxLength": 30, "pattern": "^[a-z0-9+\\-()#, *]*$"}, "reseller_name": {"type": "string", "readOnly": true, "description": "Seller's reseller's name."}, "company": {"type": "string", "readOnly": true, "description": "Seller's company."}, "date_joined": {"type": "string", "readOnly": true, "description": "Registration date."}, "activated": {"type": "boolean", "readOnly": true, "description": "Show the activation status of seller's account:\n- `true` – a seller has clicked on the activation link and has set up a password;\n- `false` – a seller hasn't clicked on the activation link."}, "deleted": {"type": "boolean", "readOnly": true, "description": "Show the deletion status of seller's account:\n- `true` – a seller has been deleted;\n- `false` – a seller is active."}}}}}}, "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "required": ["email", "full_name"], "properties": {"id": {"type": "integer", "description": "Seller's ID.", "readOnly": true}, "email": {"type": "string", "description": "Seller's email address.", "format": "email", "maxLength": 150}, "full_name": {"type": "string", "description": "Seller's full name.", "maxLength": 255}, "phone": {"type": "string", "description": "Seller's phone number.", "maxLength": 30, "pattern": "^[a-z0-9+\\-()#, *]*$"}, "reseller_name": {"type": "string", "readOnly": true, "description": "Seller's reseller's name."}, "company": {"type": "string", "readOnly": true, "description": "Seller's company."}, "date_joined": {"type": "string", "readOnly": true, "description": "Registration date."}, "activated": {"type": "boolean", "readOnly": true, "description": "Show the activation status of seller's account:\n- `true` – a seller has clicked on the activation link and has set up a password;\n- `false` – a seller hasn't clicked on the activation link."}, "deleted": {"type": "boolean", "readOnly": true, "description": "Show the deletion status of seller's account:\n- `true` – a seller has been deleted;\n- `false` – a seller is active."}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
    "delete": {"tags": ["Sellers"], "summary": "Delete a seller", "parameters": [{"name": "sellerId", "in": "path", "required": true, "description": "Seller's ID.", "schema": {"type": "integer"}}], "description": "Deletes a seller.\nSeller will be unassigned from all clients to which he was appointed. These clients will stay without seller.", "responses": {"204": {"description": "OK."}, "404": {"description": "Resource not found."}}}
  "/iam/products/availability/defaults":
    "get": {"tags": ["Products' availability"], "summary": "Get default availabilities", "description": "Get list of products that available to the clients by default.", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"allOf": [{"type": "array", "description": "Simple array without pagination", "items": {"type": "object"}}, "items": {"type": "object", "required": ["product_name", "available"], "properties": {"product_name": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, "available": {"type": "boolean", "description": "Availability product status:\n- `true` - product available;\n- `false` - product unavailable."}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}}}
    "patch": {"tags": ["Products' availability"], "summary": "Edit default availabilities", "description": "Edit list of products that available to the clients by default.", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": ["product_name", "available"], "properties": {"product_name": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, "available": {"type": "boolean", "description": "Availability product status:\n- `true` - product available;\n- `false` - product unavailable."}}}}}}, "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "required": ["product_name", "available"], "properties": {"product_name": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, "available": {"type": "boolean", "description": "Availability product status:\n- `true` - product available;\n- `false` - product unavailable."}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "Editing forbidden", "content": {"application/json": {"schema": {"type": "object", "title": "You will see a list of products and their statuses needed to change.", "properties": {"message": {"type": "string", "description": "Error description."}, "trial": {"type": "array", "description": "You cannot change availability to `false` if there are at least one products' service with `trial`\nstatus.", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}, "activating": {"type": "array", "description": "You cannot change availability to `false` if there are at least one products' service with `activating`\nstatus.", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}, "active": {"type": "array", "description": "You cannot change availability to `false` if there are at least one products' service with `active`\nstatus.", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}}}}}}}}
  "/iam/products/availability/clients/{clientId}":
    "get": {"parameters": [{"name": "clientId", "in": "path", "required": true, "description": "Account ID.", "schema": {"type": "integer"}}], "tags": ["Products' availability"], "summary": "Get client's availabilities", "description": "Get list of products available to a client.", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"allOf": [{"type": "array", "description": "Simple array without pagination", "items": {"type": "object"}}, "items": {"type": "object", "required": ["product_name", "available"], "properties": {"product_name": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, "available": {"type": "boolean", "description": "Availability product status:\n- `true` - product available;\n- `false` - product unavailable."}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
    "patch": {"parameters": [{"name": "clientId", "in": "path", "required": true, "description": "Account ID.", "schema": {"type": "integer"}}], "tags": ["Products' availability"], "summary": "Edit client's availabilities", "description": "Edit list of products available to a client.\nIf you make changes in the client's personal availability settings\nat least once, the availability statuses of the personalized products will not be available for further\nchanges with the edit default availability settings request. But there is also a request to reset these\npersonal settings to default ones.", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": ["product_name", "available"], "properties": {"product_name": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, "available": {"type": "boolean", "description": "Availability product status:\n- `true` - product available;\n- `false` - product unavailable."}}}}}}, "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "required": ["product_name", "available"], "properties": {"product_name": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, "available": {"type": "boolean", "description": "Availability product status:\n- `true` - product available;\n- `false` - product unavailable."}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "Editing forbidden", "content": {"application/json": {"schema": {"type": "object", "title": "You will see a list of products and their statuses needed to change.", "properties": {"message": {"type": "string", "description": "Error description."}, "trial": {"type": "array", "description": "You cannot change availability to `false` if there are at least one products' service with `trial`\nstatus.", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}, "activating": {"type": "array", "description": "You cannot change availability to `false` if there are at least one products' service with `activating`\nstatus.", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}, "active": {"type": "array", "description": "You cannot change availability to `false` if there are at least one products' service with `active`\nstatus.", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}}}}}}}}
    "delete": {"tags": ["Products' availability"], "summary": "Reset client's availabilities", "parameters": [{"name": "clientId", "in": "path", "required": true, "description": "Account ID.", "schema": {"type": "integer"}}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": ["product_names"], "properties": {"product_names": {"type": "array", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}}}}}}, "description": "This request reset client's products' availability settings to default ones.\nAs a result, the availability statuses of the personalized products for this client will be again available for further\nchanges with the edit default availability settings request.", "responses": {"204": {"description": "OK."}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "Editing forbidden", "content": {"application/json": {"schema": {"type": "object", "title": "You will see a list of products and their statuses needed to change.", "properties": {"message": {"type": "string", "description": "Error description."}, "trial": {"type": "array", "description": "You cannot change availability to `false` if there are at least one products' service with `trial`\nstatus.", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}, "activating": {"type": "array", "description": "You cannot change availability to `false` if there are at least one products' service with `activating`\nstatus.", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}, "active": {"type": "array", "description": "You cannot change availability to `false` if there are at least one products' service with `active`\nstatus.", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}}}}}}}}
  "/iam/products/availability/clients":
    "delete": {"tags": ["Products' availability"], "summary": "Reset availabilities for all clients", "description": "This request reset personal products' availability settings of all clients to default ones.\nAs a result, the availability statuses of personalized products of all clients\nwill be again available for further changes with the edit default visibility settings request.", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": ["product_names"], "properties": {"product_names": {"type": "array", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}}}}}}, "responses": {"204": {"description": "OK."}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "Editing forbidden", "content": {"application/json": {"schema": {"type": "object", "title": "You will see a list of products and their statuses needed to change.", "properties": {"message": {"type": "string", "description": "Error description."}, "trial": {"type": "array", "description": "You cannot change availability to `false` if there are at least one products' service with `trial`\nstatus.", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}, "activating": {"type": "array", "description": "You cannot change availability to `false` if there are at least one products' service with `activating`\nstatus.", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}, "active": {"type": "array", "description": "You cannot change availability to `false` if there are at least one products' service with `active`\nstatus.", "items": {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}}}}}}}}}
  "/iam/clients/{clientId}/services":
    "get": {"tags": ["Services"], "parameters": [{"name": "clientId", "in": "path", "required": true, "description": "Account ID.", "schema": {"type": "integer"}}], "summary": "Get a list of services", "description": "Returns list of client's services.", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"allOf": [{"type": "array", "description": "Simple array without pagination", "items": {"type": "object"}}, "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true, "description": "Service's ID."}, "name": {"allOf": ["readOnly": true, {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "client": {"type": "integer", "readOnly": true, "description": "Client's ID."}, "status": {"allOf": [{"description": "Current service status.", "example": "paused"}, {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}]}, "previous_status": {"allOf": [{"type": "string", "description": "Previous service status.", "readOnly": true, "example": "active"}, {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}]}, "status_changed_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "When status was changed."}, "start": {"type": "string", "format": "date-time", "readOnly": true, "description": "Trial start date."}, "deleted_date": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true, "description": "Date and time when service's status will be changed to `deleted`.\nApplicable only if current service's status is `trialend` or `paused`."}, "enabled": {"type": "boolean", "description": "Shows if a service is enabled or disabled."}, "options": {"type": "array", "description": "List of service options.", "items": {"type": "object", "properties": {"id": {"type": "integer", "nullable": true, "description": "Option ID."}, "value": {"type": "string", "description": "Option's value."}, "value_type": {"type": "string", "description": "Option type.", "enum": ["int", "str", "utctimestamp", "json", "bool"]}, "name": {"type": "string", "description": "Option name."}, "category": {"type": "string", "description": "Option category."}, "description": {"type": "string", "description": "Option description."}, "title": {"type": "string", "description": "Option title."}}}}, "status_transition_options": {"type": "array", "description": "List of status transition options.", "items": {"type": "object", "properties": {"id": {"type": "integer", "nullable": true, "description": "Option ID."}, "value": {"type": "string", "description": "Option's value."}, "value_type": {"type": "string", "description": "Option type.", "enum": ["int", "str", "utctimestamp", "json", "bool"]}, "name": {"type": "string", "description": "Option name."}, "category": {"type": "string", "description": "Option category."}, "description": {"type": "string", "description": "Option description."}, "title": {"type": "string", "description": "Option title."}}}}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
  "/iam/clients/{clientId}/services/{serviceId}":
    "get": {"tags": ["Services"], "parameters": [{"name": "clientId", "in": "path", "required": true, "description": "Account ID.", "schema": {"type": "integer"}}, {"name": "serviceId", "in": "path", "required": true, "description": "Service's ID.", "schema": {"type": "integer"}}], "summary": "Get service's details", "description": "Returns list of client's services.", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true, "description": "Service's ID."}, "name": {"allOf": ["readOnly": true, {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "client": {"type": "integer", "readOnly": true, "description": "Client's ID."}, "status": {"allOf": [{"description": "Current service status.", "example": "paused"}, {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}]}, "previous_status": {"allOf": [{"type": "string", "description": "Previous service status.", "readOnly": true, "example": "active"}, {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}]}, "status_changed_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "When status was changed."}, "start": {"type": "string", "format": "date-time", "readOnly": true, "description": "Trial start date."}, "deleted_date": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true, "description": "Date and time when service's status will be changed to `deleted`.\nApplicable only if current service's status is `trialend` or `paused`."}, "enabled": {"type": "boolean", "description": "Shows if a service is enabled or disabled."}, "options": {"type": "array", "description": "List of service options.", "items": {"type": "object", "properties": {"id": {"type": "integer", "nullable": true, "description": "Option ID."}, "value": {"type": "string", "description": "Option's value."}, "value_type": {"type": "string", "description": "Option type.", "enum": ["int", "str", "utctimestamp", "json", "bool"]}, "name": {"type": "string", "description": "Option name."}, "category": {"type": "string", "description": "Option category."}, "description": {"type": "string", "description": "Option description."}, "title": {"type": "string", "description": "Option title."}}}}, "status_transition_options": {"type": "array", "description": "List of status transition options.", "items": {"type": "object", "properties": {"id": {"type": "integer", "nullable": true, "description": "Option ID."}, "value": {"type": "string", "description": "Option's value."}, "value_type": {"type": "string", "description": "Option type.", "enum": ["int", "str", "utctimestamp", "json", "bool"]}, "name": {"type": "string", "description": "Option name."}, "category": {"type": "string", "description": "Option category."}, "description": {"type": "string", "description": "Option description."}, "title": {"type": "string", "description": "Option title."}}}}}}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
    "patch": {"tags": ["Services"], "parameters": [{"name": "clientId", "in": "path", "required": true, "description": "Account ID.", "schema": {"type": "integer"}}, {"name": "serviceId", "in": "path", "required": true, "description": "Service's ID.", "schema": {"type": "integer"}}], "summary": "Update service's details (Deprecated).\n", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true, "description": "Service's ID."}, "name": {"allOf": ["readOnly": true, {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "client": {"type": "integer", "readOnly": true, "description": "Client's ID."}, "status": {"allOf": [{"description": "Current service status.", "example": "paused"}, {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}]}, "previous_status": {"allOf": [{"type": "string", "description": "Previous service status.", "readOnly": true, "example": "active"}, {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}]}, "status_changed_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "When status was changed."}, "start": {"type": "string", "format": "date-time", "readOnly": true, "description": "Trial start date."}, "deleted_date": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true, "description": "Date and time when service's status will be changed to `deleted`.\nApplicable only if current service's status is `trialend` or `paused`."}, "enabled": {"type": "boolean", "description": "Shows if a service is enabled or disabled."}, "options": {"type": "array", "description": "List of service options.", "items": {"type": "object", "properties": {"id": {"type": "integer", "nullable": true, "description": "Option ID."}, "value": {"type": "string", "description": "Option's value."}, "value_type": {"type": "string", "description": "Option type.", "enum": ["int", "str", "utctimestamp", "json", "bool"]}, "name": {"type": "string", "description": "Option name."}, "category": {"type": "string", "description": "Option category."}, "description": {"type": "string", "description": "Option description."}, "title": {"type": "string", "description": "Option title."}}}}, "status_transition_options": {"type": "array", "description": "List of status transition options.", "items": {"type": "object", "properties": {"id": {"type": "integer", "nullable": true, "description": "Option ID."}, "value": {"type": "string", "description": "Option's value."}, "value_type": {"type": "string", "description": "Option type.", "enum": ["int", "str", "utctimestamp", "json", "bool"]}, "name": {"type": "string", "description": "Option name."}, "category": {"type": "string", "description": "Option category."}, "description": {"type": "string", "description": "Option description."}, "title": {"type": "string", "description": "Option title."}}}}}}}}}, "description": "With this method you can change status or options for service.\nDeprecated, available on [BILLING](billing#tag/Trials/paths/~1v3~1trials~1{trialId}/put).", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true, "description": "Service's ID."}, "name": {"allOf": ["readOnly": true, {"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}]}, "client": {"type": "integer", "readOnly": true, "description": "Client's ID."}, "status": {"allOf": [{"description": "Current service status.", "example": "paused"}, {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}]}, "previous_status": {"allOf": [{"type": "string", "description": "Previous service status.", "readOnly": true, "example": "active"},
                      {"type": "string", "description": "Status of the service.", "enum": ["new", "trial", "trialend", "active", "paused", "activating", "deleted"]}]}, "status_changed_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "When status was changed."}, "start": {"type": "string", "format": "date-time", "readOnly": true, "description": "Trial start date."}, "deleted_date": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true, "description": "Date and time when service's status will be changed to `deleted`.\nApplicable only if current service's status is `trialend` or `paused`."}, "enabled": {"type": "boolean", "description": "Shows if a service is enabled or disabled."}, "options": {"type": "array", "description": "List of service options.", "items": {"type": "object", "properties": {"id": {"type": "integer", "nullable": true, "description": "Option ID."}, "value": {"type": "string", "description": "Option's value."}, "value_type": {"type": "string", "description": "Option type.", "enum": ["int", "str", "utctimestamp", "json", "bool"]}, "name": {"type": "string", "description": "Option name."}, "category": {"type": "string", "description": "Option category."}, "description": {"type": "string", "description": "Option description."}, "title": {"type": "string", "description": "Option title."}}}}, "status_transition_options": {"type": "array", "description": "List of status transition options.", "items": {"type": "object", "properties": {"id": {"type": "integer", "nullable": true, "description": "Option ID."}, "value": {"type": "string", "description": "Option's value."}, "value_type": {"type": "string", "description": "Option type.", "enum": ["int", "str", "utctimestamp", "json", "bool"]}, "name": {"type": "string", "description": "Option name."}, "category": {"type": "string", "description": "Option category."}, "description": {"type": "string", "description": "Option description."}, "title": {"type": "string", "description": "Option title."}}}}}}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
  "/iam/admin/feature":
    "get": {"tags": ["IAM Reseller Features"], "summary": "Get a list of features", "description": "Returns a list of available features that you can manage.", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"allOf": [{"type": "array", "description": "Simple array without pagination", "items": {"type": "object"}}, "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Feature's ID.", "readOnly": true}, "name": {"type": "string", "description": "A feature's name.", "readOnly": true}, "service": {"allOf": [{"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, {"readOnly": true, "description": "The service a feature belongs to."}]}, "is_free": {"type": "boolean", "description": "Shows if a feature is free or paid.", "readOnly": true}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}}}
  "/iam/admin/feature/{featureId}":
    "get": {"tags": ["IAM Reseller Features"], "parameters": [{"name": "featureId", "in": "path", "required": true, "description": "Feature's ID.", "schema": {"type": "integer"}}], "summary": "Get feature's details", "description": "Returns feature's details.", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "description": "Feature's ID.", "readOnly": true}, "name": {"type": "string", "description": "A feature's name.", "readOnly": true}, "service": {"allOf": [{"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, {"readOnly": true, "description": "The service a feature belongs to."}]}, "is_free": {"type": "boolean", "description": "Shows if a feature is free or paid.", "readOnly": true}}}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
  "/iam/admin/free_features":
    "get": {"tags": ["IAM Reseller Features"], "summary": "Get a list of free features", "description": "Returns a list of all free features activated for clients.", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"allOf": [{"type": "array", "description": "Simple array without pagination", "items": {"type": "object"}}, "items": {"type": "object", "required": ["client_id", "feature_id"], "properties": {"id": {"type": "integer", "description": "Activated feature's ID.", "readOnly": true}, "client_id": {"type": "integer", "description": "Client's ID."}, "feature_id": {"type": "integer", "description": "Feature's ID."}, "feature": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Feature's ID.", "readOnly": true}, "name": {"type": "string", "description": "A feature's name.", "readOnly": true}, "service": {"allOf": [{"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, {"readOnly": true, "description": "The service a feature belongs to."}]}, "is_free": {"type": "boolean", "description": "Shows if a feature is free or paid.", "readOnly": true}}}, "readOnly": true]}, "created_date": {"type": "string", "format": "date-time", "description": "Timestamp when the feature was activated.", "readOnly": true}}}]}}}}}}
    "post": {"tags": ["IAM Reseller Features"], "summary": "Enable a free feature", "description": "You can enable a free feature for a client.", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": ["client_id", "feature_id"], "properties": {"id": {"type": "integer", "description": "Activated feature's ID.", "readOnly": true}, "client_id": {"type": "integer", "description": "Client's ID."}, "feature_id": {"type": "integer", "description": "Feature's ID."}, "feature": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Feature's ID.", "readOnly": true}, "name": {"type": "string", "description": "A feature's name.", "readOnly": true}, "service": {"allOf": [{"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, {"readOnly": true, "description": "The service a feature belongs to."}]}, "is_free": {"type": "boolean", "description": "Shows if a feature is free or paid.", "readOnly": true}}}, "readOnly": true]}, "created_date": {"type": "string", "format": "date-time", "description": "Timestamp when the feature was activated.", "readOnly": true}}}}}}, "responses": {"201": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "required": ["client_id", "feature_id"], "properties": {"id": {"type": "integer", "description": "Activated feature's ID.", "readOnly": true}, "client_id": {"type": "integer", "description": "Client's ID."}, "feature_id": {"type": "integer", "description": "Feature's ID."}, "feature": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Feature's ID.", "readOnly": true}, "name": {"type": "string", "description": "A feature's name.", "readOnly": true}, "service": {"allOf": [{"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, {"readOnly": true, "description": "The service a feature belongs to."}]}, "is_free": {"type": "boolean", "description": "Shows if a feature is free or paid.", "readOnly": true}}}, "readOnly": true]}, "created_date": {"type": "string", "format": "date-time", "description": "Timestamp when the feature was activated.", "readOnly": true}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}}}
  "/iam/admin/free_features/{activatedFeatureId}":
    "get": {"tags": ["IAM Reseller Features"], "parameters": [{"name": "activatedFeatureId", "in": "path", "required": true, "description": "Activated feature's ID.", "schema": {"type": "integer"}}], "summary": "Get free feature's details", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "required": ["client_id", "feature_id"], "properties": {"id": {"type": "integer", "description": "Activated feature's ID.", "readOnly": true}, "client_id": {"type": "integer", "description": "Client's ID."}, "feature_id": {"type": "integer", "description": "Feature's ID."}, "feature": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Feature's ID.", "readOnly": true}, "name": {"type": "string", "description": "A feature's name.", "readOnly": true}, "service": {"allOf": [{"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, {"readOnly": true, "description": "The service a feature belongs to."}]}, "is_free": {"type": "boolean", "description": "Shows if a feature is free or paid.", "readOnly": true}}}, "readOnly": true]}, "created_date": {"type": "string", "format": "date-time", "description": "Timestamp when the feature was activated.", "readOnly": true}}}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
    "delete": {"tags": ["IAM Reseller Features"], "parameters": [{"name": "activatedFeatureId", "in": "path", "required": true, "description": "Activated feature's ID.", "schema": {"type": "integer"}}], "summary": "Disable a free feature", "responses": {"204": {"description": "OK."}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
  "/iam/admin/paid_features":
    "get": {"tags": ["IAM Reseller Features"], "summary": "Get a list of paid features", "description": "Returns a list of all paid features activated for clients.", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"allOf": [{"type": "array", "description": "Simple array without pagination", "items": {"type": "object"}}, "items": {"type": "object", "required": ["client_id", "feature_id"], "properties": {"id": {"type": "integer", "description": "Activated feature's ID.", "readOnly": true}, "client_id": {"type": "integer", "description": "Client's ID."}, "feature_id": {"type": "integer", "description": "Feature's ID."}, "feature": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Feature's ID.", "readOnly": true}, "name": {"type": "string", "description": "A feature's name.", "readOnly": true}, "service": {"allOf": [{"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, {"readOnly": true, "description": "The service a feature belongs to."}]}, "is_free": {"type": "boolean", "description": "Shows if a feature is free or paid.", "readOnly": true}}}, "readOnly": true]}, "created_date": {"type": "string", "format": "date-time", "description": "Timestamp when the feature was activated.", "readOnly": true}}}]}}}}}}
    "post": {"tags": ["IAM Reseller Features"], "summary": "Enable a paid feature", "description": "You can enable a paid feature for a client.", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": ["client_id", "feature_id"], "properties": {"id": {"type": "integer", "description": "Activated feature's ID.", "readOnly": true}, "client_id": {"type": "integer", "description": "Client's ID."}, "feature_id": {"type": "integer", "description": "Feature's ID."}, "feature": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Feature's ID.", "readOnly": true}, "name": {"type": "string", "description": "A feature's name.", "readOnly": true}, "service": {"allOf": [{"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, {"readOnly": true, "description": "The service a feature belongs to."}]}, "is_free": {"type": "boolean", "description": "Shows if a feature is free or paid.", "readOnly": true}}}, "readOnly": true]}, "created_date": {"type": "string", "format": "date-time", "description": "Timestamp when the feature was activated.", "readOnly": true}}}}}}, "responses": {"201": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "required": ["client_id", "feature_id"], "properties": {"id": {"type": "integer", "description": "Activated feature's ID.", "readOnly": true}, "client_id": {"type": "integer", "description": "Client's ID."}, "feature_id": {"type": "integer", "description": "Feature's ID."}, "feature": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Feature's ID.", "readOnly": true}, "name": {"type": "string", "description": "A feature's name.", "readOnly": true}, "service": {"allOf": [{"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, {"readOnly": true, "description": "The service a feature belongs to."}]}, "is_free": {"type": "boolean", "description": "Shows if a feature is free or paid.", "readOnly": true}}}, "readOnly": true]}, "created_date": {"type": "string", "format": "date-time", "description": "Timestamp when the feature was activated.", "readOnly": true}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}}}
  "/iam/admin/paid_features/{activatedFeatureId}":
    "get": {"tags": ["IAM Reseller Features"], "parameters": [{"name": "activatedFeatureId", "in": "path", "required": true, "description": "Activated feature's ID.", "schema": {"type": "integer"}}], "summary": "Get paid feature's details", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "required": ["client_id", "feature_id"], "properties": {"id": {"type": "integer", "description": "Activated feature's ID.", "readOnly": true}, "client_id": {"type": "integer", "description": "Client's ID."}, "feature_id": {"type": "integer", "description": "Feature's ID."}, "feature": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "description": "Feature's ID.", "readOnly": true}, "name": {"type": "string", "description": "A feature's name.", "readOnly": true}, "service": {"allOf": [{"type": "string", "description": "Service's name.", "enum": ["CDN", "STORAGE", "STREAMING", "DNS", "DDOS", "CLOUD"]}, {"readOnly": true, "description": "The service a feature belongs to."}]}, "is_free": {"type": "boolean", "description": "Shows if a feature is free or paid.", "readOnly": true}}}, "readOnly": true]}, "created_date": {"type": "string", "format": "date-time", "description": "Timestamp when the feature was activated.", "readOnly": true}}}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
    "delete": {"tags": ["IAM Reseller Features"], "parameters": [{"name": "activatedFeatureId", "in": "path", "required": true, "description": "Activated feature's ID.", "schema": {"type": "integer"}}], "summary": "Disable a paid feature", "responses": {"204": {"description": "OK."}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
  "/iam/reselling/settings":
    "get": {"tags": ["Branding"], "summary": "Get public and private branding settings", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "required": ["domain", "privateSettings", "publicSettings"], "properties": {"domain": {"type": "string", "description": "Base control panel domain.\nThe desired upper-level domain for the control panel.\nFor example, if specified mycompany.com, then\ncontrol panel will be available at auth.mycompany.com, cdn.mycompany.com, accounts.mycompany.com."}, "publicSettings": {"type": "object", "properties": {"brandName": {"type": "string", "description": "The brand name used instead of Gcore."}, "fromEmail": {"type": "string", "description": "Change Gcore email for service emails (for example, trial start email) to yours.", "format": "email"}, "showApiDoc": {"type": "boolean", "description": "The link to API will be displayed in help menu."}, "websiteLink": {"type": "string", "description": "Change Gcore website link to yours in help menu and from the logo."}, "supportEmail": {"type": "string", "description": "Change Gcore email for service emails (for example, trial start email) to yours."}, "supportPhone": {"type": "string", "description": "Change Gcore support phone number to yours in help menu."}, "agreementLink": {"type": "string", "description": "Change Gcore link to agreement to yours."}, "showStatusPage": {"type": "string", "description": "The link to Status Page will be displayed in help menu."}, "entryBaseDomain": {"type": "string", "description": "Base control panel domain.\nThe desired upper-level domain for the control panel.\nFor example, if specified mycompany.com, then\ncontrol panel will be available at auth.mycompany.com, cdn.mycompany.com, accounts.mycompany.com."}, "showKnowledgeBase": {"type": "boolean", "description": "The link to Knowledge Base will be displayed in help menu."}, "colors": {"type": "object", "properties": {"header": {"type": "string", "description": "Primary header color on the signin page to yours."}, "primary": {"type": "string", "description": "Primary header color on the signin page to yours."}, "headerText": {"type": "string", "description": "Primary header text and icon color on the signin page to yours."}}}}}, "privateSettings": {"type": "object", "properties": {"mailServer": {"type": "object", "description": "SMTP server settings.", "properties": {"tls": {"type": "boolean", "description": "use TLS."}, "host": {"type": "string"}, "port": {"type": "string"}, "login": {"type": "string"}, "password": {"type": "string"}}}}}, "reseller": {"type": "integer", "description": "Reseller's ID.", "readOnly": true}, "deleted": {"type": "boolean", "description": "Deletion flag. If `true` then entity was deleted.", "readOnly": true}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "404": {"description": "Resource not found."}}}
    "put": {"tags": ["Branding"], "summary": "Edit branding settings", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": ["domain", "privateSettings", "publicSettings"], "properties": {"domain": {"type": "string", "description": "Base control panel domain.\nThe desired upper-level domain for the control panel.\nFor example, if specified mycompany.com, then\ncontrol panel will be available at auth.mycompany.com, cdn.mycompany.com, accounts.mycompany.com."}, "publicSettings": {"type": "object", "properties": {"brandName": {"type": "string", "description": "The brand name used instead of Gcore."}, "fromEmail": {"type": "string", "description": "Change Gcore email for service emails (for example, trial start email) to yours.", "format": "email"}, "showApiDoc": {"type": "boolean", "description": "The link to API will be displayed in help menu."}, "websiteLink": {"type": "string", "description": "Change Gcore website link to yours in help menu and from the logo."}, "supportEmail": {"type": "string", "description": "Change Gcore email for service emails (for example, trial start email) to yours."}, "supportPhone": {"type": "string", "description": "Change Gcore support phone number to yours in help menu."}, "agreementLink": {"type": "string", "description": "Change Gcore link to agreement to yours."}, "showStatusPage": {"type": "string", "description": "The link to Status Page will be displayed in help menu."}, "entryBaseDomain": {"type": "string", "description": "Base control panel domain.\nThe desired upper-level domain for the control panel.\nFor example, if specified mycompany.com, then\ncontrol panel will be available at auth.mycompany.com, cdn.mycompany.com, accounts.mycompany.com."}, "showKnowledgeBase": {"type": "boolean", "description": "The link to Knowledge Base will be displayed in help menu."}, "colors": {"type": "object", "properties": {"header": {"type": "string", "description": "Primary header color on the signin page to yours."}, "primary": {"type": "string", "description": "Primary header color on the signin page to yours."}, "headerText": {"type": "string", "description": "Primary header text and icon color on the signin page to yours."}}}}}, "privateSettings": {"type": "object", "properties": {"mailServer": {"type": "object", "description": "SMTP server settings.", "properties": {"tls": {"type": "boolean", "description": "use TLS."}, "host": {"type": "string"}, "port": {"type": "string"}, "login": {"type": "string"}, "password": {"type": "string"}}}}}, "reseller": {"type": "integer", "description": "Reseller's ID.", "readOnly": true}, "deleted": {"type": "boolean", "description": "Deletion flag. If `true` then entity was deleted.", "readOnly": true}}}}}}, "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "required": ["domain", "privateSettings", "publicSettings"], "properties": {"domain": {"type": "string", "description": "Base control panel domain.\nThe desired upper-level domain for the control panel.\nFor example, if specified mycompany.com, then\ncontrol panel will be available at auth.mycompany.com, cdn.mycompany.com, accounts.mycompany.com."}, "publicSettings": {"type": "object", "properties": {"brandName": {"type": "string", "description": "The brand name used instead of Gcore."}, "fromEmail": {"type": "string", "description": "Change Gcore email for service emails (for example, trial start email) to yours.", "format": "email"}, "showApiDoc": {"type": "boolean", "description": "The link to API will be displayed in help menu."}, "websiteLink": {"type": "string", "description": "Change Gcore website link to yours in help menu and from the logo."}, "supportEmail": {"type": "string", "description": "Change Gcore email for service emails (for example, trial start email) to yours."}, "supportPhone": {"type": "string", "description": "Change Gcore support phone number to yours in help menu."}, "agreementLink": {"type": "string", "description": "Change Gcore link to agreement to yours."}, "showStatusPage": {"type": "string",
                        "description": "The link to Status Page will be displayed in help menu."}, "entryBaseDomain": {"type": "string", "description": "Base control panel domain.\nThe desired upper-level domain for the control panel.\nFor example, if specified mycompany.com, then\ncontrol panel will be available at auth.mycompany.com, cdn.mycompany.com, accounts.mycompany.com."}, "showKnowledgeBase": {"type": "boolean", "description": "The link to Knowledge Base will be displayed in help menu."}, "colors": {"type": "object", "properties": {"header": {"type": "string", "description": "Primary header color on the signin page to yours."}, "primary": {"type": "string", "description": "Primary header color on the signin page to yours."}, "headerText": {"type": "string", "description": "Primary header text and icon color on the signin page to yours."}}}}}, "privateSettings": {"type": "object", "properties": {"mailServer": {"type": "object", "description": "SMTP server settings.", "properties": {"tls": {"type": "boolean", "description": "use TLS."}, "host": {"type": "string"}, "port": {"type": "string"}, "login": {"type": "string"}, "password": {"type": "string"}}}}}, "reseller": {"type": "integer", "description": "Reseller's ID.", "readOnly": true}, "deleted": {"type": "boolean", "description": "Deletion flag. If `true` then entity was deleted.", "readOnly": true}}}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}}}
  "/iam/reselling/settings/upload":
    "post": {"tags": ["Branding"], "summary": "Upload logo and favicon", "requestBody": {"content": {"multipart/form-data": {"schema": {"type": "object", "properties": {"logo": {"type": "string", "format": "binary"}, "favicon": {"type": "string", "format": "binary"}}}}}}, "description": "Upload images for settings of the Reseller (Logo and Favicon).\nYou can upload 2 files separately or simultaneously.", "responses": {"200": {"description": "OK.", "content": {"application/json": {"schema": {"type": "object", "required": ["domain", "privateSettings", "publicSettings"], "properties": {"domain": {"type": "string", "description": "Base control panel domain.\nThe desired upper-level domain for the control panel.\nFor example, if specified mycompany.com, then\ncontrol panel will be available at auth.mycompany.com, cdn.mycompany.com, accounts.mycompany.com."}, "publicSettings": {"type": "object", "properties": {"brandName": {"type": "string", "description": "The brand name used instead of Gcore."}, "fromEmail": {"type": "string", "description": "Change Gcore email for service emails (for example, trial start email) to yours.", "format": "email"}, "showApiDoc": {"type": "boolean", "description": "The link to API will be displayed in help menu."}, "websiteLink": {"type": "string", "description": "Change Gcore website link to yours in help menu and from the logo."}, "supportEmail": {"type": "string", "description": "Change Gcore email for service emails (for example, trial start email) to yours."}, "supportPhone": {"type": "string", "description": "Change Gcore support phone number to yours in help menu."}, "agreementLink": {"type": "string", "description": "Change Gcore link to agreement to yours."}, "showStatusPage": {"type": "string", "description": "The link to Status Page will be displayed in help menu."}, "entryBaseDomain": {"type": "string", "description": "Base control panel domain.\nThe desired upper-level domain for the control panel.\nFor example, if specified mycompany.com, then\ncontrol panel will be available at auth.mycompany.com, cdn.mycompany.com, accounts.mycompany.com."}, "showKnowledgeBase": {"type": "boolean", "description": "The link to Knowledge Base will be displayed in help menu."}, "colors": {"type": "object", "properties": {"header": {"type": "string", "description": "Primary header color on the signin page to yours."}, "primary": {"type": "string", "description": "Primary header color on the signin page to yours."}, "headerText": {"type": "string", "description": "Primary header text and icon color on the signin page to yours."}}}}}, "privateSettings": {"type": "object", "properties": {"mailServer": {"type": "object", "description": "SMTP server settings.", "properties": {"tls": {"type": "boolean", "description": "use TLS."}, "host": {"type": "string"}, "port": {"type": "string"}, "login": {"type": "string"}, "password": {"type": "string"}}}}}, "reseller": {"type": "integer", "description": "Reseller's ID.", "readOnly": true}, "deleted": {"type": "boolean", "description": "Deletion flag. If `true` then entity was deleted.", "readOnly": true}}}}}}, "404": {"description": "Resource not found."}}}
  "/iam/reselling/resellers/{resellerID}/notification_settings":
    "get": {"summary": "Get List of reseller's notification settings", "parameters": [{"name": "resellerId", "in": "path", "required": true, "description": "Reseller ID.", "schema": {"type": "integer"}}, {"name": "limit", "in": "query", "description": "The maximum number of items.", "schema": {"type": "integer", "x-stainless-skip": ["terraform"]}}, {"name": "offset", "in": "query", "description": "Offset relative to the beginning of list.", "schema": {"type": "integer"}}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "schema": {"type": "string"}, "example": "-id"}], "tags": ["Notification Settings"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "properties": {"count": {"type": "number", "description": "Total number of users"}, "next": {"type": "string", "description": "URL to the next users slice", "example": "reselling/resellers/{resellerId}/notification_settings?offset=20&limit=10"}, "previous": {"type": "string", "description": "URL to the previous users slice", "example": "reselling/resellers/{resellerId}/notification_settings?offset=10&limit=10"}, "results": {"type": "array", "items": {"allOf": ["readOnly": true, {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "reseller": {"type": "integer"}, "notification_type": {"enum": ["deletion_request", "failed_login"], "type": "string", "description": "\\* `deletion_request` - Deletion Request\n\\* `failed_login` - Failed Login"}, "email": {"type": "string", "format": "email", "maxLength": 254}, "enabled": {"type": "boolean"}}, "readOnly": true}, "properties": {"id": {"type": "integer"}}]}}}}}}, "description": ""}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "You do not have permission to perform this action."}}}
    "post": {"summary": "Add email to reseller's notification settings", "parameters": [{"name": "resellerId", "in": "path", "required": true, "description": "Reseller ID.", "schema": {"type": "integer"}}], "tags": ["Notification Settings"], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"notification_type": {"enum": ["deletion_request", "failed_login"], "type": "string", "description": "\\* `deletion_request` - Deletion Request\n\\* `failed_login` - Failed Login"}, "email": {"type": "string", "format": "email", "maxLength": 254}, "enabled": {"type": "boolean"}}, "required": ["email", "notification_type"]}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "reseller": {"type": "integer"}, "notification_type": {"enum": ["deletion_request", "failed_login"], "type": "string", "description": "\\* `deletion_request` - Deletion Request\n\\* `failed_login` - Failed Login"}, "email": {"type": "string", "format": "email", "maxLength": 254}, "enabled": {"type": "boolean"}}, "readOnly": true}}}, "description": ""}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "You do not have permission to perform this action."}}}
  "/iam/reselling/resellers/{resellerID}/notification_settings/{notificationSettingsId}":
    "get": {"summary": "Get a reseller's notification settings", "parameters": [{"name": "resellerId", "in": "path", "required": true, "description": "Reseller ID.", "schema": {"type": "integer"}}, {"name": "NotificationSettingsId", "in": "path", "required": true, "description": "Notification settings ID.", "schema": {"type": "integer"}}], "tags": ["Notification Settings"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "reseller": {"type": "integer"}, "notification_type": {"enum": ["deletion_request", "failed_login"], "type": "string", "description": "\\* `deletion_request` - Deletion Request\n\\* `failed_login` - Failed Login"}, "email": {"type": "string", "format": "email", "maxLength": 254}, "enabled": {"type": "boolean"}}, "readOnly": true}}}, "description": ""}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "You do not have permission to perform this action."}, "404": {"description": "Resource not found."}}}
    "put": {"summary": "Update a reseller's notification settings", "parameters": [{"name": "resellerId", "in": "path", "required": true, "description": "Reseller ID.", "schema": {"type": "integer"}}, {"name": "NotificationSettingsId", "in": "path", "required": true, "description": "Notification settings ID.", "schema": {"type": "integer"}}], "tags": ["Notification Settings"], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"notification_type": {"enum": ["deletion_request", "failed_login"], "type": "string", "description": "\\* `deletion_request` - Deletion Request\n\\* `failed_login` - Failed Login"}, "email": {"type": "string", "format": "email", "maxLength": 254}, "enabled": {"type": "boolean"}}, "required": ["email", "notification_type"]}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "reseller": {"type": "integer"}, "notification_type": {"enum": ["deletion_request", "failed_login"], "type": "string", "description": "\\* `deletion_request` - Deletion Request\n\\* `failed_login` - Failed Login"}, "email": {"type": "string", "format": "email", "maxLength": 254}, "enabled": {"type": "boolean"}}, "readOnly": true}}}, "description": ""}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "You do not have permission to perform this action."}, "404": {"description": "Resource not found."}}}
    "patch": {"summary": "Update a reseller's notification settings", "parameters": [{"name": "resellerId", "in": "path", "required": true, "description": "Reseller ID.", "schema": {"type": "integer"}}, {"name": "NotificationSettingsId", "in": "path", "required": true, "description": "Notification settings ID.", "schema": {"type": "integer"}}], "tags": ["Notification Settings"], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"notification_type": {"enum": ["deletion_request", "failed_login"], "type": "string", "description": "\\* `deletion_request` - Deletion Request\n\\* `failed_login` - Failed Login"}, "email": {"type": "string", "format": "email", "maxLength": 254}, "enabled": {"type": "boolean"}}, "required": ["email", "notification_type"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "reseller": {"type": "integer"}, "notification_type": {"enum": ["deletion_request", "failed_login"], "type": "string", "description": "\\* `deletion_request` - Deletion Request\n\\* `failed_login` - Failed Login"}, "email": {"type": "string", "format": "email", "maxLength": 254}, "enabled": {"type": "boolean"}}, "readOnly": true}}}, "description": ""}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "You do not have permission to perform this action."}, "404": {"description": "Resource not found."}}}
    "delete": {"summary": "Delete a reseller's notification settings", "parameters": [{"name": "resellerId", "in": "path", "required": true, "description": "Reseller ID.", "schema": {"type": "integer"}}, {"name": "NotificationSettingsId", "in": "path", "required": true, "description": "Notification settings ID.", "schema": {"type": "integer"}}], "tags": ["Notification Settings"], "responses": {"204": {"description": "No response body"}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"anyOf": [{"title": "Validation error", "type": "object", "properties": {"errors": {"type": "object", "description": "This object contains error descriptions per field from your request.", "additionalProperties": {"type": "array", "description": "Error list for specific field.", "items": {"type": "string", "description": "Error description"}}}}}, {"title": "Invalid request JSON schema", "type": "object", "properties": {"message": {"type": "string", "description": "This message describes error if json schema from your request is invalid.", "example": "JSON parse error - Expecting ',' delimiter: line 3 column 33 (char 77)\n"}}}]}}}}, "401": {"description": "Authentication credentials were not provided or given token not valid for any token type."}, "403": {"description": "You do not have permission to perform this action."}, "404": {"description": "Resource not found."}}}
tags:
- {"name": "IAM Reseller Account", "x-displayName": "Account"}
- {"name": "IAM Reseller Clients", "description": "Clients management API.\nNote: For client's creation use [create a new user](#tag/Users/paths/~1users/post) method from Users management API.", "x-displayName": "Clients"}
- {"name": "IAM Reseller Users", "description": "Client's users management API.", "x-displayName": "Users"}
- {"name": "Sellers", "description": "Seller management API.", "x-displayName": "Sellers"}
- {"name": "Products' availability", "description": "As a reseller you can get access to multiple products that available for you. Such as CDN.\nWith this API you can manage which products are available for you clients by default or manage personal\nproducts' availability for each client separately.", "x-displayName": "Products' availability"}
- {"name": "Services", "x-displayName": "Services"}
- {"name": "IAM Reseller Features", "description": "You can manage both free and paid features available for you.", "x-displayName": "Features"}
- {"name": "Branding", "x-displayName": "Branding"}
- {"name": "Notification Settings", "description": "Notification settings which not connected with branding", "x-displayName": "Notification Settings"}
- {"name": "Other", "x-displayName": "Other"}
x-tagGroups:
- {"name": "IAM Reseller API", "tags": ["IAM Reseller Account", "IAM Reseller Clients", "IAM Reseller Users", "Sellers", "Products' availability", "Services", "IAM Reseller Features", "Branding", "Notification Settings", "Other"]}
security: ["APIKey": []]
components:
  securitySchemes:
    APIKey:
      description: "API key for authentication. Make sure to include the word `apikey`, followed by a single space and then your token.\nExample: `apikey 1234$abcdef`"
      type: apiKey
      in: header
      name: Authorization
