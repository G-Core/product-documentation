"openapi": "3.1.0"
"info": {"title": "Gcore OpenAPI â€“ Object Storage API", "description": "This OpenAPI is an aggregated OpenAPI specification that unifies all Gcore products into a single file. It covers Cloud, CDN, DNS, WAAP, DDoS Protection, Object Storage, Streaming, and FastEdge services.", "version": "2025-06-25T10:08:17.770201+00:00"}
"servers": ["url": "https://api.gcore.com"]
paths:
  "/storage/notifications/v1/event":
    "put": {"tags": ["Notifications"], "summary": "Change client event.", "operationId": "eventUpdateHttp", "parameters": [{"name": "client_id", "in": "query", "description": "ClientID who events we will get", "schema": {"type": "integer", "format": "int64"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventResponse"}}}, "required": true}, "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "401": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "409": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "x-codegen-request-body-name": "Body"}
    "post": {"tags": ["Notifications"], "summary": "Add client event.", "operationId": "eventCreateHttp", "parameters": [{"name": "client_id", "in": "query", "description": "ClientID who events we will get", "schema": {"type": "integer", "format": "int64"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventResponse"}}}, "required": true}, "responses": {"200": {"description": "EventResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventResponse"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "401": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "409": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "x-codegen-request-body-name": "Body"}
    "delete": {"tags": ["Notifications"], "summary": "Delete client event.", "operationId": "eventDeleteHttp", "parameters": [{"name": "client_id", "in": "query", "description": "ClientID who events we will get", "schema": {"type": "integer", "format": "int64"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventResponse"}}}, "required": true}, "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "401": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "409": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "x-codegen-request-body-name": "Body"}
  "/storage/notifications/v1/events":
    "get": {"tags": ["Notifications"], "summary": "Get events", "description": "Returns client events", "operationId": "eventsGetHttp", "responses": {"200": {"description": "EventsResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventsResponse"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "401": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "409": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
    "post": {"tags": ["Notifications"], "summary": "Upsert/Patch client events.", "description": "When you set body be notice that fields of root structure will be created or updated\nbut another fields will be no affected.\nReturns client events.", "operationId": "eventsCreateHttp", "responses": {"200": {"description": "EventsResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventsResponse"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "401": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "409": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/notifications/v1/events/configurator":
    "get": {"tags": ["Notifications"], "summary": "Get possible list of events", "description": "Returns descriptions about events", "operationId": "eventsMetaHttp", "responses": {"200": {"description": "EventsMetaResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventsMetaResponse"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "401": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "409": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/provisioning/v1/key":
    "get": {"tags": ["Key"], "summary": "Shows all keys", "description": "Shows all keys", "operationId": "keyListHttpV1", "parameters": [{"name": "offset", "in": "query", "description": "Amount of records to skip before beginning to write in response.", "schema": {"type": "integer", "format": "uint64"}}, {"name": "limit", "in": "query", "description": "Max number of records in response", "schema": {"type": "integer", "format": "uint64"}}, {"name": "order_by", "in": "query", "description": "Field name to sort by", "schema": {"type": "string"}}, {"name": "order_direction", "in": "query", "description": "Ascending or descending order", "schema": {"type": "string", "enum": ["asc", "desc"]}}, {"name": "id", "in": "query", "schema": {"type": "string"}}, {"name": "name", "in": "query", "schema": {"type": "string"}}, {"name": "created", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "KeyListEndpointRes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/KeyListEndpointRes"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
    "put": {"tags": ["Key"], "summary": "Create key", "description": "Creates key and returns it", "operationId": "keyCreateHttp", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"key": {"type": "string"}, "name": {"type": "string"}}}}}, "required": false}, "responses": {"200": {"description": "Key", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Key"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "409": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "x-codegen-request-body-name": "Body"}
  "/storage/provisioning/v1/key/{id}":
    "delete": {"tags": ["Key"], "summary": "Delete key", "description": "Deletes key", "operationId": "keyDeleteHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}], "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/provisioning/v1/location":
    "get": {"tags": ["Location"], "summary": "List locations", "description": "List locations", "operationId": "locationListHttp", "responses": {"200": {"description": "clientLocationRes", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/clientLocationRes"}}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/provisioning/v1/storage":
    "get": {"tags": ["Storage"], "summary": "List storages", "description": "List storages", "operationId": "storageListHttpV1", "parameters": [{"name": "offset", "in": "query", "description": "Amount of records to skip before beginning to write in response.", "schema": {"type": "integer", "format": "uint64"}}, {"name": "limit", "in": "query", "description": "Max number of records in response", "schema": {"type": "integer", "format": "uint64"}}, {"name": "order_by", "in": "query", "description": "Field name to sort by", "schema": {"type": "string"}}, {"name": "order_direction", "in": "query", "description": "Ascending or descending order", "schema": {"type": "string", "enum": ["asc", "desc"]}}, {"name": "id", "in": "query", "schema": {"type": "string"}}, {"name": "name", "in": "query", "schema": {"type": "string"}}, {"name": "location", "in": "query", "schema": {"type": "string"}}, {"name": "type", "in": "query", "schema": {"type": "string"}}, {"name": "status", "in": "query", "schema": {"type": "string"}}, {"name": "show_deleted", "in": "query", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "StorageListEndpointRes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StorageListEndpointRes"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "deprecated": true}
    "put": {"tags": ["Storage"], "summary": "Create storage", "description": "Creates storage and returns it", "operationId": "storageCreateHttp", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"generate_sftp_password": {"type": "boolean"}, "location": {"type": "string", "enum": ["s-ed1", "s-darz1", "s-ws1", "s-dt2", "ams", "sin", "fra", "mia"]}, "name": {"type": "string"}, "sftp_password": {"type": "string"}, "type": {"type": "string", "enum": ["sftp", "s3"]}}}}}, "required": false}, "responses": {"200": {"description": "Storage", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storage_Storage"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}, "409": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "x-codegen-request-body-name": "Body"}
  "/storage/provisioning/v1/storage/{id}":
    "get": {"tags": ["Storage"], "summary": "Get storage", "description": "Get storage", "operationId": "storageGetHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}], "responses": {"200": {"description": "Storage", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storage_Storage"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
    "post": {"tags": ["Storage"], "summary": "Update storage", "description": "Updates storage and returns it", "operationId": "storageUpdateHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"expires": {"type": "string"}, "server_alias": {"type": "string"}}}}}, "required": false}, "responses": {"200": {"description": "Storage", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storage_Storage"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "x-codegen-request-body-name": "Body"}
    "delete": {"tags": ["Storage"], "summary": "Delete storage", "description": "Delete storage", "operationId": "storageDeleteHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}], "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/provisioning/v1/storage/{id}/credentials":
    "post": {"tags": ["Storage"], "summary": "Reset storage credentials", "description": "Reset storage credentials", "operationId": "storageUpdateCredentialsHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"delete_sftp_password": {"type": "boolean"}, "generate_s3_keys": {"type": "boolean"}, "generate_sftp_password": {"type": "boolean"}, "reset_sftp_keys": {"type": "boolean"}, "sftp_password": {"type": "string"}}}}}, "required": false}, "responses": {"200": {"description": "Storage", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storage_Storage"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "x-codegen-request-body-name": "Body"}
  "/storage/provisioning/v1/storage/{id}/key/{key_id}/link":
    "post": {"tags": ["Storage"], "summary": "Link key to storage", "description": "Link key to storage", "operationId": "keyLinkHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}, {"name": "key_id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}], "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/provisioning/v1/storage/{id}/key/{key_id}/unlink":
    "post": {"tags": ["Storage"], "summary": "Unlink key from storage", "description": "Unlink key from storage", "operationId": "keyUnlinkHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}, {"name": "key_id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}], "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/provisioning/v1/storage/{id}/restore":
    "post": {"tags": ["Storage"], "summary": "Restore deleted storage", "description": "Restore s3 storage which was deleted during last 2 weeks", "operationId": "storageRestoreHttp", "parameters": [{"name": "client_id", "in": "query", "schema": {"type": "integer", "format": "int64"}}, {"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}], "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/provisioning/v1/storage/{id}/s3/bucket/{name}":
    "post": {"tags": ["Storage"], "summary": "Create s3 storage bucket", "description": "Create s3 storage bucket", "operationId": "storageBucketCreateHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}, {"name": "name", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
    "delete": {"tags": ["Storage"], "summary": "Remove s3 storage bucket", "description": "Remove s3 storage bucket", "operationId": "storageBucketRemoveHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}, {"name": "name", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/provisioning/v1/storage/{id}/s3/bucket/{name}/cors":
    "get": {"tags": ["Storage"], "summary": "Get s3 storage bucket cors", "description": "Get s3 storage bucket cors", "operationId": "getStorageBucketCORSHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}, {"name": "name", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"allowedOrigins": {"type": "array", "items": {"type": "string"}}}}}}, "required": false}, "responses": {"200": {"description": "StorageGetBucketCorsEndpointRes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StorageGetBucketCorsEndpointRes"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "x-codegen-request-body-name": "Body"}
    "post": {"tags": ["Storage"], "summary": "Create s3 storage bucket cors", "description": "Create s3 storage bucket cors", "operationId": "storageBucketCORSCreateHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}, {"name": "name", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"allowedOrigins": {"type": "array", "items": {"type": "string"}}}}}}, "required": false}, "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "x-codegen-request-body-name": "Body"}
  "/storage/provisioning/v1/storage/{id}/s3/bucket/{name}/lifecycle":
    "post": {"tags": ["Storage"], "summary": "Create s3 storage bucket lifecycle", "description": "Create s3 storage bucket lifecycle", "operationId": "storageBucketLifecycleCreateHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}, {"name": "name", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"expiration_days": {"type": "integer", "format": "int64"}}}}}, "required": false}, "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "x-codegen-request-body-name": "Body"}
    "delete": {"tags": ["Storage"], "summary": "Delete s3 storage bucket lifecycle", "description": "Delete s3 storage bucket lifecycle", "operationId": "storageBucketLifecycleDeleteHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}, {"name": "name", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/provisioning/v1/storage/{id}/s3/bucket/{name}/policy":
    "get": {"tags": ["Storage"], "summary": "Get s3 storage bucket policy", "description": "Get s3 storage bucket policy", "operationId": "storageBucketPolicyGetHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}, {"name": "name", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "StorageGetBucketPolicyEndpointRes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StorageGetBucketPolicyEndpointRes"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
    "post": {"tags": ["Storage"], "summary": "Create s3 storage bucket policy", "description": "Create s3 storage bucket policy", "operationId": "storageBucketPolicyCreateHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}, {"name": "name", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
    "delete": {"tags": ["Storage"], "summary": "Delete s3 storage bucket policy", "description": "Delete s3 storage bucket policy", "operationId": "storageBucketPolicyDeleteHttp", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}, {"name": "name", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"204": {"description": "A SuccessResponse is a response that shows that operations was completed successfully", "content": {}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/provisioning/v1/storage/{id}/s3/buckets":
    "get": {"tags": ["Storage"], "summary": "List s3 storage buckets", "description": "List s3 storage buckets", "operationId": "storageListBucketsHttp", "parameters": [{"name": "offset", "in": "query", "description": "Amount of records to skip before beginning to write in response.", "schema": {"type": "integer", "format": "uint64"}}, {"name": "limit", "in": "query", "description": "Max number of records in response", "schema": {"type": "integer", "format": "uint64"}}, {"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "format": "int64"}}], "responses": {"200": {"description": "StorageListBucketsEndpointRes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StorageListBucketsEndpointRes"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/provisioning/v2/key":
    "get": {"tags": ["Key"], "summary": "Shows all keys", "description": "Shows all keys", "operationId": "keyListHttpV2", "parameters": [{"name": "offset", "in": "query", "description": "Amount of records to skip before beginning to write in response.", "schema": {"type": "integer", "format": "uint64"}}, {"name": "limit", "in": "query", "description": "Max number of records in response", "schema": {"type": "integer", "format": "uint64"}}, {"name": "order_by", "in": "query", "description": "Field name to sort by", "schema": {"type": "string"}}, {"name": "order_direction", "in": "query", "description": "Ascending or descending order", "schema": {"type": "string", "enum": ["asc", "desc"]}}, {"name": "id", "in": "query", "schema": {"type": "string"}}, {"name": "name", "in": "query", "schema": {"type": "string"}}, {"name": "created", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "KeyListEndpointRes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/KeyListEndpointRes"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/provisioning/v2/storage":
    "get": {"tags": ["Storage"], "summary": "List storages v2", "description": "List storages v2", "operationId": "storageListHttpV2", "parameters": [{"name": "offset", "in": "query", "description": "Amount of records to skip before beginning to write in response.", "schema": {"type": "integer", "format": "uint64"}}, {"name": "limit", "in": "query", "description": "Max number of records in response", "schema": {"type": "integer", "format": "uint64"}}, {"name": "order_by", "in": "query", "description": "Field name to sort by", "schema": {"type": "string"}}, {"name": "order_direction", "in": "query", "description": "Ascending or descending order", "schema": {"type": "string", "enum": ["asc", "desc"]}}, {"name": "id", "in": "query", "schema": {"type": "string"}}, {"name": "name", "in": "query", "schema": {"type": "string"}}, {"name": "location", "in": "query", "schema": {"type": "string"}}, {"name": "type", "in": "query", "schema": {"type": "string"}}, {"name": "status", "in": "query", "schema": {"type": "string"}}, {"name": "show_deleted", "in": "query", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "StorageListEndpointRes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StorageListEndpointRes"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}}
  "/storage/stats/v1/storage/usage/series":
    "post": {"tags": ["Storage Statistics"], "summary": "Storage usage series", "description": "Consumption statistics is updated in near real-time as a standard practice.\nHowever, the frequency of updates can vary, but they are typically available within a 60 minutes period.\nExceptions, such as maintenance periods, may delay data beyond 60 minutes until servers resume and backfill missing statistics.   \n  \nShows storage usage data in series format filtered by clients, storages and interval.", "operationId": "storageUsageSeriesHttpPost", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"from": {"type": "string", "description": "a From date filter", "example": "2006-01-02"}, "granularity": {"type": "string", "description": "a Granularity is period of time for grouping data\nValid values are: 1h, 12h, 24h", "example": "12h"}, "locations": {"type": "array", "description": "a Locations list of filter", "example": ["fra", "mia", "sin", "ams", "s-ed1", "s-darz1", "s-dt2", "lux", "drf"], "items": {"type": "string"}}, "source": {"type": "integer", "description": "a Source is deprecated parameter", "format": "uint8"}, "storages": {"type": "array", "description": "a Storages list of filter", "example": ["123-myStorage"], "items": {"type": "string"}}, "to": {"type": "string", "description": "a To date filter", "example": "2006-01-02"}, "ts_string": {"type": "boolean", "description": "a TsString is configurator of response time format\nswitch response from unix time format to RFC3339 (2006-01-02T15:04:05Z07:00)"}}}}}, "required": false}, "responses": {"200": {"description": "StorageUsageSeriesEndpointRes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StorageUsageSeriesEndpointRes"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "x-codegen-request-body-name": "Body"}
  "/storage/stats/v1/storage/usage/total":
    "post": {"tags": ["Storage Statistics"], "summary": "Storage usage total", "description": "Consumption statistics is updated in near real-time as a standard practice.\nHowever, the frequency of updates can vary, but they are typically available within a 60 minutes period.\nExceptions, such as maintenance periods, may delay data beyond 60 minutes until servers resume and backfill missing statistics.   \n  \nShows storage total usage data in filtered by storages, locations and interval.", "operationId": "storageUsageTotalHttpPost", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"from": {"type": "string", "description": "a From date filter", "example": "2006-01-02"}, "locations": {"type": "array", "description": "a Locations list of filter", "example": ["fra", "mia", "sin", "ams", "s-ed1", "s-darz1", "s-dt2", "lux", "drf"], "items": {"type": "string"}}, "storages": {"type": "array", "description": "a Storages list of filter", "example": ["123-myStorage"], "items": {"type": "string"}}, "to": {"type": "string", "description": "a To date filter", "example": "2006-01-02"}}}}}, "required": false}, "responses": {"200": {"description": "StorageUsageTotalEndpointRes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StorageUsageTotalEndpointRes"}}}}, "400": {"description": "ErrResponse", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrResponse"}}}}}, "x-codegen-request-body-name": "Body"}
tags:
- {"name": "Notifications", "x-displayName": "Notifications"}
- {"name": "Key", "x-displayName": "Key"}
- {"name": "Location", "x-displayName": "Location"}
- {"name": "Storage", "x-displayName": "Storage"}
- {"name": "Storage Statistics", "x-displayName": "Storage Statistics"}
x-tagGroups:
- {"name": "Object Storage API", "tags": ["Notifications", "Key", "Location", "Storage", "Storage Statistics"]}
security: ["APIKey": []]
components:
  schemas:
    EventResponse: {"required": ["name"], "type": "object", "properties": {"bucket_name": {"type": "string"}, "bytes": {"type": "integer", "description": "Bytes as limit", "format": "uint64", "example": 500}, "count": {"type": "integer", "description": "Count as limit", "format": "uint64", "example": 5}, "name": {"type": "string", "description": "name of type notification", "example": "reaching_used_space, reaching_files_quantity, reaching_used_traffic, reaching_used_requests"}, "storage_name": {"type": "string"}, "uuid": {"type": "string"}}, "description": "Event for storage notification"}
    ErrResponse: {"type": "object", "properties": {"error": {"type": "string"}}}
    EventsResponse: {"type": "object", "properties": {"reaching_files_quantity": {"type": "array", "items": {"$ref": "#/components/schemas/LimitByCount"}}, "reaching_used_requests": {"type": "array", "items": {"$ref": "#/components/schemas/LimitByCount"}}, "reaching_used_space": {"type": "array", "items": {"$ref": "#/components/schemas/LimitByBytes"}}, "reaching_used_traffic": {"type": "array", "items": {"$ref": "#/components/schemas/LimitByBytes"}}}, "description": "Events for storage notification"}
    LimitByCount: {"type": "object", "properties": {"bucket_name": {"type": "string"}, "count": {"type": "integer", "format": "uint64"}, "storage_name": {"type": "string"}, "uuid": {"type": "string"}}}
    LimitByBytes: {"type": "object", "properties": {"bucket_name": {"type": "string"}, "bytes": {"type": "integer", "format": "uint64"}, "storage_name": {"type": "string"}, "uuid": {"type": "string"}}}
    EventsMetaResponse: {"type": "object", "properties": {"example": {"$ref": "#/components/schemas/EventsResponse"}, "structure": {"type": "array", "description": "Structure of request body", "items": {"$ref": "#/components/schemas/EventDescription"}}}, "description": "EventsMeta describe how to form POST/PATCH request"}
    EventDescription: {"type": "object", "properties": {"fields": {"type": "array", "description": "Fields description", "items": {"$ref": "#/components/schemas/EventField"}}, "name": {"type": "string", "description": "Name of event for root prop of request structure", "example": "reaching_files_quantity"}}, "description": "EventDescription to form structure of request"}
    EventField: {"type": "object", "properties": {"name": {"type": "string", "description": "Name of field in root event structure", "example": "storage_name"}, "type": {"type": "string", "description": "Type of field", "example": "number, bool, text"}}, "description": "EventField details"}
    KeyListEndpointRes: {"type": "object", "properties": {"data": {"type": "array", "items": {"$ref": "#/components/schemas/Key"}}, "meta": {"$ref": "#/components/schemas/DataMeta"}}}
    Key: {"type": "object", "properties": {"created_at": {"type": "string"}, "id": {"type": "integer", "format": "int64"}, "name": {"type": "string"}}}
    DataMeta: {"type": "object", "properties": {"ToMeta": {"type": "object", "additionalProperties": {"type": "object", "properties": {}}}}, "description": "Provide meta info through layers"}
    clientLocationRes: {"type": "object", "properties": {"address": {"type": "string"}, "allow_for_new_storage": {"type": "string", "enum": ["deny", "allow"]}, "id": {"type": "integer", "format": "int64"}, "name": {"type": "string", "enum": ["s-ed1", "s-ws1", "ams", "sin", "fra", "mia"]}, "type": {"type": "string"}}}
    StorageListEndpointRes: {"type": "object", "properties": {"data": {"type": "array", "items": {"$ref": "#/components/schemas/storage_Storage"}}, "meta": {"$ref": "#/components/schemas/DataMeta"}}}
    storage_Storage: {"type": "object", "properties": {"address": {"type": "string"}, "can_restore": {"type": "boolean"}, "client_id": {"type": "integer", "format": "int64"}, "created_at": {"type": "string"}, "credentials": {"$ref": "#/components/schemas/Credentials"}, "custom_config_file": {"type": "boolean"}, "deleted_at": {"type": "string"}, "disable_http": {"type": "boolean"}, "expires": {"type": "string"}, "id": {"type": "integer", "format": "int64"}, "location": {"type": "string", "enum": ["s-ed1", "s-ws1", "ams", "sin", "fra", "mia"]}, "name": {"type": "string"}, "provisioning_status": {"type": "string"}, "reseller_id": {"type": "integer", "format": "int64"}, "rewrite_rules": {"type": "object", "additionalProperties": {"type": "string"}}, "server_alias": {"type": "string"}, "type": {"type": "string", "enum": ["sftp", "s3"]}}}
    Credentials: {"type": "object", "properties": {"keys": {"type": "array", "items": {"$ref": "#/components/schemas/Key"}}, "s3": {"$ref": "#/components/schemas/S3Credentials"}, "sftp_password": {"type": "string"}}}
    S3Credentials: {"type": "object", "properties": {"access_key": {"type": "string"}, "secret_key": {"type": "string"}}}
    StorageGetBucketCorsEndpointRes: {"type": "object", "properties": {"data": {"$ref": "#/components/schemas/BucketCors"}}, "description": "StorageGetBucketCorsEndpointRes output"}
    BucketCors: {"type": "object", "properties": {"allowedOrigins": {"type": "array", "items": {"type": "string"}}}}
    StorageGetBucketPolicyEndpointRes: {"type": "object", "properties": {"enabledHttpAccess": {"type": "boolean"}}, "description": "StorageGetBucketPolicyEndpointRes output"}
    StorageListBucketsEndpointRes: {"type": "object", "properties": {"data": {"type": "array", "items": {"$ref": "#/components/schemas/BucketDto"}}, "meta": {"$ref": "#/components/schemas/DataMeta"}}, "description": "StorageListBucketsEndpointRes output"}
    BucketDto: {"type": "object", "properties": {"lifecycle": {"type": "integer", "format": "int64"}, "name": {"type": "string"}}, "description": "BucketDto for response"}
    StorageUsageSeriesEndpointRes: {"type": "object", "properties": {"data": {"$ref": "#/components/schemas/StorageUsageSeriesServiceRes"}}}
    StorageUsageSeriesServiceRes: {"type": "object", "properties": {"clients": {"type": "object", "additionalProperties": {"$ref": "#/components/schemas/ClientStats"}, "description": "a Clients grouped data"}}}
    ClientStats: {"type": "object", "properties": {"file_quantity_sum_max": {"type": "integer", "description": "a FileQuantitySumMax is max sum of files quantity for grouped period", "format": "uint64"}, "id": {"type": "integer", "description": "an ID of client", "format": "int64"}, "locations": {"type": "object", "additionalProperties": {"$ref": "#/components/schemas/LocationStats"}, "description": "a Locations grouped data"}, "requests_in_sum": {"type": "integer", "description": "a RequestsInSum is sum of incoming requests for grouped period", "format": "uint64"}, "requests_out_edges_sum": {"type": "integer", "description": "a RequestsOutEdgesSum is sum of out edges requests for grouped period", "format": "uint64"}, "requests_out_wo_edges_sum": {"type": "integer", "description": "a RequestsOutWoEdgesSum is sum of out no edges requests for grouped period", "format": "uint64"}, "requests_sum": {"type": "integer", "description": "a RequestsSum is sum of all requests for grouped period", "format": "uint64"}, "size_sum_bytes_hour": {"type": "integer", "description": "a SizeSumBytesHour is sum of bytes hour for grouped period", "format": "uint64"}, "size_sum_max": {"type": "integer", "description": "a SizeSumMax is max sum of all files sizes for grouped period", "format": "uint64"}, "size_sum_mean": {"type": "integer", "description": "a SizeSumMean is mean sum of all files sizes for grouped period", "format": "uint64"}, "traffic_in_sum": {"type": "integer", "description": "a TrafficInSum is sum of incoming traffic for grouped period", "format": "uint64"}, "traffic_out_edges_sum": {"type": "integer", "description": "a TrafficOutEdgesSum is sum of out edges traffic for grouped period", "format": "uint64"}, "traffic_out_wo_edges_sum": {"type": "integer", "description": "a TrafficOutWoEdgesSum is sum of out no edges traffic for grouped period", "format": "uint64"}, "traffic_sum": {"type": "integer", "description": "a TrafficSum is sum of all traffic for grouped period", "format": "uint64"}}}
    LocationStats: {"type": "object", "properties": {"file_quantity_sum_max": {"type": "integer", "description": "a FileQuantitySumMax is max sum of files quantity for grouped period", "format": "uint64"}, "name": {"type": "string", "description": "a Name of location"}, "requests_in_sum": {"type": "integer", "description": "a RequestsInSum is sum of incoming requests for grouped period", "format": "uint64"}, "requests_out_edges_sum": {"type": "integer", "description": "a RequestsOutEdgesSum is sum of out edges requests for grouped period", "format": "uint64"}, "requests_out_wo_edges_sum": {"type": "integer", "description": "a RequestsOutWoEdgesSum is sum of out no edges requests for grouped period", "format": "uint64"}, "requests_sum": {"type": "integer", "description": "a RequestsSum is sum of all requests for grouped period", "format": "uint64"}, "size_sum_bytes_hour": {"type": "integer", "description": "a SizeSumBytesHour is sum of bytes hour for grouped period", "format": "uint64"}, "size_sum_max": {"type": "integer", "description": "a SizeSumMax is max sum of all files sizes for grouped period", "format": "uint64"}, "size_sum_mean": {"type": "integer", "description": "a SizeSumMean is mean sum of all files sizes for grouped period", "format": "uint64"}, "storages": {"type": "object", "additionalProperties": {"$ref": "#/components/schemas/StorageStats"}, "description": "a Storages grouped data"}, "traffic_in_sum": {"type": "integer", "description": "a TrafficInSum is sum of incoming traffic for grouped period", "format": "uint64"}, "traffic_out_edges_sum": {"type": "integer", "description": "a TrafficOutEdgesSum is sum of out edges traffic for grouped period", "format": "uint64"}, "traffic_out_wo_edges_sum": {"type": "integer", "description": "a TrafficOutWoEdgesSum is sum of out no edges traffic for grouped period", "format": "uint64"}, "traffic_sum": {"type": "integer", "description": "a TrafficSum is sum of all traffic for grouped period", "format": "uint64"}}}
    StorageStats: {"type": "object", "properties": {"buckets_series": {"type": "object", "additionalProperties": {"type": "array", "items": {"type": "array", "items": {"type": "object", "properties": {}}}}, "description": "a BucketsSeries is max bucket files count for grouped period {name:[[timestamp, count]]}"}, "file_quantity_sum_max": {"type": "integer", "description": "a FileQuantitySumMax is max sum of files quantity for grouped period", "format": "uint64"}, "name": {"type": "string", "description": "a Name of storage"}, "requests_in_series": {"type": "array", "description": "a RequestsInSeries is sum of incoming requests for grouped period [[timestamp, count]]", "items": {"type": "array", "items": {"type": "object", "properties": {}}}}, "requests_in_sum": {"type": "integer", "description": "a RequestsInSum is sum of incoming requests for grouped period", "format": "uint64"}, "requests_out_edges_series": {"type": "array", "description": "a RequestsOutWoEdgesSeries is sum of out requests (only edges) for grouped period [[timestamp, count]]", "items": {"type": "array", "items": {"type": "object", "properties": {}}}}, "requests_out_edges_sum": {"type": "integer", "description": "a RequestsOutEdgesSum is sum of out edges requests for grouped period", "format": "uint64"}, "requests_out_wo_edges_series": {"type": "array", "description": "a RequestsOutWoEdgesSeries is sum of out requests (without edges) for grouped period [[timestamp, count]]", "items": {"type": "array", "items": {"type": "object", "properties": {}}}}, "requests_out_wo_edges_sum": {"type": "integer", "description": "a RequestsOutWoEdgesSum is sum of out no edges requests for grouped period", "format": "uint64"}, "requests_series": {"type": "array", "description": "a RequestsSeries is sum of out requests for grouped period [[timestamp, count]]", "items": {"type": "array", "items": {"type": "object", "properties": {}}}}, "requests_sum": {"type": "integer", "description": "a RequestsSum is sum of all requests for grouped period", "format": "uint64"}, "size_bytes_hour_series": {"type": "array", "description": "a SizeBytesHourSeries is value that displays how many bytes were stored per hour [[timestamp, count]]", "items": {"type": "array", "items": {"type": "object", "properties": {}}}}, "size_max_series": {"type": "array", "description": "a SizeMaxSeries is max of files size for grouped period [[timestamp, count]]", "items": {"type": "array", "items": {"type": "object", "properties": {}}}}, "size_mean_series": {"type": "array", "description": "a SizeMeanSeries is mean of files size for grouped period [[timestamp, count]]", "items": {"type": "array", "items": {"type": "object", "properties": {}}}}, "size_sum_bytes_hour": {"type": "integer", "description": "a SizeSumBytesHour is sum of bytes hour for grouped period", "format": "uint64"}, "size_sum_max": {"type": "integer", "description": "a SizeSumMax is max sum of all files sizes for grouped period", "format": "uint64"}, "size_sum_mean": {"type": "integer", "description": "a SizeSumMean is mean sum of all files sizes for grouped period", "format": "uint64"}, "traffic_in_series": {"type": "array", "description": "a TrafficInSeries is sum of incoming traffic bytes for grouped period [[timestamp, count]]", "items": {"type": "array", "items": {"type": "object", "properties": {}}}}, "traffic_in_sum": {"type": "integer", "description": "a TrafficInSum is sum of incoming traffic for grouped period", "format": "uint64"}, "traffic_out_edges_series": {"type": "array", "description": "a TrafficOutWoEdgesSeries is sum of out traffic bytes (only edges) for grouped period [[timestamp, count]]", "items": {"type": "array", "items": {"type": "object", "properties": {}}}}, "traffic_out_edges_sum": {"type": "integer", "description": "a TrafficOutEdgesSum is sum of out edges traffic for grouped period", "format": "uint64"}, "traffic_out_wo_edges_series": {"type": "array", "description": "a TrafficOutWoEdgesSeries is sum of out traffic bytes (without edges) for grouped period [[timestamp, count]]", "items": {"type": "array", "items": {
              "type": "object", "properties": {}}}}, "traffic_out_wo_edges_sum": {"type": "integer", "description": "a TrafficOutWoEdgesSum is sum of out no edges traffic for grouped period", "format": "uint64"}, "traffic_series": {"type": "array", "description": "a TrafficSeries is sum of traffic bytes for grouped period [[timestamp, count]]", "items": {"type": "array", "items": {"type": "object", "properties": {}}}}, "traffic_sum": {"type": "integer", "description": "a TrafficSum is sum of all traffic for grouped period", "format": "uint64"}}}
    StorageUsageTotalEndpointRes: {"type": "object", "properties": {"data": {"$ref": "#/components/schemas/StorageUsageTotalRes"}}}
    StorageUsageTotalRes: {"type": "array", "description": "StorageUsageTotalRes for response", "items": {"$ref": "#/components/schemas/StorageStatsTotalElement"}}
    StorageStatsTotalElement: {"type": "object", "properties": {"metrics": {"$ref": "#/components/schemas/StatsMetrics"}}, "description": "StorageStatsTotalElement for response"}
    StatsMetrics: {"type": "object", "properties": {"file_quantity_sum_max": {"type": "integer", "description": "a FileQuantitySumMax is max sum of files quantity for grouped period", "format": "uint64"}, "requests_in_sum": {"type": "integer", "description": "a RequestsInSum is sum of incoming requests for grouped period", "format": "uint64"}, "requests_out_edges_sum": {"type": "integer", "description": "a RequestsOutEdgesSum is sum of out edges requests for grouped period", "format": "uint64"}, "requests_out_wo_edges_sum": {"type": "integer", "description": "a RequestsOutWoEdgesSum is sum of out no edges requests for grouped period", "format": "uint64"}, "requests_sum": {"type": "integer", "description": "a RequestsSum is sum of all requests for grouped period", "format": "uint64"}, "size_sum_bytes_hour": {"type": "integer", "description": "a SizeSumBytesHour is sum of bytes hour for grouped period", "format": "uint64"}, "size_sum_max": {"type": "integer", "description": "a SizeSumMax is max sum of all files sizes for grouped period", "format": "uint64"}, "size_sum_mean": {"type": "integer", "description": "a SizeSumMean is mean sum of all files sizes for grouped period", "format": "uint64"}, "traffic_in_sum": {"type": "integer", "description": "a TrafficInSum is sum of incoming traffic for grouped period", "format": "uint64"}, "traffic_out_edges_sum": {"type": "integer", "description": "a TrafficOutEdgesSum is sum of out edges traffic for grouped period", "format": "uint64"}, "traffic_out_wo_edges_sum": {"type": "integer", "description": "a TrafficOutWoEdgesSum is sum of out no edges traffic for grouped period", "format": "uint64"}, "traffic_sum": {"type": "integer", "description": "a TrafficSum is sum of all traffic for grouped period", "format": "uint64"}}}
  securitySchemes:
    APIKey:
      description: "API key for authentication. Make sure to include the word `apikey`, followed by a single space and then your token.\nExample: `apikey 1234$abcdef`"
      type: apiKey
      in: header
      name: Authorization
