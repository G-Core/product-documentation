"openapi": "3.1.0"
"info": {"title": "Gcore OpenAPI â€“ Cloud API", "description": "This OpenAPI is an aggregated OpenAPI specification that unifies all Gcore products into a single file. It covers Cloud, CDN, DNS, WAAP, DDoS Protection, Object Storage, Streaming, and FastEdge services.", "version": "2025-10-05T16:07:48.840328+00:00"}
"servers": ["url": "https://api.gcore.com"]
paths:
  "/cloud/v1/bmcapacity/{project_id}/{region_id}":
    "get": {"operationId": "BmCapacityHandler.get", "summary": "Get bare metal capacity", "description": "Get the number of available bare metal nodes per flavor in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Available bare metal nodes count per flavor", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BaremetalCapacitySchema"}}}}}, "tags": ["Bare Metal"]}
  "/cloud/v2/bmcapacity/{region_id}":
    "get": {"operationId": "ClientBmCapacityHandler.get", "summary": "Get bare metal capacity from default project", "description": "Get the number of available bare metal nodes without client's reservations in the default project.", "parameters": [{"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "client_id", "required": false, "description": "Available for roots", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Available bare metal nodes count per flavor", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BaremetalCapacitySchema"}}}}}, "tags": ["Bare Metal"]}
  "/cloud/v1/bmflavors/{project_id}/{region_id}":
    "get": {"operationId": "BmFlavorsViewSet.get", "summary": "List bare metal flavors", "description": "List all available bare metal flavors in the specified project and region.\nWhen `include_prices` is specified, the list includes pricing information.\nA client in trial mode gets all price values as 0. If you get Pricing Error contact the support.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "disabled", "required": false, "description": "Flag for filtering disabled flavors in the region. Defaults to true", "schema": {"type": "boolean"}}, {"in": "query", "name": "exclude_linux", "required": false, "description": "Set to true to exclude flavors dedicated to linux images. Default False", "schema": {"type": "boolean"}}, {"in": "query", "name": "exclude_windows", "required": false, "description": "Set to true to exclude flavors dedicated to windows images. Default False", "schema": {"type": "boolean"}}, {"in": "query", "name": "include_capacity", "required": false, "description": "Set to true if the response should include flavor capacity", "schema": {"type": "boolean"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Set to true if the response should include flavor prices", "schema": {"type": "boolean"}}, {"in": "query", "name": "include_reservation_stock", "required": false, "description": "Optional. Set to true if flavor listing should include count of reserved resources in stock.", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of bare metal flavors", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BareMetalFlavorExtendedCollectionSerializer"}}}}}, "tags": ["Bare Metal"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nbaremetal_flavor_list = client.cloud.baremetal.flavors.list(\n    project_id=0,\n    region_id=0,\n)\nprint(baremetal_flavor_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  baremetalFlavorList, err := client.Cloud.Baremetal.Flavors.List(context.TODO(), cloud.BaremetalFlavorListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", baremetalFlavorList.Count)\n}\n"}]}
  "/cloud/v1/bmflavors/{region_id}":
    "get": {"operationId": "DefaultBmFlavorsViewSet.get", "summary": "List bare metal flavors from default project", "description": "List all available bare metal flavors in the default project.\nWhen `include_prices` is specified, the list includes pricing information.\nA client in trial mode gets all price values as 0. If you get Pricing Error contact the support.", "parameters": [{"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "client_id", "required": false, "description": "Client identifier. Must be used for users w/o `client_id` in jwt", "schema": {"type": "integer"}}, {"in": "query", "name": "disabled", "required": false, "description": "Flag for filtering disabled flavors in the region. Defaults to true", "schema": {"type": "boolean"}}, {"in": "query", "name": "exclude_linux", "required": false, "description": "Set to true to exclude flavors dedicated to linux images. Default False", "schema": {"type": "boolean"}}, {"in": "query", "name": "exclude_windows", "required": false, "description": "Set to true to exclude flavors dedicated to windows images. Default False", "schema": {"type": "boolean"}}, {"in": "query", "name": "include_capacity", "required": false, "description": "Set to true if the response should include flavor capacity", "schema": {"type": "boolean"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Set to true if the response should include flavor prices", "schema": {"type": "boolean"}}, {"in": "query", "name": "include_reservation_stock", "required": false, "description": "Optional. Set to true if flavor listing should include count of reserved resources in stock.", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of bare metal flavors", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BareMetalFlavorExtendedCollectionSerializer"}}}}}, "tags": ["Bare Metal"]}
  "/cloud/v1/bminstances/{project_id}/{region_id}":
    "post": {"operationId": "BmInstanceCreateSet.post", "summary": "Create bare metal server", "description": "Create a new bare metal server with the specified configuration.\n\nHow to get access:\n\nFor Linux,\n\n - Use the `user_data` field to provide a\n[cloud-init script](https://cloudinit.readthedocs.io/en/latest/reference/examples.html)\nin base64 to apply configurations to the instance.\n- Specify the `username` and `password` to create a new user.\n- When only `password` is provided, it is set as the password for the default user of the image.\n- The `user_data` is ignored when the `password` is specified.\n\n\nFor Windows,\n\n - Use the `user_data` field to provide a\n[cloudbase-init script](https://cloudbase-init.readthedocs.io/en/latest/userdata.html#cloud-config)\nin base64 to create new users on Windows.\n- Use the `password` field to set the password for the 'Admin' user on Windows.\n- The password of the Admin user cannot be updated via `user_data`.\n- The `username` cannot be specified in the request.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateBareMetalServerSerializer"}}}}, "tags": ["Bare Metal"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.baremetal.servers.create(\n    project_id=1,\n    region_id=1,\n    flavor=\"bm2-hf-medium\",\n    interfaces=[{\n        \"type\": \"external\"\n    }],\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Baremetal.Servers.New(context.TODO(), cloud.BaremetalServerNewParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n    Flavor: \"bm2-hf-medium\",\n    Interfaces: []cloud.BaremetalServerNewParamsInterfaceUnion{cloud.BaremetalServerNewParamsInterfaceUnion{\n      OfExternal: &cloud.BaremetalServerNewParamsInterfaceExternal{\n\n      },\n    }},\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "BmInstanceCreateSet.get", "summary": "List bare metal servers", "description": "List all bare metal servers in the specified project and region.\nResults can be filtered by various parameters like name, status, and IP address.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "changes-before", "required": false, "description": "Filters the instances by a date and time stamp when the instances last changed.", "schema": {"description": "Filters the instances by a date and time stamp when the instances last changed.", "examples": ["2025-10-01T12:00:00Z"], "format": "date-time", "title": "Changes-Before", "type": "string"}}, {"in": "query", "name": "changes-since", "required": false, "description": "Filters the instances by a date and time stamp when the instances last changed status.", "schema": {"description": "Filters the instances by a date and time stamp when the instances last changed status.", "examples": ["2025-10-01T12:00:00Z"], "format": "date-time", "title": "Changes-Since", "type": "string"}}, {"in": "query", "name": "flavor_id", "required": false, "description": "Filter out instances by `flavor_id`. Flavor id must match exactly.", "schema": {"description": "Filter out instances by `flavor_id`. Flavor id must match exactly.", "examples": ["bm2-hf-small"], "title": "Flavor Id", "type": "string"}}, {"in": "query", "name": "flavor_prefix", "required": false, "description": "Filter out instances by `flavor_prefix`.", "schema": {"description": "Filter out instances by `flavor_prefix`.", "examples": ["bm2-", "bm2-hf"], "title": "Flavor Prefix", "type": "string"}}, {"in": "query", "name": "include_k8s", "required": false, "description": "Include managed k8s worker nodes", "schema": {"default": true, "description": "Include managed k8s worker nodes", "title": "Include K8S", "type": "boolean"}}, {"in": "query", "name": "ip", "required": false, "description": "An IPv4 address to filter results by. Note: partial matches are allowed. For example, searching for 192.168.0.1 will return 192.168.0.1, 192.168.0.10, 192.168.0.110, and so on.", "schema": {"description": "An IPv4 address to filter results by. Note: partial matches are allowed. For example, searching for 192.168.0.1 will return 192.168.0.1, 192.168.0.10, 192.168.0.110, and so on.", "examples": ["192.168.0.1"], "title": "Ip", "type": "string"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "name", "required": false, "description": "Filter instances by name. You can provide a full or partial name, instances with matching names will be returned. For example, entering 'test' will return all instances that contain 'test' in their name.", "schema": {"description": "Filter instances by name. You can provide a full or partial name, instances with matching names will be returned. For example, entering 'test' will return all instances that contain 'test' in their name.", "title": "Name", "type": "string"}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "only_isolated", "required": false, "description": "Include only isolated instances", "schema": {"default": false,
            "description": "Include only isolated instances", "title": "Only Isolated", "type": "boolean"}}, {"in": "query", "name": "only_with_fixed_external_ip", "required": false, "description": "Return bare metals only with external fixed IP addresses.", "schema": {"description": "Return bare metals only with external fixed IP addresses.", "examples": [true], "title": "Only With Fixed External Ip", "type": "boolean"}}, {"in": "query", "name": "order_by", "required": false, "description": "Order by field and direction.", "schema": {"$ref": "#/components/schemas/BareMetalOrderByChoices", "default": "created.desc", "description": "Order by field and direction.", "examples": ["name.asc"]}}, {"in": "query", "name": "profile_name", "required": false, "description": "Filter result by ddos protection profile name. Effective only with `with_ddos` set to true.", "schema": {"description": "Filter result by ddos protection profile name. Effective only with `with_ddos` set to true.", "examples": ["profile_name"], "title": "Profile Name", "type": "string"}}, {"in": "query", "name": "protection_status", "required": false, "description": "Filter result by DDoS `protection_status`. Effective only with `with_ddos` set to true. (Active, Queued or Error)", "schema": {"description": "Filter result by DDoS `protection_status`. Effective only with `with_ddos` set to true. (Active, Queued or Error)", "enum": ["Active", "Queued", "Error"], "examples": ["Active"], "title": "Protection Status", "type": "string"}}, {"in": "query", "name": "status", "required": false, "description": "Filters instances by a server status, as a string.", "schema": {"$ref": "#/components/schemas/BareMetalStatusQueryChoices", "description": "Filters instances by a server status, as a string.", "examples": ["ACTIVE"]}}, {"in": "query", "name": "tag_key_value", "required": false, "description": "Optional. Filter by tag key-value pairs.", "schema": {"contentMediaType": "application/json", "contentSchema": {"additionalProperties": {"description": "Tag value. The maximum size for a value is 1024 bytes.", "examples": ["my-tag-value"], "maxLength": 1024, "minLength": 1, "type": "string"}, "propertyNames": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1}, "type": "object"}, "description": "Optional. Filter by tag key-value pairs.", "title": "Tag Key Value", "type": "string"}}, {"in": "query", "name": "tag_value", "required": false, "description": "Optional. Filter by tag values. ?`tag_value`=value1&`tag_value`=value2", "schema": {"description": "Optional. Filter by tag values. ?`tag_value`=value1&`tag_value`=value2", "examples": [["value1", "value2"]], "items": {"description": "Tag value. The maximum size for a value is 1024 bytes.", "examples": ["my-tag-value"], "maxLength": 1024, "minLength": 1, "type": "string"}, "title": "Tag Value", "type": "array"}}, {"in": "query", "name": "type_ddos_profile", "required": false, "description": "Return bare metals either only with advanced or only basic DDoS protection. Effective only with `with_ddos` set to true. (advanced or basic)", "schema": {"description": "Return bare metals either only with advanced or only basic DDoS protection. Effective only with `with_ddos` set to true. (advanced or basic)", "enum": ["basic", "advanced"], "examples": ["advanced"], "title": "Type Ddos Profile", "type": "string"}}, {"in": "query", "name": "uuid", "required": false, "description": "Filter the server list result by the UUID of the server. Allowed UUID part", "schema": {"description": "Filter the server list result by the UUID of the server. Allowed UUID part", "examples": ["b5b4d65d-945f-4b98-ab6f-332319c724ef"], "maxLength": 36, "title": "Uuid", "type": "string"}}, {"in": "query", "name": "with_ddos", "required": false, "description": "Include DDoS profile information for bare-metal servers in the response when set to `true`. Otherwise, the `ddos_profile` field in the response is `null` by default.", "schema": {"default": false, "description": "Include DDoS profile information
              for bare-metal servers in the response when set to `true`. Otherwise, the `ddos_profile` field in the response is `null` by default.", "examples": [true], "title": "With Ddos", "type": "boolean"}}, {"in": "query", "name": "with_interfaces_name", "required": false, "description": "Include `interface_name` in the addresses", "schema": {"default": false, "description": "Include `interface_name` in the addresses", "examples": [true], "title": "With Interfaces Name", "type": "boolean"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BareMetalServerCollectionSerializer"}}}}}, "tags": ["Bare Metal"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.baremetal.servers.list(\n    project_id=1,\n    region_id=1,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Baremetal.Servers.List(context.TODO(), cloud.BaremetalServerListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/bminstances/{project_id}/{region_id}/{server_id}/rebuild":
    "post": {"operationId": "BmInstanceRebuildHandler.post", "summary": "Rebuild bare metal server", "description": "Rebuild a bare metal server with a new image while preserving its configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "server_id", "required": true, "description": "Server ID", "schema": {"description": "Server ID", "examples": ["024a29e-b4b7-4c91-9a46-505be123d9f8"], "format": "uuid4", "title": "Server Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RebuildBaremetalSerializer"}}}}, "tags": ["Bare Metal"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.baremetal.servers.rebuild(\n    server_id=\"024a29e-b4b7-4c91-9a46-505be123d9f8\",\n    project_id=1,\n    region_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Baremetal.Servers.Rebuild(\n    context.TODO(),\n    \"024a29e-b4b7-4c91-9a46-505be123d9f8\",\n    cloud.BaremetalServerRebuildParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/bminstances/{project_id}/{region_id}/available_flavors":
    "post": {"operationId": "BMInstanceAvailableFlavorsHandler.post", "summary": "List flavors matching image requirements", "description": "List all flavors that are suitable for creating a bare metal server with the specified image.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Set to true if flavor listing should include flavor prices.", "schema": {"description": "Set to true if flavor listing should include flavor prices.", "title": "Include Prices", "type": "boolean"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BareMetalFlavorExtendedCollectionSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AvailableBaremetalFlavorsBodySerializer"}}}}, "tags": ["Bare Metal"]}
  "/cloud/v1/bminstances/{project_id}/{region_id}/check_limits":
    "post": {"operationId": "BMInstanceCheckLimitsHandler.post", "summary": "Check bare metal quota", "description": "Check if the regional quota is exceeded for bare metal server creation.\nIf exceeded, calculate additional quotas needed.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionRequestedQuotasSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CheckQuotaBeforeBMCreationSerializer"}}}}, "tags": ["Bare Metal"]}
  "/cloud/v1/caas/{project_id}/{region_id}/check_limits":
    "post": {"operationId": "ContainerCheckLimitsHandler.post", "summary": "Check container quota", "description": "Check if regional quota is exceeded, if yes the number of additional\nquotas needed to create the specified cluster will be calculated", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Dict of exceeding quotas", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionalDiffQuotasSchema"}}}}, "400": {"description": "Invalid parameter in request"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CheckQuotaBeforeContainerCreation"}}}}, "tags": ["Container as a Service"]}
  "/cloud/v1/caas/{project_id}/{region_id}/containers":
    "post": {"operationId": "ContainersHandler.post", "summary": "Create container", "description": "Create a new container with the specified configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerCreateSerializer"}}}}, "tags": ["Container as a Service"]}
    "get": {"operationId": "ContainersHandler.get", "summary": "List containers", "description": "List all containers in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerListSerializer"}}}}}, "tags": ["Container as a Service"]}
  "/cloud/v1/caas/{project_id}/{region_id}/containers/{container_name}":
    "get": {"operationId": "ContainerHandler.get", "summary": "Get container", "description": "Get detailed information about a specific container.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "container_name", "required": true, "description": "Container name", "schema": {"description": "Container name", "examples": ["my-container"], "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]+[a-zA-Z0-9]$", "title": "Container Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerSerializer"}}}}}, "tags": ["Container as a Service"]}
    "patch": {"operationId": "ContainerHandler.patch", "summary": "Update container", "description": "Update the configuration of an existing container.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "container_name", "required": true, "description": "Container name", "schema": {"description": "Container name", "examples": ["my-container"], "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]+[a-zA-Z0-9]$", "title": "Container Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerPatchSerializer"}}}}, "tags": ["Container as a Service"]}
    "delete": {"operationId": "ContainerHandler.delete", "summary": "Delete container", "description": "Delete a container and all its associated resources.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "container_name", "required": true, "description": "Container name", "schema": {"description": "Container name", "examples": ["my-container"], "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]+[a-zA-Z0-9]$", "title": "Container Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Container as a Service"]}
  "/cloud/v1/caas/{project_id}/{region_id}/containers/{container_name}/logs":
    "get": {"operationId": "LogsContainerHandler.get", "summary": "Get container logs", "description": "Get the logs for a specific container.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "container_name", "required": true, "description": "Container name", "schema": {"description": "Container name", "examples": ["my-container"], "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]+[a-zA-Z0-9]$", "title": "Container Name", "type": "string"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit the number of logs lines", "schema": {"default": 1000, "description": "Limit the number of logs lines", "examples": [10], "maximum": 100000, "minimum": 1, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CaasLogsSerializer"}}}}}, "tags": ["Container as a Service"]}
  "/cloud/v1/caas/flavors/{project_id}/{region_id}":
    "get": {"operationId": "CaaSFlavorsHandler.get", "summary": "List container flavors", "description": "List all available container flavors in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "name", "required": false, "description": "Flavor name", "schema": {"anyOf": [{"pattern": "^[0-9]{0,12}mCPU-[0-9]{0,12}M[i]?B$", "type": "string"}, "type": "null"], "default": null, "description": "Flavor name", "examples": ["128mCPU-128MiB"], "title": "Name"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CaasFlavorListSerializer"}}}}}, "tags": ["Container as a Service"]}
  "/cloud/v1/caas/keys/{project_id}/{region_id}":
    "post": {"operationId": "CaaSAuthKeysHandler.post", "summary": "Create API key", "description": "Create a new API key for container authentication.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CaasApiKeyCreateResultSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CaasApiKeyCreateSerializer"}}}}, "tags": ["Container as a Service"]}
    "get": {"operationId": "CaaSAuthKeysHandler.get", "summary": "List API keys", "description": "List all API keys in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CaasApiKeyListSerializer"}}}}}, "tags": ["Container as a Service"]}
  "/cloud/v1/caas/keys/{project_id}/{region_id}/{key_name}":
    "get": {"operationId": "CaaSAuthKeyHandler.get", "summary": "Get API key", "description": "Get detailed information about a specific API key.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "key_name", "required": true, "description": "Key name", "schema": {"description": "Key name", "examples": ["key-name"], "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]+[a-zA-Z0-9]$", "title": "Key Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CaasApiKeySerializer"}}}}}, "tags": ["Container as a Service"]}
    "patch": {"operationId": "CaaSAuthKeyHandler.patch", "summary": "Update API key", "description": "Update the configuration of an existing API key.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "key_name", "required": true, "description": "Key name", "schema": {"description": "Key name", "examples": ["key-name"], "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]+[a-zA-Z0-9]$", "title": "Key Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CaasApiKeySerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CaasApiKeyUpdateSerializer"}}}}, "tags": ["Container as a Service"]}
    "delete": {"operationId": "CaaSAuthKeyHandler.delete", "summary": "Delete API key", "description": "Delete an API key and revoke its access.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "key_name", "required": true, "description": "Key name", "schema": {"description": "Key name", "examples": ["key-name"], "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]+[a-zA-Z0-9]$", "title": "Key Name", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Container as a Service"]}
  "/cloud/v1/caas/secrets/{project_id}/{region_id}":
    "post": {"operationId": "CaaSPullSecretsHandler.post", "summary": "Create pull secret", "description": "Create a new pull secret for container image registry authentication.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PullSecretSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PullSecretCreateSerializer"}}}}, "tags": ["Container as a Service"]}
    "get": {"operationId": "CaaSPullSecretsHandler.get", "summary": "List pull secrets", "description": "List all pull secrets in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project id", "schema": {"description": "Project id", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region id", "schema": {"description": "Region id", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PullSecretListSerializer"}}}}}, "tags": ["Container as a Service"]}
  "/cloud/v1/caas/secrets/{project_id}/{region_id}/{secret_name}":
    "get": {"operationId": "PullSecretHandler.get", "summary": "Get pull secret", "description": "Get detailed information about a specific pull secret.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "secret_name", "required": true, "description": "Pull secret name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Pull secret", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PullSecretSerializer"}}}}, "404": {"description": "Resource not found"}}, "tags": ["Container as a Service"]}
    "patch": {"operationId": "PullSecretHandler.patch", "summary": "Update pull secret", "description": "Update the configuration of an existing pull secret.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "secret_name", "required": true, "description": "Pull secret name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Pull secret", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PullSecretSerializer"}}}}, "404": {"description": "Resource not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PullSecretUpdateSerializer"}}}}, "tags": ["Container as a Service"]}
    "delete": {"operationId": "PullSecretHandler.delete", "summary": "Delete pull secret", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "secret_name", "required": true, "description": "Pull secret name", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}, "404": {"description": "Resource not found"}}, "tags": ["Container as a Service"]}
  "/cloud/v1/pricing/{project_id}/{region_id}/caas":
    "post": {"operationId": "CaasPricingHandler.post", "summary": "Preview container price", "description": "Preview the billing price for a container based on the provided specifications.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerPriceRequestSerializer"}}}}, "tags": ["Container as a Service"]}
  "/cloud/v1/cost_report/resources":
    "post": {"operationId": "CostReportResourcesHandler.post", "summary": "Get cost report resources (pay-as-you-go only)", "description": "Get a detailed cost report for a given period and specific resources.\nRequested period should not exceed 31 days.\n\nNote: This report assumes there are no active commit features in the billing plan.\nIf there are active commit features (pre-paid resources) in your plan, use /v1/`reservation_cost_report`/totals,\nas the results from this report will not be accurate.\n\nReceiving data from the past hour might lead to incomplete statistics.\nFor the most accurate data, we recommend accessing the statistics after at least one hour.\nTypically, updates are available within a 24-hour period, although the frequency can vary.\nMaintenance periods or other exceptions may cause delays, potentially extending beyond 24 hours until\nthe servers are back online and the missing data is filled in.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CostReportResourcesResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CostReportResourcesRequestSerializer"}}}}, "tags": ["Cost Reports"], "x-codeSamples": [{"lang": "Python", "source": "from datetime import datetime\nfrom gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ncost_report_detailed = client.cloud.cost_reports.get_detailed(\n    time_from=datetime.fromisoformat(\"2023-01-01T00:00:00\"),\n    time_to=datetime.fromisoformat(\"2023-02-01T00:00:00\"),\n)\nprint(cost_report_detailed.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n  \"time\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  costReportDetailed, err := client.Cloud.CostReports.GetDetailed(context.TODO(), cloud.CostReportGetDetailedParams{\n    TimeFrom: time.Now(),\n    TimeTo: time.Now(),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", costReportDetailed.Count)\n}\n"}]}
  "/cloud/v1/cost_report/totals":
    "post": {"operationId": "CostReportTotalsHandler.post", "summary": "Get cost report totals (pay-as-you-go only)", "description": "Get cost report totals (aggregated costs) for a given period. Requested period should not exceed 31 days.\n\nNote: This report assumes there are no active commit features in the billing plan.\nIf there are active commit features (pre-paid resources) in your plan, use /v1/`reservation_cost_report`/totals,\nas the results from this report will not be accurate.\n\nReceiving data from the past hour might lead to incomplete statistics.\nFor the most accurate data, we recommend accessing the statistics after at least one hour.\nTypically, updates are available within a 24-hour period, although the frequency can vary.\nMaintenance periods or other exceptions may cause delays, potentially extending beyond 24 hours until\nthe servers are back online and the missing data is filled in.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CostReportTotalsResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CostReportTotalsRequestSerializer"}}}}, "tags": ["Cost Reports"], "x-codeSamples": [{"lang": "Python", "source": "from datetime import datetime\nfrom gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ncost_report_aggregated = client.cloud.cost_reports.get_aggregated(\n    time_from=datetime.fromisoformat(\"2023-01-01T00:00:00\"),\n    time_to=datetime.fromisoformat(\"2023-02-01T00:00:00\"),\n)\nprint(cost_report_aggregated.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n  \"time\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  costReportAggregated, err := client.Cloud.CostReports.GetAggregated(context.TODO(), cloud.CostReportGetAggregatedParams{\n    TimeFrom: time.Now(),\n    TimeTo: time.Now(),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", costReportAggregated.Count)\n}\n"}]}
  "/cloud/v1/reservation_cost_report/totals":
    "post": {"operationId": "ReservationCostReportTotalsHandler.post", "summary": "Get monthly cost report totals (commits and pay-as-you-go)", "description": "Retrieve a detailed cost report totals for a specified month, which includes\nboth commit and pay-as-you-go (overcommit) prices.\nAdditionally, it provides the spent billing units (e.g., hours or GB) for resources.\nThe \"`time_to`\" parameter represents all days in the specified month.\n\nReceiving data from the past hour might lead to incomplete statistics.\nFor the most accurate data, we recommend accessing the statistics after at least one hour.\nTypically, updates are available within a 24-hour period, although the frequency can vary.\nMaintenance periods or other exceptions may cause delays, potentially extending beyond 24 hours until\nthe servers are back online and the missing data is filled in.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ReservationCostReportTotalsResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ReservationCostReportTotalsRequestSerializer"}}}}, "tags": ["Cost Reports"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ncost_report_aggregated_monthly = client.cloud.cost_reports.get_aggregated_monthly()\nprint(cost_report_aggregated_monthly.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  costReportAggregatedMonthly, err := client.Cloud.CostReports.GetAggregatedMonthly(context.TODO(), cloud.CostReportGetAggregatedMonthlyParams{\n\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", costReportAggregatedMonthly.Count)\n}\n"}]}
  "/cloud/v1/usage_report":
    "post": {"operationId": "UsageReportHandler.post", "summary": "Get usage statistics report", "description": "Receiving data from the past hour might lead to incomplete statistics.\nFor the most accurate data, we recommend accessing the statistics after at least one hour.\nTypically, updates are available within a 24-hour period, although the frequency can vary.\nMaintenance periods or other exceptions may cause delays, potentially extending beyond 24 hours until\nthe servers are back online and the missing data is filled in.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UsageReportResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UsageReportRequestSerializer"}}}}, "tags": ["Cost Reports"], "x-codeSamples": [{"lang": "Python", "source": "from datetime import datetime\nfrom gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nusage_report = client.cloud.usage_reports.get(\n    time_from=datetime.fromisoformat(\"2023-01-01T00:00:00\"),\n    time_to=datetime.fromisoformat(\"2023-02-01T00:00:00\"),\n)\nprint(usage_report.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n  \"time\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  usageReport, err := client.Cloud.UsageReports.Get(context.TODO(), cloud.UsageReportGetParams{\n    TimeFrom: time.Now(),\n    TimeTo: time.Now(),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", usageReport.Count)\n}\n"}]}
  "/cloud/v1/ddos/accessibility/{region_id}":
    "get": {"operationId": "AccessibilityHandler.get", "summary": "Get DDoS protection access status", "description": "Check DDoS protection service accessibility and operational status for a specific region.", "parameters": [{"in": "path", "name": "region_id", "required": true, "description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "schema": {"description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AccessStatusSerializer"}}}}}, "tags": ["DDoS Protection"]}
  "/cloud/v1/ddos/profile-templates/{region_id}":
    "get": {"operationId": "ProfileTemplatesHandler.get", "summary": "List DDoS protection profile templates", "description": "This endpoint returns a comprehensive list of pre-configured DDoS protection\ntemplates that can be used to create protection profiles. Each template contains\npredefined security rules, field configurations, and protection parameters\noptimized for different types of applications and attack vectors.\n\nTemplates include metadata such as name, description, and configurable fields\nwith validation schemas. These templates serve as blueprints for creating\ncustomized DDoS protection profiles tailored to specific security requirements.", "parameters": [{"in": "path", "name": "region_id", "required": true, "description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "schema": {"description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ClientProfileTemplateSerializerList"}}}}}, "tags": ["DDoS Protection"]}
  "/cloud/v1/ddos/profiles/{project_id}/{region_id}":
    "post": {"operationId": "ProfilesHandler.post", "summary": "Create DDoS protection profile", "description": "Creates DDoS protection profile to safeguard a specific resource (instance, bare metal, or load balancer)\nagainst DDoS attacks. The process involves comprehensive validation including profile field validation,\nIP address verification, and resource ownership confirmation.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Unique identifier of the cloud project that owns the DDoS protection resources", "schema": {"description": "Unique identifier of the cloud project that owns the DDoS protection resources", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "schema": {"description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateClientProfileSerializer"}}}}, "tags": ["DDoS Protection"]}
    "get": {"operationId": "ProfilesHandler.get", "summary": "List DDoS protection profiles", "description": "This endpoint returns a comprehensive list of all DDoS protection profiles\nassociated with the specified project and region. Each profile contains\ndetailed information about the protection configuration including IP addresses,\nprofile templates, field values, activation status, and current operational state.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Unique identifier of the cloud project that owns the DDoS protection resources", "schema": {"description": "Unique identifier of the cloud project that owns the DDoS protection resources", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "schema": {"description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ClientProfileSerializerList"}}}}}, "tags": ["DDoS Protection"]}
  "/cloud/v1/ddos/profiles/{project_id}/{region_id}/{profile_id}":
    "patch": {"operationId": "ProfileHandler.patch", "summary": "Update DDoS protection profile", "description": "Updates various aspects of DDoS protection profile including profile template,\nfield values, and activation status. The update process includes comprehensive\nvalidation to ensure changes are compatible with the existing configuration\nand security requirements.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Unique identifier of the cloud project that owns the DDoS protection resources", "schema": {"description": "Unique identifier of the cloud project that owns the DDoS protection resources", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "schema": {"description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "profile_id", "required": true, "description": "Unique identifier of the specific DDoS protection profile to be operated on", "schema": {"description": "Unique identifier of the specific DDoS protection profile to be operated on", "examples": [1], "title": "Profile Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MutateClientProfileSerializer"}}}}, "tags": ["DDoS Protection"]}
    "delete": {"operationId": "ProfileHandler.delete", "summary": "Delete DDoS protection profile", "description": "Deletes DDoS protection profile and removes all associated protection rules and configurations.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Unique identifier of the cloud project that owns the DDoS protection resources", "schema": {"description": "Unique identifier of the cloud project that owns the DDoS protection resources", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "schema": {"description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "profile_id", "required": true, "description": "Unique identifier of the specific DDoS protection profile to be operated on", "schema": {"description": "Unique identifier of the specific DDoS protection profile to be operated on", "examples": [1], "title": "Profile Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["DDoS Protection"]}
  "/cloud/v1/ddos/profiles/{project_id}/{region_id}/{profile_id}/action":
    "post": {"operationId": "ProfileActivationHandler.post", "summary": "Activate or deactivate DDoS protection profile", "description": "Activates or deactivates DDoS protection profile, controlling its protection status.\nThis operation allows enabling or disabling DDoS protection for a specific IP address\nor network range.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Unique identifier of the cloud project that owns the DDoS protection resources", "schema": {"description": "Unique identifier of the cloud project that owns the DDoS protection resources", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "schema": {"description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "profile_id", "required": true, "description": "Unique identifier of the specific DDoS protection profile to be operated on", "schema": {"description": "Unique identifier of the specific DDoS protection profile to be operated on", "examples": [1], "title": "Profile Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ActivateDeactivateProfileSerializer"}}}}, "tags": ["DDoS Protection"]}
  "/cloud/v1/ddos/region_coverage/{region_id}":
    "get": {"operationId": "RegionCoverageHandler.get", "summary": "Get DDoS protection region coverage information", "description": "Check if the current region is covered by the Advanced DDoS protection features.", "parameters": [{"in": "path", "name": "region_id", "required": true, "description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "schema": {"description": "Unique identifier of the cloud region where DDoS protection operations will be performed", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionCoverageSerializer"}}}}}, "tags": ["DDoS Protection"]}
  "/cloud/v1/pricing/{region_id}/ddos":
    "get": {"operationId": "DdosPricingHandler.get", "summary": "Get DDoS protection price", "description": "Get the DDoS protection price based on mitigation capacity.", "parameters": [{"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DDosPricingPreviewResponseSerializer"}}}}}, "tags": ["DDoS Protection"]}
  "/cloud/v3/inference/{project_id}/api_keys":
    "post": {"operationId": "InferenceApiKeysHandler.post", "summary": "Create inference API key", "description": "This endpoint creates a new API key for everywhere inference. It returs api key's actual secret only once\nafter creation.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateApiKeyResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApiKeyCreateRequestSerializer"}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_api_key_create = client.cloud.inference.api_keys.create(\n    project_id=1,\n    name=\"my-api-key\",\n)\nprint(inference_api_key_create.created_at)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceAPIKeyCreate, err := client.Cloud.Inference.APIKeys.New(context.TODO(), cloud.InferenceAPIKeyNewParams{\n    ProjectID: gcore.Int(1),\n    Name: \"my-api-key\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceAPIKeyCreate.CreatedAt)\n}\n"}]}
    "get": {"operationId": "InferenceApiKeysHandler.get", "summary": "List inference API keys", "description": "This endpoint retrieves a list of API keys for everywhere inference.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 100, "description": "Optional. Limit the number of returned items", "examples": [100], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApiKeyListResponseSerializer"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.inference.api_keys.list(\n    project_id=1,\n)\npage = page.results[0]\nprint(page.created_at)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Inference.APIKeys.List(context.TODO(), cloud.InferenceAPIKeyListParams{\n    ProjectID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v3/inference/{project_id}/api_keys/{api_key_name}":
    "get": {"operationId": "InferenceApiKeyHandler.get", "summary": "Get inference API key", "description": "This endpoint retrieves a specific API key for everywhere inference.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "api_key_name", "required": true, "description": "Api key name.", "schema": {"description": "Api key name.", "examples": ["aws-dev"], "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Api Key Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GetApiKeyResponseSerializer"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_api_key = client.cloud.inference.api_keys.get(\n    api_key_name=\"aws-dev\",\n    project_id=1,\n)\nprint(inference_api_key.created_at)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceAPIKey, err := client.Cloud.Inference.APIKeys.Get(\n    context.TODO(),\n    \"aws-dev\",\n    cloud.InferenceAPIKeyGetParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceAPIKey.CreatedAt)\n}\n"}]}
    "patch": {"operationId": "InferenceApiKeyHandler.patch", "summary": "Update inference API key", "description": "This endpoint updates a specific API key for everywhere inference.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "api_key_name", "required": true, "description": "Api key name.", "schema": {"description": "Api key name.", "examples": ["aws-dev"], "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Api Key Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GetApiKeyResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApiKeyUpdateRequestSerializer"}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_api_key = client.cloud.inference.api_keys.update(\n    api_key_name=\"aws-dev\",\n    project_id=1,\n)\nprint(inference_api_key.created_at)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceAPIKey, err := client.Cloud.Inference.APIKeys.Update(\n    context.TODO(),\n    \"aws-dev\",\n    cloud.InferenceAPIKeyUpdateParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceAPIKey.CreatedAt)\n}\n"}]}
    "delete": {"operationId": "InferenceApiKeyHandler.delete", "summary": "Delete inference API key", "description": "This endpoint deletes a specific API key for everywhere inference.\nIf the API key is attached to any inference deployments, it will not be removed. ConflictError will be raised", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "api_key_name", "required": true, "description": "Api key name.", "schema": {"description": "Api key name.", "examples": ["aws-dev"], "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Api Key Name", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.inference.api_keys.delete(\n    api_key_name=\"aws-dev\",\n    project_id=1,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Inference.APIKeys.Delete(\n    context.TODO(),\n    \"aws-dev\",\n    cloud.InferenceAPIKeyDeleteParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v3/inference/{project_id}/deployments":
    "post": {"operationId": "InferenceInstancesHandlerV3.post", "summary": "Create inference deployment", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceInstanceInSerializerV3"}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.inference.deployments.create(\n    project_id=1,\n    containers=[{\n        \"region_id\": 1,\n        \"scale\": {\n            \"max\": 3,\n            \"min\": 1,\n        },\n    }],\n    flavor_name=\"inference-16vcpu-232gib-1xh100-80gb\",\n    image=\"nginx:latest\",\n    listening_port=80,\n    name=\"my-instance\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Inference.Deployments.New(context.TODO(), cloud.InferenceDeploymentNewParams{\n    ProjectID: gcore.Int(1),\n    Containers: []cloud.InferenceDeploymentNewParamsContainer{cloud.InferenceDeploymentNewParamsContainer{\n      RegionID: 1,\n      Scale: cloud.InferenceDeploymentNewParamsContainerScale{\n        Max: 3,\n        Min: 1,\n      },\n    }},\n    FlavorName: \"inference-16vcpu-232gib-1xh100-80gb\",\n    Image: \"nginx:latest\",\n    ListeningPort: 80,\n    Name: \"my-instance\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "InferenceInstancesHandlerV3.get", "summary": "List inference deployments", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceInstanceOutSerializerV3List"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.inference.deployments.list(\n    project_id=1,\n)\npage = page.results[0]\nprint(page.project_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Inference.Deployments.List(context.TODO(), cloud.InferenceDeploymentListParams{\n    ProjectID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v3/inference/{project_id}/deployments/{deployment_name}":
    "get": {"operationId": "InferenceInstanceHandlerV3.get", "summary": "Get inference deployment", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "deployment_name", "required": true, "description": "Inference instance name.", "schema": {"description": "Inference instance name.", "examples": ["my-instance"], "title": "Deployment Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceInstanceOutSerializerV3"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_deployment = client.cloud.inference.deployments.get(\n    deployment_name=\"my-instance\",\n    project_id=1,\n)\nprint(inference_deployment.project_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceDeployment, err := client.Cloud.Inference.Deployments.Get(\n    context.TODO(),\n    \"my-instance\",\n    cloud.InferenceDeploymentGetParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceDeployment.ProjectID)\n}\n"}]}
    "patch": {"operationId": "InferenceInstanceHandlerV3.patch", "summary": "Update inference deployment", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "deployment_name", "required": true, "description": "Inference instance name.", "schema": {"description": "Inference instance name.", "examples": ["my-instance"], "title": "Deployment Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceInstanceInUpdateSerializerV3"}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.inference.deployments.update(\n    deployment_name=\"my-instance\",\n    project_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Inference.Deployments.Update(\n    context.TODO(),\n    \"my-instance\",\n    cloud.InferenceDeploymentUpdateParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "delete": {"operationId": "InferenceInstanceHandlerV3.delete", "summary": "Delete inference deployment", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "deployment_name", "required": true, "description": "Inference instance name.", "schema": {"description": "Inference instance name.", "examples": ["my-instance"], "title": "Deployment Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.inference.deployments.delete(\n    deployment_name=\"my-instance\",\n    project_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Inference.Deployments.Delete(\n    context.TODO(),\n    \"my-instance\",\n    cloud.InferenceDeploymentDeleteParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v3/inference/{project_id}/deployments/{deployment_name}/logs":
    "get": {"operationId": "InferenceInstanceLogsHandlerV3.get", "summary": "Get inference deployment logs", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "deployment_name", "required": true, "description": "Inference instance name.", "schema": {"description": "Inference instance name.", "examples": ["my-instance"], "title": "Deployment Name", "type": "string"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Order by field", "schema": {"$ref": "#/components/schemas/InferenceLogsOrderByChoices", "default": "time.desc", "description": "Order by field", "examples": ["time.asc"]}}, {"in": "query", "name": "region_id", "required": false, "description": "Region ID", "schema": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Region ID", "examples": [1], "title": "Region Id"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceInstanceLogSerializerV3List"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.inference.deployments.logs.list(\n    deployment_name=\"my-instance\",\n    project_id=1,\n)\npage = page.results[0]\nprint(page.region_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Inference.Deployments.Logs.List(\n    context.TODO(),\n    \"my-instance\",\n    cloud.InferenceDeploymentLogListParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v3/inference/{project_id}/deployments/{deployment_name}/start":
    "post": {"operationId": "InferenceInstanceStartHandlerV3.post", "summary": "Start inference deployment", "description": "This operation initializes an inference deployment after it was stopped, making it available to handle inference\nrequests again.\nThe instance will launch with the **minimum** number of replicas defined in the scaling settings.\n\n- If the minimum replicas are set to **0**, the instance will initially start with **0** replicas.\n- It will automatically scale up when it receives requests or SQS messages,\naccording to the configured scaling rules.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "deployment_name", "required": true, "description": "Inference instance name.", "schema": {"description": "Inference instance name.", "examples": ["my-instance"], "title": "Deployment Name", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.inference.deployments.start(\n    deployment_name=\"my-instance\",\n    project_id=1,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Inference.Deployments.Start(\n    context.TODO(),\n    \"my-instance\",\n    cloud.InferenceDeploymentStartParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v3/inference/{project_id}/deployments/{deployment_name}/stop":
    "post": {"operationId": "InferenceInstanceStopHandlerV3.post", "summary": "Stop inference deployment", "description": "This operation shuts down an inference deployment, making it unavailable for handling requests.\nThe deployment will scale down to **0** replicas, overriding any minimum replica settings.\n\n- Once stopped, the deployment will **not** process any inference requests or SQS messages.\n- It will **not** restart automatically and must be started manually.\n- While stopped, the deployment will **not** incur any charges.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "deployment_name", "required": true, "description": "Inference instance name.", "schema": {"description": "Inference instance name.", "examples": ["my-instance"], "title": "Deployment Name", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.inference.deployments.stop(\n    deployment_name=\"my-instance\",\n    project_id=1,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Inference.Deployments.Stop(\n    context.TODO(),\n    \"my-instance\",\n    cloud.InferenceDeploymentStopParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v3/inference/{project_id}/registry_credentials":
    "post": {"operationId": "InferenceRegistryCredentialsHandler.post", "summary": "Create inference registry credential", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceRegistryCredentialOutSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceRegistryCredentialInSerializer"}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_registry_credentials = client.cloud.inference.registry_credentials.create(\n    project_id=1,\n    name=\"docker-io\",\n    password=\"password\",\n    registry_url=\"registry.example.com\",\n    username=\"username\",\n)\nprint(inference_registry_credentials.project_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceRegistryCredentials, err := client.Cloud.Inference.RegistryCredentials.New(context.TODO(), cloud.InferenceRegistryCredentialNewParams{\n    ProjectID: gcore.Int(1),\n    Name: \"docker-io\",\n    Password: \"password\",\n    RegistryURL: \"registry.example.com\",\n    Username: \"username\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceRegistryCredentials.ProjectID)\n}\n"}]}
    "get": {"operationId": "InferenceRegistryCredentialsHandler.get", "summary": "List inference registry credentials", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceRegistryCredentialOutSerializerList"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.inference.registry_credentials.list(\n    project_id=1,\n)\npage = page.results[0]\nprint(page.project_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Inference.RegistryCredentials.List(context.TODO(), cloud.InferenceRegistryCredentialListParams{\n    ProjectID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v3/inference/{project_id}/registry_credentials/{credential_name}":
    "get": {"operationId": "InferenceRegistryCredentialHandler.get", "summary": "Get inference registry credential", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "credential_name", "required": true, "description": "Registry credential name.", "schema": {"description": "Registry credential name.", "examples": ["docker-io"], "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Credential Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceRegistryCredentialOutSerializer"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_registry_credentials = client.cloud.inference.registry_credentials.get(\n    credential_name=\"docker-io\",\n    project_id=1,\n)\nprint(inference_registry_credentials.project_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceRegistryCredentials, err := client.Cloud.Inference.RegistryCredentials.Get(\n    context.TODO(),\n    \"docker-io\",\n    cloud.InferenceRegistryCredentialGetParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceRegistryCredentials.ProjectID)\n}\n"}]}
    "put": {"operationId": "InferenceRegistryCredentialHandler.put", "summary": "Replace inference registry credential", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "credential_name", "required": true, "description": "Registry credential name.", "schema": {"description": "Registry credential name.", "examples": ["docker-io"], "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Credential Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceRegistryCredentialOutSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceRegistryCredentialInUpdateSerializer"}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_registry_credentials = client.cloud.inference.registry_credentials.replace(\n    credential_name=\"docker-io\",\n    project_id=1,\n    password=\"password\",\n    registry_url=\"registry.example.com\",\n    username=\"username\",\n)\nprint(inference_registry_credentials.project_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceRegistryCredentials, err := client.Cloud.Inference.RegistryCredentials.Replace(\n    context.TODO(),\n    \"docker-io\",\n    cloud.InferenceRegistryCredentialReplaceParams{\n      ProjectID: gcore.Int(1),\n      Password: \"password\",\n      RegistryURL: \"registry.example.com\",\n      Username: \"username\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceRegistryCredentials.ProjectID)\n}\n"}]}
    "delete": {"operationId": "InferenceRegistryCredentialHandler.delete", "summary": "Delete inference registry credential", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "credential_name", "required": true, "description": "Registry credential name.", "schema": {"description": "Registry credential name.", "examples": ["docker-io"], "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Credential Name", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.inference.registry_credentials.delete(\n    credential_name=\"docker-io\",\n    project_id=1,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Inference.RegistryCredentials.Delete(\n    context.TODO(),\n    \"docker-io\",\n    cloud.InferenceRegistryCredentialDeleteParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v3/inference/{project_id}/secrets":
    "post": {"operationId": "InferenceSecretsHandler.post", "summary": "Create inference secret", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceBoxSecretsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceBoxSecretsInSerializer"}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_secret = client.cloud.inference.secrets.create(\n    project_id=1,\n    data={\n        \"aws_access_key_id\": \"fake-key-id\",\n        \"aws_secret_access_key\": \"fake-secret\",\n    },\n    name=\"aws-dev\",\n    type=\"aws-iam\",\n)\nprint(inference_secret.data)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceSecret, err := client.Cloud.Inference.Secrets.New(context.TODO(), cloud.InferenceSecretNewParams{\n    ProjectID: gcore.Int(1),\n    Data: cloud.InferenceSecretNewParamsData{\n      AwsAccessKeyID: \"fake-key-id\",\n      AwsSecretAccessKey: \"fake-secret\",\n    },\n    Name: \"aws-dev\",\n    Type: \"aws-iam\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceSecret.Data)\n}\n"}]}
    "get": {"operationId": "InferenceSecretsHandler.get", "summary": "List inference secrets", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceBoxSecretsSerializerList"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.inference.secrets.list(\n    project_id=1,\n)\npage = page.results[0]\nprint(page.data)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Inference.Secrets.List(context.TODO(), cloud.InferenceSecretListParams{\n    ProjectID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v3/inference/{project_id}/secrets/{secret_name}":
    "get": {"operationId": "InferenceSecretHandler.get", "summary": "Get inference secret", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "secret_name", "required": true, "description": "Inference secret name.", "schema": {"description": "Inference secret name.", "examples": ["aws-dev"], "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Secret Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceBoxSecretsSerializer"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_secret = client.cloud.inference.secrets.get(\n    secret_name=\"aws-dev\",\n    project_id=1,\n)\nprint(inference_secret.data)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceSecret, err := client.Cloud.Inference.Secrets.Get(\n    context.TODO(),\n    \"aws-dev\",\n    cloud.InferenceSecretGetParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceSecret.Data)\n}\n"}]}
    "put": {"operationId": "InferenceSecretHandler.put", "summary": "Replace inference secret", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "secret_name", "required": true, "description": "Inference secret name.", "schema": {"description": "Inference secret name.", "examples": ["aws-dev"], "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Secret Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceBoxSecretsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceSecretInUpdateSerializer"}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_secret = client.cloud.inference.secrets.replace(\n    secret_name=\"aws-dev\",\n    project_id=1,\n    data={\n        \"aws_access_key_id\": \"fake-key-id\",\n        \"aws_secret_access_key\": \"fake-secret\",\n    },\n    type=\"aws-iam\",\n)\nprint(inference_secret.data)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceSecret, err := client.Cloud.Inference.Secrets.Replace(\n    context.TODO(),\n    \"aws-dev\",\n    cloud.InferenceSecretReplaceParams{\n      ProjectID: gcore.Int(1),\n      Data: cloud.InferenceSecretReplaceParamsData{\n        AwsAccessKeyID: \"fake-key-id\",\n        AwsSecretAccessKey: \"fake-secret\",\n      },\n      Type: \"aws-iam\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceSecret.Data)\n}\n"}]}
    "delete": {"operationId": "InferenceSecretHandler.delete", "summary": "Delete Inference Secret", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "secret_name", "required": true, "description": "Inference secret name.", "schema": {"description": "Inference secret name.", "examples": ["aws-dev"], "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Secret Name", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.inference.secrets.delete(\n    secret_name=\"aws-dev\",\n    project_id=1,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Inference.Secrets.Delete(\n    context.TODO(),\n    \"aws-dev\",\n    cloud.InferenceSecretDeleteParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v3/inference/capacity":
    "get": {"operationId": "InferenceCapacityHandlerV3.get", "summary": "Get inference capacity by region", "description": "", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionCapacityOutSerializerV3List"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_region_capacity_list = client.cloud.inference.get_capacity_by_region()\nprint(inference_region_capacity_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceRegionCapacityList, err := client.Cloud.Inference.GetCapacityByRegion(context.TODO())\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceRegionCapacityList.Count)\n}\n"}]}
  "/cloud/v3/inference/flavors":
    "get": {"operationId": "InferenceFlavorsHandlerV3.get", "summary": "List inference flavors", "description": "", "parameters": [{"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceFlavorOutSerializerV3List"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.inference.flavors.list()\npage = page.results[0]\nprint(page.cpu)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Inference.Flavors.List(context.TODO(), cloud.InferenceFlavorListParams{\n\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v3/inference/flavors/{flavor_name}":
    "get": {"operationId": "InferenceFlavorHandlerV3.get", "summary": "Get inference flavor", "description": "", "parameters": [{"in": "path", "name": "flavor_name", "required": true, "description": "Inference flavor name.", "schema": {"description": "Inference flavor name.", "examples": ["inference-16vcpu-232gib-1xh100-80gb"], "title": "Flavor Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceFlavorOutSerializerV3"}}}}}, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_flavor = client.cloud.inference.flavors.get(\n    \"inference-16vcpu-232gib-1xh100-80gb\",\n)\nprint(inference_flavor.cpu)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceFlavor, err := client.Cloud.Inference.Flavors.Get(context.TODO(), \"inference-16vcpu-232gib-1xh100-80gb\")\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceFlavor.CPU)\n}\n"}]}
  "/cloud/v3/inference/models":
    "get": {"operationId": "MLModelCatalogListHandlerV3.get", "summary": "List models from catalog", "description": "", "parameters": [{"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Order instances by transmitted fields and directions", "schema": {"$ref": "#/components/schemas/MLCatalogOrderByChoices", "default": "name.asc", "description": "Order instances by transmitted fields and directions", "examples": ["name.desc"]}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MLCatalogModelCardListSerializerV3"}}}}}, "tags": ["Everywhere Inference"]}
  "/cloud/v3/inference/models/{model_id}":
    "get": {"operationId": "MLModelCatalogCollectionHandlerV3.get", "summary": "Get model from catalog", "description": "", "parameters": [{"in": "path", "name": "model_id", "required": true, "description": "Model ID", "schema": {"description": "Model ID", "title": "Model Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MLCatalogModelCardSerializerV3"}}}}}, "tags": ["Everywhere Inference"]}
  "/cloud/v2/pricing/inference/deployments":
    "post": {"operationId": "InferenceDeploymentPricingHandlerV2.post", "summary": "Preview inference deployment price", "description": "Preview the billing price for an inference deployment", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceDeploymentPriceRequestV2Serializer"}}}}, "tags": ["Everywhere Inference"]}
  "/cloud/v3/inference/{project_id}/deployments/{deployment_name}/apikey":
    "get": {"operationId": "InferenceInstanceApikeySecretHandlerV3.get", "summary": "Get inference deployment API key", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "deployment_name", "required": true, "description": "Inference instance name.", "schema": {"description": "Inference instance name.", "examples": ["my-instance"], "title": "Deployment Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceInstanceApikeySecretSerializerV3"}}}}}, "deprecated": true, "tags": ["Everywhere Inference"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_deployment_api_key = client.cloud.inference.deployments.get_api_key(\n    deployment_name=\"my-instance\",\n    project_id=1,\n)\nprint(inference_deployment_api_key.secret)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceDeploymentAPIKey, err := client.Cloud.Inference.Deployments.GetAPIKey(\n    context.TODO(),\n    \"my-instance\",\n    cloud.InferenceDeploymentGetAPIKeyParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceDeploymentAPIKey.Secret)\n}\n"}]}
  "/cloud/v3/inference/applications/{project_id}/deployments":
    "post": {"operationId": "InferenceApplicationDeploymentsCollection.post", "summary": "Create inference application deployment", "description": "Creates a new application deployment based on a selected catalog application.\nSpecify the desired deployment name, target regions, and configuration for each component.\nThe platform will provision the necessary resources and initialize the application accordingly.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppDeploymentCreateRequest"}}}}, "tags": ["Everywhere Inference Apps"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.inference.applications.deployments.create(\n    project_id=1,\n    application_name=\"demo-app\",\n    components_configuration={\n        \"model\": {\n            \"exposed\": True,\n            \"flavor\": \"inference-16vcpu-232gib-1xh100-80gb\",\n            \"scale\": {\n                \"max\": 1,\n                \"min\": 1,\n            },\n        }\n    },\n    name=\"name\",\n    regions=[1, 2],\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Inference.Applications.Deployments.New(context.TODO(), cloud.InferenceApplicationDeploymentNewParams{\n    ProjectID: gcore.Int(1),\n    ApplicationName: \"demo-app\",\n    ComponentsConfiguration: map[string]cloud.InferenceApplicationDeploymentNewParamsComponentsConfiguration{\n    \"model\": cloud.InferenceApplicationDeploymentNewParamsComponentsConfiguration{\n      Exposed: true,\n      Flavor: \"inference-16vcpu-232gib-1xh100-80gb\",\n      Scale: cloud.InferenceApplicationDeploymentNewParamsComponentsConfigurationScale{\n        Max: 1,\n        Min: 1,\n      },\n    },\n    },\n    Name: \"name\",\n    Regions: []int64{1, 2},\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "InferenceApplicationDeploymentsCollection.get", "summary": "List inference application deployments", "description": "Returns a list of your application deployments, including deployment names,\nassociated catalog applications, regions, component configurations, and current status.\nUseful for monitoring and managing all active AI application instances.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppDeploymentList"}}}}}, "tags": ["Everywhere Inference Apps"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_application_deployment_list = client.cloud.inference.applications.deployments.list(\n    project_id=1,\n)\nprint(inference_application_deployment_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceApplicationDeploymentList, err := client.Cloud.Inference.Applications.Deployments.List(context.TODO(), cloud.InferenceApplicationDeploymentListParams{\n    ProjectID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceApplicationDeploymentList.Count)\n}\n"}]}
  "/cloud/v3/inference/applications/{project_id}/deployments/{deployment_name}":
    "get": {"operationId": "InferenceApplicationDeployment.get", "summary": "Get inference application deployment", "description": "Retrieves detailed information about a specific application deployment.\nThe response includes the catalog application it was created from, deployment name,\nactive regions, configuration of each component, and the current status of the deployment.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "deployment_name", "required": true, "description": "Name of deployment", "schema": {"description": "Name of deployment", "title": "Deployment Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppDeployment"}}}}}, "tags": ["Everywhere Inference Apps"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_application_deployment = client.cloud.inference.applications.deployments.get(\n    deployment_name=\"deployment_name\",\n    project_id=1,\n)\nprint(inference_application_deployment.api_keys)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceApplicationDeployment, err := client.Cloud.Inference.Applications.Deployments.Get(\n    context.TODO(),\n    \"deployment_name\",\n    cloud.InferenceApplicationDeploymentGetParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceApplicationDeployment.APIKeys)\n}\n"}]}
    "patch": {"operationId": "InferenceApplicationDeployment.patch", "summary": "Update inference application deployment", "description": "Updates an existing application deployment.\nYou can modify the target regions and update configurations for individual components.\nTo disable a component, set its value to null. Only the provided fields will be updated;\nall others remain unchanged.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "deployment_name", "required": true, "description": "Name of deployment", "schema": {"description": "Name of deployment", "title": "Deployment Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppDeploymentPatchRequest"}}}}, "tags": ["Everywhere Inference Apps"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.inference.applications.deployments.patch(\n    deployment_name=\"deployment_name\",\n    project_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Inference.Applications.Deployments.Patch(\n    context.TODO(),\n    \"deployment_name\",\n    cloud.InferenceApplicationDeploymentPatchParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "delete": {"operationId": "InferenceApplicationDeployment.delete", "summary": "Delete inference application deployment", "description": "Deletes an existing application deployment along with all associated resources.\nThis action will permanently remove the deployment and **terminate\nall related inference instances** that are part of the application.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "deployment_name", "required": true, "description": "Name of deployment", "schema": {"description": "Name of deployment", "title": "Deployment Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Everywhere Inference Apps"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.inference.applications.deployments.delete(\n    deployment_name=\"deployment_name\",\n    project_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Inference.Applications.Deployments.Delete(\n    context.TODO(),\n    \"deployment_name\",\n    cloud.InferenceApplicationDeploymentDeleteParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v3/inference/applications/catalog":
    "get": {"operationId": "InferenceApplicationTemplatesCollection.get", "summary": "List inference application templates", "description": "Returns a list of available machine learning application templates from the catalog.\nEach template includes metadata such as name, description, cover image, documentation, tags,\nand a set of configurable components (e.g., `model`, `ui`).\nComponents define parameters, supported deployment flavors,\nand other attributes required to create a fully functional application deployment.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AIAppCatalogList"}}}}}, "tags": ["Everywhere Inference Apps"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_application_template_list = client.cloud.inference.applications.templates.list()\nprint(inference_application_template_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceApplicationTemplateList, err := client.Cloud.Inference.Applications.Templates.List(context.TODO())\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceApplicationTemplateList.Count)\n}\n"}]}
  "/cloud/v3/inference/applications/catalog/{application_name}":
    "get": {"operationId": "InferenceApplicationTemplate.get", "summary": "Get inference application template", "description": "Retrieves detailed information about a specific machine learning application template from the catalog.\nThe response includes the applicationâ€™s metadata, documentation, tags,\nand a complete set of components with configuration options, compatible flavors,\nand deployment capabilities â€” all necessary for building and customizing an AI application.", "parameters": [{"in": "path", "name": "application_name", "required": true, "description": "Name of application in catalog", "schema": {"description": "Name of application in catalog", "pattern": "^[a-z0-9-.]{1,63}$", "title": "Application Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AIAppCatalog"}}}}}, "tags": ["Everywhere Inference Apps"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninference_application_template = client.cloud.inference.applications.templates.get(\n    \"26f1kl-.n.71\",\n)\nprint(inference_application_template.components)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  inferenceApplicationTemplate, err := client.Cloud.Inference.Applications.Templates.Get(context.TODO(), \"26f1kl-.n.71\")\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", inferenceApplicationTemplate.Components)\n}\n"}]}
  "/cloud/v2/pricing/inference/applications":
    "post": {"operationId": "InferenceApplicationPricingHandlerV2.post", "summary": "Preview inference application deployment price", "description": "Preview billing price for an entire ML application deployment.\nThis endpoint calculates the total cost for all components across all regions,\nproviding a comprehensive pricing estimate for the complete application.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InferenceApplicationPricingRequestSerializer"}}}}, "tags": ["Everywhere Inference Apps"]}
  "/cloud/v1/file_shares/{project_id}/{region_id}":
    "post": {"operationId": "SfsViewSet.post", "summary": "Create file share", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateFileShareSerializer"}}}}, "tags": ["File Shares"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.file_shares.create(\n    project_id=1,\n    region_id=1,\n    name=\"test-share-file-system\",\n    network={\n        \"network_id\": \"024a29e9-b4b7-4c91-9a46-505be123d9f8\"\n    },\n    protocol=\"NFS\",\n    size=5,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.FileShares.New(context.TODO(), cloud.FileShareNewParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "SfsViewSet.get", "summary": "List file shares", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "name", "required": false, "description": "File share name. Uses partial match.", "schema": {"description": "File share name. Uses partial match.", "examples": ["test-sfs"], "title": "Name", "type": "string"}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "type_name", "required": false, "description": "File share type name", "schema": {"$ref": "#/components/schemas/FileShareTypeName", "description": "File share type name", "examples": ["standard"]}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FileShareCollectionSerializer"}}}}}, "tags": ["File Shares"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.file_shares.list(\n    project_id=1,\n    region_id=1,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.FileShares.List(context.TODO(), cloud.FileShareListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/file_shares/{project_id}/{region_id}/{file_share_id}":
    "get": {"operationId": "SfsInstanceViewSet.get", "summary": "Get file share", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "file_share_id", "required": true, "description": "File Share ID", "schema": {"description": "File Share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "File Share Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FileShareSerializer"}}}}}, "tags": ["File Shares"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nfile_share = client.cloud.file_shares.get(\n    file_share_id=\"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    project_id=1,\n    region_id=1,\n)\nprint(file_share.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  fileShare, err := client.Cloud.FileShares.Get(\n    context.TODO(),\n    \"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    cloud.FileShareGetParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", fileShare.ID)\n}\n"}]}
    "patch": {"operationId": "SfsInstanceViewSet.patch", "summary": "Update file share", "description": "Rename file share or update tags", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "file_share_id", "required": true, "description": "File Share ID", "schema": {"description": "File Share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "File Share Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FileShareSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateFileShareSerializer"}}}}, "tags": ["File Shares"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nfile_share = client.cloud.file_shares.update(\n    file_share_id=\"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    project_id=1,\n    region_id=1,\n)\nprint(file_share.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  fileShare, err := client.Cloud.FileShares.Update(\n    context.TODO(),\n    \"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    cloud.FileShareUpdateParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", fileShare.ID)\n}\n"}]}
    "delete": {"operationId": "SfsInstanceViewSet.delete", "summary": "Delete file share", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "file_share_id", "required": true, "description": "File Share ID", "schema": {"description": "File Share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "File Share Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["File Shares"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.file_shares.delete(\n    file_share_id=\"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    project_id=1,\n    region_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.FileShares.Delete(\n    context.TODO(),\n    \"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    cloud.FileShareDeleteParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/file_shares/{project_id}/{region_id}/{file_share_id}/access_rule":
    "post": {"operationId": "SfsAccessRuleViewSet.post", "summary": "Create file share access rule", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "file_share_id", "required": true, "description": "File Share ID", "schema": {"description": "File Share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "File Share Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AccessRuleSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateAccessRuleSerializer"}}}}, "tags": ["File Shares"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\naccess_rule = client.cloud.file_shares.access_rules.create(\n    file_share_id=\"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    project_id=1,\n    region_id=1,\n    access_mode=\"ro\",\n    ip_address=\"192.168.1.1\",\n)\nprint(access_rule.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  accessRule, err := client.Cloud.FileShares.AccessRules.New(\n    context.TODO(),\n    \"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    cloud.FileShareAccessRuleNewParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n      AccessMode: cloud.FileShareAccessRuleNewParamsAccessModeRo,\n      IPAddress: \"192.168.1.1\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", accessRule.ID)\n}\n"}]}
    "get": {"operationId": "SfsAccessRuleViewSet.get", "summary": "List file share access rules", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "file_share_id", "required": true, "description": "File Share ID", "schema": {"description": "File Share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "File Share Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AccessRuleCollectionSerializer"}}}}}, "tags": ["File Shares"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\naccess_rule_list = client.cloud.file_shares.access_rules.list(\n    file_share_id=\"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    project_id=1,\n    region_id=1,\n)\nprint(access_rule_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  accessRuleList, err := client.Cloud.FileShares.AccessRules.List(\n    context.TODO(),\n    \"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    cloud.FileShareAccessRuleListParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", accessRuleList.Count)\n}\n"}]}
  "/cloud/v1/file_shares/{project_id}/{region_id}/{file_share_id}/access_rule/{access_rule_id}":
    "delete": {"operationId": "SfsAccessRuleDeleteHandler.delete", "summary": "Delete file share access rule", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "file_share_id", "required": true, "description": "File Share ID", "schema": {"description": "File Share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "File Share Id", "type": "string"}}, {"in": "path", "name": "access_rule_id", "required": true, "description": "Access Rule ID", "schema": {"description": "Access Rule ID", "examples": ["4f09d7dd-f1f8-4352-b015-741b2192db47"], "format": "uuid4", "title": "Access Rule Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["File Shares"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.file_shares.access_rules.delete(\n    access_rule_id=\"4f09d7dd-f1f8-4352-b015-741b2192db47\",\n    project_id=1,\n    region_id=1,\n    file_share_id=\"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.FileShares.AccessRules.Delete(\n    context.TODO(),\n    \"4f09d7dd-f1f8-4352-b015-741b2192db47\",\n    cloud.FileShareAccessRuleDeleteParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n      FileShareID: \"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v1/file_shares/{project_id}/{region_id}/{file_share_id}/extend":
    "post": {"operationId": "SfsExtendHandler.post", "summary": "Resize file share", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "file_share_id", "required": true, "description": "File Share ID", "schema": {"description": "File Share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "File Share Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResizeSfsSerializer"}}}}, "tags": ["File Shares"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.file_shares.resize(\n    file_share_id=\"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    project_id=1,\n    region_id=1,\n    size=5,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.FileShares.Resize(\n    context.TODO(),\n    \"bd8c47ee-e565-4e26-8840-b537e6827b08\",\n    cloud.FileShareResizeParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n      Size: 5,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/file_shares/{project_id}/{region_id}/check_limits":
    "post": {"operationId": "SfsCheckLimitsHandler.post", "summary": "Check file share quota", "description": "Check if regional quota is exceeded, if yes the number of additional\nquotas needed to create the specified File Share will be calculated", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FileShareRequiredQuotaSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CheckQuotaBeforeSfsCreationSerializer"}}}}, "tags": ["File Shares"]}
  "/cloud/v1/pricing/{project_id}/{region_id}/file_shares":
    "post": {"operationId": "FileSharePricingHandler.post", "summary": "Preview file share price", "description": "Preview the billing price for a file share of the given type and size.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FileSharePricingRequestSerializer"}}}}, "tags": ["File Shares"]}
  "/cloud/v1/file_shares/{project_id}/{region_id}/{file_share_id}/metadata":
    "post": {"operationId": "SfsMetadataHandler.post", "summary": "Update file share tags", "description": "Create or update one or more tag for a file share.\nIf an item does not exist, it gets created.\nIf an item already exists, it's value is overwritten\n\nUse PATCH /v1/`file_shares`/{`project_id`}/{`region_id`}/{`file_share_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "file_share_id", "required": true, "description": "File Share ID", "schema": {"description": "File Share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "File Share Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateTagsSerializer"}}}}, "tags": ["File Shares"]}
    "get": {"operationId": "SfsMetadataHandler.get", "summary": "List file share tags", "description": "Use GET /v1/`file_shares`/{`project_id`}/{`region_id`}/{`file_share_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "file_share_id", "required": true, "description": "File Share ID", "schema": {"description": "File Share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "File Share Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagCollectionSerializer"}}}}}, "deprecated": true, "tags": ["File Shares"]}
    "put": {"operationId": "SfsMetadataHandler.put", "summary": "Replace file share tags", "description": "All existing metadata is deleted and replaced with the metadata from the request\n\nUse PATCH /v1/`file_shares`/{`project_id`}/{`region_id`}/{`file_share_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "file_share_id", "required": true, "description": "File Share ID", "schema": {"description": "File Share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "File Share Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateTagsSerializer"}}}}, "tags": ["File Shares"]}
  "/cloud/v1/file_shares/{project_id}/{region_id}/{file_share_id}/metadata_item":
    "get": {"operationId": "SfsMetadataItemHandler.get", "summary": "Get file share tag", "description": "Use GET /v1/`file_shares`/{`project_id`}/{`region_id`}/{`file_share_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "file_share_id", "required": true, "description": "File Share ID", "schema": {"description": "File Share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "File Share Id", "type": "string"}}, {"in": "query", "name": "key", "required": true, "description": "Tag key", "schema": {"description": "Tag key", "examples": ["tag-key"], "title": "Key", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagSerializer"}}}}}, "deprecated": true, "tags": ["File Shares"]}
    "delete": {"operationId": "SfsMetadataItemHandler.delete", "summary": "Delete file share tag", "description": "Use PATCH /v1/`file_shares`/{`project_id`}/{`region_id`}/{`file_share_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "file_share_id", "required": true, "description": "File Share ID", "schema": {"description": "File Share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "File Share Id", "type": "string"}}, {"in": "query", "name": "key", "required": true, "description": "Tag key", "schema": {"description": "Tag key", "examples": ["tag-key"], "title": "Key", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "tags": ["File Shares"]}
  "/cloud/v1/availablefloatingips/{project_id}/{region_id}":
    "get": {"operationId": "AvailableFloatingIPViewSet.get", "summary": "List available floating IPs", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of floating IPs", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FloatingIPCollectionSerializer"}}}}}, "tags": ["Floating IPs"]}
  "/cloud/v1/floatingips/{project_id}/{region_id}":
    "post": {"operationId": "FloatingIPViewSet.post", "summary": "Create floating IP", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateFloatingIPSerializer"}}}}, "tags": ["Floating IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.floating_ips.create(\n    project_id=1,\n    region_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.FloatingIPs.New(context.TODO(), cloud.FloatingIPNewParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "FloatingIPViewSet.get", "summary": "List floating IPs", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "tag_key", "required": false, "description": "Optional. Filter by tag keys. ?`tag_key`=key1&`tag_key`=key2", "schema": {"description": "Optional. Filter by tag keys. ?`tag_key`=key1&`tag_key`=key2", "examples": [["key1", "key2"]], "items": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1, "type": "string"}, "title": "Tag Key", "type": "array"}}, {"in": "query", "name": "tag_key_value", "required": false, "description": "Optional. Filter by tag key-value pairs.", "schema": {"contentMediaType": "application/json", "contentSchema": {"additionalProperties": {"description": "Tag value. The maximum size for a value is 1024 bytes.", "examples": ["my-tag-value"], "maxLength": 1024, "minLength": 1, "type": "string"}, "propertyNames": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1}, "type": "object"}, "description": "Optional. Filter by tag key-value pairs.", "title": "Tag Key Value", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FloatingIPDetailedCollectionSerializer"}}}}}, "tags": ["Floating IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.floating_ips.list(\n    project_id=1,\n    region_id=1,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.FloatingIPs.List(context.TODO(), cloud.FloatingIPListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/floatingips/{project_id}/{region_id}/{floating_ip_id}":
    "get": {"operationId": "FloatingIPInstanceViewSet.get", "summary": "Get floating IP", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "floating_ip_id", "required": true, "description": "Floating IP ID", "schema": {"description": "Floating IP ID", "examples": ["c64e5db1-5f1f-43ec-a8d9-5090df85b82d"], "format": "uuid4", "title": "Floating Ip Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FloatingIPSerializer"}}}}}, "tags": ["Floating IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nfloating_ip = client.cloud.floating_ips.get(\n    floating_ip_id=\"c64e5db1-5f1f-43ec-a8d9-5090df85b82d\",\n    project_id=1,\n    region_id=1,\n)\nprint(floating_ip.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  floatingIP, err := client.Cloud.FloatingIPs.Get(\n    context.TODO(),\n    \"c64e5db1-5f1f-43ec-a8d9-5090df85b82d\",\n    cloud.FloatingIPGetParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", floatingIP.ID)\n}\n"}]}
    "patch": {"operationId": "FloatingIPInstanceViewSet.patch", "summary": "Update floating IP", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "floating_ip_id", "required": true, "description": "Floating IP ID", "schema": {"description": "Floating IP ID", "examples": ["c64e5db1-5f1f-43ec-a8d9-5090df85b82d"], "format": "uuid4", "title": "Floating Ip Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FloatingIPSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PatchFloatingIPSerializer"}}}}, "tags": ["Floating IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nfloating_ip = client.cloud.floating_ips.update(\n    floating_ip_id=\"c64e5db1-5f1f-43ec-a8d9-5090df85b82d\",\n    project_id=1,\n    region_id=1,\n)\nprint(floating_ip.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  floatingIP, err := client.Cloud.FloatingIPs.Update(\n    context.TODO(),\n    \"c64e5db1-5f1f-43ec-a8d9-5090df85b82d\",\n    cloud.FloatingIPUpdateParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", floatingIP.ID)\n}\n"}]}
    "delete": {"operationId": "FloatingIPInstanceViewSet.delete", "summary": "Delete floating IP", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "floating_ip_id", "required": true, "description": "Floating IP ID", "schema": {"description": "Floating IP ID", "examples": ["c64e5db1-5f1f-43ec-a8d9-5090df85b82d"], "format": "uuid4", "title": "Floating Ip Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Floating IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.floating_ips.delete(\n    floating_ip_id=\"c64e5db1-5f1f-43ec-a8d9-5090df85b82d\",\n    project_id=1,\n    region_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.FloatingIPs.Delete(\n    context.TODO(),\n    \"c64e5db1-5f1f-43ec-a8d9-5090df85b82d\",\n    cloud.FloatingIPDeleteParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/floatingips/{project_id}/{region_id}/{floating_ip_id}/assign":
    "post": {"operationId": "FloatingIPAssignHandler.post", "summary": "Assign floating IP", "description": "Assign floating IP to instance or loadbalancer", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "floating_ip_id", "required": true, "description": "Floating IP ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Updated floating IP details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FloatingIPSerializer"}}}}, "404": {"description": "Floating IP not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssignFloatingIPSerializer"}}}}, "tags": ["Floating IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nfloating_ip = client.cloud.floating_ips.assign(\n    floating_ip_id=\"floating_ip_id\",\n    project_id=0,\n    region_id=0,\n    port_id=\"ee2402d0-f0cd-4503-9b75-69be1d11c5f1\",\n)\nprint(floating_ip.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  floatingIP, err := client.Cloud.FloatingIPs.Assign(\n    context.TODO(),\n    \"floating_ip_id\",\n    cloud.FloatingIPAssignParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      PortID: \"ee2402d0-f0cd-4503-9b75-69be1d11c5f1\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", floatingIP.ID)\n}\n"}]}
  "/cloud/v1/floatingips/{project_id}/{region_id}/{floating_ip_id}/unassign":
    "post": {"operationId": "FloatingIPUnassignHandler.post", "summary": "Unassign floating IP", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "floating_ip_id", "required": true, "description": "Floating IP ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Updated floating IP details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FloatingIPSerializer"}}}}, "404": {"description": "Floating IP not found"}}, "tags": ["Floating IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nfloating_ip = client.cloud.floating_ips.unassign(\n    floating_ip_id=\"floating_ip_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(floating_ip.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  floatingIP, err := client.Cloud.FloatingIPs.Unassign(\n    context.TODO(),\n    \"floating_ip_id\",\n    cloud.FloatingIPUnassignParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", floatingIP.ID)\n}\n"}]}
  "/cloud/v1/pricing/{project_id}/{region_id}/floating_ips":
    "post": {"operationId": "FloatingIpPricingHandler.post", "summary": "Preview floating IP price", "description": "Preview the billing price for the floating IP addresses.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FloatingIpPricingRequestSerializer"}}}}, "tags": ["Floating IPs"]}
  "/cloud/v1/floatingips/{project_id}/{region_id}/{floating_ip_id}/metadata":
    "post": {"operationId": "FloatingIPMetadataHandler.post", "summary": "Create or update floating IP tags", "description": "Create or update one or more tags for a floating IP.\nIf a tag does not exist, it gets created.\nIf a tag already exists, its value is overwritten\n\n**Deprecated**: Use PATCH /v1/floatingips/{`project_id`}/{`region_id`}/{`floating_ip_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "floating_ip_id", "required": true, "description": "Floating IP ID", "schema": {"description": "Floating IP ID", "examples": ["c64e5db1-5f1f-43ec-a8d9-5090df85b82d"], "format": "uuid4", "title": "Floating Ip Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateTagsSerializer"}}}}, "tags": ["Floating IPs"]}
    "get": {"operationId": "FloatingIPMetadataHandler.get", "summary": "List floating IP tags", "description": "Lists all tags for a floating IP\n\n**Deprecated**: Use GET /v1/floatingips/{`project_id`}/{`region_id`}/{`floating_ip_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "floating_ip_id", "required": true, "description": "Floating IP ID", "schema": {"description": "Floating IP ID", "examples": ["c64e5db1-5f1f-43ec-a8d9-5090df85b82d"], "format": "uuid4", "title": "Floating Ip Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagCollectionSerializer"}}}}}, "deprecated": true, "tags": ["Floating IPs"]}
    "put": {"operationId": "FloatingIPMetadataHandler.put", "summary": "Replace floating IP tags", "description": "All existing tags are deleted and replaced with the tags from the request.\n\n**Deprecated**: Use PATCH /v1/floatingips/{`project_id`}/{`region_id`}/{`floating_ip_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "floating_ip_id", "required": true, "description": "Floating IP ID", "schema": {"description": "Floating IP ID", "examples": ["c64e5db1-5f1f-43ec-a8d9-5090df85b82d"], "format": "uuid4", "title": "Floating Ip Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateTagsSerializer"}}}}, "tags": ["Floating IPs"]}
  "/cloud/v1/floatingips/{project_id}/{region_id}/{floating_ip_id}/metadata_item":
    "get": {"operationId": "FloatingIPMetadataItemHandler.get", "summary": "Get floating IP tag", "description": "Get floating IP tag by key\n\n**Deprecated**: Use GET /v1/floatingips/{`project_id`}/{`region_id`}/{`floating_ip_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "floating_ip_id", "required": true, "description": "Floating IP ID", "schema": {"description": "Floating IP ID", "examples": ["c64e5db1-5f1f-43ec-a8d9-5090df85b82d"], "format": "uuid4", "title": "Floating Ip Id", "type": "string"}}, {"in": "query", "name": "key", "required": true, "description": "Tag key to filter by", "schema": {"description": "Tag key to filter by", "examples": ["cost-center"], "maxLength": 255, "minLength": 1, "title": "Key", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagSerializer"}}}}}, "deprecated": true, "tags": ["Floating IPs"]}
    "delete": {"operationId": "FloatingIPMetadataItemHandler.delete", "summary": "Delete floating IP tag", "description": "Delete a tag from a floating IP\n\n**Deprecated**: Use PATCH /v1/floatingips/{`project_id`}/{`region_id`}/{`floating_ip_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "floating_ip_id", "required": true, "description": "Floating IP ID", "schema": {"description": "Floating IP ID", "examples": ["c64e5db1-5f1f-43ec-a8d9-5090df85b82d"], "format": "uuid4", "title": "Floating Ip Id", "type": "string"}}, {"in": "query", "name": "key", "required": true, "description": "Tag key to filter by", "schema": {"description": "Tag key to filter by", "examples": ["cost-center"], "maxLength": 255, "minLength": 1, "title": "Key", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "tags": ["Floating IPs"]}
  "/cloud/v1/faas/flavors/{project_id}/{region_id}":
    "get": {"operationId": "FaaSFlavorsHandler.get", "summary": "List flavors", "description": "Retrieve a list of available compute flavors for functions.\nFlavors define CPU and memory resources for function execution.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "name", "required": false, "description": "Function name", "schema": {"anyOf": [{"pattern": "^[0-9]{0,12}mCPU-[0-9]{0,12}MB$", "type": "string"}, "type": "null"], "default": null, "description": "Function name", "title": "Name"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FaasFlavorsListSerializer"}}}}}, "tags": ["Function as a Service"]}
  "/cloud/v1/faas/keys/{project_id}/{region_id}":
    "post": {"operationId": "FaaSAuthKeysHandler.post", "summary": "Create API key", "description": "Create a new API key for function authentication.\nThe key can be configured with an expiration time and permissions.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreatedApiKeySerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FaasCreateApiKeySerializer"}}}}, "tags": ["Function as a Service"]}
    "get": {"operationId": "FaaSAuthKeysHandler.get", "summary": "List API keys", "description": "Retrieve a list of API keys for function authentication.\nKeys can be filtered by name and expiration status.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "expire_in", "required": false, "description": "Days to expire", "schema": {"description": "Days to expire", "examples": [5], "minimum": 1, "title": "Expire In", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Ordering fields and directions.", "schema": {"$ref": "#/components/schemas/ApiKeysOrderByChoices", "default": "created_at.desc", "description": "Ordering fields and directions.", "examples": ["created_at.desc"]}}, {"in": "query", "name": "search", "required": false, "description": "Search through which value", "schema": {"description": "Search through which value", "examples": ["search-value"], "pattern": "^[-a-z0-9]{0,25}[-a-z0-9]$", "title": "Search", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FaasApiKeyListSerializer"}}}}}, "tags": ["Function as a Service"]}
  "/cloud/v1/faas/keys/{project_id}/{region_id}/{key_name}":
    "get": {"operationId": "FaaSAuthKeyHandler.get", "summary": "Get API key", "description": "Retrieve detailed information about a specific API key.\nIncludes key permissions and expiration status.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "key_name", "required": true, "description": "Key name", "schema": {"description": "Key name", "examples": ["key-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Key Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FaasApiKeySerializer"}}}}}, "tags": ["Function as a Service"]}
    "patch": {"operationId": "FaaSAuthKeyHandler.patch", "summary": "Update API key", "description": "Update the configuration of an existing API key.\nOnly specified fields will be modified.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "key_name", "required": true, "description": "Key name", "schema": {"description": "Key name", "examples": ["key-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Key Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FaasApiKeySerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FaasApiKeyPatchSerializer"}}}}, "tags": ["Function as a Service"]}
    "delete": {"operationId": "FaaSAuthKeyHandler.delete", "summary": "Delete API key", "description": "Delete a specific API key.\nThe key will be immediately invalidated.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "key_name", "required": true, "description": "Key name", "schema": {"description": "Key name", "examples": ["key-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Key Name", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Function as a Service"]}
  "/cloud/v1/faas/namespaces/{project_id}/{region_id}":
    "post": {"operationId": "NamespacesHandler.post", "summary": "Create namespace", "description": "Create a new namespace for serverless functions.\nThe namespace will be created in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateNamespaceSerializer"}}}}, "tags": ["Function as a Service"]}
    "get": {"operationId": "NamespacesHandler.get", "summary": "List namespaces", "description": "Retrieve a list of namespaces in the project and region.\nEach namespace includes its associated functions and their deployment status.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Ordering fields and directions.", "schema": {"$ref": "#/components/schemas/FunctionsOrderByChoices", "default": "created_at.desc", "description": "Ordering fields and directions.", "examples": ["created_at.desc"]}}, {"in": "query", "name": "search", "required": false, "description": "Search through which value", "schema": {"description": "Search through which value", "examples": ["search-value"], "pattern": "^[-a-z0-9]{0,25}[-a-z0-9]$", "title": "Search", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NamespaceListSerializer"}}}}}, "tags": ["Function as a Service"]}
  "/cloud/v1/faas/namespaces/{project_id}/{region_id}/{namespace_name}":
    "get": {"operationId": "NamespaceHandler.get", "summary": "Get namespace", "description": "Retrieve detailed information about a specific namespace.\nIncludes all functions associated with the namespace.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "namespace_name", "required": true, "description": "Namespace name", "schema": {"description": "Namespace name", "examples": ["namespace-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Namespace Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NamespaceSerializer"}}}}}, "tags": ["Function as a Service"]}
    "patch": {"operationId": "NamespaceHandler.patch", "summary": "Update namespace", "description": "Update the configuration of an existing namespace.\nOnly specified fields will be modified.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "namespace_name", "required": true, "description": "Namespace name", "schema": {"description": "Namespace name", "examples": ["namespace-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Namespace Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChangeNamespaceSerializer"}}}}, "tags": ["Function as a Service"]}
    "delete": {"operationId": "NamespaceHandler.delete", "summary": "Delete namespace", "description": "Delete a namespace and all its associated functions.\nThe namespace must be empty before it can be deleted.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "namespace_name", "required": true, "description": "Namespace name", "schema": {"description": "Namespace name", "examples": ["namespace-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Namespace Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Function as a Service"]}
  "/cloud/v1/faas/namespaces/{project_id}/{region_id}/{namespace_name}/functions":
    "post": {"operationId": "FunctionsHandler.post", "summary": "Create function", "description": "Create a new serverless function in the specified namespace.\nThe function can be configured with code, dependencies, and runtime settings.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "namespace_name", "required": true, "description": "Namespace name", "schema": {"description": "Namespace name", "examples": ["namespace-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Namespace Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateFunctionSerializer"}}}}, "tags": ["Function as a Service"]}
    "get": {"operationId": "FunctionsHandler.get", "summary": "List functions", "description": "Retrieve a list of functions in the specified namespace.\nIncludes function configuration and deployment status.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "namespace_name", "required": true, "description": "Namespace name", "schema": {"description": "Namespace name", "examples": ["namespace-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Namespace Name", "type": "string"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Ordering fields and directions.", "schema": {"$ref": "#/components/schemas/FunctionsOrderByChoices", "default": "created_at.desc", "description": "Ordering fields and directions.", "examples": ["created_at.desc"]}}, {"in": "query", "name": "search", "required": false, "description": "Search through which value", "schema": {"description": "Search through which value", "examples": ["search-value"], "pattern": "^[-a-z0-9]{0,25}[-a-z0-9]$", "title": "Search", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FunctionListSerializer"}}}}}, "tags": ["Function as a Service"]}
  "/cloud/v1/faas/namespaces/{project_id}/{region_id}/{namespace_name}/functions/{function_name}":
    "get": {"operationId": "FunctionHandler.get", "summary": "Get function", "description": "Retrieve detailed information about a specific function.\nIncludes function code, configuration, and deployment status.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "namespace_name", "required": true, "description": "Namespace name", "schema": {"description": "Namespace name", "examples": ["namespace-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Namespace Name", "type": "string"}}, {"in": "path", "name": "function_name", "required": true, "description": "Function name", "schema": {"description": "Function name", "examples": ["function-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Function Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FunctionSerializer"}}}}}, "tags": ["Function as a Service"]}
    "patch": {"operationId": "FunctionHandler.patch", "summary": "Update function", "description": "Update the configuration of an existing function.\nOnly specified fields will be modified.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "namespace_name", "required": true, "description": "Namespace name", "schema": {"description": "Namespace name", "examples": ["namespace-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Namespace Name", "type": "string"}}, {"in": "path", "name": "function_name", "required": true, "description": "Function name", "schema": {"description": "Function name", "examples": ["function-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Function Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChangeFunctionSerializer"}}}}, "tags": ["Function as a Service"]}
    "delete": {"operationId": "FunctionHandler.delete", "summary": "Delete function", "description": "Delete a specific function from its namespace.\nThe function must be in a state that allows deletion.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "namespace_name", "required": true, "description": "Namespace name", "schema": {"description": "Namespace name", "examples": ["namespace-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Namespace Name", "type": "string"}}, {"in": "path", "name": "function_name", "required": true, "description": "Function name", "schema": {"description": "Function name", "examples": ["function-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Function Name", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Function as a Service"]}
  "/cloud/v1/faas/namespaces/{project_id}/{region_id}/{namespace_name}/functions/{function_name}/logs":
    "get": {"operationId": "LogsFunctionHandler.get", "summary": "Get function logs", "description": "Retrieve execution logs for a specific function.\nLogs can be filtered by time range and limit.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "namespace_name", "required": true, "description": "Namespace name", "schema": {"description": "Namespace name", "examples": ["namespace-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Namespace Name", "type": "string"}}, {"in": "path", "name": "function_name", "required": true, "description": "Function name", "schema": {"description": "Function name", "examples": ["function-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Function Name", "type": "string"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit the number of logs lines", "schema": {"default": 1000, "description": "Limit the number of logs lines", "examples": [10], "maximum": 100000, "minimum": 1, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LogsSerializer"}}}}}, "tags": ["Function as a Service"]}
  "/cloud/v1/faas/runtimes/{project_id}/{region_id}":
    "get": {"operationId": "RuntimesHandler.get", "summary": "List runtimes", "description": "Retrieve a list of available runtime environments for functions.\nEach runtime includes its version and supported features.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RuntimesSerializer"}}}}}, "tags": ["Function as a Service"]}
  "/cloud/v1/pricing/{project_id}/{region_id}/faas/functions":
    "post": {"operationId": "FaasFunctionPricingHandler.post", "summary": "Preview function price", "description": "Preview the billing price for the FaaS function.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FunctionPriceRequestSerializer"}}}}, "tags": ["Function as a Service"]}
  "/cloud/v1/ai/clusters/{project_id}/{region_id}/{cluster_id}/interfaces":
    "get": {"operationId": "AIClusterPoplarInterfacesHandler.get", "summary": "List bare metal GPU cluster interfaces", "description": "Retrieve a list of network interfaces attached to the GPU cluster servers.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of network interfaces", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceInterfaceTrunkCollectionSerializer"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nnetwork_interface_list = client.cloud.gpu_baremetal_clusters.interfaces.list(\n    cluster_id=\"cluster_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(network_interface_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  networkInterfaceList, err := client.Cloud.GPUBaremetalClusters.Interfaces.List(\n    context.TODO(),\n    \"cluster_id\",\n    cloud.GPUBaremetalClusterInterfaceListParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", networkInterfaceList.Count)\n}\n"}]}
  "/cloud/v1/ai/clusters/{project_id}/{region_id}/{cluster_id}/ports":
    "get": {"operationId": "AIClusterPoplarPortsHandler.get", "summary": "List bare metal GPU cluster ports", "description": "Retrieve a list of network ports attached to the GPU cluster servers.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of ports", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PortSecurityGroupsListSchema"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v2/ai/clusters/{project_id}/{region_id}/{cluster_id}/powercycle":
    "post": {"operationId": "AIClusterPowercycleHandler.post", "summary": "Powercycle all bare metal GPU cluster servers", "description": "Stops and then starts all cluster servers, effectively performing a hard reboot.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "GPU cluster ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned GPU cluster nodes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GPUClusterServerCollectionSerializer"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ngpu_baremetal_cluster_server_v1_list = client.cloud.gpu_baremetal_clusters.powercycle_all_servers(\n    cluster_id=\"cluster_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(gpu_baremetal_cluster_server_v1_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  gpuBaremetalClusterServerV1List, err := client.Cloud.GPUBaremetalClusters.PowercycleAllServers(\n    context.TODO(),\n    \"cluster_id\",\n    cloud.GPUBaremetalClusterPowercycleAllServersParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", gpuBaremetalClusterServerV1List.Count)\n}\n"}]}
  "/cloud/v2/ai/clusters/{project_id}/{region_id}/{cluster_id}/reboot":
    "post": {"operationId": "AIClusterRebootHandler.post", "summary": "Reboot all bare metal GPU cluster servers", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "GPU cluster ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Rebooted GPU cluster nodes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GPUClusterServerCollectionSerializer"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ngpu_baremetal_cluster_server_v1_list = client.cloud.gpu_baremetal_clusters.reboot_all_servers(\n    cluster_id=\"cluster_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(gpu_baremetal_cluster_server_v1_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  gpuBaremetalClusterServerV1List, err := client.Cloud.GPUBaremetalClusters.RebootAllServers(\n    context.TODO(),\n    \"cluster_id\",\n    cloud.GPUBaremetalClusterRebootAllServersParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", gpuBaremetalClusterServerV1List.Count)\n}\n"}]}
  "/cloud/v1/ai/clusters/{project_id}/{region_id}/{instance_id}/attach_interface":
    "post": {"operationId": "AIClusterAttachInterfaceHandler.post", "summary": "Attach interface to bare metal GPU cluster server", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Created task", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"discriminator": {"propertyName": "type", "mapping": {"external": "#/components/schemas/NewInterfaceExternalExtendSchemaWithDdos", "subnet": "#/components/schemas/NewInterfaceSpecificSubnetSchema", "any_subnet": "#/components/schemas/NewInterfaceAnySubnetSchema", "reserved_fixed_ip": "#/components/schemas/NewInterfaceReservedFixedIpSchema"}}, "anyOf": ["$ref": "#/components/schemas/NewInterfaceExternalExtendSchemaWithDdos", "$ref": "#/components/schemas/NewInterfaceSpecificSubnetSchema", "$ref": "#/components/schemas/NewInterfaceAnySubnetSchema", "$ref": "#/components/schemas/NewInterfaceReservedFixedIpSchema"]}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.gpu_baremetal_clusters.servers.attach_interface(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.GPUBaremetalClusters.Servers.AttachInterface(\n    context.TODO(),\n    \"instance_id\",\n    cloud.GPUBaremetalClusterServerAttachInterfaceParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/ai/clusters/{project_id}/{region_id}/{instance_id}/detach_interface":
    "post": {"operationId": "AIClusterDetachInterfaceHandler.post", "summary": "Detach interface from bare metal GPU cluster server", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Created task", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PortIdWithIpSchema"}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.gpu_baremetal_clusters.servers.detach_interface(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n    ip_address=\"192.168.123.20\",\n    port_id=\"351b0dd7-ca09-431c-be53-935db3785067\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.GPUBaremetalClusters.Servers.DetachInterface(\n    context.TODO(),\n    \"instance_id\",\n    cloud.GPUBaremetalClusterServerDetachInterfaceParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      IPAddress: \"192.168.123.20\",\n      PortID: \"351b0dd7-ca09-431c-be53-935db3785067\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/ai/clusters/{project_id}/{region_id}/{instance_id}/get_console":
    "get": {"operationId": "AIPoplarServerConsoleHandler.get", "summary": "Get bare metal GPU cluster server console URL", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Remote console data", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RemoteConsoleSerializer"}}}}, "400": {"description": "Unavailable console type"}, "404": {"description": "Instance not found"}, "409": {"description": "Console locked"}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nconsole = client.cloud.gpu_baremetal_clusters.servers.get_console(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(console.remote_console)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  console, err := client.Cloud.GPUBaremetalClusters.Servers.GetConsole(\n    context.TODO(),\n    \"instance_id\",\n    cloud.GPUBaremetalClusterServerGetConsoleParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", console.RemoteConsole)\n}\n"}]}
  "/cloud/v1/ai/clusters/{project_id}/{region_id}/{instance_id}/powercycle":
    "post": {"operationId": "AIPoplarServerPowercycleHandler.post", "summary": "Powercycle one bare metal GPU cluster server", "description": "Stops and then starts the server, effectively performing a hard reboot.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned GPU cluster node", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GPUClusterServerSerializer"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ngpu_baremetal_cluster_server_v1 = client.cloud.gpu_baremetal_clusters.servers.powercycle(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(gpu_baremetal_cluster_server_v1.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  gpuBaremetalClusterServerV1, err := client.Cloud.GPUBaremetalClusters.Servers.Powercycle(\n    context.TODO(),\n    \"instance_id\",\n    cloud.GPUBaremetalClusterServerPowercycleParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", gpuBaremetalClusterServerV1.ID)\n}\n"}]}
  "/cloud/v1/ai/clusters/{project_id}/{region_id}/{instance_id}/reboot":
    "post": {"operationId": "AIPoplarServerRebootHandler.post", "summary": "Reboot one bare metal GPU cluster server", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned GPU cluster node", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GPUClusterServerSerializer"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ngpu_baremetal_cluster_server_v1 = client.cloud.gpu_baremetal_clusters.servers.reboot(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(gpu_baremetal_cluster_server_v1.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  gpuBaremetalClusterServerV1, err := client.Cloud.GPUBaremetalClusters.Servers.Reboot(\n    context.TODO(),\n    \"instance_id\",\n    cloud.GPUBaremetalClusterServerRebootParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", gpuBaremetalClusterServerV1.ID)\n}\n"}]}
  "/cloud/v1/ai/clusters/gpu/{project_id}/{region_id}/{cluster_id}/node/{instance_id}":
    "delete": {"operationId": "AIClustersNodeDelete.delete", "summary": "Delete bare metal GPU cluster server", "description": "Delete a specific node from a GPU cluster.\nThe node must be in a state that allows deletion.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster ID", "schema": {"type": "string"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Cluster node ID", "schema": {"type": "string"}}, {"in": "query", "name": "delete_floatings", "required": false, "description": "Set False if you do not want to delete assigned floating IPs. By default, it's True.", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "created tasks for node removal", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Invalid parameter in request"}, "404": {"description": "Mandatory resource was not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotFoundErrorSchema"}}}}, "409": {"description": "GPU cluster state not allow for node removal"}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.gpu_baremetal_clusters.servers.delete(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n    cluster_id=\"cluster_id\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.GPUBaremetalClusters.Servers.Delete(\n    context.TODO(),\n    \"instance_id\",\n    cloud.GPUBaremetalClusterServerDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      ClusterID: \"cluster_id\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/ai/clusters/gpu/{project_id}/{region_id}/{cluster_id}/rebuild":
    "post": {"operationId": "AIClustersRebuild.post", "summary": "Rebuild bare metal GPU cluster servers", "description": "Rebuild one or more nodes in a GPU cluster.\nAll cluster nodes must be specified to update the cluster image.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "created tasks for nodes rebuild", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Invalid parameter in request"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RebuildClusterSerializer"}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.gpu_baremetal_clusters.rebuild(\n    cluster_id=\"cluster_id\",\n    project_id=0,\n    region_id=0,\n    nodes=[\"string\"],\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.GPUBaremetalClusters.Rebuild(\n    context.TODO(),\n    \"cluster_id\",\n    cloud.GPUBaremetalClusterRebuildParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      Nodes: []string{\"string\"},\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/ai/clusters/gpu/{project_id}/{region_id}/{cluster_id}/resize":
    "post": {"operationId": "AIClustersGPUResizeHandler.post", "summary": "Resize bare metal GPU cluster", "description": "Change the number of nodes in a GPU cluster.\nThe cluster can be scaled up or down.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "created tasks for cluster resizing", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Invalid parameter in request"}, "404": {"description": "Mandatory resource was not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotFoundErrorSchema"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResizeAIClusterGPUSerializerV1"}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.gpu_baremetal_clusters.resize(\n    cluster_id=\"cluster_id\",\n    project_id=0,\n    region_id=0,\n    instances_count=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.GPUBaremetalClusters.Resize(\n    context.TODO(),\n    \"cluster_id\",\n    cloud.GPUBaremetalClusterResizeParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      InstancesCount: 1,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/ai/regions":
    "get": {"operationId": "AIRegionsHandler.get", "summary": "List regions with GPU cluster support", "description": "Retrieve a list of regions that support GPU clusters.\nFor resellers, returns all AI regions.\nFor regular clients, returns only active AI regions.", "parameters": [], "responses": {"200": {"description": "All Regions (json format).", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionSerializerAiList"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v3/gpu/baremetal/{project_id}/{region_id}/check_limits":
    "post": {"operationId": "CheckBaremetalGpuLimits.post", "summary": "Check bare metal GPU cluster quota", "description": "Check if regional quota is exceeded for bare metal GPU cluster creation.\nIf exceeded, calculate additional quotas needed.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GpuClusterRequiredQuotaSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CheckQuotaBeforeBaremetalGpuClusterCreationSerializer"}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v3/gpu/baremetal/{project_id}/{region_id}/clusters":
    "post": {"operationId": "BMClusterCollection.post", "summary": "Create bare metal GPU cluster", "description": "Create a new bare metal GPU cluster with the specified configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BaremetalClusterCreateSerializer"}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.gpu_baremetal_clusters.create(\n    project_id=1,\n    region_id=7,\n    flavor=\"g3-ai-32-192-1500-l40s-48-1\",\n    image_id=\"3793c250-0b3b-4678-bab3-e11afbc29657\",\n    name=\"gpu-cluster-1\",\n    servers_count=3,\n    servers_settings={\n        \"interfaces\": [{\n            \"type\": \"external\"\n        }]\n    },\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.GPUBaremetalClusters.New(context.TODO(), cloud.GPUBaremetalClusterNewParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(7),\n    Flavor: \"g3-ai-32-192-1500-l40s-48-1\",\n    ImageID: \"3793c250-0b3b-4678-bab3-e11afbc29657\",\n    Name: \"gpu-cluster-1\",\n    ServersCount: 3,\n    ServersSettings: cloud.GPUBaremetalClusterNewParamsServersSettings{\n      Interfaces: []cloud.GPUBaremetalClusterNewParamsServersSettingsInterfaceUnion{cloud.GPUBaremetalClusterNewParamsServersSettingsInterfaceUnion{\n        OfExternal: &cloud.GPUBaremetalClusterNewParamsServersSettingsInterfaceExternal{\n\n        },\n      }},\n    },\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "BMClusterCollection.get", "summary": "List bare metal GPU clusters", "description": "List all bare metal GPU clusters in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit of items on a single page", "schema": {"default": 10, "description": "Limit of items on a single page", "examples": [10], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "managed_by", "required": false, "description": "Specifies the entity responsible for managing the resource.\n- `user`: The resource (cluster) is created and maintained directly by the user.\n- `k8s`: The resource is created and maintained automatically by Managed Kubernetes service", "schema": {"default": ["user"], "description": "Specifies the entity responsible for managing the resource.\n- `user`: The resource (cluster) is created and maintained directly by the user.\n- `k8s`: The resource is created and maintained automatically by Managed Kubernetes service", "items": {"$ref": "#/components/schemas/ClusterManagedBy"}, "title": "Managed By", "type": "array"}}, {"in": "query", "name": "offset", "required": false, "description": "Offset in results list", "schema": {"default": 0, "description": "Offset in results list", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BaremetalClusterListSerializer"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.gpu_baremetal_clusters.list(\n    project_id=1,\n    region_id=7,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.GPUBaremetalClusters.List(context.TODO(), cloud.GPUBaremetalClusterListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(7),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v3/gpu/baremetal/{project_id}/{region_id}/clusters/{cluster_id}":
    "get": {"operationId": "BMClusterInstance.get", "summary": "Get bare metal GPU cluster", "description": "Get detailed information about a specific bare metal GPU cluster.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BaremetalClusterSerializer"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ngpu_baremetal_cluster = client.cloud.gpu_baremetal_clusters.get(\n    cluster_id=\"1aaaab48-10d0-46d9-80cc-85209284ceb4\",\n    project_id=1,\n    region_id=7,\n)\nprint(gpu_baremetal_cluster.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  gpuBaremetalCluster, err := client.Cloud.GPUBaremetalClusters.Get(\n    context.TODO(),\n    \"1aaaab48-10d0-46d9-80cc-85209284ceb4\",\n    cloud.GPUBaremetalClusterGetParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(7),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", gpuBaremetalCluster.ID)\n}\n"}]}
    "delete": {"operationId": "BMClusterInstance.delete", "summary": "Delete bare metal GPU cluster", "description": "Delete a bare metal GPU cluster and all its associated resources.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}, {"in": "query", "name": "all_floating_ips", "required": false, "description": "Flag indicating whether the floating ips associated with server / cluster are deleted", "schema": {"default": false, "description": "Flag indicating whether the floating ips associated with server / cluster are deleted", "examples": [true], "title": "All Floating Ips", "type": "boolean"}}, {"in": "query", "name": "all_reserved_fixed_ips", "required": false, "description": "Flag indicating whether the reserved fixed ips associated with server / cluster are deleted", "schema": {"default": false, "description": "Flag indicating whether the reserved fixed ips associated with server / cluster are deleted", "examples": [true], "title": "All Reserved Fixed Ips", "type": "boolean"}}, {"in": "query", "name": "floating_ip_ids", "required": false, "description": "Optional list of floating ips to be deleted", "schema": {"description": "Optional list of floating ips to be deleted", "examples": [["e4a01208-d6ac-4304-bf86-3028154b070a"]], "items": {"format": "uuid4", "type": "string"}, "title": "Floating Ip Ids", "type": "array"}}, {"in": "query", "name": "reserved_fixed_ip_ids", "required": false, "description": "Optional list of reserved fixed ips to be deleted", "schema": {"description": "Optional list of reserved fixed ips to be deleted", "examples": [["a29b8e1e-08d3-4cec-91fb-06e81e5f46d5"]], "items": {"format": "uuid4", "type": "string"}, "title": "Reserved Fixed Ip Ids", "type": "array"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.gpu_baremetal_clusters.delete(\n    cluster_id=\"1aaaab48-10d0-46d9-80cc-85209284ceb4\",\n    project_id=1,\n    region_id=7,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.GPUBaremetalClusters.Delete(\n    context.TODO(),\n    \"1aaaab48-10d0-46d9-80cc-85209284ceb4\",\n    cloud.GPUBaremetalClusterDeleteParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(7),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v3/gpu/baremetal/{project_id}/{region_id}/clusters/{cluster_id}/action":
    "post": {"operationId": "BaremetalClusterInstanceActions.post", "summary": "Execute baremetal GPU cluster action", "description": "Perform a specific action on a baremetal GPU cluster.\nAvailable actions: update tags.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BaremetalGPUClusterActionSerializer"}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.gpu_baremetal_clusters.action(\n    cluster_id=\"1aaaab48-10d0-46d9-80cc-85209284ceb4\",\n    project_id=1,\n    region_id=7,\n    action=\"update_tags\",\n    tags={\n        \"foo\": \"my-tag-value\"\n    },\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.GPUBaremetalClusters.Action(\n    context.TODO(),\n    \"1aaaab48-10d0-46d9-80cc-85209284ceb4\",\n    cloud.GPUBaremetalClusterActionParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(7),\n      Action: \"update_tags\",\n      Tags: cloud.TagUpdateMap{\n      \"foo\": \"my-tag-value\",\n      },\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v3/gpu/baremetal/{project_id}/{region_id}/clusters/{cluster_id}/servers":
    "get": {"operationId": "BaremetalClusterInstanceServers.get", "summary": "List bare metal GPU cluster servers", "description": "List all servers in a bare metal GPU cluster.\nResults can be filtered and paginated.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}, {"in": "query", "name": "changed_before", "required": false, "description": "Filters the results to include only servers whose last change timestamp is less than the specified datetime. Format: ISO 8601.", "schema": {"description": "Filters the results to include only servers whose last change timestamp is less than the specified datetime. Format: ISO 8601.", "examples": ["2025-10-01T12:00:00Z"], "format": "date-time", "title": "Changed Before", "type": "string"}}, {"in": "query", "name": "changed_since", "required": false, "description": "Filters the results to include only servers whose last change timestamp is greater than or equal to the specified datetime. Format: ISO 8601.", "schema": {"description": "Filters the results to include only servers whose last change timestamp is greater than or equal to the specified datetime. Format: ISO 8601.", "examples": ["2025-10-01T12:00:00Z"], "format": "date-time", "title": "Changed Since", "type": "string"}}, {"in": "query", "name": "ip_address", "required": false, "description": "Filter servers by ip address.", "schema": {"description": "Filter servers by ip address.", "examples": ["237.84.2.178"], "title": "Ip Address", "type": "string"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit of items on a single page", "schema": {"default": 10, "description": "Limit of items on a single page", "examples": [10], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "name", "required": false, "description": "Filter servers by name. You can provide a full or partial name, servers with matching names will be returned. For example, entering 'test' will return all servers that contain 'test' in their name.", "schema": {"description": "Filter servers by name. You can provide a full or partial name, servers with matching names will be returned. For example, entering 'test' will return all servers that contain 'test' in their name.", "title": "Name", "type": "string"}}, {"in": "query", "name": "offset", "required": false, "description": "Offset in results list", "schema": {"default": 0, "description": "Offset in results list", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Order field", "schema": {"$ref": "#/components/schemas/GroupOrdering", "default": "created_at.desc", "description": "Order field"}}, {"in": "query", "name": "status", "required": false, "description": "Filters servers by status.", "schema": {"$ref": "#/components/schemas/InstanceStatusQuery", "description": "Filters servers by status.", "examples": ["ACTIVE"]}}, {"in": "query", "name": "uuids", "required": false, "description": "Filter servers by uuid.", "schema": {"description": "Filter servers by uuid.", "items": {"type": "string"}, "title": "Uuids", "type": "array"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BaremetalClusterInstanceServersList"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\"\
            ,\n)\npage = client.cloud.gpu_baremetal_clusters.servers.list(\n    cluster_id=\"1aaaab48-10d0-46d9-80cc-85209284ceb4\",\n    project_id=1,\n    region_id=7,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.GPUBaremetalClusters.Servers.List(\n    context.TODO(),\n    \"1aaaab48-10d0-46d9-80cc-85209284ceb4\",\n    cloud.GPUBaremetalClusterServerListParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(7),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v3/gpu/baremetal/{project_id}/{region_id}/flavors":
    "get": {"operationId": "BaremetalGpuFlavorListViewSet.get", "summary": "List bare metal GPU flavors", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "hide_disabled", "required": false, "description": "Set to `true` to remove the disabled flavors from the response.", "schema": {"default": false, "description": "Set to `true` to remove the disabled flavors from the response.", "examples": [true], "title": "Hide Disabled", "type": "boolean"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Set to `true` if the response should include flavor prices.", "schema": {"default": false, "description": "Set to `true` if the response should include flavor prices.", "examples": [true], "title": "Include Prices", "type": "boolean"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListGpuBaremetalFlavorSerializer"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ngpu_baremetal_flavor_list = client.cloud.gpu_baremetal_clusters.flavors.list(\n    project_id=1,\n    region_id=7,\n)\nprint(gpu_baremetal_flavor_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  gpuBaremetalFlavorList, err := client.Cloud.GPUBaremetalClusters.Flavors.List(context.TODO(), cloud.GPUBaremetalClusterFlavorListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(7),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", gpuBaremetalFlavorList.Count)\n}\n"}]}
  "/cloud/v3/gpu/baremetal/{project_id}/{region_id}/images":
    "post": {"operationId": "BaremetalGpuImageListViewSet.post", "summary": "Upload new bare metal GPU image", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UploadBaremetalGpuImageSerializer"}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.gpu_baremetal_clusters.images.upload(\n    project_id=1,\n    region_id=7,\n    name=\"ubuntu-23.10-x64\",\n    url=\"http://mirror.noris.net/cirros/0.4.0/cirros-0.4.0-x86_64-disk.img\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.GPUBaremetalClusters.Images.Upload(context.TODO(), cloud.GPUBaremetalClusterImageUploadParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(7),\n    Name: \"ubuntu-23.10-x64\",\n    URL: \"http://mirror.noris.net/cirros/0.4.0/cirros-0.4.0-x86_64-disk.img\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "BaremetalGpuImageListViewSet.get", "summary": "List bare metal GPU images", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListGpuImageSerializer"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ngpu_image_list = client.cloud.gpu_baremetal_clusters.images.list(\n    project_id=1,\n    region_id=7,\n)\nprint(gpu_image_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  gpuImageList, err := client.Cloud.GPUBaremetalClusters.Images.List(context.TODO(), cloud.GPUBaremetalClusterImageListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(7),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", gpuImageList.Count)\n}\n"}]}
  "/cloud/v3/gpu/baremetal/{project_id}/{region_id}/images/{image_id}":
    "get": {"operationId": "BaremetalGpuImageViewSet.get", "summary": "Get bare metal GPU image", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "image_id", "required": true, "description": "Image ID", "schema": {"description": "Image ID", "examples": ["8cab6f28-09ca-4201-b3f7-23c7893f4bd6"], "title": "Image Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GpuImageSerializer"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ngpu_image = client.cloud.gpu_baremetal_clusters.images.get(\n    image_id=\"8cab6f28-09ca-4201-b3f7-23c7893f4bd6\",\n    project_id=1,\n    region_id=7,\n)\nprint(gpu_image.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  gpuImage, err := client.Cloud.GPUBaremetalClusters.Images.Get(\n    context.TODO(),\n    \"8cab6f28-09ca-4201-b3f7-23c7893f4bd6\",\n    cloud.GPUBaremetalClusterImageGetParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(7),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", gpuImage.ID)\n}\n"}]}
    "delete": {"operationId": "BaremetalGpuImageViewSet.delete", "summary": "Delete bare metal GPU image", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "image_id", "required": true, "description": "Image ID", "schema": {"description": "Image ID", "examples": ["8cab6f28-09ca-4201-b3f7-23c7893f4bd6"], "title": "Image Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["GPU Cloud"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.gpu_baremetal_clusters.images.delete(\n    image_id=\"8cab6f28-09ca-4201-b3f7-23c7893f4bd6\",\n    project_id=1,\n    region_id=7,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.GPUBaremetalClusters.Images.Delete(\n    context.TODO(),\n    \"8cab6f28-09ca-4201-b3f7-23c7893f4bd6\",\n    cloud.GPUBaremetalClusterImageDeleteParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(7),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v3/gpu/virtual/{project_id}/{region_id}/check_limits":
    "post": {"operationId": "CheckVirtualGpuLimits.post", "summary": "Check virtual GPU cluster quota", "description": "Check if regional quota is exceeded for virtual GPU cluster creation.\nIf exceeded, calculate additional quotas needed.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VirtualGpuRequiredQuotaSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CheckQuotaBeforeVirtualGpuClusterCreationSerializer"}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v3/gpu/virtual/{project_id}/{region_id}/clusters":
    "post": {"operationId": "VirtualClusterCollection.post", "summary": "Create virtual GPU cluster", "description": "Create a new virtual GPU cluster with the specified configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ClusterCreateSerializer"}}}}, "tags": ["GPU Cloud"]}
    "get": {"operationId": "VirtualClusterCollection.get", "summary": "List virtual GPU clusters", "description": "List all virtual GPU clusters in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit of items on a single page", "schema": {"default": 10, "description": "Limit of items on a single page", "examples": [10], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Offset in results list", "schema": {"default": 0, "description": "Offset in results list", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VirtualClusterListSerializer"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v3/gpu/virtual/{project_id}/{region_id}/clusters/{cluster_id}":
    "get": {"operationId": "VirtualClusterInstance.get", "summary": "Get virtual GPU cluster", "description": "Get detailed information about a specific virtual GPU cluster.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VirtualClusterSerializer"}}}}}, "tags": ["GPU Cloud"]}
    "patch": {"operationId": "VirtualClusterInstance.patch", "summary": "Update virtual GPU cluster", "description": "Update the name of an existing virtual GPU cluster.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VirtualClusterSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateClusterSerializer"}}}}, "tags": ["GPU Cloud"]}
    "delete": {"operationId": "VirtualClusterInstance.delete", "summary": "Delete virtual GPU cluster", "description": "Delete a virtual GPU cluster and all its associated resources.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}, {"in": "query", "name": "all_floating_ips", "required": false, "description": "Flag indicating whether the floating ips associated with server / cluster are deleted", "schema": {"default": false, "description": "Flag indicating whether the floating ips associated with server / cluster are deleted", "examples": [true], "title": "All Floating Ips", "type": "boolean"}}, {"in": "query", "name": "all_reserved_fixed_ips", "required": false, "description": "Flag indicating whether the reserved fixed ips associated with server / cluster are deleted", "schema": {"default": false, "description": "Flag indicating whether the reserved fixed ips associated with server / cluster are deleted", "examples": [true], "title": "All Reserved Fixed Ips", "type": "boolean"}}, {"in": "query", "name": "all_volumes", "required": false, "description": "Flag indicating whether all attached volumes are deleted", "schema": {"default": false, "description": "Flag indicating whether all attached volumes are deleted", "examples": [true], "title": "All Volumes", "type": "boolean"}}, {"in": "query", "name": "floating_ip_ids", "required": false, "description": "Optional list of floating ips to be deleted", "schema": {"description": "Optional list of floating ips to be deleted", "examples": [["e4a01208-d6ac-4304-bf86-3028154b070a"]], "items": {"format": "uuid4", "type": "string"}, "title": "Floating Ip Ids", "type": "array"}}, {"in": "query", "name": "reserved_fixed_ip_ids", "required": false, "description": "Optional list of reserved fixed ips to be deleted", "schema": {"description": "Optional list of reserved fixed ips to be deleted", "examples": [["a29b8e1e-08d3-4cec-91fb-06e81e5f46d5"]], "items": {"format": "uuid4", "type": "string"}, "title": "Reserved Fixed Ip Ids", "type": "array"}}, {"in": "query", "name": "volume_ids", "required": false, "description": "Optional list of volumes to be deleted", "schema": {"description": "Optional list of volumes to be deleted", "examples": [["1333c684-c3da-4b91-ac9e-a92706aa2824"]], "items": {"format": "uuid4", "type": "string"}, "title": "Volume Ids", "type": "array"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v3/gpu/virtual/{project_id}/{region_id}/clusters/{cluster_id}/action":
    "post": {"operationId": "VirtualClusterInstanceActions.post", "summary": "Execute virtual GPU cluster action", "description": "Perform a specific action on a virtual GPU cluster.\nAvailable actions: start, stop, soft reboot, hard reboot, resize, update tags.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/VirtualGPUClusterActionSerializer"}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v3/gpu/virtual/{project_id}/{region_id}/clusters/{cluster_id}/interfaces":
    "get": {"operationId": "VirtualGpuClusterInterfaces.get", "summary": "List virtual GPU cluster interfaces", "description": "List all network interfaces for servers in a virtual GPU cluster.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VirtualGpuClusterInterfaceCollectionSerializer"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v3/gpu/virtual/{project_id}/{region_id}/clusters/{cluster_id}/servers":
    "get": {"operationId": "VirtualClusterInstanceServers.get", "summary": "List virtual GPU cluster servers", "description": "List all servers in a virtual GPU cluster.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}, {"in": "query", "name": "changed_before", "required": false, "description": "Filters the results to include only servers whose last change timestamp is less than the specified datetime. Format: ISO 8601.", "schema": {"description": "Filters the results to include only servers whose last change timestamp is less than the specified datetime. Format: ISO 8601.", "examples": ["2025-10-01T12:00:00Z"], "format": "date-time", "title": "Changed Before", "type": "string"}}, {"in": "query", "name": "changed_since", "required": false, "description": "Filters the results to include only servers whose last change timestamp is greater than or equal to the specified datetime. Format: ISO 8601.", "schema": {"description": "Filters the results to include only servers whose last change timestamp is greater than or equal to the specified datetime. Format: ISO 8601.", "examples": ["2025-10-01T12:00:00Z"], "format": "date-time", "title": "Changed Since", "type": "string"}}, {"in": "query", "name": "ip_address", "required": false, "description": "Filter servers by ip address.", "schema": {"description": "Filter servers by ip address.", "examples": ["237.84.2.178"], "title": "Ip Address", "type": "string"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit of items on a single page", "schema": {"default": 10, "description": "Limit of items on a single page", "examples": [10], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "name", "required": false, "description": "Filter servers by name. You can provide a full or partial name, servers with matching names will be returned. For example, entering 'test' will return all servers that contain 'test' in their name.", "schema": {"description": "Filter servers by name. You can provide a full or partial name, servers with matching names will be returned. For example, entering 'test' will return all servers that contain 'test' in their name.", "title": "Name", "type": "string"}}, {"in": "query", "name": "offset", "required": false, "description": "Offset in results list", "schema": {"default": 0, "description": "Offset in results list", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Order field", "schema": {"$ref": "#/components/schemas/GroupOrdering", "default": "created_at.desc", "description": "Order field"}}, {"in": "query", "name": "status", "required": false, "description": "Filters servers by status.", "schema": {"$ref": "#/components/schemas/InstanceStatusQuery", "description": "Filters servers by status.", "examples": ["ACTIVE"]}}, {"in": "query", "name": "uuids", "required": false, "description": "Filter servers by uuid.", "schema": {"description": "Filter servers by uuid.", "items": {"type": "string"}, "title": "Uuids", "type": "array"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ClusterInstanceServersList"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v3/gpu/virtual/{project_id}/{region_id}/clusters/{cluster_id}/servers/{server_id}":
    "delete": {"operationId": "ClusterInstanceServerInstance.delete", "summary": "Delete virtual GPU cluster server", "description": "Delete a server from a virtual GPU cluster and its associated resources.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}, {"in": "path", "name": "server_id", "required": true, "description": "Server unique identifier", "schema": {"description": "Server unique identifier", "examples": ["f1c1eeb6-1834-48c9-a7b0-daafce64872b"], "format": "uuid4", "title": "Server Id", "type": "string"}}, {"in": "query", "name": "all_floating_ips", "required": false, "description": "Flag indicating whether the floating ips associated with server / cluster are deleted", "schema": {"default": false, "description": "Flag indicating whether the floating ips associated with server / cluster are deleted", "examples": [true], "title": "All Floating Ips", "type": "boolean"}}, {"in": "query", "name": "all_reserved_fixed_ips", "required": false, "description": "Flag indicating whether the reserved fixed ips associated with server / cluster are deleted", "schema": {"default": false, "description": "Flag indicating whether the reserved fixed ips associated with server / cluster are deleted", "examples": [true], "title": "All Reserved Fixed Ips", "type": "boolean"}}, {"in": "query", "name": "all_volumes", "required": false, "description": "Flag indicating whether all attached volumes are deleted", "schema": {"default": false, "description": "Flag indicating whether all attached volumes are deleted", "examples": [true], "title": "All Volumes", "type": "boolean"}}, {"in": "query", "name": "floating_ip_ids", "required": false, "description": "Optional list of floating ips to be deleted", "schema": {"description": "Optional list of floating ips to be deleted", "examples": [["e4a01208-d6ac-4304-bf86-3028154b070a"]], "items": {"format": "uuid4", "type": "string"}, "title": "Floating Ip Ids", "type": "array"}}, {"in": "query", "name": "reserved_fixed_ip_ids", "required": false, "description": "Optional list of reserved fixed ips to be deleted", "schema": {"description": "Optional list of reserved fixed ips to be deleted", "examples": [["a29b8e1e-08d3-4cec-91fb-06e81e5f46d5"]], "items": {"format": "uuid4", "type": "string"}, "title": "Reserved Fixed Ip Ids", "type": "array"}}, {"in": "query", "name": "volume_ids", "required": false, "description": "Optional list of volumes to be deleted", "schema": {"description": "Optional list of volumes to be deleted", "examples": [["1333c684-c3da-4b91-ac9e-a92706aa2824"]], "items": {"format": "uuid4", "type": "string"}, "title": "Volume Ids", "type": "array"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v3/gpu/virtual/{project_id}/{region_id}/clusters/{cluster_id}/volumes":
    "get": {"operationId": "ClusterInstanceVolumes.get", "summary": "List virtual GPU cluster volumes", "description": "List all volumes attached to servers in a virtual GPU cluster.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ClusterInstanceVolumesList"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v3/gpu/virtual/{project_id}/{region_id}/flavors":
    "get": {"operationId": "VirtualGpuFlavorListViewSet.get", "summary": "List virtual GPU flavors", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "hide_disabled", "required": false, "description": "Set to `true` to remove the disabled flavors from the response.", "schema": {"default": false, "description": "Set to `true` to remove the disabled flavors from the response.", "examples": [true], "title": "Hide Disabled", "type": "boolean"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Set to `true` if the response should include flavor prices.", "schema": {"default": false, "description": "Set to `true` if the response should include flavor prices.", "examples": [true], "title": "Include Prices", "type": "boolean"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListGpuVirtualFlavorSerializer"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v3/gpu/virtual/{project_id}/{region_id}/images":
    "post": {"operationId": "VirtualGpuImageListViewSet.post", "summary": "Upload new virtual GPU image", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UploadVirtualGpuImageSerializer"}}}}, "tags": ["GPU Cloud"]}
    "get": {"operationId": "VirtualGpuImageListViewSet.get", "summary": "List virtual GPU images", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListGpuImageSerializer"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v3/gpu/virtual/{project_id}/{region_id}/images/{image_id}":
    "get": {"operationId": "VirtualGpuImageViewSet.get", "summary": "Get virtual GPU image", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "image_id", "required": true, "description": "Image ID", "schema": {"description": "Image ID", "examples": ["8cab6f28-09ca-4201-b3f7-23c7893f4bd6"], "title": "Image Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GpuImageSerializer"}}}}}, "tags": ["GPU Cloud"]}
    "delete": {"operationId": "VirtualGpuImageViewSet.delete", "summary": "Delete virtual GPU image", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "image_id", "required": true, "description": "Image ID", "schema": {"description": "Image ID", "examples": ["8cab6f28-09ca-4201-b3f7-23c7893f4bd6"], "title": "Image Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v1/pricing/{project_id}/{region_id}/ai/clusters":
    "post": {"operationId": "AIClusterPricingPreviewHandler.post", "summary": "Preview GPU cluster price", "description": "Preview the billing price for a GPU cluster.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstancePricingPreviewV2ResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AIClusterPricingPreviewRequestSerializer"}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v1/pricing/{project_id}/{region_id}/ai/clusters/{server_id}":
    "get": {"operationId": "AIClusterPricingHandler.get", "summary": "Get GPU cluster price", "description": "Get the billing rate for an existing GPU cluster based on its current configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "server_id", "required": true, "description": "AI server ID", "schema": {"description": "AI server ID", "pattern": "^[\\w\\-]+$", "title": "Server Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v2/pricing/{project_id}/{region_id}/gpu/baremetal/clusters/{cluster_id}":
    "get": {"operationId": "BmGpuClusterPricingHandlerV2.get", "summary": "Get bare metal GPU cluster price", "description": "Get the billing rate of an existing bare metal GPU cluster based on the current configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v2/pricing/{project_id}/{region_id}/gpu/virtual/clusters/{cluster_id}":
    "get": {"operationId": "VirtualGpuClusterPricingHandlerV2.get", "summary": "Get virtual GPU cluster price", "description": "Get the billing rate of an existing virtual GPU cluster based on the current configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "Cluster unique identifier", "schema": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Cluster Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v2/ai/clusters/{project_id}/{region_id}":
    "get": {"operationId": "AIClustersHandlerV2.get", "summary": "List bare metal GPU clusters", "description": "Please use the `/v3/gpu/baremetal/{`project_id`}/{`region_id`}/clusters` instead.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit the number of returned clusters", "schema": {"type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Offset value is used to exclude the first set of records from the result", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of GPU clusters", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AIClusterCollectionSerializer"}}}}}, "deprecated": true, "tags": ["GPU Cloud"]}
  "/cloud/v2/ai/clusters/{project_id}/{region_id}/{cluster_id}":
    "get": {"operationId": "AIClusterHandlerV2.get", "summary": "Get bare metal GPU cluster", "description": "Please use the `/v3/gpu/baremetal/{`project_id`}/{`region_id`}/clusters/{`cluster_id`}` instead.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "GPU cluster ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "GPU cluster", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AIClusterSerializer"}}}}}, "deprecated": true, "tags": ["GPU Cloud"]}
    "delete": {"operationId": "AIClusterHandlerV2.delete", "summary": "Delete bare metal GPU cluster", "description": "Deletes given bare metal GPU cluster.\nPlease use the `/v3/gpu/baremetal/{`project_id`}/{`region_id`}/clusters/{`cluster_id`}` instead.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_id", "required": true, "description": "GPU cluster ID", "schema": {"type": "string"}}, {"in": "query", "name": "delete_floatings", "required": false, "description": "True if it is required to delete floating IPs assigned to the servers. Can't be used with floatings.", "schema": {"type": "boolean"}}, {"in": "query", "name": "floatings", "required": false, "description": "Comma separated list of floating ids that should be deleted. Can't be used with `delete_floatings`.", "schema": {"type": "string"}}, {"in": "query", "name": "reserved_fixed_ips", "required": false, "description": "Comma separated list of port IDs to be deleted with the servers", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "404": {"description": "GPU cluster was not found"}}, "deprecated": true, "tags": ["GPU Cloud"]}
  "/cloud/v1/ai/clusters/{project_id}/{region_id}/check_limits":
    "post": {"operationId": "AIClusterLimitsHandler.post", "summary": "Check GPU cluster quotas", "description": "Check if there are sufficient quotas to create a GPU cluster.\nDetermines whether the regional quota is exceeded and, if so,\ncalculates the additional quota required.\nUse `/v3/gpu/baremetal/{`project_id`}/{`region_id`}/check_limits`", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Dict of exceeding quotas", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionalDiffQuotasSchema"}}}}, "400": {"description": "Invalid parameter in request"}}, "deprecated": true, "tags": ["GPU Cloud"]}
  "/cloud/v1/ai/clusters/gpu/{project_id}/{region_id}":
    "post": {"operationId": "AIClustersGPUHandler.post", "summary": "Create bare metal GPU cluster", "description": "Create a new GPU cluster with specified configuration.\nThe cluster can be created with one or more nodes.\nPlease use the `/v3/gpu/baremetal/{`project_id`}/{`region_id`}/clusters` endpoint instead.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "created tasks for cluster creation", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Invalid parameter in request"}, "404": {"description": "Keypair or other mandatory resource was not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotFoundErrorSchema"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateAIClusterGPUSerializer"}}}}, "tags": ["GPU Cloud"]}
  "/cloud/v1/ai/flavors/{project_id}/{region_id}":
    "get": {"operationId": "AIFlavorsHandler.get", "summary": "List GPU flavors", "description": "Retrieve a list of flavors available for GPU clusters.\nPlease use the `/v3/gpu/baremetal/{`project_id`}/{`region_id`}/flavors` endpoint instead.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "disabled", "required": false, "description": "Flag for filtering disabled flavors in the region", "schema": {"type": "boolean"}}, {"in": "query", "name": "include_capacity", "required": false, "description": "Set to true to see the number of available AI Infrastructure clusters of given configuration", "schema": {"type": "boolean"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Set to true if flavor listing should include flavor prices", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of available flavors", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AIClusterFlavorWithPriceCollectionSerializer"}}}}}, "deprecated": true, "tags": ["GPU Cloud"]}
  "/cloud/v1/ai/images/gpu/{project_id}/{region_id}":
    "get": {"operationId": "AIGPUImagesHandler.get", "summary": "List GPU images", "description": "Retrieve a list of images available for GPU clusters.\nPlease use the `/v3/gpu/baremetal/{`project_id`}/{`region_id`}/images` endpoint instead.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "private", "required": false, "description": "Any value to show private images", "schema": {"type": "string"}}, {"in": "query", "name": "visibility", "required": false, "description": "Search only public, shared or private images", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of images", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AIImageCollectionSerializer"}}}}}, "deprecated": true, "tags": ["GPU Cloud"]}
  "/cloud/public/v1/ipranges/egress":
    "get": {"operationId": "EgressIPRangesViewSet.get", "summary": "List cloud egress public IPs", "description": "Returns the complete list of IPv4 and IPv6 address ranges that Cloud uses for outbound (egress) traffic.\n\nTypical reasons to call this endpoint:\n- Host-file delivery workflows â€“ You upload images or other assets to the Cloud and share a download link\nthat points to your own infrastructure. Add these egress prefixes to your firewall or object-storage allow-list\nso our clients can fetch the files without being blocked.\n- Push integrations / webhooks â€“ You subscribe to the user-actions event log and Cloud pushes events to your\nlistener endpoint. Whitelisting the egress IP ranges lets you accept only traffic that originates from us.\n- General security controls, audit tooling, or SIEM rules that need to verify that traffic truly comes\nfrom the Cloud.\n\nThe list is global (covers all regions) and refreshed automatically whenever Gcore allocates\nnew egress IP space. The response is an array of CIDR blocks; duplicate prefixes are not returned.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IPRangesSerializer"}}}}}, "tags": ["IP Ranges"], "security": [], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore()\nip_ranges = client.cloud.ip_ranges.list()\nprint(ip_ranges.ranges)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  ipRanges, err := client.Cloud.IPRanges.List(context.TODO())\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", ipRanges.Ranges)\n}\n"}]}
  "/cloud/v1/bmimages/{project_id}/{region_id}":
    "post": {"operationId": "BmImagesViewSet.post", "summary": "Create image", "description": "Create a new image from a bootable volume.\nThe volume must be bootable to create an image from it.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImageCreateFromVolumeSerializer"}}}}, "tags": ["Images"]}
    "get": {"operationId": "BmImagesViewSet.get", "summary": "List bare metal images", "description": "Retrieve a list of available images for bare metal servers.\nThe list can be filtered by visibility, tags, and other parameters.\nReturned entities may or may not be owned by the project.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Show price", "schema": {"type": "boolean"}}, {"in": "query", "name": "private", "required": false, "description": "Any value to show private images", "schema": {"type": "string"}}, {"in": "query", "name": "tag_key", "required": false, "description": "Filter by tag keys.", "schema": {"type": "array", "items": {"type": "string"}}}, {"in": "query", "name": "tag_key_value", "required": false, "description": "Filter by tag key-value pairs. Must be a valid JSON string.", "schema": {"type": "string"}}, {"in": "query", "name": "visibility", "required": false, "description": "Image visibility. Globally visible images are public", "schema": {"type": "string", "enum": ["private", "public", "shared"]}}], "responses": {"200": {"description": "List of images", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImageCollectionSerializer"}}}}}, "tags": ["Images"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nimage_list = client.cloud.baremetal.images.list(\n    project_id=0,\n    region_id=0,\n)\nprint(image_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  imageList, err := client.Cloud.Baremetal.Images.List(context.TODO(), cloud.BaremetalImageListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", imageList.Count)\n}\n"}]}
  "/cloud/v1/downloadimage/{project_id}/{region_id}":
    "post": {"operationId": "ImageDownloadViewSet.post", "summary": "Upload image", "description": "Upload an image from a URL.\nThe image can be configured with various properties like OS type, architecture, and tags.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImageDownloadSerializer"}}}}, "tags": ["Images"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.instances.images.upload(\n    project_id=0,\n    region_id=0,\n    name=\"my-image\",\n    url=\"http://mirror.noris.net/cirros/0.4.0/cirros-0.4.0-x86_64-disk.img\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Instances.Images.Upload(context.TODO(), cloud.InstanceImageUploadParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n    Name: \"my-image\",\n    URL: \"http://mirror.noris.net/cirros/0.4.0/cirros-0.4.0-x86_64-disk.img\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/images/{project_id}/{region_id}":
    "post": {"operationId": "ImagesViewSet.post", "summary": "Create image", "description": "Create a new image from a bootable volume.\nThe volume must be bootable to create an image from it.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImageCreateFromVolumeSerializer"}}}}, "tags": ["Images"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.instances.images.create_from_volume(\n    project_id=0,\n    region_id=0,\n    name=\"my-image\",\n    volume_id=\"d478ae29-dedc-4869-82f0-96104425f565\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Instances.Images.NewFromVolume(context.TODO(), cloud.InstanceImageNewFromVolumeParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n    Name: \"my-image\",\n    VolumeID: \"d478ae29-dedc-4869-82f0-96104425f565\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "ImagesViewSet.get", "summary": "List images", "description": "Retrieve a list of available images in the project and region.\nThe list can be filtered by visibility, tags, and other parameters.\nReturned entities are owned by the project or are public/shared with the client.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Show price", "schema": {"type": "boolean"}}, {"in": "query", "name": "private", "required": false, "description": "Any value to show private images", "schema": {"type": "string"}}, {"in": "query", "name": "tag_key", "required": false, "description": "Filter by tag keys.", "schema": {"type": "array", "items": {"type": "string"}}}, {"in": "query", "name": "tag_key_value", "required": false, "description": "Filter by tag key-value pairs. Must be a valid JSON string.", "schema": {"type": "string"}}, {"in": "query", "name": "visibility", "required": false, "description": "Image visibility. Globally visible images are public", "schema": {"type": "string", "enum": ["private", "public", "shared"]}}], "responses": {"200": {"description": "List of images", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImageCollectionSerializer"}}}}}, "tags": ["Images"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nimage_list = client.cloud.instances.images.list(\n    project_id=0,\n    region_id=0,\n)\nprint(image_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  imageList, err := client.Cloud.Instances.Images.List(context.TODO(), cloud.InstanceImageListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", imageList.Count)\n}\n"}]}
  "/cloud/v1/images/{project_id}/{region_id}/{image_id}":
    "get": {"operationId": "ImageDetailViewSet.get", "summary": "Get image", "description": "Retrieve detailed information about a specific image.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "image_id", "required": true, "description": "Image ID", "schema": {"type": "string"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Show price", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "Returned image", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImageSerializer"}}}}}, "tags": ["Images"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nimage = client.cloud.instances.images.get(\n    image_id=\"image_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(image.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  image, err := client.Cloud.Instances.Images.Get(\n    context.TODO(),\n    \"image_id\",\n    cloud.InstanceImageGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", image.ID)\n}\n"}]}
    "patch": {"operationId": "ImageDetailViewSet.patch", "summary": "Update image", "description": "Update image properties and tags.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "image_id", "required": true, "description": "Image ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned image", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImageSerializer"}}}}, "404": {"description": "Image was not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateImageSerializer"}}}}, "tags": ["Images"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nimage = client.cloud.instances.images.update(\n    image_id=\"image_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(image.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  image, err := client.Cloud.Instances.Images.Update(\n    context.TODO(),\n    \"image_id\",\n    cloud.InstanceImageUpdateParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", image.ID)\n}\n"}]}
    "delete": {"operationId": "ImageDetailViewSet.delete", "summary": "Delete image", "description": "Delete a specific image.\nThe image cannot be deleted if it is used by protected snapshots.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "image_id", "required": true, "description": "Image ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Images"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.instances.images.delete(\n    image_id=\"image_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Instances.Images.Delete(\n    context.TODO(),\n    \"image_id\",\n    cloud.InstanceImageDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/pricing/{project_id}/{region_id}/images":
    "post": {"operationId": "ImagePricingHandler.post", "summary": "Preview image price", "description": "Preview the billing price for the image of a given size.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImagePricingRequestSerializer"}}}}, "tags": ["Images"]}
  "/cloud/v1/projectimages/{project_id}/{region_id}":
    "get": {"operationId": "ProjectImagesViewSet.get", "summary": "List project images", "description": "Retrieve a list of images owned by the project.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Show price", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of images", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImageCollectionSerializer"}}}}}, "tags": ["Images"]}
  "/cloud/v1/images/{project_id}/{region_id}/{image_id}/metadata":
    "post": {"operationId": "ImageMetadataHandler.post", "summary": "Create or update image tags", "description": "Create or update one or more tags for an image.\nIf a tag does not exist, it gets created.\nIf a tag already exists, its value is overwritten.\nUse PATCH /v1/images/{`project_id`}/{`region_id`}/{`image_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "image_id", "required": true, "description": "Image ID", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}, "403": {"description": "Image not available"}, "404": {"description": "Image not found"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateTagsSerializer"}}}}, "tags": ["Images"]}
    "get": {"operationId": "ImageMetadataHandler.get", "summary": "List image tags", "description": "Retrieve all tags associated with an image.\nUse GET /v1/images/{`project_id`}/{`region_id`}/{`image_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "image_id", "required": true, "description": "Image ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Key-value tags", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagCollectionSerializer"}}}}, "403": {"description": "Image not available"}, "404": {"description": "Image not found"}}, "deprecated": true, "tags": ["Images"]}
    "put": {"operationId": "ImageMetadataHandler.put", "summary": "Replace image tags", "description": "Delete all existing tags and replace them with the tags from the request.\nUse PATCH /v1/images/{`project_id`}/{`region_id`}/{`image_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "image_id", "required": true, "description": "Image ID", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}, "403": {"description": "Image not available"}, "404": {"description": "Image not found"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateTagsSerializer"}}}}, "tags": ["Images"]}
  "/cloud/v1/images/{project_id}/{region_id}/{image_id}/metadata_item":
    "get": {"operationId": "ImageMetadataItemHandler.get", "summary": "Get image tag", "description": "Retrieve a specific tag by its key from an image.\nUse GET /v1/images/{`project_id`}/{`region_id`}/{`image_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "image_id", "required": true, "description": "Image ID", "schema": {"type": "string"}}, {"in": "query", "name": "key", "required": false, "description": "Tag key", "schema": {"type": "string"}}], "responses": {"200": {"description": "Image tag", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagSerializer"}}}}, "403": {"description": "Image not available"}, "404": {"description": "Tag not found"}}, "deprecated": true, "tags": ["Images"]}
    "delete": {"operationId": "ImageMetadataItemHandler.delete", "summary": "Delete image tag", "description": "Delete a specific tag by its key from an image.\nUse PATCH /v1/images/{`project_id`}/{`region_id`}/{`image_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "image_id", "required": true, "description": "Image ID", "schema": {"type": "string"}}, {"in": "query", "name": "key", "required": false, "description": "Tag key", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}, "403": {"description": "Tag not available"}, "404": {"description": "Tag not found"}}, "deprecated": true, "tags": ["Images"]}
  "/cloud/v1/apptemplates/{project_id}/{region_id}":
    "get": {"operationId": "AppTemplateListHandler.get", "summary": "List apptemplates", "description": "Retrieve marketplace application templates list. Application templates are used in instance creation API v2", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppTemplateCollectionSerializer"}}}}}, "tags": ["Instances"]}
  "/cloud/v1/apptemplates/{project_id}/{region_id}/{apptemplate_id}":
    "get": {"operationId": "AppTemplateGetOneHandler.get", "summary": "Get apptemplate", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "apptemplate_id", "required": true, "description": "App template ID", "schema": {"description": "App template ID", "examples": ["tf2server"], "title": "Apptemplate Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppTemplateSerializer"}}}}}, "tags": ["Instances"]}
  "/cloud/v1/flavors/{project_id}/{region_id}":
    "get": {"operationId": "FlavorsViewSet.get", "summary": "List instance flavors", "description": "Retrieve a list of available instance flavors in the project and region.\nWhen `include_prices` is specified, the list includes pricing information.\nTrial mode clients see all prices as 0. Contact support for pricing errors.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "disabled", "required": false, "description": "Flag for filtering disabled flavors in the region. Defaults to true", "schema": {"type": "boolean"}}, {"in": "query", "name": "exclude_linux", "required": false, "description": "Set to true to exclude flavors dedicated to linux images. Default False", "schema": {"type": "boolean"}}, {"in": "query", "name": "exclude_windows", "required": false, "description": "Set to true to exclude flavors dedicated to windows images. Default False", "schema": {"type": "boolean"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Set to true if the response should include flavor prices", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of flavors", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceFlavorExtendedCollectionSerializer"}}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninstance_flavor_list = client.cloud.instances.flavors.list(\n    project_id=0,\n    region_id=0,\n)\nprint(instance_flavor_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  instanceFlavorList, err := client.Cloud.Instances.Flavors.List(context.TODO(), cloud.InstanceFlavorListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", instanceFlavorList.Count)\n}\n"}]}
  "/cloud/v2/instances/{project_id}/{region_id}":
    "post": {"operationId": "InstanceCreateSetV2.post", "summary": "Create instance", "description": "Create an instance with specified configuration.\n\nHow to get access:\n\nFor Linux,\n\n - Use the `user_data` field to provide a\n[cloud-init script](https://cloudinit.readthedocs.io/en/latest/reference/examples.html)\nin base64 to apply configurations to the instance.\n- Specify the `username` and `password` to create a new user.\n- When only `password` is provided, it is set as the password for the default user of the image.\n- The `user_data` is ignored when the `password` is specified.\n\n\nFor Windows,\n\n - Use the `user_data` field to provide a\n[cloudbase-init script](https://cloudbase-init.readthedocs.io/en/latest/userdata.html#cloud-config)\nin base64 to create new users on Windows.\n- Use the `password` field to set the password for the 'Admin' user on Windows.\n- The password of the Admin user cannot be updated via `user_data`.\n- The `username` cannot be specified in the request.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateInstanceSerializerV2"}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.instances.create(\n    project_id=1,\n    region_id=1,\n    flavor=\"g2-standard-32-64\",\n    interfaces=[{\n        \"type\": \"external\"\n    }],\n    volumes=[{\n        \"size\": 20,\n        \"source\": \"new-volume\",\n    }],\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Instances.New(context.TODO(), cloud.InstanceNewParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n    Flavor: \"g2-standard-32-64\",\n    Interfaces: []cloud.InstanceNewParamsInterfaceUnion{cloud.InstanceNewParamsInterfaceUnion{\n      OfExternal: &cloud.InstanceNewParamsInterfaceExternal{\n\n      },\n    }},\n    Volumes: []cloud.InstanceNewParamsVolumeUnion{cloud.InstanceNewParamsVolumeUnion{\n      OfNewVolume: &cloud.InstanceNewParamsVolumeNewVolume{\n        Size: 20,\n      },\n    }},\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}":
    "get": {"operationId": "InstanceViewSetV1.get", "summary": "List instances", "description": "List all instances in the specified project and region.\nResults can be filtered by various parameters like name, status, and IP address.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "available_floating", "required": false, "description": "Only show instances which are able to handle floating address", "schema": {"description": "Only show instances which are able to handle floating address", "examples": [true], "title": "Available Floating", "type": "boolean"}}, {"in": "query", "name": "changes-before", "required": false, "description": "Filters the instances by a date and time stamp when the instances last changed.", "schema": {"description": "Filters the instances by a date and time stamp when the instances last changed.", "examples": ["2025-10-01T12:00:00Z"], "format": "date-time", "title": "Changes-Before", "type": "string"}}, {"in": "query", "name": "changes-since", "required": false, "description": "Filters the instances by a date and time stamp when the instances last changed status.", "schema": {"description": "Filters the instances by a date and time stamp when the instances last changed status.", "examples": ["2025-10-01T12:00:00Z"], "format": "date-time", "title": "Changes-Since", "type": "string"}}, {"in": "query", "name": "exclude_flavor_prefix", "required": false, "description": "Exclude instances with specified flavor prefix", "schema": {"description": "Exclude instances with specified flavor prefix", "examples": ["g1-"], "title": "Exclude Flavor Prefix", "type": "string"}}, {"in": "query", "name": "exclude_secgroup", "required": false, "description": "Exclude instances with specified security group name", "schema": {"description": "Exclude instances with specified security group name", "examples": ["secgroup_name"], "title": "Exclude Secgroup", "type": "string"}}, {"in": "query", "name": "flavor_id", "required": false, "description": "Filter out instances by `flavor_id`. Flavor id must match exactly.", "schema": {"description": "Filter out instances by `flavor_id`. Flavor id must match exactly.", "examples": ["g2-standard-32-64"], "title": "Flavor Id", "type": "string"}}, {"in": "query", "name": "flavor_prefix", "required": false, "description": "Filter out instances by `flavor_prefix`.", "schema": {"description": "Filter out instances by `flavor_prefix`.", "examples": ["g2-"], "title": "Flavor Prefix", "type": "string"}}, {"in": "query", "name": "include_ai", "required": false, "description": "Include GPU clusters' servers", "schema": {"default": false, "deprecated": true, "description": "Include GPU clusters' servers", "examples": [false], "title": "Include Ai", "type": "boolean"}}, {"in": "query", "name": "include_baremetal", "required": false, "description": "Include bare metal servers. Please, use `GET /v1/bminstances/` instead", "schema": {"default": false, "deprecated": true, "description": "Include bare metal servers. Please, use `GET /v1/bminstances/` instead", "examples": [false], "title": "Include Baremetal", "type": "boolean"}}, {"in": "query", "name": "include_k8s", "required": false, "description": "Include managed k8s worker nodes", "schema": {"default": true, "description": "Include managed k8s worker nodes", "title": "Include K8S", "type": "boolean"}}, {"in": "query", "name": "ip", "required": false, "description": "An IPv4 address to filter results by. Note: partial matches are allowed. For example, searching for 192.168.0.1 will return 192.168.0.1, 192.168.0.10, 192.168.0.110, and so on.", "schema": {"description": "An IPv4 address to filter results by. Note: partial matches are allowed. For example, searching for 192.168.0.1 will return
              192.168.0.1, 192.168.0.10, 192.168.0.110, and so on.", "examples": ["192.168.0.1"], "title": "Ip", "type": "string"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "name", "required": false, "description": "Filter instances by name. You can provide a full or partial name, instances with matching names will be returned. For example, entering 'test' will return all instances that contain 'test' in their name.", "schema": {"description": "Filter instances by name. You can provide a full or partial name, instances with matching names will be returned. For example, entering 'test' will return all instances that contain 'test' in their name.", "title": "Name", "type": "string"}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "only_isolated", "required": false, "description": "Include only isolated instances", "schema": {"default": false, "description": "Include only isolated instances", "title": "Only Isolated", "type": "boolean"}}, {"in": "query", "name": "only_with_fixed_external_ip", "required": false, "description": "Return bare metals only with external fixed IP addresses.", "schema": {"description": "Return bare metals only with external fixed IP addresses.", "examples": [true], "title": "Only With Fixed External Ip", "type": "boolean"}}, {"in": "query", "name": "order_by", "required": false, "description": "Order by field and direction.", "schema": {"$ref": "#/components/schemas/InstancesOrderByChoices", "default": "created.desc", "description": "Order by field and direction.", "examples": ["name.asc"]}}, {"in": "query", "name": "profile_name", "required": false, "description": "Filter result by ddos protection profile name. Effective only with `with_ddos` set to true.", "schema": {"description": "Filter result by ddos protection profile name. Effective only with `with_ddos` set to true.", "examples": ["profile_name"], "title": "Profile Name", "type": "string"}}, {"in": "query", "name": "protection_status", "required": false, "description": "Filter result by DDoS `protection_status`. if parameter is provided. Effective only with `with_ddos` set to true. (Active, Queued or Error)", "schema": {"description": "Filter result by DDoS `protection_status`. if parameter is provided. Effective only with `with_ddos` set to true. (Active, Queued or Error)", "enum": ["Active", "Queued", "Error"], "examples": ["Active"], "title": "Protection Status", "type": "string"}}, {"in": "query", "name": "status", "required": false, "description": "Filters instances by status.", "schema": {"$ref": "#/components/schemas/InstanceStatusQuery", "description": "Filters instances by status.", "examples": ["ACTIVE"]}}, {"in": "query", "name": "tag_key_value", "required": false, "description": "Optional. Filter by tag key-value pairs.", "schema": {"contentMediaType": "application/json", "contentSchema": {"additionalProperties": {"description": "Tag value. The maximum size for a value is 1024 bytes.", "examples": ["my-tag-value"], "maxLength": 1024, "minLength": 1, "type": "string"}, "propertyNames": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1}, "type": "object"}, "description": "Optional. Filter by tag key-value pairs.", "title": "Tag Key Value", "type": "string"}}, {"in": "query", "name": "tag_value", "required": false, "description": "Optional. Filter by tag values. ?`tag_value`=value1&`tag_value`=value2", "schema": {"description": "Optional.
              Filter by tag values. ?`tag_value`=value1&`tag_value`=value2", "examples": [["value1", "value2"]], "items": {"description": "Tag value. The maximum size for a value is 1024 bytes.", "examples": ["my-tag-value"], "maxLength": 1024, "minLength": 1, "type": "string"}, "title": "Tag Value", "type": "array"}}, {"in": "query", "name": "type_ddos_profile", "required": false, "description": "Return bare metals either only with advanced or only basic DDoS protection. Effective only with `with_ddos` set to true. (advanced or basic)", "schema": {"description": "Return bare metals either only with advanced or only basic DDoS protection. Effective only with `with_ddos` set to true. (advanced or basic)", "enum": ["basic", "advanced"], "examples": ["advanced"], "title": "Type Ddos Profile", "type": "string"}}, {"in": "query", "name": "uuid", "required": false, "description": "Filter the server list result by the UUID of the server. Allowed UUID part", "schema": {"description": "Filter the server list result by the UUID of the server. Allowed UUID part", "examples": ["b5b4d65d-945f-4b98-ab6f-332319c724ef"], "maxLength": 36, "title": "Uuid", "type": "string"}}, {"in": "query", "name": "with_ddos", "required": false, "description": "Include DDoS profile information in the response when set to `true`. Otherwise, the `ddos_profile` field in the response is `null` by default.", "schema": {"default": false, "description": "Include DDoS profile information in the response when set to `true`. Otherwise, the `ddos_profile` field in the response is `null` by default.", "examples": [true], "title": "With Ddos", "type": "boolean"}}, {"in": "query", "name": "with_interfaces_name", "required": false, "description": "Include `interface_name` in the addresses", "schema": {"default": false, "description": "Include `interface_name` in the addresses", "examples": [true], "title": "With Interfaces Name", "type": "boolean"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceCollectionSerializer"}}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.instances.list(\n    project_id=1,\n    region_id=1,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Instances.List(context.TODO(), cloud.InstanceListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}":
    "get": {"operationId": "InstanceInstanceViewSet.get", "summary": "Get instance", "description": "Retrieve detailed information about a specific instance.\nThe response content language for `ddos_profile` can be controlled via the 'language' cookie parameter.\n\n**Cookie Parameters**:\n\n- `language` (str, optional): Language for the response content. Affects the `ddos_profile` field.\nSupported values:\n- `'en'` (default)\n- `'de'`\n- `'ru'`", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"description": "Instance ID", "format": "uuid4", "title": "Instance Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceSerializer"}}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninstance = client.cloud.instances.get(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(instance.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  instance, err := client.Cloud.Instances.Get(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", instance.ID)\n}\n"}]}
    "patch": {"operationId": "InstanceInstanceViewSet.patch", "summary": "Rename instance", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"description": "Instance ID", "format": "uuid4", "title": "Instance Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NameSerializer"}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninstance = client.cloud.instances.update(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n    name=\"my-resource\",\n)\nprint(instance.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  instance, err := client.Cloud.Instances.Update(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceUpdateParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      Name: \"my-resource\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", instance.ID)\n}\n"}]}
    "delete": {"operationId": "InstanceInstanceViewSet.delete", "summary": "Delete instance", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"description": "Instance ID", "format": "uuid4", "title": "Instance Id", "type": "string"}}, {"in": "query", "name": "delete_floatings", "required": false, "description": "True if it is required to delete floating IPs assigned to the instance. Can't be used with `floatings`.", "schema": {"default": false, "description": "True if it is required to delete floating IPs assigned to the instance. Can't be used with `floatings`.", "title": "Delete Floatings", "type": "boolean"}}, {"in": "query", "name": "floatings", "required": false, "description": "Comma separated list of floating ids that should be deleted. Can't be used with `delete_floatings`.", "schema": {"description": "Comma separated list of floating ids that should be deleted. Can't be used with `delete_floatings`.", "title": "Floatings", "type": "string"}}, {"in": "query", "name": "reserved_fixed_ips", "required": false, "description": "Comma separated list of port IDs to be deleted with the instance", "schema": {"description": "Comma separated list of port IDs to be deleted with the instance", "title": "Reserved Fixed Ips", "type": "string"}}, {"in": "query", "name": "volumes", "required": false, "description": "Comma separated list of volume IDs to be deleted with the instance", "schema": {"description": "Comma separated list of volume IDs to be deleted with the instance", "examples": ["volume_id_1,volume_id_2"], "title": "Volumes", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.instances.delete(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Instances.Delete(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v2/instances/{project_id}/{region_id}/{instance_id}/action":
    "post": {"operationId": "InstanceActionHandler.post", "summary": "Execute instance action", "description": "The action can be one of: start, stop, reboot, powercycle, suspend or resume.\nSuspend and resume are not available for bare metal instances.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Wrong action"}, "404": {"description": "Instance was not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceActionSerializerPydantic"}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.instances.action(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n    action=\"start\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Instances.Action(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceActionParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/addsecuritygroup":
    "post": {"operationId": "InstanceAddSecurityGroupHandler.post", "summary": "Assign security group", "description": "Assign the security group to the server.\nTo assign multiple security groups to all ports, use the NULL value for the `port_id` field", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstancePortsSecurityGroupsSchema"}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.instances.assign_security_group(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Instances.AssignSecurityGroup(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceAssignSecurityGroupParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/attach_interface":
    "post": {"operationId": "AttachInterfaceHandler.post", "summary": "Attach interface", "description": "Attach interface to instance", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Created task", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"discriminator": {"propertyName": "type", "mapping": {"external": "#/components/schemas/NewInterfaceExternalExtendSchemaWithDdos", "subnet": "#/components/schemas/NewInterfaceSpecificSubnetSchema", "any_subnet": "#/components/schemas/NewInterfaceAnySubnetSchema", "reserved_fixed_ip": "#/components/schemas/NewInterfaceReservedFixedIpSchema"}}, "anyOf": ["$ref": "#/components/schemas/NewInterfaceExternalExtendSchemaWithDdos", "$ref": "#/components/schemas/NewInterfaceSpecificSubnetSchema", "$ref": "#/components/schemas/NewInterfaceAnySubnetSchema", "$ref": "#/components/schemas/NewInterfaceReservedFixedIpSchema"]}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.instances.interfaces.attach(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Instances.Interfaces.Attach(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceInterfaceAttachParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/available_flavors":
    "get": {"operationId": "InstanceFlavorHandler.get", "summary": "List suitable flavors for instance resize", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Set to true if flavor listing should include flavor prices", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of available flavors", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceFlavorExtendedCollectionSerializer"}}}}}, "tags": ["Instances"]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/changeflavor":
    "post": {"operationId": "InstanceChangeFlavorHandler.post", "summary": "Resize instance", "description": "Change flavor of the instance", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FlavorIdSchema"}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.instances.resize(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n    flavor_id=\"g1s-shared-1-0.5\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Instances.Resize(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceResizeParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      FlavorID: \"g1s-shared-1-0.5\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/delsecuritygroup":
    "post": {"operationId": "InstanceRemoveSecurityGroupHandler.post", "summary": "Un-assign security group", "description": "Un-assign the security group to the server.\nTo un-assign multiple security groups to all ports, use the NULL value for the `port_id` field", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstancePortsSecurityGroupsSchema"}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.instances.unassign_security_group(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Instances.UnassignSecurityGroup(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceUnassignSecurityGroupParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/detach_interface":
    "post": {"operationId": "DetachInterfaceHandler.post", "summary": "Detach interface", "description": "Detach interface from instance", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Created task", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PortIdWithIpSchema"}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.instances.interfaces.detach(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n    ip_address=\"192.168.123.20\",\n    port_id=\"351b0dd7-ca09-431c-be53-935db3785067\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Instances.Interfaces.Detach(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceInterfaceDetachParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      IPAddress: \"192.168.123.20\",\n      PortID: \"351b0dd7-ca09-431c-be53-935db3785067\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/get_console":
    "get": {"operationId": "InstanceConsoleHandler.get", "summary": "Get instance console URL", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}, {"in": "query", "name": "console_type", "required": false, "description": "Console type", "schema": {"type": "string"}}], "responses": {"200": {"description": "Remote console data", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RemoteConsoleSerializer"}}}}, "400": {"description": "Unavailable console type"}, "404": {"description": "Instance not found"}, "409": {"description": "Console locked"}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nconsole = client.cloud.instances.get_console(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(console.remote_console)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  console, err := client.Cloud.Instances.GetConsole(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceGetConsoleParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", console.RemoteConsole)\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/interfaces":
    "get": {"operationId": "NetworkInterfacesHandler.get", "summary": "List network interfaces", "description": "List all network interfaces attached to the specified instance.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of instance network interfaces", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceInterfaceTrunkCollectionSerializer"}}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nnetwork_interface_list = client.cloud.instances.interfaces.list(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(network_interface_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  networkInterfaceList, err := client.Cloud.Instances.Interfaces.List(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceInterfaceListParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", networkInterfaceList.Count)\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/metadata":
    "post": {"operationId": "InstanceMetadataHandler.post", "summary": "Create or update tags", "description": "Create or update one or more tags for the specified instance.\nIf a tag does not exist, it gets created.\nIf a tag already exists, its value is overwritten.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateTagsSerializer"}}}}, "tags": ["Instances"]}
    "get": {"operationId": "InstanceMetadataHandler.get", "summary": "List instance tags", "description": "List all tags associated with the specified instance.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Key-value tags", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagCollectionSerializer"}}}}}, "tags": ["Instances"]}
    "put": {"operationId": "InstanceMetadataHandler.put", "summary": "Replace tags", "description": "Delete all existing tags and replace them with the tags from the request.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateTagsSerializer"}}}}, "tags": ["Instances"]}
  "/cloud/v2/instances/{project_id}/{region_id}/{instance_id}/metadata_item":
    "get": {"operationId": "InstanceMetadataItemHandlerV2.get", "summary": "Get instance tag", "description": "Get instance tag by key", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}, {"in": "query", "name": "key", "required": false, "description": "Tag key", "schema": {"type": "string"}}], "responses": {"200": {"description": "Instance tag", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagSerializer"}}}}}, "tags": ["Instances"]}
    "delete": {"operationId": "InstanceMetadataItemHandlerV2.delete", "summary": "Delete instance tag", "description": "Delete instance tag by key", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}, {"in": "query", "name": "key", "required": false, "description": "Tag key", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}}, "tags": ["Instances"]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/metrics":
    "post": {"operationId": "InstanceMetricsHandler.post", "summary": "Get instance metrics", "description": "Get instance metrics, including cpu, memory, network and disk metrics", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"description": "Instance ID", "format": "uuid4", "title": "Instance Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceMetricsListSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceMetricsRequestSerializer"}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nmetrics_list = client.cloud.instances.metrics.list(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n    time_interval=6,\n    time_unit=\"day\",\n)\nprint(metrics_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  metricsList, err := client.Cloud.Instances.Metrics.List(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceMetricListParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      TimeInterval: 6,\n      TimeUnit: cloud.InstanceMetricsTimeUnitDay,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", metricsList.Count)\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/ports":
    "get": {"operationId": "InstanceInstancePortsView.get", "summary": "List network ports", "description": "List all network ports of the specified instance", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of ports", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PortSecurityGroupsListSchema"}}}}}, "tags": ["Instances"]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/put_into_servergroup":
    "post": {"operationId": "PutServerInstanceGroupHandler.post", "summary": "Put instance into the server group", "description": "Add an instance to a server group.\nThe instance must not already be in a server group.\nBare metal servers do not support server groups.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstancePutServerGroupSchema"}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.instances.add_to_placement_group(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n    servergroup_id=\"47003067-550a-6f17-93b6-81ee16ba061e\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Instances.AddToPlacementGroup(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceAddToPlacementGroupParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      ServergroupID: \"47003067-550a-6f17-93b6-81ee16ba061e\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/remove_from_servergroup":
    "post": {"operationId": "RemoveServerInstanceGroupHandler.post", "summary": "Remove instance from the server group", "description": "Remove an instance from its current server group.\nThe instance must be in a server group to be removed.\nBare metal servers do not support server groups.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.instances.remove_from_placement_group(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Instances.RemoveFromPlacementGroup(\n    context.TODO(),\n    \"instance_id\",\n    cloud.InstanceRemoveFromPlacementGroupParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/securitygroups":
    "get": {"operationId": "InstanceListSecurityGroupsHandler.get", "summary": "Get instance security groups", "description": "List of server security groups", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of security groups", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdNameListSchema"}}}}}, "tags": ["Instances"]}
  "/cloud/v1/instances/{project_id}/{region_id}/available_flavors":
    "post": {"operationId": "InstanceAvailableFlavorsHandler.post", "summary": "List flavors matching volume requirements", "description": "List all flavors that are suitable for instance creation based on volume requirements.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Set to true if flavor listing should include flavor prices", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of available flavors", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceFlavorExtendedCollectionSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateInstanceVolumeListSchema"}}}}, "tags": ["Instances"]}
  "/cloud/v2/instances/{project_id}/{region_id}/check_limits":
    "post": {"operationId": "InstanceCheckLimitsV2.post", "summary": "Check instance quota", "description": "Check if regional quota is exceeded for instance creation.\nIf exceeded, calculate additional quotas needed.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Dict of exceeding quotas", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionalDiffQuotasSchema"}}}}, "400": {"description": "Invalid parameter in request"}, "404": {"description": "Keypair or other mandatory resource was not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotFoundErrorSchema"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CheckQuotaBeforeInstanceCreatingSchema"}}}}, "tags": ["Instances"]}
  "/cloud/v2/ports/{project_id}/{region_id}/{port_id}/allow_address_pairs":
    "put": {"operationId": "AllowPortAddressPairsHandlerV2.put", "summary": "Assign allowed address pairs for instance port", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "port_id", "required": true, "description": "Port ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Invalid parameter in request"}, "404": {"description": "Resource was not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateAllowPortAddressPairsSerializerV2"}}}}, "tags": ["Instances"]}
  "/cloud/v1/ports/{project_id}/{region_id}/{port_id}/disable_port_security":
    "post": {"operationId": "DisablePortSecurityHandler.post", "summary": "Disable port security for instance interface", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "port_id", "required": true, "description": "Port ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Instance network interface", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceInterfaceSerializer"}}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninstance_interface = client.cloud.instances.disable_port_security(\n    port_id=\"port_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(instance_interface.network_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  instanceInterface, err := client.Cloud.Instances.DisablePortSecurity(\n    context.TODO(),\n    \"port_id\",\n    cloud.InstanceDisablePortSecurityParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", instanceInterface.NetworkID)\n}\n"}]}
  "/cloud/v1/ports/{project_id}/{region_id}/{port_id}/enable_port_security":
    "post": {"operationId": "EnablePortSecurityHandler.post", "summary": "Enable port security for instance interface", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "port_id", "required": true, "description": "Port ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Instance network interface", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceInterfaceSerializer"}}}}}, "tags": ["Instances"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninstance_interface = client.cloud.instances.enable_port_security(\n    port_id=\"port_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(instance_interface.network_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  instanceInterface, err := client.Cloud.Instances.EnablePortSecurity(\n    context.TODO(),\n    \"port_id\",\n    cloud.InstanceEnablePortSecurityParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", instanceInterface.NetworkID)\n}\n"}]}
  "/cloud/v2/pricing/{project_id}/{region_id}/instances":
    "post": {"operationId": "ServerInstancePricingPreviewHandlerV2.post", "summary": "Preview instance price", "description": "Preview billing price of the server instance", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstancePricingPreviewV2ResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstancePricingPreviewV2RequestSerializer"}}}}, "tags": ["Instances"]}
  "/cloud/v1/pricing/{project_id}/{region_id}/instances/{instance_id}":
    "get": {"operationId": "ServerInstancePricingHandler.get", "summary": "Get instance price", "description": "Get the billing rate for an existing instance based on its current configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Server instance ID", "schema": {"description": "Server instance ID", "pattern": "^[\\w\\-]+$", "title": "Instance Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "tags": ["Instances"]}
  "/cloud/v1/securitygroups/{project_id}/{region_id}/{group_id}/instances":
    "get": {"operationId": "SecurityGroupsInstancesView.get", "summary": "Filter instances by security group", "description": "Retrieve the instances list (filter by security group)", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Security group ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of instances", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceCollectionSerializer"}}}}}, "tags": ["Instances"]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/metadata/{key}":
    "get": {"operationId": "InstanceMetadataItemHandler.get", "summary": "Get instance tag", "description": "Get a specific tag by its key from the specified instance.\nThis endpoint does not support special characters in keys.\nUse /v2/instances/.../`metadata_item` instead.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}, {"in": "path", "name": "key", "required": true, "description": "Tag key", "schema": {"type": "string"}}], "responses": {"200": {"description": "Instance tag", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagSerializer"}}}}}, "deprecated": true, "tags": ["Instances"]}
    "delete": {"operationId": "InstanceMetadataItemHandler.delete", "summary": "Delete instance tag", "description": "Delete a specific tag by its key from the specified instance.\nThis endpoint does not support special characters in keys.\nUse /v2/instances/.../`metadata_item` instead.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}, {"in": "path", "name": "key", "required": true, "description": "Tag key", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}}, "deprecated": true, "tags": ["Instances"]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/powercycle":
    "post": {"operationId": "InstancePowercycleHandler.post", "summary": "Powercycle instance", "description": "Stops and then starts the instance, effectively performing a hard reboot.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned instance", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceCollectionSerializer"}}}}}, "deprecated": true, "tags": ["Instances"]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/reboot":
    "post": {"operationId": "InstanceRebootHandler.post", "summary": "Reboot instance", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned instance", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceCollectionSerializer"}}}}}, "deprecated": true, "tags": ["Instances"]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/resume":
    "post": {"operationId": "InstanceResumeHandler.post", "summary": "Resume instance", "description": "Resume a suspended server to an active state.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned instance", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceCollectionSerializer"}}}}}, "deprecated": true, "tags": ["Instances"]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/start":
    "post": {"operationId": "InstanceStartHandler.post", "summary": "Start instance", "description": "Power on the server.\nRequired VM state: Shutoff, Stopped", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned instance", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceCollectionSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ActivateWithInstanceSerializer"}}}}, "tags": ["Instances"]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/stop":
    "post": {"operationId": "InstanceStopHandler.post", "summary": "Stop instance", "description": "Power off the server.\nRequired VM state: Active, Shutoff, Rescued", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned instance", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceCollectionSerializer"}}}}}, "deprecated": true, "tags": ["Instances"]}
  "/cloud/v1/instances/{project_id}/{region_id}/{instance_id}/suspend":
    "post": {"operationId": "InstanceSuspendHandler.post", "summary": "Suspend instance", "description": "When you suspend a server, its VM state is stored on disk, all memory is written to disk,\nand the virtual machine is stopped.\nSuspending a server is similar to placing a device in hibernation,\nand its occupied resource will not be freed but rather kept for when the server is resumed.\nRequired VM state: Active, Shutoff", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned instance", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceCollectionSerializer"}}}}}, "deprecated": true, "tags": ["Instances"]}
  "/cloud/v1/instances/{project_id}/{region_id}/available_names":
    "get": {"operationId": "InstanceAvailableNamesHandler.get", "summary": "Get instance naming restrictions", "description": "Get the naming restrictions applied to instances in the specified project and region.\nThis endpoint is deprecated.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Instance naming restrictions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AvailableInstanceNamesSchema"}}}}}, "deprecated": true, "tags": ["Instances"]}
  "/cloud/v1/ports/{project_id}/{region_id}/{port_id}/allow_address_pairs":
    "put": {"operationId": "AllowPortAddressPairsHandler.put", "summary": "Assign allowed address pairs for instance port", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "port_id", "required": true, "description": "Port ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Instance port", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AllowPortAddressPairsSerializer"}}}}, "400": {"description": "Invalid parameter in request"}, "404": {"description": "Resource was not found"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateAllowPortAddressPairsSerializer"}}}}, "tags": ["Instances"]}
  "/cloud/v1/l7policies/{project_id}/{region_id}":
    "post": {"operationId": "L7PolicyViewSet.post", "summary": "Create load balancer L7 policy", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateL7PolicySchema"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.l7_policies.create(\n    project_id=0,\n    region_id=0,\n    action=\"REDIRECT_TO_URL\",\n    listener_id=\"023f2e34-7806-443b-bfae-16c324569a3d\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.L7Policies.New(context.TODO(), cloud.LoadBalancerL7PolicyNewParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n    Action: cloud.LoadBalancerL7PolicyNewParamsActionRedirectToURL,\n    ListenerID: \"023f2e34-7806-443b-bfae-16c324569a3d\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "L7PolicyViewSet.get", "summary": "List load balancer L7 policies", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of L7 policies", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/L7PolicyListSchema"}}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer_l7_policy_list = client.cloud.load_balancers.l7_policies.list(\n    project_id=0,\n    region_id=0,\n)\nprint(load_balancer_l7_policy_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancerL7PolicyList, err := client.Cloud.LoadBalancers.L7Policies.List(context.TODO(), cloud.LoadBalancerL7PolicyListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancerL7PolicyList.Count)\n}\n"}]}
  "/cloud/v1/l7policies/{project_id}/{region_id}/{l7policy_id}":
    "get": {"operationId": "L7PolicyInstanceViewSet.get", "summary": "Get load balancer L7 policy", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "l7policy_id", "required": true, "description": "L7 policy ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned L7 policy", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/L7PolicySchema"}}}}, "404": {"description": "L7 policy was not found"}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer_l7_policy = client.cloud.load_balancers.l7_policies.get(\n    l7policy_id=\"l7policy_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(load_balancer_l7_policy.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancerL7Policy, err := client.Cloud.LoadBalancers.L7Policies.Get(\n    context.TODO(),\n    \"l7policy_id\",\n    cloud.LoadBalancerL7PolicyGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancerL7Policy.ID)\n}\n"}]}
    "put": {"operationId": "L7PolicyInstanceViewSet.put", "summary": "Replace load balancer L7 policy", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "l7policy_id", "required": true, "description": "L7 policy ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "404": {"description": "L7 Policy was not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateL7PolicySchema"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.l7_policies.replace(\n    l7policy_id=\"l7policy_id\",\n    project_id=0,\n    region_id=0,\n    action=\"REDIRECT_TO_URL\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.L7Policies.Replace(\n    context.TODO(),\n    \"l7policy_id\",\n    cloud.LoadBalancerL7PolicyReplaceParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      Action: cloud.LoadBalancerL7PolicyReplaceParamsActionRedirectToURL,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "delete": {"operationId": "L7PolicyInstanceViewSet.delete", "summary": "Delete load balancer L7 policy", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "l7policy_id", "required": true, "description": "L7 policy ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Everything is OK, task to delete L7 policy was created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "404": {"description": "L7 policy was not found"}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.l7_policies.delete(\n    l7policy_id=\"l7policy_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.L7Policies.Delete(\n    context.TODO(),\n    \"l7policy_id\",\n    cloud.LoadBalancerL7PolicyDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/l7policies/{project_id}/{region_id}/{l7policy_id}/rules":
    "post": {"operationId": "L7RuleCreateView.post", "summary": "Create load balancer L7 rule", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "l7policy_id", "required": true, "description": "L7 policy ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateL7RuleSchema"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.l7_policies.rules.create(\n    l7policy_id=\"l7policy_id\",\n    project_id=0,\n    region_id=0,\n    compare_type=\"REGEX\",\n    type=\"PATH\",\n    value=\"/images*\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.L7Policies.Rules.New(\n    context.TODO(),\n    \"l7policy_id\",\n    cloud.LoadBalancerL7PolicyRuleNewParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      CompareType: cloud.LoadBalancerL7PolicyRuleNewParamsCompareTypeRegex,\n      Type: cloud.LoadBalancerL7PolicyRuleNewParamsTypePath,\n      Value: \"/images*\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "L7RuleCreateView.get", "summary": "List load balancer L7 policy rules", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "l7policy_id", "required": true, "description": "L7 policy ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned L7 rules", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/L7RuleListSchema"}}}}, "404": {"description": "L7 policy was not found"}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer_l7_rule_list = client.cloud.load_balancers.l7_policies.rules.list(\n    l7policy_id=\"l7policy_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(load_balancer_l7_rule_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancerL7RuleList, err := client.Cloud.LoadBalancers.L7Policies.Rules.List(\n    context.TODO(),\n    \"l7policy_id\",\n    cloud.LoadBalancerL7PolicyRuleListParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancerL7RuleList.Count)\n}\n"}]}
  "/cloud/v1/l7policies/{project_id}/{region_id}/{l7policy_id}/rules/{l7rule_id}":
    "get": {"operationId": "L7RuleInstanceViewSet.get", "summary": "Get load balancer L7 rule", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "l7policy_id", "required": true, "description": "L7 policy ID", "schema": {"type": "string"}}, {"in": "path", "name": "l7rule_id", "required": true, "description": "L7 rule ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned L7 rule", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/L7RuleSchema"}}}}, "404": {"description": "L7 rule was not found"}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer_l7_rule = client.cloud.load_balancers.l7_policies.rules.get(\n    l7rule_id=\"l7rule_id\",\n    project_id=0,\n    region_id=0,\n    l7policy_id=\"l7policy_id\",\n)\nprint(load_balancer_l7_rule.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancerL7Rule, err := client.Cloud.LoadBalancers.L7Policies.Rules.Get(\n    context.TODO(),\n    \"l7rule_id\",\n    cloud.LoadBalancerL7PolicyRuleGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      L7policyID: \"l7policy_id\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancerL7Rule.ID)\n}\n"}]}
    "put": {"operationId": "L7RuleInstanceViewSet.put", "summary": "Replace load balancer L7 rule properties", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "l7policy_id", "required": true, "description": "L7 policy ID", "schema": {"type": "string"}}, {"in": "path", "name": "l7rule_id", "required": true, "description": "L7 rule ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "404": {"description": "L7 rule was not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateL7RuleSchema"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.l7_policies.rules.replace(\n    l7rule_id=\"l7rule_id\",\n    project_id=0,\n    region_id=0,\n    l7policy_id=\"l7policy_id\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.L7Policies.Rules.Replace(\n    context.TODO(),\n    \"l7rule_id\",\n    cloud.LoadBalancerL7PolicyRuleReplaceParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      L7policyID: \"l7policy_id\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "delete": {"operationId": "L7RuleInstanceViewSet.delete", "summary": "Delete load balancer L7 rule", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "l7policy_id", "required": true, "description": "L7 policy ID", "schema": {"type": "string"}}, {"in": "path", "name": "l7rule_id", "required": true, "description": "L7 rule ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Everything is OK, task to delete L7 rule was created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "404": {"description": "L7 rule was not found"}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.l7_policies.rules.delete(\n    l7rule_id=\"l7rule_id\",\n    project_id=0,\n    region_id=0,\n    l7policy_id=\"l7policy_id\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.L7Policies.Rules.Delete(\n    context.TODO(),\n    \"l7rule_id\",\n    cloud.LoadBalancerL7PolicyRuleDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      L7policyID: \"l7policy_id\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/lbflavors/{project_id}/{region_id}":
    "get": {"operationId": "LoadBalancerFlavorsViewSet.get", "summary": "List load balancer flavors", "description": "Retrieve a list of load balancer flavors. When the `include_prices` query parameter is specified, the list shows\nprices. A client in trial mode gets all price values as 0. If you get Pricing Error contact the support", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Set to true if the response should include flavor prices", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of load balancer flavors", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LbFlavorPricingCollectionSerializer"}}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer_flavor_list = client.cloud.load_balancers.flavors.list(\n    project_id=0,\n    region_id=0,\n)\nprint(load_balancer_flavor_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancerFlavorList, err := client.Cloud.LoadBalancers.Flavors.List(context.TODO(), cloud.LoadBalancerFlavorListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancerFlavorList.Count)\n}\n"}]}
  "/cloud/v1/lblisteners/{project_id}/{region_id}":
    "post": {"operationId": "LoadBalancerListenerViewSet.post", "summary": "Create load balancer listener", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateLbListenerSerializer"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.listeners.create(\n    project_id=1,\n    region_id=1,\n    loadbalancer_id=\"30f4f55b-4a7c-48e0-9954-5cddfee216e7\",\n    name=\"my_listener\",\n    protocol=\"HTTP\",\n    protocol_port=80,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.Listeners.New(context.TODO(), cloud.LoadBalancerListenerNewParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n    LoadbalancerID: \"30f4f55b-4a7c-48e0-9954-5cddfee216e7\",\n    Name: \"my_listener\",\n    Protocol: cloud.LbListenerProtocolHTTP,\n    ProtocolPort: 80,\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "LoadBalancerListenerViewSet.get", "summary": "List load balancer listeners", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "loadbalancer_id", "required": false, "description": "Load Balancer ID", "schema": {"description": "Load Balancer ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Loadbalancer Id", "type": "string"}}, {"in": "query", "name": "show_stats", "required": false, "description": "Show stats", "schema": {"default": false, "description": "Show stats", "examples": [true, false], "title": "Show Stats", "type": "boolean"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LbListenerCollectionSerializer"}}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer_listener_list = client.cloud.load_balancers.listeners.list(\n    project_id=1,\n    region_id=1,\n)\nprint(load_balancer_listener_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancerListenerList, err := client.Cloud.LoadBalancers.Listeners.List(context.TODO(), cloud.LoadBalancerListenerListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancerListenerList.Count)\n}\n"}]}
  "/cloud/v2/lblisteners/{project_id}/{region_id}/{listener_id}":
    "patch": {"operationId": "LoadBalancerListenerInstanceViewSetV2.patch", "summary": "Update load balancer listener", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "listener_id", "required": true, "description": "Listener ID", "schema": {"description": "Listener ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Listener Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PatchLbListenerSerializer"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.listeners.update(\n    listener_id=\"00000000-0000-4000-8000-000000000000\",\n    project_id=1,\n    region_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.Listeners.Update(\n    context.TODO(),\n    \"00000000-0000-4000-8000-000000000000\",\n    cloud.LoadBalancerListenerUpdateParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/lblisteners/{project_id}/{region_id}/{listener_id}":
    "get": {"operationId": "LoadBalancerListenerInstanceViewSet.get", "summary": "Get load balancer listener", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "listener_id", "required": true, "description": "Listener ID", "schema": {"description": "Listener ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Listener Id", "type": "string"}}, {"in": "query", "name": "show_stats", "required": false, "description": "Show stats", "schema": {"default": false, "description": "Show stats", "examples": [true, false], "title": "Show Stats", "type": "boolean"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LbListenerSerializer"}}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer_listener_detail = client.cloud.load_balancers.listeners.get(\n    listener_id=\"00000000-0000-4000-8000-000000000000\",\n    project_id=1,\n    region_id=1,\n)\nprint(load_balancer_listener_detail.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancerListenerDetail, err := client.Cloud.LoadBalancers.Listeners.Get(\n    context.TODO(),\n    \"00000000-0000-4000-8000-000000000000\",\n    cloud.LoadBalancerListenerGetParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancerListenerDetail.ID)\n}\n"}]}
    "delete": {"operationId": "LoadBalancerListenerInstanceViewSet.delete", "summary": "Delete load balancer listener", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "listener_id", "required": true, "description": "Listener ID", "schema": {"description": "Listener ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Listener Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.listeners.delete(\n    listener_id=\"00000000-0000-4000-8000-000000000000\",\n    project_id=1,\n    region_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.Listeners.Delete(\n    context.TODO(),\n    \"00000000-0000-4000-8000-000000000000\",\n    cloud.LoadBalancerListenerDeleteParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "patch": {"operationId": "LoadBalancerListenerInstanceViewSet.patch", "summary": "Update load balancer listener", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "listener_id", "required": true, "description": "Listener ID", "schema": {"description": "Listener ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Listener Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LbListenerSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChangeListenerNameSerializer"}}}}, "tags": ["Load Balancers"]}
  "/cloud/v1/lbpools/{project_id}/{region_id}":
    "post": {"operationId": "LoadBalancerPoolViewSet.post", "summary": "Create load balancer pool", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateLbPoolSerializer"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.pools.create(\n    project_id=1,\n    region_id=1,\n    lb_algorithm=\"LEAST_CONNECTIONS\",\n    name=\"pool_name\",\n    protocol=\"HTTP\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.Pools.New(context.TODO(), cloud.LoadBalancerPoolNewParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n    LbAlgorithm: cloud.LbAlgorithmLeastConnections,\n    Name: \"pool_name\",\n    Protocol: cloud.LbPoolProtocolHTTP,\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "LoadBalancerPoolViewSet.get", "summary": "List load balancer pools", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "details", "required": false, "description": "Show members and Health Monitor details", "schema": {"default": false, "description": "Show members and Health Monitor details", "examples": [true, false], "title": "Details", "type": "boolean"}}, {"in": "query", "name": "listener_id", "required": false, "description": "Listener ID", "schema": {"description": "Listener ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Listener Id", "type": "string"}}, {"in": "query", "name": "loadbalancer_id", "required": false, "description": "Load Balancer ID", "schema": {"description": "Load Balancer ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Loadbalancer Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LbPoolCollectionSerializer"}}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer_pool_list = client.cloud.load_balancers.pools.list(\n    project_id=1,\n    region_id=1,\n)\nprint(load_balancer_pool_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancerPoolList, err := client.Cloud.LoadBalancers.Pools.List(context.TODO(), cloud.LoadBalancerPoolListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancerPoolList.Count)\n}\n"}]}
  "/cloud/v2/lbpools/{project_id}/{region_id}/{pool_id}":
    "patch": {"operationId": "LoadBalancerPoolInstanceViewSetV2.patch", "summary": "Update load balancer pool", "description": "Updates the specified load balancer pool with the provided changes.\n\n**Behavior:**\n- Simple fields (strings, numbers, booleans) will be updated if provided\n- Complex objects (nested structures like members, health monitors, etc.) must be specified\ncompletely - partial updates are not supported for these objects\n- Undefined fields will remain unchanged\n- If no change is detected for a specific field compared to the current pool state,\nthat field will be skipped\n- If no changes are detected at all across all fields, no task will be created and\nan empty task list will be returned\n\n**Examples of complex objects that require full specification:**\n- Pool members: All member properties must be provided when updating members\n- Health monitors: Complete health monitor configuration must be specified\n- Session persistence: Full session persistence settings must be included", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "pool_id", "required": true, "description": "Pool ID", "schema": {"description": "Pool ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Pool Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PatchLbPoolSerializer"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.pools.update(\n    pool_id=\"00000000-0000-4000-8000-000000000000\",\n    project_id=1,\n    region_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.Pools.Update(\n    context.TODO(),\n    \"00000000-0000-4000-8000-000000000000\",\n    cloud.LoadBalancerPoolUpdateParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/lbpools/{project_id}/{region_id}/{pool_id}":
    "get": {"operationId": "LoadBalancerPoolInstanceViewSet.get", "summary": "Get load balancer pool", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "pool_id", "required": true, "description": "Pool ID", "schema": {"description": "Pool ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Pool Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LbPoolInstanceSerializer"}}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer_pool = client.cloud.load_balancers.pools.get(\n    pool_id=\"00000000-0000-4000-8000-000000000000\",\n    project_id=1,\n    region_id=1,\n)\nprint(load_balancer_pool.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancerPool, err := client.Cloud.LoadBalancers.Pools.Get(\n    context.TODO(),\n    \"00000000-0000-4000-8000-000000000000\",\n    cloud.LoadBalancerPoolGetParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancerPool.ID)\n}\n"}]}
    "patch": {"operationId": "LoadBalancerPoolInstanceViewSet.patch", "summary": "Update load balancer pool", "description": "Changes provided here will overwrite existing load balancer pool settings.\nUndefined fields will be kept as is.\nComplex objects need to be specified fully, they will be overwritten.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "pool_id", "required": true, "description": "Pool ID", "schema": {"description": "Pool ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Pool Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PatchLbPoolSerializer"}}}}, "tags": ["Load Balancers"]}
    "delete": {"operationId": "LoadBalancerPoolInstanceViewSet.delete", "summary": "Delete load balancer pool", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "pool_id", "required": true, "description": "Pool ID", "schema": {"description": "Pool ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Pool Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.pools.delete(\n    pool_id=\"00000000-0000-4000-8000-000000000000\",\n    project_id=1,\n    region_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.Pools.Delete(\n    context.TODO(),\n    \"00000000-0000-4000-8000-000000000000\",\n    cloud.LoadBalancerPoolDeleteParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/lbpools/{project_id}/{region_id}/{pool_id}/healthmonitor":
    "post": {"operationId": "LoadBalancerPoolInstanceHealthMonitorViewSet.post", "summary": "Create load balancer pool health monitor", "description": "Creates a health monitor for a load balancer pool to automatically check the health status\nof pool members. The health monitor performs periodic checks on pool members and removes\nunhealthy members from rotation, ensuring only healthy servers receive traffic.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "pool_id", "required": true, "description": "Pool ID", "schema": {"description": "Pool ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Pool Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateLbHealthMonitorSerializer"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.pools.health_monitors.create(\n    pool_id=\"00000000-0000-4000-8000-000000000000\",\n    project_id=1,\n    region_id=1,\n    delay=10,\n    max_retries=2,\n    api_timeout=5,\n    type=\"HTTP\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.Pools.HealthMonitors.New(\n    context.TODO(),\n    \"00000000-0000-4000-8000-000000000000\",\n    cloud.LoadBalancerPoolHealthMonitorNewParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n      Delay: 10,\n      MaxRetries: 2,\n      Timeout: 5,\n      Type: cloud.LbHealthMonitorTypeHTTP,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "delete": {"operationId": "LoadBalancerPoolInstanceHealthMonitorViewSet.delete", "summary": "Delete load balancer pool health monitor", "description": "Removes the health monitor from a load balancer pool. After deletion, the pool will no\nlonger perform automatic health checks on its members, and all members will remain in\nrotation regardless of their actual health status.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "pool_id", "required": true, "description": "Pool ID", "schema": {"description": "Pool ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Pool Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.load_balancers.pools.health_monitors.delete(\n    pool_id=\"00000000-0000-4000-8000-000000000000\",\n    project_id=1,\n    region_id=1,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.LoadBalancers.Pools.HealthMonitors.Delete(\n    context.TODO(),\n    \"00000000-0000-4000-8000-000000000000\",\n    cloud.LoadBalancerPoolHealthMonitorDeleteParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v1/lbpools/{project_id}/{region_id}/{pool_id}/member":
    "post": {"operationId": "LoadBalancerPoolInstanceCreateMemberView.post", "summary": "Create load balancer pool member", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "pool_id", "required": true, "description": "Pool ID", "schema": {"description": "Pool ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Pool Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateLbPoolMemberSerializer"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.pools.members.add(\n    pool_id=\"00000000-0000-4000-8000-000000000000\",\n    project_id=1,\n    region_id=1,\n    address=\"192.168.40.33\",\n    protocol_port=80,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.Pools.Members.Add(\n    context.TODO(),\n    \"00000000-0000-4000-8000-000000000000\",\n    cloud.LoadBalancerPoolMemberAddParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n      Address: \"192.168.40.33\",\n      ProtocolPort: 80,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/lbpools/{project_id}/{region_id}/{pool_id}/member/{member_id}":
    "delete": {"operationId": "LoadBalancerPoolInstanceRemoveMemberView.delete", "summary": "Delete load balancer pool member", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "exclusiveMinimum": 0, "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "pool_id", "required": true, "description": "Pool ID", "schema": {"description": "Pool ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Pool Id", "type": "string"}}, {"in": "path", "name": "member_id", "required": true, "description": "Member ID", "schema": {"description": "Member ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Member Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.pools.members.remove(\n    member_id=\"00000000-0000-4000-8000-000000000000\",\n    project_id=1,\n    region_id=1,\n    pool_id=\"00000000-0000-4000-8000-000000000000\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.Pools.Members.Remove(\n    context.TODO(),\n    \"00000000-0000-4000-8000-000000000000\",\n    cloud.LoadBalancerPoolMemberRemoveParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n      PoolID: \"00000000-0000-4000-8000-000000000000\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/loadbalancers/{project_id}/{region_id}":
    "post": {"operationId": "LoadBalancerViewSet.post", "summary": "Create load balancer", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateLoadbalancerSerializer"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.create(\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.New(context.TODO(), cloud.LoadBalancerNewParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "LoadBalancerViewSet.get", "summary": "List load balancers", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "assigned_floating", "required": false, "description": "With or without assigned floating IP", "schema": {"type": "boolean"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit the number of returned limit request entities.", "schema": {"type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "logging_enabled", "required": false, "description": "With or without logging", "schema": {"type": "boolean"}}, {"in": "query", "name": "name", "required": false, "description": "Filter by name", "schema": {"type": "string"}}, {"in": "query", "name": "offset", "required": false, "description": "Offset value is used to exclude the first set of records from the result.", "schema": {"type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Ordering Load Balancer list result by name, `created_at`, `updated_at`, `operating_status`, `provisioning_status`, `vip_address`, `vip_ip_family` and flavor fields of the load balancer and directions (name.asc), default is \"`created_at`.asc\"", "schema": {"type": "string"}}, {"in": "query", "name": "show_stats", "required": false, "description": "Show statistics", "schema": {"type": "boolean"}}, {"in": "query", "name": "tag_key", "required": false, "description": "Filter by tag keys.", "schema": {"type": "array", "items": {"type": "string"}}}, {"in": "query", "name": "tag_key_value", "required": false, "description": "Filter by tag key-value pairs. Must be a valid JSON string.", "schema": {"type": "string"}}, {"in": "query", "name": "with_ddos", "required": false, "description": "Show Advanced DDoS protection profile, if exists", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of load balancers", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoadbalancerSerializerList"}}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.load_balancers.list(\n    project_id=0,\n    region_id=0,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.LoadBalancers.List(context.TODO(), cloud.LoadBalancerListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/loadbalancers/{project_id}/{region_id}/{loadbalancer_id}":
    "get": {"operationId": "LoadBalancerInstanceViewSet.get", "summary": "Get load balancer", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}, {"in": "query", "name": "show_stats", "required": false, "description": "Show statistics", "schema": {"type": "boolean"}}, {"in": "query", "name": "with_ddos", "required": false, "description": "Show DDoS profile", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "Returned load balancer", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoadbalancerSerializer"}}}}, "404": {"description": "Loadbalancer was not found"}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer = client.cloud.load_balancers.get(\n    loadbalancer_id=\"loadbalancer_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(load_balancer.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancer, err := client.Cloud.LoadBalancers.Get(\n    context.TODO(),\n    \"loadbalancer_id\",\n    cloud.LoadBalancerGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancer.ID)\n}\n"}]}
    "patch": {"operationId": "LoadBalancerInstanceViewSet.patch", "summary": "Update load balancer", "description": "Rename load balancer, activate/deactivate logging, update preferred connectivity type\nand/or modify load balancer tags. The request will only process the fields that are\nprovided in the request body. Any fields that are not included will remain unchanged.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned load balancer", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoadbalancerSerializer"}}}}, "204": {"description": "No content if nothing to be changed"}, "404": {"description": "Loadbalancer was not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoadBalancerPatchSerializer"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer = client.cloud.load_balancers.update(\n    loadbalancer_id=\"loadbalancer_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(load_balancer.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancer, err := client.Cloud.LoadBalancers.Update(\n    context.TODO(),\n    \"loadbalancer_id\",\n    cloud.LoadBalancerUpdateParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancer.ID)\n}\n"}]}
    "delete": {"operationId": "LoadBalancerInstanceViewSet.delete", "summary": "Delete load balancer", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Everything is OK, task to delete load balancer was created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "404": {"description": "Loadbalancer was not found"}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.delete(\n    loadbalancer_id=\"loadbalancer_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.Delete(\n    context.TODO(),\n    \"loadbalancer_id\",\n    cloud.LoadBalancerDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/loadbalancers/{project_id}/{region_id}/{loadbalancer_id}/failover":
    "post": {"operationId": "LoadBalancerFailover.post", "summary": "Failover load balancer", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FailoverLoadBalancer"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.failover(\n    loadbalancer_id=\"loadbalancer_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.Failover(\n    context.TODO(),\n    \"loadbalancer_id\",\n    cloud.LoadBalancerFailoverParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/loadbalancers/{project_id}/{region_id}/{loadbalancer_id}/metrics":
    "post": {"operationId": "LoadbalancerMetricsHandler.post", "summary": "Get load balancer metrics", "description": "Get load balancer metrics, including cpu, memory and network", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of loadbalancer metrics", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoadbalancerMetricsSerializerList"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoadbalancerMetricsRequestSerializer"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer_metrics_list = client.cloud.load_balancers.metrics.list(\n    loadbalancer_id=\"loadbalancer_id\",\n    project_id=0,\n    region_id=0,\n    time_interval=6,\n    time_unit=\"day\",\n)\nprint(load_balancer_metrics_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancerMetricsList, err := client.Cloud.LoadBalancers.Metrics.List(\n    context.TODO(),\n    \"loadbalancer_id\",\n    cloud.LoadBalancerMetricListParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      TimeInterval: 6,\n      TimeUnit: cloud.InstanceMetricsTimeUnitDay,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancerMetricsList.Count)\n}\n"}]}
  "/cloud/v1/loadbalancers/{project_id}/{region_id}/{loadbalancer_id}/resize":
    "post": {"operationId": "LoadBalancerResize.post", "summary": "Resize load balancer", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResizeLoadBalancer"}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.load_balancers.resize(\n    loadbalancer_id=\"loadbalancer_id\",\n    project_id=0,\n    region_id=0,\n    flavor=\"lb1-2-4\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.LoadBalancers.Resize(\n    context.TODO(),\n    \"loadbalancer_id\",\n    cloud.LoadBalancerResizeParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      Flavor: \"lb1-2-4\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/loadbalancers/{project_id}/{region_id}/{loadbalancer_id}/status":
    "get": {"operationId": "LoadBalancerStatusInstanceViewSet.get", "summary": "Get load balancer status", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Load balancer ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Load Balancer status", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoadBalancerStatusSerializer"}}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer_status = client.cloud.load_balancers.statuses.get(\n    loadbalancer_id=\"loadbalancer_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(load_balancer_status.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancerStatus, err := client.Cloud.LoadBalancers.Statuses.Get(\n    context.TODO(),\n    \"loadbalancer_id\",\n    cloud.LoadBalancerStatusGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancerStatus.ID)\n}\n"}]}
  "/cloud/v1/loadbalancers/{project_id}/{region_id}/check_limits":
    "post": {"operationId": "LoadBalancerCheckLimits.post", "summary": "Check load balancer quota", "description": "Check if regional quota is exceeded, if yes the number of additional quotas\nneeded to create the specified load balancer will be calculated", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Dict of exceeding quotas", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionalDiffQuotasSchema"}}}}, "400": {"description": "Invalid parameter in request"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CheckQuotaBeforeLoadbalancerCreationSchema"}}}}, "tags": ["Load Balancers"]}
  "/cloud/v1/loadbalancers/{project_id}/{region_id}/status":
    "get": {"operationId": "LoadBalancerStatusViewSet.get", "summary": "List load balancers statuses", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of load balancers statuses with all their entities", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoadBalancerStatusSerializerList"}}}}}, "tags": ["Load Balancers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nload_balancer_status_list = client.cloud.load_balancers.statuses.list(\n    project_id=0,\n    region_id=0,\n)\nprint(load_balancer_status_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  loadBalancerStatusList, err := client.Cloud.LoadBalancers.Statuses.List(context.TODO(), cloud.LoadBalancerStatusListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", loadBalancerStatusList.Count)\n}\n"}]}
  "/cloud/v2/pricing/{project_id}/{region_id}/loadbalancers":
    "post": {"operationId": "LoadBalancerPricingPreviewV2Handler.post", "summary": "Preview load balancer price", "description": "Preview the billing price for a load balancer.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoadBalancerPricingPreviewResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoadBalancerPricingPreviewV2RequestSerializer"}}}}, "tags": ["Load Balancers"]}
  "/cloud/v2/loadbalancers/{project_id}/{region_id}/{loadbalancer_id}/metadata":
    "post": {"operationId": "LoadbalancerMetadataHandlerV2.post", "summary": "Create or update load balancer tags", "description": "Please use PATCH `/v1/loadbalancers/{`project_id`}/{`region_id`}/{`loadbalancer_id`}` instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks ids", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RawMetadataSerializer"}}}}, "tags": ["Load Balancers"]}
    "put": {"operationId": "LoadbalancerMetadataHandlerV2.put", "summary": "Replace load balancer tags", "description": "Please use PATCH `/v1/loadbalancers/{`project_id`}/{`region_id`}/{`loadbalancer_id`}` instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks ids", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RawMetadataSerializer"}}}}, "tags": ["Load Balancers"]}
  "/cloud/v1/loadbalancers/{project_id}/{region_id}/{loadbalancer_id}/metadata":
    "post": {"operationId": "LoadbalancerMetadataHandler.post", "summary": "Create or update load balancer tags", "description": "Please use PATCH /v1/loadbalancers/{`project_id`}/{`region_id`}/{`loadbalancer_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RawMetadataSerializer"}}}}, "tags": ["Load Balancers"]}
    "get": {"operationId": "LoadbalancerMetadataHandler.get", "summary": "List load balancer tags", "description": "Please use GET /v1/loadbalancers/{`project_id`}/{`region_id`}/{`loadbalancer_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Key-value tags", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagCollectionSerializer"}}}}}, "deprecated": true, "tags": ["Load Balancers"]}
    "put": {"operationId": "LoadbalancerMetadataHandler.put", "summary": "Replace load balancer tags", "description": "Please use PATCH /v1/loadbalancers/{`project_id`}/{`region_id`}/{`loadbalancer_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RawMetadataSerializer"}}}}, "tags": ["Load Balancers"]}
  "/cloud/v2/loadbalancers/{project_id}/{region_id}/{loadbalancer_id}/metadata_item":
    "delete": {"operationId": "LoadbalancerMetadataItemHandlerV2.delete", "summary": "Delete loadbalancer tag", "description": "Please use PATCH /v1/loadbalancers/{`project_id`}/{`region_id`}/{`loadbalancer_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}, {"in": "query", "name": "key", "required": false, "description": "Tag key", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks ids", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "deprecated": true, "tags": ["Load Balancers"]}
  "/cloud/v1/loadbalancers/{project_id}/{region_id}/{loadbalancer_id}/metadata_item":
    "get": {"operationId": "LoadbalancerMetadataItemHandler.get", "summary": "Get load balancer tag", "description": "Please use GET `/v1/loadbalancers/{`project_id`}/{`region_id`}/{`loadbalancer_id`}` instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}, {"in": "query", "name": "key", "required": false, "description": "Tag key", "schema": {"type": "string"}}], "responses": {"200": {"description": "Load balancer tag", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagSerializer"}}}}}, "deprecated": true, "tags": ["Load Balancers"]}
    "delete": {"operationId": "LoadbalancerMetadataItemHandler.delete", "summary": "Delete load balancer tag", "description": "Please use PATCH /v1/loadbalancers/{`project_id`}/{`region_id`}/{`loadbalancer_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "loadbalancer_id", "required": true, "description": "Loadbalancer ID", "schema": {"type": "string"}}, {"in": "query", "name": "key", "required": false, "description": "Tag key", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}}, "deprecated": true, "tags": ["Load Balancers"]}
  "/cloud/v1/pricing/{project_id}/{region_id}/loadbalancers":
    "post": {"operationId": "LoadBalancerPricingPreviewHandler.post", "summary": "Preview load balancer price", "description": "Preview the billing price for a load balancer.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoadBalancerPricingPreviewRequestSerializer"}}}}, "tags": ["Load Balancers"]}
  "/cloud/v1/laas/{project_id}/{region_id}/status":
    "get": {"operationId": "LaasStatusView.get", "summary": "Get logging status", "description": "Retrieve the current status of Logging as a Service (LaaS) for the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "LaaS status", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LaasStatusSerializer"}}}}}, "tags": ["Logging"]}
    "patch": {"operationId": "LaasStatusView.patch", "summary": "Update logging status", "description": "Update the status of Logging as a Service (LaaS) for the specified project and region.\nThis endpoint allows enabling or disabling LaaS functionality.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "LaaS status", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LaasStatusSerializer"}}}}, "400": {"description": "LaaS is not yet supported in the region", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PatchLaasStatusSerializer"}}}}, "tags": ["Logging"]}
  "/cloud/v1/laas/{project_id}/{region_id}/topics":
    "get": {"operationId": "LaasKafkaTopicView.get", "summary": "List logging topics", "description": "Retrieve a list of Kafka topics within the client's LaaS namespace for the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "LaaS Kafka topics", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LaasKafkaTopicSerializer"}}}}, "400": {"description": "LaaS is not yet supported in the region", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "tags": ["Logging"]}
    "put": {"operationId": "LaasKafkaTopicView.put", "summary": "Create logging topic", "description": "Create a new Kafka topic within the client's LaaS namespace for the specified project and region.\nIf a topic with the same name exists, it will be updated.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"201": {"description": "LaaS Kafka topic", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LaasKafkaTopicSerializer"}}}}, "400": {"description": "LaaS is not yet supported in the region", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}, "409": {"description": "Kafka topic with the same name already exists for the client", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LaasKafkaTopicSerializer"}}}}, "tags": ["Logging"]}
  "/cloud/v1/laas/{project_id}/{region_id}/topics/{topic_name}":
    "delete": {"operationId": "LaasKafkaTopicOperationView.delete", "summary": "Delete logging topic", "description": "Delete a Kafka topic from the client's LaaS namespace in the specified project and region.\nThe topic must not be in use by any other service.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "topic_name", "required": true, "description": "Kafka topic name", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK"}, "400": {"description": "LaaS is not yet supported in the region", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "tags": ["Logging"]}
  "/cloud/v1/laas/{project_id}/{region_id}/users":
    "post": {"operationId": "LaasRegenerateCredentialsView.post", "summary": "Regenerate logging credentials", "description": "Generate new credentials for accessing Logging as a Service (LaaS) in the specified project and region.\nThis will invalidate any existing credentials.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "LaaS user", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LaasUserSerializer"}}}}, "400": {"description": "LaaS is not yet supported in the region", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}, "409": {"description": "LaaS is not yet initialized for LaaS client", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "tags": ["Logging"]}
  "/cloud/v1/laas/{region_id}/destination_regions":
    "get": {"operationId": "LaasSourceDestinationRegionView.get", "summary": "List logging destination regions", "description": "Retrieve a list of regions that can be used as destinations for LaaS logs from the specified source region.", "parameters": [{"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "LaaS region list name and id"}}, "tags": ["Logging"]}
  "/cloud/v1/laas/{region_id}/hosts":
    "get": {"operationId": "LaasHostsView.get", "summary": "List logging hosts", "description": "Retrieve a list of hosts running LaaS services in the specified region.", "parameters": [{"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Hosts of LaaS services", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LaasHostsSchema"}}}}, "400": {"description": "LaaS is not yet supported in the region", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "tags": ["Logging"]}
  "/cloud/v1/laas/namespaces/{project_id}/{region_id}/{namespace_name}":
    "get": {"operationId": "LaasNamespaceView.get", "summary": "Check logging namespace", "description": "Check if a custom namespace name is available for LaaS in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "namespace_name", "required": true, "description": "custom namespace for validation", "schema": {"type": "string"}}], "responses": {"200": {"description": "`custom_namespace` creation availability", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NamespaceAvailabilitySerializer"}}}}, "500": {"description": "Internal Server Error"}}, "tags": ["Logging"]}
  "/cloud/v1/pricing/{region_id}/laas":
    "get": {"operationId": "LaasPricingHandler.get", "summary": "Get logging price", "description": "Get the price for Logging-as-a-Service (LaaS) in the specified region.", "parameters": [{"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "tags": ["Logging"]}
  "/cloud/v2/k8s/{project_id}/{region_id}/create_versions":
    "get": {"operationId": "K8sClusterCreateVersionViewSet.get", "summary": "List k8s cluster versions", "description": "List available k8s cluster versions for creation", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of available k8s versions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterVersionV2SerializerList"}}}}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nk8s_cluster_version_list = client.cloud.k8s.list_versions(\n    project_id=0,\n    region_id=0,\n)\nprint(k8s_cluster_version_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  k8sClusterVersionList, err := client.Cloud.K8s.ListVersions(context.TODO(), cloud.K8ListVersionsParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", k8sClusterVersionList.Count)\n}\n"}]}
  "/cloud/v1/k8s/{project_id}/{region_id}/flavors":
    "get": {"operationId": "K8sFlavorsViewSet.get", "summary": "List k8s cluster flavors", "description": "Retrieve a list of flavors for k8s pool.\nWhen the `include_prices` query parameter is specified, the list shows prices.\nA client in trial mode gets all price values as 0. If you get Pricing Error contact the support", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "exclude_gpu", "required": false, "description": "Set to false to include GPU flavors. Default is True.", "schema": {"type": "boolean"}}, {"in": "query", "name": "include_prices", "required": false, "description": "Set to true to include flavor prices. Default is False.", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of flavors", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BareMetalFlavorExtendedCollectionSerializer"}}}}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nbaremetal_flavor_list = client.cloud.k8s.flavors.list(\n    project_id=0,\n    region_id=0,\n)\nprint(baremetal_flavor_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  baremetalFlavorList, err := client.Cloud.K8s.Flavors.List(context.TODO(), cloud.K8FlavorListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", baremetalFlavorList.Count)\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}":
    "post": {"operationId": "K8sClustersViewSetV2.post", "summary": "Create k8s cluster", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Task IDs for cluster creation", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Bad request"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterCreateV2Serializer"}}}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.k8s.clusters.create(\n    project_id=0,\n    region_id=0,\n    keypair=\"some_keypair\",\n    name=\"string\",\n    pools=[{\n        \"flavor_id\": \"g1-standard-1-2\",\n        \"min_node_count\": 3,\n        \"name\": \"my-pool\",\n    }],\n    version=\"1.28.1\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.K8s.Clusters.New(context.TODO(), cloud.K8ClusterNewParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n    Keypair: \"some_keypair\",\n    Name: \"string\",\n    Pools: []cloud.K8ClusterNewParamsPool{cloud.K8ClusterNewParamsPool{\n      FlavorID: \"g1-standard-1-2\",\n      MinNodeCount: 3,\n      Name: \"my-pool\",\n    }},\n    Version: \"1.28.1\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "K8sClustersViewSetV2.get", "summary": "List k8s clusters", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of k8s clusters", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterV2SerializerList"}}}}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nk8s_cluster_list = client.cloud.k8s.clusters.list(\n    project_id=0,\n    region_id=0,\n)\nprint(k8s_cluster_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  k8sClusterList, err := client.Cloud.K8s.Clusters.List(context.TODO(), cloud.K8ClusterListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", k8sClusterList.Count)\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/{cluster_name}":
    "get": {"operationId": "K8sClusterViewSetV2.get", "summary": "Get k8s cluster", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Cluster details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterV2Serializer"}}}}, "404": {"description": "Not found"}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nk8s_cluster = client.cloud.k8s.clusters.get(\n    cluster_name=\"cluster_name\",\n    project_id=0,\n    region_id=0,\n)\nprint(k8s_cluster.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  k8sCluster, err := client.Cloud.K8s.Clusters.Get(\n    context.TODO(),\n    \"cluster_name\",\n    cloud.K8ClusterGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", k8sCluster.ID)\n}\n"}]}
    "patch": {"operationId": "K8sClusterViewSetV2.patch", "summary": "Update k8s cluster", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Task IDs for cluster update", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "404": {"description": "Not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterUpdateV2Serializer"}}}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.k8s.clusters.update(\n    cluster_name=\"cluster_name\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.K8s.Clusters.Update(\n    context.TODO(),\n    \"cluster_name\",\n    cloud.K8ClusterUpdateParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "delete": {"operationId": "K8sClusterViewSetV2.delete", "summary": "Delete k8s cluster", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}, {"in": "query", "name": "volumes", "required": false, "description": "Comma separated list of volume IDs to be deleted with the cluster", "schema": {"type": "string"}}], "responses": {"200": {"description": "Task IDs for cluster deletion", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Bad request"}, "404": {"description": "Not found"}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.k8s.clusters.delete(\n    cluster_name=\"cluster_name\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.K8s.Clusters.Delete(\n    context.TODO(),\n    \"cluster_name\",\n    cloud.K8ClusterDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/{cluster_name}/certificates":
    "get": {"operationId": "K8sClusterCertificateViewSetV2.get", "summary": "Get k8s cluster CA certificate", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Cluster CA certificate", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterCertificateV2Serializer"}}}}, "400": {"description": "Bad request"}, "404": {"description": "Not found"}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nk8s_cluster_certificate = client.cloud.k8s.clusters.get_certificate(\n    cluster_name=\"cluster_name\",\n    project_id=0,\n    region_id=0,\n)\nprint(k8s_cluster_certificate.certificate)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  k8sClusterCertificate, err := client.Cloud.K8s.Clusters.GetCertificate(\n    context.TODO(),\n    \"cluster_name\",\n    cloud.K8ClusterGetCertificateParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", k8sClusterCertificate.Certificate)\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/{cluster_name}/config":
    "get": {"operationId": "K8sClusterConfigViewSetV2.get", "summary": "Get k8s cluster kubeconfig", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Cluster kubeconfig", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterConfigV2Serializer"}}}}, "400": {"description": "Bad request"}, "404": {"description": "Not found"}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nk8s_cluster_kubeconfig = client.cloud.k8s.clusters.get_kubeconfig(\n    cluster_name=\"cluster_name\",\n    project_id=0,\n    region_id=0,\n)\nprint(k8s_cluster_kubeconfig.config)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  k8sClusterKubeconfig, err := client.Cloud.K8s.Clusters.GetKubeconfig(\n    context.TODO(),\n    \"cluster_name\",\n    cloud.K8ClusterGetKubeconfigParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", k8sClusterKubeconfig.Config)\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/{cluster_name}/instances":
    "get": {"operationId": "K8sClusterInstancesViewSetV2.get", "summary": "List k8s cluster nodes", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}, {"in": "query", "name": "with_ddos", "required": false, "description": "Include DDoS profile information if set to true. Default is false.", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of nodes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceCollectionSerializer"}}}}, "404": {"description": "Not found"}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninstance_list = client.cloud.k8s.clusters.nodes.list(\n    cluster_name=\"cluster_name\",\n    project_id=0,\n    region_id=0,\n)\nprint(instance_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  instanceList, err := client.Cloud.K8s.Clusters.Nodes.List(\n    context.TODO(),\n    \"cluster_name\",\n    cloud.K8ClusterNodeListParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", instanceList.Count)\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/{cluster_name}/instances/{instance_id}":
    "delete": {"operationId": "K8sClusterInstanceViewSetV2.delete", "summary": "Delete k8s cluster node", "description": "After deletion, the node will be automatically recreated to maintain the desired pool size.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance identifier", "schema": {"type": "string"}}], "responses": {"204": {"description": "No Content"}, "400": {"description": "Bad request"}, "404": {"description": "Not found"}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.k8s.clusters.nodes.delete(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n    cluster_name=\"cluster_name\",\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.K8s.Clusters.Nodes.Delete(\n    context.TODO(),\n    \"instance_id\",\n    cloud.K8ClusterNodeDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      ClusterName: \"cluster_name\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/{cluster_name}/pools":
    "post": {"operationId": "K8sClustersPoolViewSetV2.post", "summary": "Create k8s cluster pool", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Task IDs for pool creation", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Bad request"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterPoolCreateV2Serializer"}}}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.k8s.clusters.pools.create(\n    cluster_name=\"cluster_name\",\n    project_id=0,\n    region_id=0,\n    flavor_id=\"g1-standard-1-2\",\n    min_node_count=3,\n    name=\"my-pool\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.K8s.Clusters.Pools.New(\n    context.TODO(),\n    \"cluster_name\",\n    cloud.K8ClusterPoolNewParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      FlavorID: \"g1-standard-1-2\",\n      MinNodeCount: 3,\n      Name: \"my-pool\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "K8sClustersPoolViewSetV2.get", "summary": "List k8s cluster pools", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of cluster pools", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterPoolV2SerializerList"}}}}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nk8s_cluster_pool_list = client.cloud.k8s.clusters.pools.list(\n    cluster_name=\"cluster_name\",\n    project_id=0,\n    region_id=0,\n)\nprint(k8s_cluster_pool_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  k8sClusterPoolList, err := client.Cloud.K8s.Clusters.Pools.List(\n    context.TODO(),\n    \"cluster_name\",\n    cloud.K8ClusterPoolListParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", k8sClusterPoolList.Count)\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/{cluster_name}/pools/{pool_name}":
    "get": {"operationId": "K8sClusterPoolViewSetV2.get", "summary": "Get k8s cluster pool", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}, {"in": "path", "name": "pool_name", "required": true, "description": "Pool name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Pool details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterPoolV2Serializer"}}}}, "404": {"description": "Not found"}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nk8s_cluster_pool = client.cloud.k8s.clusters.pools.get(\n    pool_name=\"pool_name\",\n    project_id=0,\n    region_id=0,\n    cluster_name=\"cluster_name\",\n)\nprint(k8s_cluster_pool.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  k8sClusterPool, err := client.Cloud.K8s.Clusters.Pools.Get(\n    context.TODO(),\n    \"pool_name\",\n    cloud.K8ClusterPoolGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      ClusterName: \"cluster_name\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", k8sClusterPool.ID)\n}\n"}]}
    "patch": {"operationId": "K8sClusterPoolViewSetV2.patch", "summary": "Update k8s cluster pool", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}, {"in": "path", "name": "pool_name", "required": true, "description": "Pool name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Updated pool details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterPoolV2Serializer"}}}}, "400": {"description": "Bad request"}, "404": {"description": "Not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterPoolUpdateV2Serializer"}}}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nk8s_cluster_pool = client.cloud.k8s.clusters.pools.update(\n    pool_name=\"pool_name\",\n    project_id=0,\n    region_id=0,\n    cluster_name=\"cluster_name\",\n)\nprint(k8s_cluster_pool.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  k8sClusterPool, err := client.Cloud.K8s.Clusters.Pools.Update(\n    context.TODO(),\n    \"pool_name\",\n    cloud.K8ClusterPoolUpdateParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      ClusterName: \"cluster_name\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", k8sClusterPool.ID)\n}\n"}]}
    "delete": {"operationId": "K8sClusterPoolViewSetV2.delete", "summary": "Delete k8s cluster pool", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}, {"in": "path", "name": "pool_name", "required": true, "description": "Pool name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Task IDs for pool deletion", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Bad request"}, "404": {"description": "Not found"}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.k8s.clusters.pools.delete(\n    pool_name=\"pool_name\",\n    project_id=0,\n    region_id=0,\n    cluster_name=\"cluster_name\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.K8s.Clusters.Pools.Delete(\n    context.TODO(),\n    \"pool_name\",\n    cloud.K8ClusterPoolDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      ClusterName: \"cluster_name\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/{cluster_name}/pools/{pool_name}/instances":
    "get": {"operationId": "K8sClusterPoolInstancesViewSetV2.get", "summary": "List k8s cluster pool nodes", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}, {"in": "path", "name": "pool_name", "required": true, "description": "Pool name", "schema": {"type": "string"}}, {"in": "query", "name": "with_ddos", "required": false, "description": "Include DDoS profile information if set to true. Default is false.", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of nodes", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceCollectionSerializer"}}}}, "404": {"description": "Not found"}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ninstance_list = client.cloud.k8s.clusters.pools.nodes.list(\n    pool_name=\"pool_name\",\n    project_id=0,\n    region_id=0,\n    cluster_name=\"cluster_name\",\n)\nprint(instance_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  instanceList, err := client.Cloud.K8s.Clusters.Pools.Nodes.List(\n    context.TODO(),\n    \"pool_name\",\n    cloud.K8ClusterPoolNodeListParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      ClusterName: \"cluster_name\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", instanceList.Count)\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/{cluster_name}/pools/{pool_name}/instances/{instance_id}":
    "delete": {"operationId": "K8sClusterPoolInstanceViewSetV2.delete", "summary": "Delete k8s cluster pool node", "description": "After deletion, the node will be automatically recreated to maintain the desired pool size.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}, {"in": "path", "name": "pool_name", "required": true, "description": "Pool name", "schema": {"type": "string"}}, {"in": "path", "name": "instance_id", "required": true, "description": "Instance identifier", "schema": {"type": "string"}}], "responses": {"204": {"description": "No Content"}, "400": {"description": "Bad request"}, "404": {"description": "Not found"}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.k8s.clusters.pools.nodes.delete(\n    instance_id=\"instance_id\",\n    project_id=0,\n    region_id=0,\n    cluster_name=\"cluster_name\",\n    pool_name=\"pool_name\",\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.K8s.Clusters.Pools.Nodes.Delete(\n    context.TODO(),\n    \"instance_id\",\n    cloud.K8ClusterPoolNodeDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      ClusterName: \"cluster_name\",\n      PoolName: \"pool_name\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/{cluster_name}/pools/{pool_name}/resize":
    "post": {"operationId": "K8sClusterResizeActionViewSetV2.post", "summary": "Resize k8s cluster pool", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}, {"in": "path", "name": "pool_name", "required": true, "description": "Pool name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Task IDs for pool resize", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Bad request"}, "404": {"description": "Not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterPoolResizeV2Serializer"}}}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.k8s.clusters.pools.resize(\n    pool_name=\"pool_name\",\n    project_id=0,\n    region_id=0,\n    cluster_name=\"cluster_name\",\n    node_count=2,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.K8s.Clusters.Pools.Resize(\n    context.TODO(),\n    \"pool_name\",\n    cloud.K8ClusterPoolResizeParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      ClusterName: \"cluster_name\",\n      NodeCount: 2,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/{cluster_name}/upgrade":
    "post": {"operationId": "K8sClusterUpgradeActionViewSetV2.post", "summary": "Upgrade k8s cluster", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Task IDs for cluster upgrade", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Bad request"}, "404": {"description": "Not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterUpgradeV2Serializer"}}}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.k8s.clusters.upgrade(\n    cluster_name=\"cluster_name\",\n    project_id=0,\n    region_id=0,\n    version=\"v1.28.1\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.K8s.Clusters.Upgrade(\n    context.TODO(),\n    \"cluster_name\",\n    cloud.K8ClusterUpgradeParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      Version: \"v1.28.1\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/{cluster_name}/upgrade_versions":
    "get": {"operationId": "K8sClusterUpdateVersionViewSet.get", "summary": "List k8s cluster versions for upgrade", "description": "List available k8s cluster versions for upgrade", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region identifier", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of available k8s versions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterVersionV2SerializerList"}}}}}, "tags": ["Managed Kubernetes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nk8s_cluster_version_list = client.cloud.k8s.clusters.list_versions_for_upgrade(\n    cluster_name=\"cluster_name\",\n    project_id=0,\n    region_id=0,\n)\nprint(k8s_cluster_version_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  k8sClusterVersionList, err := client.Cloud.K8s.Clusters.ListVersionsForUpgrade(\n    context.TODO(),\n    \"cluster_name\",\n    cloud.K8ClusterListVersionsForUpgradeParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", k8sClusterVersionList.Count)\n}\n"}]}
  "/cloud/v2/k8s/clusters/{project_id}/{region_id}/check_limits":
    "post": {"operationId": "K8sClusterCheckLimitsV2.post", "summary": "Check k8s cluster quota", "description": "Check if regional quota is exceeded, if yes the number of additional\nquotas needed to create the specified cluster will be calculated", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Dict of exceeding quotas", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionalDiffQuotasSchema"}}}}, "400": {"description": "Invalid parameter in request"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterCheckLimitsV2Serializer"}}}}, "tags": ["Managed Kubernetes"]}
  "/cloud/v2/pricing/{project_id}/{region_id}/k8s/clusters":
    "post": {"operationId": "K8sClusterPricingPreviewHandlerV2.post", "summary": "Preview k8s cluster price", "description": "Preview the billing price for a cluster based on the provided configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourcesPricingResponseV2Serializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/K8sClusterPricingRequestV2Serializer"}}}}, "tags": ["Managed Kubernetes"]}
  "/cloud/v2/pricing/{project_id}/{region_id}/k8s/clusters/{cluster_name}":
    "get": {"operationId": "K8sClusterPricingHandlerV2.get", "summary": "Get k8s cluster price", "description": "Get the billing price for a cluster", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Response with prices per hour and per month", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourcesPricingResponseV2Serializer"}}}}, "404": {"description": "Resource not found"}}, "tags": ["Managed Kubernetes"]}
  "/cloud/v1/dbaas/postgres/check_limit/{project_id}/{region_id}":
    "post": {"operationId": "DBAASPorstresLimitsHandler.post", "summary": "Check PostgreSQL cluster quota", "description": "Check if regional quota is exceeded for PostgreSQL cluster creation.\nIf exceeded, calculate additional quotas needed.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Dict of exceeding quotas", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionalDiffQuotasSchema"}}}}, "400": {"description": "Invalid request parameters", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PGClusterCreateSerializer"}}}}, "tags": ["Managed PostgreSQL"]}
  "/cloud/v1/dbaas/postgres/clusters/{project_id}/{region_id}":
    "post": {"operationId": "PGClustersViewSet.post", "summary": "Create PostgreSQL cluster", "description": "Create a new PostgreSQL cluster with the specified configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of created task IDs", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Invalid request parameters", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpResponseClientErrorSchema"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PGClusterCreateSerializer"}}}}, "tags": ["Managed PostgreSQL"]}
    "get": {"operationId": "PGClustersViewSet.get", "summary": "List PostgreSQL clusters", "description": "List all PostgreSQL clusters in the specified project and region.\nResults can be filtered by search query and paginated.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Maximum number of clusters to return", "schema": {"type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Number of clusters to skip", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of PostgreSQL clusters", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PGClusterShortSerializerList"}}}}}, "tags": ["Managed PostgreSQL"]}
  "/cloud/v1/dbaas/postgres/clusters/{project_id}/{region_id}/{cluster_name}":
    "get": {"operationId": "PGClusterViewSet.get", "summary": "Get PostgreSQL cluster", "description": "Get detailed information about a specific PostgreSQL cluster.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}], "responses": {"200": {"description": "Cluster details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PostgresClusterOverviewSerializer"}}}}, "404": {"description": "Cluster not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotFoundErrorSchema"}}}}}, "tags": ["Managed PostgreSQL"]}
    "patch": {"operationId": "PGClusterViewSet.patch", "summary": "Update PostgreSQL cluster", "description": "Update the configuration of an existing PostgreSQL cluster.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created task IDs", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "404": {"description": "Cluster not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotFoundErrorSchema"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PatchPGClusterSerializer"}}}}, "tags": ["Managed PostgreSQL"]}
    "delete": {"operationId": "PGClusterViewSet.delete", "summary": "Delete PostgreSQL cluster", "description": "Delete a PostgreSQL cluster and all its associated resources.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created task IDs", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Invalid request parameters", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpResponseClientErrorSchema"}}}}, "404": {"description": "Cluster not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotFoundErrorSchema"}}}}}, "tags": ["Managed PostgreSQL"]}
  "/cloud/v1/dbaas/postgres/clusters/{project_id}/{region_id}/{cluster_name}/users/{username}/credentials":
    "post": {"operationId": "DBAASPostgresRegenerateSecretView.post", "summary": "Regenerate PostgreSQL user credentials", "description": "Generate new credentials for a specific user in a PostgreSQL cluster.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}, {"in": "path", "name": "username", "required": true, "description": "Username", "schema": {"type": "string"}}], "responses": {"200": {"description": "New user credentials", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCredentialsSerializer"}}}}, "400": {"description": "Service not supported in region", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "tags": ["Managed PostgreSQL"]}
    "get": {"operationId": "DBAASPostgresRegenerateSecretView.get", "summary": "Get PostgreSQL user credentials", "description": "Get the credentials for a specific user in a PostgreSQL cluster.\nThis endpoint can only be used once per user.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "cluster_name", "required": true, "description": "Cluster name", "schema": {"type": "string"}}, {"in": "path", "name": "username", "required": true, "description": "Username", "schema": {"type": "string"}}], "responses": {"200": {"description": "User credentials", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCredentialsSerializer"}}}}, "400": {"description": "Service not supported in region", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "tags": ["Managed PostgreSQL"]}
  "/cloud/v1/dbaas/postgres/configuration/{project_id}/{region_id}":
    "get": {"operationId": "DBAASPostgresAwailableConfigurationView.get", "summary": "Get PostgreSQL configurations", "description": "Get all available PostgreSQL configurations for the specified region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Available configurations", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DBAASPGConfiguration"}}}}, "400": {"description": "Service not supported in region", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "tags": ["Managed PostgreSQL"]}
  "/cloud/v1/dbaas/postgres/validate_pg_conf/{project_id}/{region_id}":
    "post": {"operationId": "DBAASPostgresValidatePGConfView.post", "summary": "Validate PostgreSQL configuration", "description": "Validate a custom PostgreSQL configuration file.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Validation results", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PGConfValidateSerializer"}}}}, "400": {"description": "Service not supported in region", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PGConfValidationRequestSerializer"}}}}, "tags": ["Managed PostgreSQL"]}
  "/cloud/v1/dbaas/status/{project_id}/{region_id}":
    "get": {"operationId": "DBAASStatusView.get", "summary": "Get PostgreSQL service status", "description": "Get the current status of the PostgreSQL service for the specified project.\nThe service may be initialized or not.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Service status", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DbaasStatusSerializer"}}}}, "400": {"description": "Service not supported in region", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "tags": ["Managed PostgreSQL"]}
    "put": {"operationId": "DBAASStatusView.put", "summary": "Update PostgreSQL service status", "description": "Activate or deactivate the PostgreSQL service for the specified project.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Updated service status", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DbaasStatusSerializer"}}}}, "400": {"description": "Service not supported in region", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HttpErrorResponseSchema"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DbaasStatusSerializer"}}}}, "tags": ["Managed PostgreSQL"]}
  "/cloud/v1/availablenetworks/{project_id}/{region_id}":
    "get": {"operationId": "AvailableNetworkViewSet.get", "summary": "List networks with subnets details", "description": "Retrieve the list of directly-attachable networks with subnet details. Returned entities\nmay or may not be owned by the project", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "name", "required": false, "description": "Filter networks by name", "schema": {"description": "Filter networks by name", "examples": ["my-network"], "maxLength": 61, "title": "Name", "type": "string"}}, {"in": "query", "name": "network_id", "required": false, "description": "Optional. Can be used to only show subnets of the specific network", "schema": {"description": "Optional. Can be used to only show subnets of the specific network", "examples": ["123e4567-e89b-12d3-a456-426614174000"], "format": "uuid4", "title": "Network Id", "type": "string"}}, {"in": "query", "name": "network_type", "required": false, "description": "Optional. Filter network by network type (vlan or vxlan)", "schema": {"$ref": "#/components/schemas/NetworkType", "description": "Optional. Filter network by network type (vlan or vxlan)", "examples": ["vlan"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Ordering networks list result by `name`, `created_at` fields of the network and directions (`created_at.desc`).", "schema": {"$ref": "#/components/schemas/NetworkListOrderByChoices", "description": "Ordering networks list result by `name`, `created_at` fields of the network and directions (`created_at.desc`).", "examples": ["created_at.desc"]}}, {"in": "query", "name": "shared", "required": false, "description": "Optional. Can be used to only show networks with shared state", "schema": {"description": "Optional. Can be used to only show networks with shared state", "examples": [true], "title": "Shared", "type": "boolean"}}, {"in": "query", "name": "tag_key", "required": false, "description": "Optional. Filter by tag keys. ?`tag_key`=key1&`tag_key`=key2", "schema": {"description": "Optional. Filter by tag keys. ?`tag_key`=key1&`tag_key`=key2", "examples": [["key1", "key2"]], "items": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1, "type": "string"}, "title": "Tag Key", "type": "array"}}, {"in": "query", "name": "tag_key_value", "required": false, "description": "Optional. Filter by tag key-value pairs.", "schema": {"contentMediaType": "application/json", "contentSchema": {"additionalProperties": {"description": "Tag value. The maximum size for a value is 1024 bytes.", "examples": ["my-tag-value"], "maxLength": 1024, "minLength": 1, "type": "string"}, "propertyNames": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1}, "type": "object"}, "description": "Optional. Filter by tag key-value pairs.", "title": "Tag Key Value", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NetworkSubnetworkCollectionSerializer"}}}}},
      "tags": ["Networks"]}
  "/cloud/v1/networks/{project_id}/{region_id}":
    "post": {"operationId": "NetworkViewSet.post", "summary": "Create network", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateNetworkSerializer"}}}}, "tags": ["Networks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.networks.create(\n    project_id=1,\n    region_id=1,\n    name=\"my network\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Networks.New(context.TODO(), cloud.NetworkNewParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n    Name: \"my network\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "NetworkViewSet.get", "summary": "List networks", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "name", "required": false, "description": "Filter networks by name", "schema": {"description": "Filter networks by name", "examples": ["my-network"], "maxLength": 61, "title": "Name", "type": "string"}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Ordering networks list result by `name`, `created_at` fields of the network and directions (`created_at.desc`).", "schema": {"$ref": "#/components/schemas/NetworkListOrderByChoices", "default": "created_at.desc", "description": "Ordering networks list result by `name`, `created_at` fields of the network and directions (`created_at.desc`).", "examples": ["created_at.desc"]}}, {"in": "query", "name": "tag_key", "required": false, "description": "Optional. Filter by tag keys. ?`tag_key`=key1&`tag_key`=key2", "schema": {"description": "Optional. Filter by tag keys. ?`tag_key`=key1&`tag_key`=key2", "examples": [["key1", "key2"]], "items": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1, "type": "string"}, "title": "Tag Key", "type": "array"}}, {"in": "query", "name": "tag_key_value", "required": false, "description": "Optional. Filter by tag key-value pairs.", "schema": {"contentMediaType": "application/json", "contentSchema": {"additionalProperties": {"description": "Tag value. The maximum size for a value is 1024 bytes.", "examples": ["my-tag-value"], "maxLength": 1024, "minLength": 1, "type": "string"}, "propertyNames": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1}, "type": "object"}, "description": "Optional. Filter by tag key-value pairs.", "title": "Tag Key Value", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NetworkCollectionSerializer"}}}}}, "tags": ["Networks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.networks.list(\n    project_id=1,\n    region_id=1,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Networks.List(context.TODO(), cloud.NetworkListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/networks/{project_id}/{region_id}/{network_id}":
    "get": {"operationId": "NetworkInstanceViewSet.get", "summary": "Get network", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "network_id", "required": true, "description": "Network ID", "schema": {"description": "Network ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Network Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NetworkSerializer"}}}}}, "tags": ["Networks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nnetwork = client.cloud.networks.get(\n    network_id=\"b39792c3-3160-4356-912e-ba396c95cdcf\",\n    project_id=1,\n    region_id=1,\n)\nprint(network.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  network, err := client.Cloud.Networks.Get(\n    context.TODO(),\n    \"b39792c3-3160-4356-912e-ba396c95cdcf\",\n    cloud.NetworkGetParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", network.ID)\n}\n"}]}
    "patch": {"operationId": "NetworkInstanceViewSet.patch", "summary": "Update network", "description": "Rename network and/or update network tags.\nThe request will only process the fields that are provided in the request body.\nAny fields that are not included will remain unchanged.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "network_id", "required": true, "description": "Network ID", "schema": {"description": "Network ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Network Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NetworkSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PatchNetworkSerializer"}}}}, "tags": ["Networks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nnetwork = client.cloud.networks.update(\n    network_id=\"b39792c3-3160-4356-912e-ba396c95cdcf\",\n    project_id=1,\n    region_id=1,\n)\nprint(network.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  network, err := client.Cloud.Networks.Update(\n    context.TODO(),\n    \"b39792c3-3160-4356-912e-ba396c95cdcf\",\n    cloud.NetworkUpdateParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", network.ID)\n}\n"}]}
    "delete": {"operationId": "NetworkInstanceViewSet.delete", "summary": "Delete network", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "network_id", "required": true, "description": "Network ID", "schema": {"description": "Network ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Network Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Networks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.networks.delete(\n    network_id=\"b39792c3-3160-4356-912e-ba396c95cdcf\",\n    project_id=1,\n    region_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Networks.Delete(\n    context.TODO(),\n    \"b39792c3-3160-4356-912e-ba396c95cdcf\",\n    cloud.NetworkDeleteParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/networks/{project_id}/{region_id}/{network_id}/ports":
    "get": {"operationId": "InstancePortsByNetworkView.get", "summary": "List instance ports by network", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "network_id", "required": true, "description": "Network ID", "schema": {"description": "Network ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Network Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PortAndInstanceCollectionSerializer"}}}}}, "tags": ["Networks"]}
  "/cloud/v1/subnets/{project_id}/{region_id}":
    "post": {"operationId": "SubnetViewSet.post", "summary": "Create subnet", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateSubnetSerializer"}}}}, "tags": ["Networks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.networks.subnets.create(\n    project_id=1,\n    region_id=1,\n    cidr=\"192.168.10.0/24\",\n    name=\"my subnet\",\n    network_id=\"ee2402d0-f0cd-4503-9b75-69be1d11c5f1\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Networks.Subnets.New(context.TODO(), cloud.NetworkSubnetNewParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n    Cidr: \"192.168.10.0/24\",\n    Name: \"my subnet\",\n    NetworkID: \"ee2402d0-f0cd-4503-9b75-69be1d11c5f1\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "SubnetViewSet.get", "summary": "List subnets", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "network_id", "required": false, "description": "Only list subnets of this network", "schema": {"description": "Only list subnets of this network", "examples": ["b30d0de7-bca2-4c83-9c57-9e645bd2cc92"], "format": "uuid4", "title": "Network Id", "type": "string"}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Ordering subnets list result by `name`, `created_at`, `updated_at`, `available_ips`, `total_ips`, and `cidr` (default) fields of the subnet and directions (`name.asc`).", "schema": {"$ref": "#/components/schemas/SubnetListOrderByChoices", "default": "cidr.asc", "description": "Ordering subnets list result by `name`, `created_at`, `updated_at`, `available_ips`, `total_ips`, and `cidr` (default) fields of the subnet and directions (`name.asc`).", "examples": ["name.asc"]}}, {"in": "query", "name": "tag_key", "required": false, "description": "Optional. Filter by tag keys. ?`tag_key`=key1&`tag_key`=key2", "schema": {"description": "Optional. Filter by tag keys. ?`tag_key`=key1&`tag_key`=key2", "examples": [["key1", "key2"]], "items": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1, "type": "string"}, "title": "Tag Key", "type": "array"}}, {"in": "query", "name": "tag_key_value", "required": false, "description": "Optional. Filter by tag key-value pairs.", "schema": {"contentMediaType": "application/json", "contentSchema": {"additionalProperties": {"description": "Tag value. The maximum size for a value is 1024 bytes.", "examples": ["my-tag-value"], "maxLength": 1024, "minLength": 1, "type": "string"}, "propertyNames": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1}, "type": "object"}, "description": "Optional. Filter by tag key-value pairs.", "title": "Tag Key Value", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SubnetSerializerList"}}}}}, "tags": ["Networks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.networks.subnets.list(\n    project_id=1,\n    region_id=1,\n)\npage = page.results[0]\nprint(page.cidr)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Networks.Subnets.List(context.TODO(), cloud.NetworkSubnetListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/subnets/{project_id}/{region_id}/{subnet_id}":
    "get": {"operationId": "SubnetInstanceViewSet.get", "summary": "Get subnet", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "subnet_id", "required": true, "description": "Subnet ID", "schema": {"description": "Subnet ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SubnetSerializer"}}}}}, "tags": ["Networks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nsubnet = client.cloud.networks.subnets.get(\n    subnet_id=\"b39792c3-3160-4356-912e-ba396c95cdcf\",\n    project_id=1,\n    region_id=1,\n)\nprint(subnet.cidr)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  subnet, err := client.Cloud.Networks.Subnets.Get(\n    context.TODO(),\n    \"b39792c3-3160-4356-912e-ba396c95cdcf\",\n    cloud.NetworkSubnetGetParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", subnet.Cidr)\n}\n"}]}
    "patch": {"operationId": "SubnetInstanceViewSet.patch", "summary": "Update subnet", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "subnet_id", "required": true, "description": "Subnet ID", "schema": {"description": "Subnet ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SubnetSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PatchSubnetSerializer"}}}}, "tags": ["Networks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nsubnet = client.cloud.networks.subnets.update(\n    subnet_id=\"b39792c3-3160-4356-912e-ba396c95cdcf\",\n    project_id=1,\n    region_id=1,\n)\nprint(subnet.cidr)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  subnet, err := client.Cloud.Networks.Subnets.Update(\n    context.TODO(),\n    \"b39792c3-3160-4356-912e-ba396c95cdcf\",\n    cloud.NetworkSubnetUpdateParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", subnet.Cidr)\n}\n"}]}
    "delete": {"operationId": "SubnetInstanceViewSet.delete", "summary": "Delete subnet", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "subnet_id", "required": true, "description": "Subnet ID", "schema": {"description": "Subnet ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Networks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.networks.subnets.delete(\n    subnet_id=\"b39792c3-3160-4356-912e-ba396c95cdcf\",\n    project_id=1,\n    region_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Networks.Subnets.Delete(\n    context.TODO(),\n    \"b39792c3-3160-4356-912e-ba396c95cdcf\",\n    cloud.NetworkSubnetDeleteParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/networks/{project_id}/{region_id}/{network_id}/metadata":
    "post": {"operationId": "NetworkMetadataHandler.post", "summary": "Create or update network tags", "description": "Create or update one or more tags for a network.\nIf a tag does not exist, it gets created.\nIf a tag already exists, its value is overwritten\n\n**Deprecated**: Use PATCH /v1/networks/{`project_id`}/{`region_id`}/{`network_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "network_id", "required": true, "description": "Network ID", "schema": {"description": "Network ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Network Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateTagsSerializer"}}}}, "tags": ["Networks"]}
    "get": {"operationId": "NetworkMetadataHandler.get", "summary": "List network tags", "description": "Lists all tags for a network\n\n**Deprecated**: Use GET /v1/networks/{`project_id`}/{`region_id`}/{`network_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "network_id", "required": true, "description": "Network ID", "schema": {"description": "Network ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Network Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagCollectionSerializer"}}}}}, "deprecated": true, "tags": ["Networks"]}
    "put": {"operationId": "NetworkMetadataHandler.put", "summary": "Replace network tags", "description": "All existing tags are deleted and replaced with the tags from the request.\n\n**Deprecated**: Use PATCH /v1/networks/{`project_id`}/{`region_id`}/{`network_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "network_id", "required": true, "description": "Network ID", "schema": {"description": "Network ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Network Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateTagsSerializer"}}}}, "tags": ["Networks"]}
  "/cloud/v1/networks/{project_id}/{region_id}/{network_id}/metadata_item":
    "get": {"operationId": "NetworkMetadataItemHandler.get", "summary": "Get network tag", "description": "Get network tag by key\n\n**Deprecated**: Use GET /v1/networks/{`project_id`}/{`region_id`}/{`network_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "network_id", "required": true, "description": "Network ID", "schema": {"description": "Network ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Network Id", "type": "string"}}, {"in": "query", "name": "key", "required": true, "description": "Tag key to filter by", "schema": {"description": "Tag key to filter by", "examples": ["cost-center"], "maxLength": 255, "minLength": 1, "title": "Key", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagSerializer"}}}}}, "deprecated": true, "tags": ["Networks"]}
    "delete": {"operationId": "NetworkMetadataItemHandler.delete", "summary": "Delete network tag", "description": "Delete network tag by key\n\n**Deprecated**: Use PATCH /v1/networks/{`project_id`}/{`region_id`}/{`network_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "network_id", "required": true, "description": "Network ID", "schema": {"description": "Network ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Network Id", "type": "string"}}, {"in": "query", "name": "key", "required": true, "description": "Tag key to filter by", "schema": {"description": "Tag key to filter by", "examples": ["cost-center"], "maxLength": 255, "minLength": 1, "title": "Key", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "tags": ["Networks"]}
  "/cloud/v1/subnets/{project_id}/{region_id}/{subnet_id}/metadata":
    "post": {"operationId": "SubnetMetadataHandler.post", "summary": "Create or update subnet tags", "description": "Create or update one or more tags for a subnet.\nIf a tag does not exist, it gets created.\nIf a tag already exists, its value is overwritten\n\n**Deprecated**: Use PATCH /v1/subnets/{`project_id`}/{`region_id`}/{`subnet_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "subnet_id", "required": true, "description": "Subnet ID", "schema": {"description": "Subnet ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateTagsSerializer"}}}}, "tags": ["Networks"]}
    "get": {"operationId": "SubnetMetadataHandler.get", "summary": "List subnet tags", "description": "Lists all tags for a subnet\n\n**Deprecated**: Use GET /v1/subnets/{`project_id`}/{`region_id`}/{`subnet_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "subnet_id", "required": true, "description": "Subnet ID", "schema": {"description": "Subnet ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagCollectionSerializer"}}}}}, "deprecated": true, "tags": ["Networks"]}
    "put": {"operationId": "SubnetMetadataHandler.put", "summary": "Replace subnet tags", "description": "All existing tags are deleted and replaced with the tags from the request.\n\n**Deprecated**: Use PATCH /v1/subnets/{`project_id`}/{`region_id`}/{`subnet_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "subnet_id", "required": true, "description": "Subnet ID", "schema": {"description": "Subnet ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateTagsSerializer"}}}}, "tags": ["Networks"]}
  "/cloud/v1/subnets/{project_id}/{region_id}/{subnet_id}/metadata_item":
    "get": {"operationId": "SubnetMetadataItemHandler.get", "summary": "Get subnet tag", "description": "Get subnet tag by key\n\n**Deprecated**: Use GET /v1/subnets/{`project_id`}/{`region_id`}/{`subnet_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "subnet_id", "required": true, "description": "Subnet ID", "schema": {"description": "Subnet ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}, {"in": "query", "name": "key", "required": true, "description": "Tag key to filter by", "schema": {"description": "Tag key to filter by", "examples": ["cost-center"], "maxLength": 255, "minLength": 1, "title": "Key", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagSerializer"}}}}}, "deprecated": true, "tags": ["Networks"]}
    "delete": {"operationId": "SubnetMetadataItemHandler.delete", "summary": "Delete subnet tag", "description": "Delete subnet tag by key\n\n**Deprecated**: Use PATCH /v1/subnets/{`project_id`}/{`region_id`}/{`subnet_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "subnet_id", "required": true, "description": "Subnet ID", "schema": {"description": "Subnet ID", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}, {"in": "query", "name": "key", "required": true, "description": "Tag key to filter by", "schema": {"description": "Tag key to filter by", "examples": ["cost-center"], "maxLength": 255, "minLength": 1, "title": "Key", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "tags": ["Networks"]}
  "/cloud/v1/servergroups/{project_id}/{region_id}":
    "post": {"operationId": "ServerGroupsViewSet.post", "summary": "Create placement group", "description": "Create an affinity or anti-affinity or soft-anti-affinity placement group", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Returned placement group", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServerGroupSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateServerGroupSerializer"}}}}, "tags": ["Placement Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nplacement_group = client.cloud.placement_groups.create(\n    project_id=0,\n    region_id=0,\n    name=\"my-server-group\",\n    policy=\"anti-affinity\",\n)\nprint(placement_group.project_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  placementGroup, err := client.Cloud.PlacementGroups.New(context.TODO(), cloud.PlacementGroupNewParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n    Name: \"my-server-group\",\n    Policy: cloud.PlacementGroupNewParamsPolicyAntiAffinity,\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", placementGroup.ProjectID)\n}\n"}]}
    "get": {"operationId": "ServerGroupsViewSet.get", "summary": "List placement groups", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of placement groups", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServerGroupSerializerList"}}}}}, "tags": ["Placement Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nplacement_group_list = client.cloud.placement_groups.list(\n    project_id=0,\n    region_id=0,\n)\nprint(placement_group_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  placementGroupList, err := client.Cloud.PlacementGroups.List(context.TODO(), cloud.PlacementGroupListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", placementGroupList.Count)\n}\n"}]}
  "/cloud/v1/servergroups/{project_id}/{region_id}/{group_id}":
    "get": {"operationId": "ServerGroupInstanceViewSet.get", "summary": "Get placement group", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Placement group ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Returned placement group", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServerGroupSerializer"}}}}}, "tags": ["Placement Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nplacement_group = client.cloud.placement_groups.get(\n    group_id=\"group_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(placement_group.project_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  placementGroup, err := client.Cloud.PlacementGroups.Get(\n    context.TODO(),\n    \"group_id\",\n    cloud.PlacementGroupGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", placementGroup.ProjectID)\n}\n"}]}
    "delete": {"operationId": "ServerGroupInstanceViewSet.delete", "summary": "Delete placement group", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Placement group ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "No response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Placement Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.placement_groups.delete(\n    group_id=\"group_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.PlacementGroups.Delete(\n    context.TODO(),\n    \"group_id\",\n    cloud.PlacementGroupDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/projects":
    "post": {"operationId": "ProjectListViewSet.post", "summary": "Create project", "description": "Create a new project for a client.\nProject management must be enabled to perform this operation.", "parameters": [], "responses": {"201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateProjectSerializer"}}}}, "tags": ["Projects"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nproject = client.cloud.projects.create(\n    name=\"New Project\",\n)\nprint(project.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  project, err := client.Cloud.Projects.New(context.TODO(), cloud.ProjectNewParams{\n    Name: \"New Project\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", project.ID)\n}\n"}]}
    "get": {"operationId": "ProjectListViewSet.get", "summary": "List projects", "description": "Retrieve a list of projects for a client.\nResults can be filtered by name and ordered by various fields.", "parameters": [{"in": "query", "name": "client_id", "required": false, "description": "Client ID filter for administrators.", "schema": {"description": "Client ID filter for administrators.", "examples": [1], "title": "Client Id", "type": "integer"}}, {"in": "query", "name": "include_deleted", "required": false, "description": "Whether to include deleted projects in the response.", "schema": {"default": false, "description": "Whether to include deleted projects in the response.", "examples": [false], "title": "Include Deleted", "type": "boolean"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit value is used to limit the number of records in the result", "schema": {"default": 100, "description": "Limit value is used to limit the number of records in the result", "examples": [100], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "name", "required": false, "description": "Name to filter the results by.", "schema": {"description": "Name to filter the results by.", "examples": ["my-project"], "title": "Name", "type": "string"}}, {"in": "query", "name": "offset", "required": false, "description": "Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Order by field and direction.", "schema": {"$ref": "#/components/schemas/ProjectOrderByChoices", "default": "created_at.desc", "description": "Order by field and direction.", "examples": ["name.desc"]}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListProjectsSerializer"}}}}}, "tags": ["Projects"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.projects.list()\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Projects.List(context.TODO(), cloud.ProjectListParams{\n\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/projects/{project_id}":
    "get": {"operationId": "ProjectViewSet.get", "summary": "Get project", "description": "Retrieve detailed information about a specific project.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Returned project", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectSerializer"}}}}}, "tags": ["Projects"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nproject = client.cloud.projects.get(\n    project_id=0,\n)\nprint(project.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  project, err := client.Cloud.Projects.Get(context.TODO(), cloud.ProjectGetParams{\n    ProjectID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", project.ID)\n}\n"}]}
    "put": {"operationId": "ProjectViewSet.put", "summary": "Update project", "description": "Update project name and description.\nProject management must be enabled to perform this operation.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Changed project", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NameDescriptionSerializer"}}}}, "tags": ["Projects"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nproject = client.cloud.projects.replace(\n    project_id=0,\n    name=\"New Project\",\n)\nprint(project.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  project, err := client.Cloud.Projects.Replace(context.TODO(), cloud.ProjectReplaceParams{\n    ProjectID: gcore.Int(0),\n    Name: \"New Project\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", project.ID)\n}\n"}]}
    "delete": {"operationId": "ProjectViewSet.delete", "summary": "Delete project", "description": "Delete a project and all its associated cloud resources across all regions.\nThis operation is irreversible and cannot be undone.\nDefault projects cannot be deleted.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Projects"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.projects.delete(\n    project_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Projects.Delete(context.TODO(), cloud.ProjectDeleteParams{\n    ProjectID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v2/client_quotas":
    "get": {"operationId": "ClientQuotasHandler.get", "summary": "Get all quotas", "description": "Get combined client quotas, including both regional and global quotas.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AllClientQuotasSerializer"}}}}}, "tags": ["Quotas"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nresponse = client.cloud.quotas.get_all()\nprint(response.global_quotas)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  response, err := client.Cloud.Quotas.GetAll(context.TODO())\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", response.GlobalQuotas)\n}\n"}]}
  "/cloud/v2/client_quotas/{client_id}/notification_threshold":
    "get": {"operationId": "QuotaNotificationThresholdByClientIdHandler.get", "summary": "Get quota notification threshold", "description": "Get a client's quota notification threshold. This threshold is used to send warning notifications to the client\nwhen their quota usage reaches the specified percentage. Defaults to 80% if not set.", "parameters": [{"in": "path", "name": "client_id", "required": true, "description": "Client ID", "schema": {"description": "Client ID", "examples": [3], "title": "Client Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QuotaNotificationThresholdSerializer"}}}}}, "tags": ["Quotas"]}
    "put": {"operationId": "QuotaNotificationThresholdByClientIdHandler.put", "summary": "Update quota notification threshold", "description": "Update or create a client's quota notification threshold. This threshold is used to send warning notifications\nto the client when their quota usage reaches the specified percentage. Defaults to 80%.", "parameters": [{"in": "path", "name": "client_id", "required": true, "description": "Client ID", "schema": {"description": "Client ID", "examples": [3], "title": "Client Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QuotaNotificationThresholdSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QuotaThresholdSerializer"}}}}, "tags": ["Quotas"]}
    "delete": {"operationId": "QuotaNotificationThresholdByClientIdHandler.delete", "summary": "Delete quota notification threshold", "description": "Delete a client's quota notification threshold. After deletion, the default threshold of 80% will be used.", "parameters": [{"in": "path", "name": "client_id", "required": true, "description": "Client ID", "schema": {"description": "Client ID", "examples": [3], "title": "Client Id", "type": "integer"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Quotas"]}
  "/cloud/v2/global_quotas/{client_id}":
    "get": {"operationId": "GlobalClientQuotasViewSet.get", "summary": "Get global quotas", "description": "Get global quotas for a specific client.", "parameters": [{"in": "path", "name": "client_id", "required": true, "description": "Client ID", "schema": {"description": "Client ID", "examples": [3], "title": "Client Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GlobalQuotasSerializer"}}}}}, "tags": ["Quotas"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nresponse = client.cloud.quotas.get_global(\n    3,\n)\nprint(response.inference_cpu_millicore_count_limit)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  response, err := client.Cloud.Quotas.GetGlobal(context.TODO(), 3)\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", response.InferenceCPUMillicoreCountLimit)\n}\n"}]}
  "/cloud/v2/limits_request":
    "post": {"operationId": "CreateQuotaLimitsRequestViewSet.post", "summary": "Create quota limit request", "description": "Create a request to change current quotas.", "parameters": [], "responses": {"201": {"description": "Created"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LimitsRequestCreateSerializer"}}}}, "tags": ["Quotas"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.quotas.requests.create(\n    description=\"Scale up mysql cluster\",\n    requested_limits={},\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Quotas.Requests.New(context.TODO(), cloud.QuotaRequestNewParams{\n    Description: \"Scale up mysql cluster\",\n    RequestedLimits: cloud.QuotaRequestNewParamsRequestedLimits{\n\n    },\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
    "get": {"operationId": "CreateQuotaLimitsRequestViewSet.get", "summary": "List quota limit requests", "description": "Get a list of sent requests to change current quotas and their statuses.", "parameters": [{"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "status", "required": false, "description": "List of limit requests statuses for filtering", "schema": {"description": "List of limit requests statuses for filtering", "examples": [["done", "in progress"]], "items": {"$ref": "#/components/schemas/LimitsRequestStatus"}, "title": "Status", "type": "array"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LimitsRequestCollectionSerializer"}}}}}, "tags": ["Quotas"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.quotas.requests.list()\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Quotas.Requests.List(context.TODO(), cloud.QuotaRequestListParams{\n\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v2/limits_request/{request_id}":
    "get": {"operationId": "ShowQuotaLimitsRequestViewSet.get", "summary": "Get quota limit request", "description": "Get detailed information about a specific quota limit request.", "parameters": [{"in": "path", "name": "request_id", "required": true, "description": "LimitRequest ID", "schema": {"description": "LimitRequest ID", "examples": [3], "title": "Request Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LimitsRequestSerializer"}}}}}, "tags": ["Quotas"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nrequest = client.cloud.quotas.requests.get(\n    3,\n)\nprint(request.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  request, err := client.Cloud.Quotas.Requests.Get(context.TODO(), 3)\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", request.ID)\n}\n"}]}
    "delete": {"operationId": "ShowQuotaLimitsRequestViewSet.delete", "summary": "Delete quota limit request", "description": "Delete a specific quota limit request.", "parameters": [{"in": "path", "name": "request_id", "required": true, "description": "LimitRequest ID", "schema": {"description": "LimitRequest ID", "examples": [3], "title": "Request Id", "type": "integer"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Quotas"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.quotas.requests.delete(\n    3,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Quotas.Requests.Delete(context.TODO(), 3)\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v2/regional_quotas/{client_id}/{region_id}":
    "get": {"operationId": "ClientUpdateRegionalQuotasViewSet.get", "summary": "Get regional quotas", "description": "Get quotas for a specific region and client.", "parameters": [{"in": "path", "name": "client_id", "required": true, "description": "Client ID", "schema": {"description": "Client ID", "examples": [3], "title": "Client Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionalQuotasSerializer"}}}}}, "tags": ["Quotas"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nresponse = client.cloud.quotas.get_by_region(\n    client_id=3,\n    region_id=1,\n)\nprint(response.region_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  response, err := client.Cloud.Quotas.GetByRegion(context.TODO(), cloud.QuotaGetByRegionParams{\n    ClientID: 3,\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", response.RegionID)\n}\n"}]}
  "/cloud/v1/regions":
    "get": {"operationId": "RegionHandler.get", "summary": "List regions", "description": "", "parameters": [{"in": "query", "name": "limit", "required": false, "description": "Limit the number of returned regions. Falls back to default of 100 if not specified. Limited by max limit value of 1000", "schema": {"default": 100, "description": "Limit the number of returned regions. Falls back to default of 100 if not specified. Limited by max limit value of 1000", "examples": [100], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Order by field and direction.", "schema": {"$ref": "#/components/schemas/RegionOrderByChoices", "default": "created_at.desc", "description": "Order by field and direction.", "examples": ["created_at.desc"]}}, {"in": "query", "name": "product", "required": false, "description": "If defined then return only regions that support given product.", "schema": {"$ref": "#/components/schemas/RegionProductChoices", "description": "If defined then return only regions that support given product.", "examples": ["inference"]}}, {"in": "query", "name": "show_volume_types", "required": false, "description": "If true, null `available_volume_type` is replaced with a list of available volume types.", "schema": {"default": false, "description": "If true, null `available_volume_type` is replaced with a list of available volume types.", "examples": [false], "title": "Show Volume Types", "type": "boolean"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionCollectionSerializer"}}}}}, "tags": ["Regions"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.regions.list()\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Regions.List(context.TODO(), cloud.RegionListParams{\n\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/regions/{region_id}":
    "get": {"operationId": "RegionInstanceHandler.get", "summary": "Get region", "description": "", "parameters": [{"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [11], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "show_volume_types", "required": false, "description": "If true, null `available_volume_type` is replaced with a list of available volume types.", "schema": {"default": false, "description": "If true, null `available_volume_type` is replaced with a list of available volume types.", "examples": [false], "title": "Show Volume Types", "type": "boolean"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionSerializer"}}}}}, "tags": ["Regions"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nregion = client.cloud.regions.get(\n    region_id=11,\n)\nprint(region.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  region, err := client.Cloud.Regions.Get(context.TODO(), cloud.RegionGetParams{\n    RegionID: gcore.Int(11),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", region.ID)\n}\n"}]}
  "/cloud/v1/registries/{project_id}/{region_id}":
    "post": {"operationId": "RegistriesHandler.post", "summary": "Create registry", "description": "Create a new container registry with the specified configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"201": {"description": "Created registry details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrySerializer"}}}}, "400": {"description": "Invalid request parameters"}, "409": {"description": "Registry already exists"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryCreateSerializer"}}}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nregistry = client.cloud.registries.create(\n    project_id=0,\n    region_id=0,\n    name=\"reg-home1\",\n)\nprint(registry.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  registry, err := client.Cloud.Registries.New(context.TODO(), cloud.RegistryNewParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n    Name: \"reg-home1\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", registry.ID)\n}\n"}]}
    "get": {"operationId": "RegistriesHandler.get", "summary": "List registries", "description": "List all container registries in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of registries", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryCollectionSerializer"}}}}, "404": {"description": "Project or region not found"}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nregistry_list = client.cloud.registries.list(\n    project_id=0,\n    region_id=0,\n)\nprint(registry_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  registryList, err := client.Cloud.Registries.List(context.TODO(), cloud.RegistryListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", registryList.Count)\n}\n"}]}
  "/cloud/v1/registries/{project_id}/{region_id}/{registry_id}":
    "get": {"operationId": "RegistryHandler.get", "summary": "Get registry", "description": "Get detailed information about a specific container registry.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Registry details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrySerializer"}}}}, "404": {"description": "Registry not found"}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nregistry = client.cloud.registries.get(\n    registry_id=0,\n    project_id=0,\n    region_id=0,\n)\nprint(registry.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  registry, err := client.Cloud.Registries.Get(\n    context.TODO(),\n    0,\n    cloud.RegistryGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", registry.ID)\n}\n"}]}
    "delete": {"operationId": "RegistryHandler.delete", "summary": "Delete registry", "description": "Delete a specific container registry and all its associated resources.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}], "responses": {"204": {"description": "Everything is OK, the security group was deleted"}, "403": {"description": "Insufficient permissions"}, "404": {"description": "Registry not found"}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.registries.delete(\n    registry_id=0,\n    project_id=0,\n    region_id=0,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Registries.Delete(\n    context.TODO(),\n    0,\n    cloud.RegistryDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v1/registries/{project_id}/{region_id}/{registry_id}/repositories":
    "get": {"operationId": "RegistryRepositoriesHandler.get", "summary": "List registry repositories", "description": "List all repositories in the container registry.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of repositories", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryRepositoryCollectionSerializer"}}}}, "404": {"description": "Registry not found"}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nregistry_repository_list = client.cloud.registries.repositories.list(\n    registry_id=0,\n    project_id=0,\n    region_id=0,\n)\nprint(registry_repository_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  registryRepositoryList, err := client.Cloud.Registries.Repositories.List(\n    context.TODO(),\n    0,\n    cloud.RegistryRepositoryListParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", registryRepositoryList.Count)\n}\n"}]}
  "/cloud/v1/registries/{project_id}/{region_id}/{registry_id}/repositories/{repository_name}":
    "delete": {"operationId": "RegistryRepositoryHandler.delete", "summary": "Delete registry repository", "description": "Delete a specific repository from the container registry.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}, {"in": "path", "name": "repository_name", "required": true, "description": "Repository name If it contains slash, encode it with URL encoding. e.g. a/b -> a%252Fb", "schema": {"type": "string"}}], "responses": {"204": {"description": "Repository has been deleted"}, "404": {"description": "Registry or repository not found"}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.registries.repositories.delete(\n    repository_name=\"repository_name\",\n    project_id=0,\n    region_id=0,\n    registry_id=0,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Registries.Repositories.Delete(\n    context.TODO(),\n    \"repository_name\",\n    cloud.RegistryRepositoryDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      RegistryID: 0,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v1/registries/{project_id}/{region_id}/{registry_id}/repositories/{repository_name}/artifacts":
    "get": {"operationId": "RegistryArtifactsHandler.get", "summary": "List registry artifacts", "description": "List all artifacts in a specific repository.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}, {"in": "path", "name": "repository_name", "required": true, "description": "Repository name If it contains slash, encode it with URL encoding. e.g. a/b -> a%252Fb", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of artifacts", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryArtifactCollectionSerializer"}}}}, "404": {"description": "Registry or repository not found"}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nregistry_artifact_list = client.cloud.registries.artifacts.list(\n    repository_name=\"repository_name\",\n    project_id=0,\n    region_id=0,\n    registry_id=0,\n)\nprint(registry_artifact_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  registryArtifactList, err := client.Cloud.Registries.Artifacts.List(\n    context.TODO(),\n    \"repository_name\",\n    cloud.RegistryArtifactListParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      RegistryID: 0,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", registryArtifactList.Count)\n}\n"}]}
  "/cloud/v1/registries/{project_id}/{region_id}/{registry_id}/repositories/{repository_name}/artifacts/{digest}":
    "delete": {"operationId": "RegistryArtifactHandler.delete", "summary": "Delete registry artifact", "description": "Delete a specific artifact from a repository.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}, {"in": "path", "name": "repository_name", "required": true, "description": "Repository name If it contains slash, encode it with URL encoding. e.g. a/b -> a%252Fb", "schema": {"type": "string"}}, {"in": "path", "name": "digest", "required": true, "description": "Artifact digest", "schema": {"type": "string"}}], "responses": {"204": {"description": "Artifact has been deleted"}, "404": {"description": "Registry, repository, or artifact not found"}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.registries.artifacts.delete(\n    digest=\"digest\",\n    project_id=0,\n    region_id=0,\n    registry_id=0,\n    repository_name=\"repository_name\",\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Registries.Artifacts.Delete(\n    context.TODO(),\n    \"digest\",\n    cloud.RegistryArtifactDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      RegistryID: 0,\n      RepositoryName: \"repository_name\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  ? "/cloud/v1/registries/{project_id}/{region_id}/{registry_id}/repositories/{repository_name}/artifacts/{digest}/tags/{tag_name}"
  : "delete": {"operationId": "RegistryTagHandler.delete", "summary": "Delete registry tag", "description": "Delete a specific tag from an artifact.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}, {"in": "path", "name": "repository_name", "required": true, "description": "Repository name If it contains slash, encode it with URL encoding. e.g. a/b -> a%252Fb", "schema": {"type": "string"}}, {"in": "path", "name": "digest", "required": true, "description": "Artifact digest", "schema": {"type": "string"}}, {"in": "path", "name": "tag_name", "required": true, "description": "Tag name", "schema": {"type": "string"}}], "responses": {"204": {"description": "Tag has been deleted"}, "404": {"description": "Registry, repository, artifact, or tag not found"}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.registries.tags.delete(\n    tag_name=\"tag_name\",\n    project_id=0,\n    region_id=0,\n    registry_id=0,\n    repository_name=\"repository_name\",\n    digest=\"digest\",\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Registries.Tags.Delete(\n    context.TODO(),\n    \"tag_name\",\n    cloud.RegistryTagDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      RegistryID: 0,\n      RepositoryName: \"repository_name\",\n      Digest: \"digest\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v1/registries/{project_id}/{region_id}/{registry_id}/resize":
    "patch": {"operationId": "RegistryResizeHandler.patch", "summary": "Resize registry", "description": "Update the size of a container registry.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Updated registry details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrySerializer"}}}}, "404": {"description": "Registry not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryResizeSerializer"}}}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nregistry = client.cloud.registries.resize(\n    registry_id=0,\n    project_id=0,\n    region_id=0,\n)\nprint(registry.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  registry, err := client.Cloud.Registries.Resize(\n    context.TODO(),\n    0,\n    cloud.RegistryResizeParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", registry.ID)\n}\n"}]}
  "/cloud/v1/registries/{project_id}/{region_id}/{registry_id}/users":
    "post": {"operationId": "RegistryUsersHandler.post", "summary": "Create registry user", "description": "Create a new user for accessing the container registry.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}], "responses": {"201": {"description": "Created user details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryUserCreateResponseSerializer"}}}}, "404": {"description": "Registry not found"}, "409": {"description": "User already exists"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryUserCreateSerializer"}}}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nregistry_user_created = client.cloud.registries.users.create(\n    registry_id=0,\n    project_id=0,\n    region_id=0,\n    duration=14,\n    name=\"user1\",\n)\nprint(registry_user_created.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  registryUserCreated, err := client.Cloud.Registries.Users.New(\n    context.TODO(),\n    0,\n    cloud.RegistryUserNewParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      Duration: 14,\n      Name: \"user1\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", registryUserCreated.ID)\n}\n"}]}
    "get": {"operationId": "RegistryUsersHandler.get", "summary": "List registry users", "description": "List all users with access to the container registry.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of users", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryUserCollectionSerializer"}}}}, "404": {"description": "Registry not found"}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nregistry_user_list = client.cloud.registries.users.list(\n    registry_id=0,\n    project_id=0,\n    region_id=0,\n)\nprint(registry_user_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  registryUserList, err := client.Cloud.Registries.Users.List(\n    context.TODO(),\n    0,\n    cloud.RegistryUserListParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", registryUserList.Count)\n}\n"}]}
  "/cloud/v1/registries/{project_id}/{region_id}/{registry_id}/users/{user_id}":
    "patch": {"operationId": "RegistryUserHandler.patch", "summary": "Update registry user", "description": "Update the configuration of a specific registry user.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}, {"in": "path", "name": "user_id", "required": true, "description": "User ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Updated user details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryUserSerializer"}}}}, "404": {"description": "Registry or user not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryUserUpdateSerializer"}}}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nregistry_user = client.cloud.registries.users.update(\n    user_id=0,\n    project_id=0,\n    region_id=0,\n    registry_id=0,\n    duration=14,\n)\nprint(registry_user.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  registryUser, err := client.Cloud.Registries.Users.Update(\n    context.TODO(),\n    0,\n    cloud.RegistryUserUpdateParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      RegistryID: 0,\n      Duration: 14,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", registryUser.ID)\n}\n"}]}
    "delete": {"operationId": "RegistryUserHandler.delete", "summary": "Delete registry user", "description": "Delete a specific user from the container registry.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}, {"in": "path", "name": "user_id", "required": true, "description": "User ID", "schema": {"type": "integer"}}], "responses": {"204": {"description": "User has been deleted"}, "404": {"description": "Registry or user not found"}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.registries.users.delete(\n    user_id=0,\n    project_id=0,\n    region_id=0,\n    registry_id=0,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Registries.Users.Delete(\n    context.TODO(),\n    0,\n    cloud.RegistryUserDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      RegistryID: 0,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v1/registries/{project_id}/{region_id}/{registry_id}/users/{user_id}/refresh_secret":
    "post": {"operationId": "RegistryRefreshSecretHandler.post", "summary": "Refresh registry user secret", "description": "Generate a new secret for a specific registry user.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}, {"in": "path", "name": "user_id", "required": true, "description": "User ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Updated user details with new secret", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryUserUpdateResponseSerializer"}}}}, "404": {"description": "Registry or user not found"}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nresponse = client.cloud.registries.users.refresh_secret(\n    user_id=0,\n    project_id=0,\n    region_id=0,\n    registry_id=0,\n)\nprint(response.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  response, err := client.Cloud.Registries.Users.RefreshSecret(\n    context.TODO(),\n    0,\n    cloud.RegistryUserRefreshSecretParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      RegistryID: 0,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", response.ID)\n}\n"}]}
  "/cloud/v1/registries/{project_id}/{region_id}/{registry_id}/users/batch":
    "post": {"operationId": "RegistryBatchUsersHandler.post", "summary": "Batch create registry users", "description": "Create multiple users for accessing the container registry in a single request.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "registry_id", "required": true, "description": "Registry ID", "schema": {"type": "integer"}}], "responses": {"201": {"description": "List of created users", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryUserCreateResponseSerializer"}}}}, "409": {"description": "One or more users already exist"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistryBatchUsersCreateSerializer"}}}}, "tags": ["Registry"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nregistry_user_created = client.cloud.registries.users.create_multiple(\n    registry_id=0,\n    project_id=0,\n    region_id=0,\n    users=[{\n        \"duration\": -1,\n        \"name\": \"user1\",\n    }],\n)\nprint(registry_user_created.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  registryUserCreated, err := client.Cloud.Registries.Users.NewMultiple(\n    context.TODO(),\n    0,\n    cloud.RegistryUserNewMultipleParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      Users: []cloud.RegistryUserNewMultipleParamsUser{cloud.RegistryUserNewMultipleParamsUser{\n        Duration: -1,\n        Name: \"user1\",\n      }},\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", registryUserCreated.ID)\n}\n"}]}
  "/cloud/v1/registries/{project_id}/{region_id}/check_limits":
    "post": {"operationId": "RegistyCheckLimitsHandler.post", "summary": "Check registry quota", "description": "Check if the registry creation request exceeds any quotas.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Dictionary of exceeding quotas", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegionalDiffQuotasSchema"}}}}, "400": {"description": "Invalid request parameters"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CheckQuotasBeforeRegistryCreation"}}}}, "tags": ["Registry"]}
  "/cloud/v1/bm_reservation_flavors/{region_id}":
    "get": {"operationId": "BmReservationFlavorsViewSet.get", "summary": "List bare metal flavors available for reservation", "description": "List all bare metal flavors that are available for reservation in the specified region.", "parameters": [{"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "client_id", "required": false, "description": "Client identifier. Must be used for users w/o `client_id` in jwt", "schema": {"type": "integer"}}, {"in": "query", "name": "disabled", "required": false, "description": "Flag for filtering disabled flavors in the region. Defaults to true", "schema": {"type": "boolean"}}, {"in": "query", "name": "ensure_cached", "required": false, "description": "None", "schema": {"type": "string"}}, {"in": "query", "name": "windows_os", "required": false, "description": "Set to true to get only flavors with Windows OS, false to get only with Linux OS, None option to without the OS filter. Defaults to none.", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of bare metal flavors", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BmReservationFlavorSchemaList"}}}}}, "tags": ["Reservations"]}
  "/cloud/v1/pricing/{region_id}/billing_reservation":
    "post": {"operationId": "BillingReservationPricingViewSet.post", "summary": "Get reservation price features", "description": "Response all price features for reservation from active billing plat current user or use query filter.\n\nFor calculate discount of reservation compare price and `over_commit_price`", "parameters": [{"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BillingReservationPricingResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BillingReservationPricingRequestSerializer"}}}}, "tags": ["Reservations"]}
  "/cloud/v1/reservations":
    "post": {"operationId": "ReservationViewSet.post", "summary": "Create reservation", "description": "", "parameters": [], "responses": {"201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BillingReservationItemResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateBillingReservationRequestSerializer"}}}}, "tags": ["Reservations"]}
    "get": {"operationId": "ReservationViewSet.get", "summary": "List reservations", "description": "", "parameters": [{"in": "query", "name": "activated_from", "required": false, "description": "Lower bound, starting from what date the reservation was/will be activated", "schema": {"description": "Lower bound, starting from what date the reservation was/will be activated", "format": "date", "title": "Activated From", "type": "string"}}, {"in": "query", "name": "activated_to", "required": false, "description": "High bound, before what date the reservation was/will be activated", "schema": {"description": "High bound, before what date the reservation was/will be activated", "format": "date", "title": "Activated To", "type": "string"}}, {"in": "query", "name": "created_from", "required": false, "description": "Lower bound the filter, showing result(s) equal to or greater than date the reservation was created", "schema": {"description": "Lower bound the filter, showing result(s) equal to or greater than date the reservation was created", "format": "date-time", "title": "Created From", "type": "string"}}, {"in": "query", "name": "created_to", "required": false, "description": "High bound the filter, showing result(s) equal to or less date the reservation was created", "schema": {"description": "High bound the filter, showing result(s) equal to or less date the reservation was created", "format": "date-time", "title": "Created To", "type": "string"}}, {"in": "query", "name": "deactivated_from", "required": false, "description": "Lower bound, starting from what date the reservation was/will be deactivated", "schema": {"description": "Lower bound, starting from what date the reservation was/will be deactivated", "format": "date", "title": "Deactivated From", "type": "string"}}, {"in": "query", "name": "deactivated_to", "required": false, "description": "High bound, before what date the reservation was/will be deactivated", "schema": {"description": "High bound, before what date the reservation was/will be deactivated", "format": "date", "title": "Deactivated To", "type": "string"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit of reservation list page", "schema": {"default": 10, "description": "Limit of reservation list page", "minimum": 1, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "metric_name", "required": false, "description": "Name from billing features for specific resource", "schema": {"description": "Name from billing features for specific resource", "title": "Metric Name", "type": "string"}}, {"in": "query", "name": "offset", "required": false, "description": "Offset in reservation list", "schema": {"default": 0, "description": "Offset in reservation list", "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Order by field and direction.", "schema": {"$ref": "#/components/schemas/BillingReservationOrderByChoices", "default": "created_at.desc", "description": "Order by field and direction.", "examples": ["active_from.asc", "created_at.desc"]}}, {"in": "query", "name": "region_id", "required": false, "description": "Region for reservation", "schema": {"description": "Region for reservation", "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "status", "required": false, "description": "Field for fixed a status by reservation workflow", "schema": {"description": "Field for fixed a status by reservation workflow", "items": {"$ref": "#/components/schemas/BillingReservationStatusByName"}, "title": "Status", "type": "array"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BillingReservationCollectionResponseSerializer"}}}}}, "tags": ["Reservations"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.billing_reservations.list()\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package
            main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.BillingReservations.List(context.TODO(), cloud.BillingReservationListParams{\n\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/reservations/{reservation_id}":
    "get": {"operationId": "ReservationItemViewSet.get", "summary": "Get reservation", "description": "", "parameters": [{"in": "path", "name": "reservation_id", "required": true, "description": "ID of the reservation", "schema": {"description": "ID of the reservation", "title": "Reservation Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BillingReservationItemResponseSerializer"}}}}}, "tags": ["Reservations"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nbilling_reservation = client.cloud.billing_reservations.get(\n    0,\n)\nprint(billing_reservation.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  billingReservation, err := client.Cloud.BillingReservations.Get(context.TODO(), 0)\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", billingReservation.ID)\n}\n"}]}
    "delete": {"operationId": "ReservationItemViewSet.delete", "summary": "Delete reservation", "description": "", "parameters": [{"in": "path", "name": "reservation_id", "required": true, "description": "ID of the reservation", "schema": {"description": "ID of the reservation", "title": "Reservation Id", "type": "integer"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Reservations"]}
  "/cloud/v1/pricing/{project_id}/{region_id}/reserved_fixed_ips":
    "post": {"operationId": "ReservedFixedIpPricingPreviewHandler.post", "summary": "Preview reserved fixed IP price", "description": "Preview the billing price for a reserved fixed IP.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateReservedFixedIpSerializer"}}}}, "tags": ["Reserved IPs"]}
  "/cloud/v1/reserved_fixed_ips/{project_id}/{region_id}":
    "post": {"operationId": "ReservedFixedIPsViewSet.post", "summary": "Create reserved fixed IP", "description": "Create a new reserved fixed IP with the specified configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateReservedFixedIpSerializer"}}}}, "tags": ["Reserved IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.reserved_fixed_ips.create(\n    project_id=0,\n    region_id=0,\n    type=\"external\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.ReservedFixedIPs.New(context.TODO(), cloud.ReservedFixedIPNewParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "ReservedFixedIPsViewSet.get", "summary": "List reserved fixed IPs", "description": "List all reserved fixed IPs in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "available_only", "required": false, "description": "Set to true if the response should only list IP addresses that are not attached to any instance", "schema": {"type": "boolean"}}, {"in": "query", "name": "device_id", "required": false, "description": "Filter IPs by device ID it is attached to", "schema": {"type": "string"}}, {"in": "query", "name": "external_only", "required": false, "description": "Set to true if the response should only list public IP addresses", "schema": {"type": "boolean"}}, {"in": "query", "name": "internal_only", "required": false, "description": "Set to true if the response should only list private IP addresses", "schema": {"type": "boolean"}}, {"in": "query", "name": "ip_address", "required": false, "description": "An IPv4 address to filter results by. Regular expression allowed", "schema": {"type": "string"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit the number of returned IPs", "schema": {"type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Offset value is used to exclude the first set of records from the result", "schema": {"type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Ordering reserved fixed IP list result by name, status, `updated_at`, `created_at` or `fixed_ip_address` fields and directions (status.asc), default is \"`fixed_ip_address`.asc\"", "schema": {"type": "string"}}, {"in": "query", "name": "vip_only", "required": false, "description": "Set to true if the response should only list VIPs", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of reserved fixed IPs", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ReservedFixedIPSerializerList"}}}}}, "tags": ["Reserved IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.reserved_fixed_ips.list(\n    project_id=0,\n    region_id=0,\n)\npage = page.results[0]\nprint(page.network_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.ReservedFixedIPs.List(context.TODO(), cloud.ReservedFixedIPListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/reserved_fixed_ips/{project_id}/{region_id}/{port_id}":
    "get": {"operationId": "ReservedFixedIPViewSet.get", "summary": "Get reserved fixed IP", "description": "Get detailed information about a specific reserved fixed IP.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "port_id", "required": true, "description": "Port ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Reserved fixed IP details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ReservedFixedIPSerializer"}}}}}, "tags": ["Reserved IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nreserved_fixed_ip = client.cloud.reserved_fixed_ips.get(\n    port_id=\"port_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(reserved_fixed_ip.network_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  reservedFixedIP, err := client.Cloud.ReservedFixedIPs.Get(\n    context.TODO(),\n    \"port_id\",\n    cloud.ReservedFixedIPGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", reservedFixedIP.NetworkID)\n}\n"}]}
    "patch": {"operationId": "ReservedFixedIPViewSet.patch", "summary": "Update reserved fixed IP", "description": "Update the VIP status of a reserved fixed IP.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "port_id", "required": true, "description": "Port ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Updated reserved fixed IP details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ReservedFixedIPSerializer"}}}}, "404": {"description": "Reserved fixed IP not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PatchReservedFixedIPSerializer"}}}}, "tags": ["Reserved IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nreserved_fixed_ip = client.cloud.reserved_fixed_ips.update(\n    port_id=\"port_id\",\n    project_id=0,\n    region_id=0,\n    is_vip=True,\n)\nprint(reserved_fixed_ip.network_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  reservedFixedIP, err := client.Cloud.ReservedFixedIPs.Update(\n    context.TODO(),\n    \"port_id\",\n    cloud.ReservedFixedIPUpdateParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      IsVip: true,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", reservedFixedIP.NetworkID)\n}\n"}]}
    "delete": {"operationId": "ReservedFixedIPViewSet.delete", "summary": "Delete reserved fixed IP", "description": "Delete a specific reserved fixed IP and all its associated resources.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "port_id", "required": true, "description": "Port ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Reserved IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.reserved_fixed_ips.delete(\n    port_id=\"port_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.ReservedFixedIPs.Delete(\n    context.TODO(),\n    \"port_id\",\n    cloud.ReservedFixedIPDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/reserved_fixed_ips/{project_id}/{region_id}/{port_id}/available_devices":
    "get": {"operationId": "ReservedFixedIPAddressPairsAvailableDevicesViewSet.get", "summary": "List VIP available ports", "description": "List all instance ports that are available for connecting to a VIP.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "port_id", "required": true, "description": "Port ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of available instances", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VIPAttachCandidateSerializerList"}}}}}, "tags": ["Reserved IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ncandidate_port_list = client.cloud.reserved_fixed_ips.vip.list_candidate_ports(\n    port_id=\"port_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(candidate_port_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  candidatePortList, err := client.Cloud.ReservedFixedIPs.Vip.ListCandidatePorts(\n    context.TODO(),\n    \"port_id\",\n    cloud.ReservedFixedIPVipListCandidatePortsParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", candidatePortList.Count)\n}\n"}]}
  "/cloud/v1/reserved_fixed_ips/{project_id}/{region_id}/{port_id}/connected_devices":
    "get": {"operationId": "ReservedFixedIPAddressPairsViewSet.get", "summary": "List VIP connected ports", "description": "List all instance ports that share a VIP.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "port_id", "required": true, "description": "Port ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of connected instances", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConnectedDevicesVIPSerializerList"}}}}}, "tags": ["Reserved IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nconnected_port_list = client.cloud.reserved_fixed_ips.vip.list_connected_ports(\n    port_id=\"port_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(connected_port_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  connectedPortList, err := client.Cloud.ReservedFixedIPs.Vip.ListConnectedPorts(\n    context.TODO(),\n    \"port_id\",\n    cloud.ReservedFixedIPVipListConnectedPortsParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", connectedPortList.Count)\n}\n"}]}
    "put": {"operationId": "ReservedFixedIPAddressPairsViewSet.put", "summary": "Replace VIP connected ports", "description": "Replace the list of instance ports that share a VIP.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "port_id", "required": true, "description": "Port ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Updated list of connected instances", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConnectedDevicesVIPSerializerList"}}}}, "404": {"description": "VIP not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PortIDsForVIPSerializer"}}}}, "tags": ["Reserved IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nconnected_port_list = client.cloud.reserved_fixed_ips.vip.replace_connected_ports(\n    port_id=\"port_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(connected_port_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  connectedPortList, err := client.Cloud.ReservedFixedIPs.Vip.ReplaceConnectedPorts(\n    context.TODO(),\n    \"port_id\",\n    cloud.ReservedFixedIPVipReplaceConnectedPortsParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", connectedPortList.Count)\n}\n"}]}
    "patch": {"operationId": "ReservedFixedIPAddressPairsViewSet.patch", "summary": "Add VIP connected port", "description": "Add instance ports to share a VIP.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "port_id", "required": true, "description": "Port ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Updated list of connected instances", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConnectedDevicesVIPSerializerList"}}}}, "404": {"description": "Reserved fixed IP was not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PortIDsForVIPSerializer"}}}}, "tags": ["Reserved IPs"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nconnected_port_list = client.cloud.reserved_fixed_ips.vip.update_connected_ports(\n    port_id=\"port_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(connected_port_list.count)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  connectedPortList, err := client.Cloud.ReservedFixedIPs.Vip.UpdateConnectedPorts(\n    context.TODO(),\n    \"port_id\",\n    cloud.ReservedFixedIPVipUpdateConnectedPortsParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", connectedPortList.Count)\n}\n"}]}
  "/cloud/v1/routers/{project_id}/{region_id}":
    "post": {"operationId": "RouterViewSet.post", "summary": "Create router", "description": "Create a new router with the specified configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateRouterSerializer"}}}}, "tags": ["Routers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.networks.routers.create(\n    project_id=0,\n    region_id=0,\n    name=\"my_wonderful_router\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Networks.Routers.New(context.TODO(), cloud.NetworkRouterNewParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n    Name: \"my_wonderful_router\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "RouterViewSet.get", "summary": "List routers", "description": "List all routers in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit the number of returned routers", "schema": {"type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Offset value is used to exclude the first set of records from the result", "schema": {"type": "integer"}}], "responses": {"200": {"description": "List of routers", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RouterSerializerList"}}}}}, "tags": ["Routers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.networks.routers.list(\n    project_id=0,\n    region_id=0,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Networks.Routers.List(context.TODO(), cloud.NetworkRouterListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/routers/{project_id}/{region_id}/{router_id}":
    "get": {"operationId": "RouterRouterViewSet.get", "summary": "Get router", "description": "Get detailed information about a specific router.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "router_id", "required": true, "description": "Router ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Router details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RouterSerializer"}}}}}, "tags": ["Routers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nrouter = client.cloud.networks.routers.get(\n    router_id=\"router_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(router.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  router, err := client.Cloud.Networks.Routers.Get(\n    context.TODO(),\n    \"router_id\",\n    cloud.NetworkRouterGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", router.ID)\n}\n"}]}
    "patch": {"operationId": "RouterRouterViewSet.patch", "summary": "Update router", "description": "Update the configuration of an existing router.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "router_id", "required": true, "description": "Router ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Updated router details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RouterSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PatchRouterSerializer"}}}}, "tags": ["Routers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nrouter = client.cloud.networks.routers.update(\n    router_id=\"router_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(router.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  router, err := client.Cloud.Networks.Routers.Update(\n    context.TODO(),\n    \"router_id\",\n    cloud.NetworkRouterUpdateParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", router.ID)\n}\n"}]}
    "delete": {"operationId": "RouterRouterViewSet.delete", "summary": "Delete router", "description": "Delete a specific router and all its associated resources.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "router_id", "required": true, "description": "Router ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of created tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Routers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.networks.routers.delete(\n    router_id=\"router_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Networks.Routers.Delete(\n    context.TODO(),\n    \"router_id\",\n    cloud.NetworkRouterDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/routers/{project_id}/{region_id}/{router_id}/attach":
    "post": {"operationId": "RouterAttachViewSet.post", "summary": "Attach subnet to router", "description": "Attach a subnet to an existing router.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "router_id", "required": true, "description": "Router ID", "schema": {"description": "Router ID", "examples": ["ccd5b925-e35c-4611-a511-67ab503104c8"], "format": "uuid4", "title": "Router Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RouterSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddRouterInterfaceSerializer"}}}}, "tags": ["Routers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nrouter = client.cloud.networks.routers.attach_subnet(\n    router_id=\"ccd5b925-e35c-4611-a511-67ab503104c8\",\n    project_id=1,\n    region_id=1,\n    subnet_id=\"subnet_id\",\n)\nprint(router.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  router, err := client.Cloud.Networks.Routers.AttachSubnet(\n    context.TODO(),\n    \"ccd5b925-e35c-4611-a511-67ab503104c8\",\n    cloud.NetworkRouterAttachSubnetParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n      SubnetID: \"subnet_id\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", router.ID)\n}\n"}]}
  "/cloud/v1/routers/{project_id}/{region_id}/{router_id}/detach":
    "post": {"operationId": "RouterDetachViewSet.post", "summary": "Detach subnet from router", "description": "Detach a subnet from an existing router.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "router_id", "required": true, "description": "Router ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Updated router details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RouterSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SubnetIdSerializer"}}}}, "tags": ["Routers"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nrouter = client.cloud.networks.routers.detach_subnet(\n    router_id=\"router_id\",\n    project_id=0,\n    region_id=0,\n    subnet_id=\"subnet_id\",\n)\nprint(router.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  router, err := client.Cloud.Networks.Routers.DetachSubnet(\n    context.TODO(),\n    \"router_id\",\n    cloud.NetworkRouterDetachSubnetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      SubnetID: cloud.SubnetIDParam{\n        SubnetID: \"subnet_id\",\n      },\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", router.ID)\n}\n"}]}
  "/cloud/v1/ssh_keys/{project_id}":
    "post": {"operationId": "SSHKeyCollectionViewSet.post", "summary": "Add or generate SSH key", "description": "To generate a key, omit the `public_key` parameter from the request body", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}], "responses": {"201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreatedSSHKeySerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateSSHKeySerializer"}}}}, "tags": ["SSH Keys"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nssh_key_created = client.cloud.ssh_keys.create(\n    project_id=1,\n    name=\"my-ssh-key\",\n)\nprint(ssh_key_created.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  sshKeyCreated, err := client.Cloud.SSHKeys.New(context.TODO(), cloud.SSHKeyNewParams{\n    ProjectID: gcore.Int(1),\n    Name: \"my-ssh-key\",\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", sshKeyCreated.ID)\n}\n"}]}
    "get": {"operationId": "SSHKeyCollectionViewSet.get", "summary": "List SSH keys", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Maximum number of SSH keys to return", "schema": {"default": 10, "description": "Maximum number of SSH keys to return", "examples": [100], "maximum": 1000, "minimum": 1, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Offset for pagination", "schema": {"default": 0, "description": "Offset for pagination", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Sort order for the SSH keys", "schema": {"$ref": "#/components/schemas/SSHKeyOrderByChoices", "default": "created_at.desc", "description": "Sort order for the SSH keys", "examples": ["created_at.desc"]}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SSHKeyCollectionSerializer"}}}}}, "tags": ["SSH Keys"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.ssh_keys.list(\n    project_id=1,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.SSHKeys.List(context.TODO(), cloud.SSHKeyListParams{\n    ProjectID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/ssh_keys/{project_id}/{ssh_key_id}":
    "get": {"operationId": "SSHKeyViewSet.get", "summary": "Get SSH key", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "ssh_key_id", "required": true, "description": "SSH key ID", "schema": {"description": "SSH key ID", "examples": ["36a7a97a-0672-4911-8f2b-92cd4e5b0d91"], "format": "uuid4", "title": "Ssh Key Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SSHKeySerializer"}}}}}, "tags": ["SSH Keys"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nssh_key = client.cloud.ssh_keys.get(\n    ssh_key_id=\"36a7a97a-0672-4911-8f2b-92cd4e5b0d91\",\n    project_id=1,\n)\nprint(ssh_key.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  sshKey, err := client.Cloud.SSHKeys.Get(\n    context.TODO(),\n    \"36a7a97a-0672-4911-8f2b-92cd4e5b0d91\",\n    cloud.SSHKeyGetParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", sshKey.ID)\n}\n"}]}
    "patch": {"operationId": "SSHKeyViewSet.patch", "summary": "Share or unshare SSH key with users", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "ssh_key_id", "required": true, "description": "SSH key ID", "schema": {"description": "SSH key ID", "examples": ["36a7a97a-0672-4911-8f2b-92cd4e5b0d91"], "format": "uuid4", "title": "Ssh Key Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SSHKeySerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareSSHKeySerializer"}}}}, "tags": ["SSH Keys"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nssh_key = client.cloud.ssh_keys.update(\n    ssh_key_id=\"36a7a97a-0672-4911-8f2b-92cd4e5b0d91\",\n    project_id=1,\n    shared_in_project=True,\n)\nprint(ssh_key.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  sshKey, err := client.Cloud.SSHKeys.Update(\n    context.TODO(),\n    \"36a7a97a-0672-4911-8f2b-92cd4e5b0d91\",\n    cloud.SSHKeyUpdateParams{\n      ProjectID: gcore.Int(1),\n      SharedInProject: true,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", sshKey.ID)\n}\n"}]}
    "delete": {"operationId": "SSHKeyViewSet.delete", "summary": "Delete SSH key", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "ssh_key_id", "required": true, "description": "SSH key ID", "schema": {"description": "SSH key ID", "examples": ["36a7a97a-0672-4911-8f2b-92cd4e5b0d91"], "format": "uuid4", "title": "Ssh Key Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["SSH Keys"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.ssh_keys.delete(\n    ssh_key_id=\"36a7a97a-0672-4911-8f2b-92cd4e5b0d91\",\n    project_id=1,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.SSHKeys.Delete(\n    context.TODO(),\n    \"36a7a97a-0672-4911-8f2b-92cd4e5b0d91\",\n    cloud.SSHKeyDeleteParams{\n      ProjectID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v2/keypairs":
    "post": {"operationId": "KeypairListV2ViewSet.post", "summary": "Import or generate keypair", "description": "To generate a keypair do not use the `public_key` parameter in the request body", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/KeypairSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateKeypairV2Serializer"}}}}, "tags": ["SSH Keys"]}
    "get": {"operationId": "KeypairListV2ViewSet.get", "summary": "List keypairs", "description": "", "parameters": [{"in": "query", "name": "project_id", "required": false, "description": "Project ID. It's required with rights lower than a cloud administrator.", "schema": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Project ID. It's required with rights lower than a cloud administrator.", "examples": [100], "title": "Project Id"}}, {"in": "query", "name": "user_id", "required": false, "description": "User ID. To use it, you need set project id or use cloud administrator rights.", "schema": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "User ID. To use it, you need set project id or use cloud administrator rights.", "examples": [5], "title": "User Id"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListKeypairSerializer"}}}}}, "deprecated": true, "tags": ["SSH Keys"]}
  "/cloud/v2/keypairs/{keypair_id}":
    "get": {"operationId": "KeypairInstanceViewSetV2.get", "summary": "Get keypair", "description": "", "parameters": [{"in": "path", "name": "keypair_id", "required": true, "description": "Keypair ID", "schema": {"description": "Keypair ID", "examples": ["36a7a97a-0672-4911-8f2b-92cd4e5b0d91"], "title": "Keypair Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/KeypairSerializer"}}}}}, "deprecated": true, "tags": ["SSH Keys"]}
    "delete": {"operationId": "KeypairInstanceViewSetV2.delete", "summary": "Delete keypair", "description": "", "parameters": [{"in": "path", "name": "keypair_id", "required": true, "description": "Keypair ID", "schema": {"description": "Keypair ID", "examples": ["36a7a97a-0672-4911-8f2b-92cd4e5b0d91"], "title": "Keypair Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "tags": ["SSH Keys"]}
  "/cloud/v1/keypairs/{project_id}/{region_id}":
    "post": {"operationId": "KeypairViewSet.post", "summary": "Import or generate keypair", "description": "To generate a keypair do not use the `public_key` parameter in the request body", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [123], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/KeypairSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateKeypairSerializer"}}}}, "tags": ["SSH Keys"]}
    "get": {"operationId": "KeypairViewSet.get", "summary": "List keypairs", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [123], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListKeypairSerializer"}}}}}, "deprecated": true, "tags": ["SSH Keys"]}
  "/cloud/v1/keypairs/{project_id}/{region_id}/{keypair_id}":
    "get": {"operationId": "KeypairInstanceViewSet.get", "summary": "Get keypair", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [123], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "keypair_id", "required": true, "description": "Keypair ID", "schema": {"description": "Keypair ID", "examples": ["36a7a97a-0672-4911-8f2b-92cd4e5b0d91"], "title": "Keypair Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/KeypairSerializer"}}}}}, "deprecated": true, "tags": ["SSH Keys"]}
    "delete": {"operationId": "KeypairInstanceViewSet.delete", "summary": "Delete keypair", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [123], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "keypair_id", "required": true, "description": "Keypair ID", "schema": {"description": "Keypair ID", "examples": ["36a7a97a-0672-4911-8f2b-92cd4e5b0d91"], "title": "Keypair Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "tags": ["SSH Keys"]}
  "/cloud/v1/keypairs/{project_id}/{region_id}/{keypair_id}/share":
    "patch": {"operationId": "ShareKeypairHandler.patch", "summary": "Share keypair to view for all users in project", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [123], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "keypair_id", "required": true, "description": "Keypair ID", "schema": {"description": "Keypair ID", "examples": ["36a7a97a-0672-4911-8f2b-92cd4e5b0d91"], "title": "Keypair Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/KeypairSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareKeypairSerializer"}}}}, "tags": ["SSH Keys"]}
  "/cloud/v2/secrets/{project_id}/{region_id}":
    "post": {"operationId": "SecretsViewSetV2.post", "summary": "Create secret", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateSecretSerializerV2"}}}}, "tags": ["Secrets"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.secrets.upload_tls_certificate(\n    project_id=1,\n    region_id=1,\n    name=\"Load balancer certificate #1\",\n    payload={\n        \"certificate\": \"<certificate>\",\n        \"certificate_chain\": \"<certificate_chain>\",\n        \"private_key\": \"<private_key>\",\n    },\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Secrets.UploadTlsCertificate(context.TODO(), cloud.SecretUploadTlsCertificateParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n    Name: \"Load balancer certificate #1\",\n    Payload: cloud.SecretUploadTlsCertificateParamsPayload{\n      Certificate: \"<certificate>\",\n      CertificateChain: \"<certificate_chain>\",\n      PrivateKey: \"<private_key>\",\n    },\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/secrets/{project_id}/{region_id}":
    "get": {"operationId": "SecretsViewSet.get", "summary": "List secrets", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SecretCollectionSerializer"}}}}}, "tags": ["Secrets"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.secrets.list(\n    project_id=1,\n    region_id=1,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Secrets.List(context.TODO(), cloud.SecretListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
    "post": {"operationId": "SecretsViewSet.post", "summary": "Create secret", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateSecretSerializer"}}}}, "tags": ["Secrets"]}
  "/cloud/v1/secrets/{project_id}/{region_id}/{secret_id}":
    "get": {"operationId": "SecretViewSet.get", "summary": "Get secret", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "secret_id", "required": true, "description": "Secret ID", "schema": {"description": "Secret ID", "examples": ["bfc7824b-31b6-4a28-a0c4-7df137139215"], "format": "uuid4", "title": "Secret Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SecretSerializer"}}}}}, "tags": ["Secrets"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nsecret = client.cloud.secrets.get(\n    secret_id=\"bfc7824b-31b6-4a28-a0c4-7df137139215\",\n    project_id=1,\n    region_id=1,\n)\nprint(secret.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  secret, err := client.Cloud.Secrets.Get(\n    context.TODO(),\n    \"bfc7824b-31b6-4a28-a0c4-7df137139215\",\n    cloud.SecretGetParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", secret.ID)\n}\n"}]}
    "delete": {"operationId": "SecretViewSet.delete", "summary": "Delete secret", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "secret_id", "required": true, "description": "Secret ID", "schema": {"description": "Secret ID", "examples": ["bfc7824b-31b6-4a28-a0c4-7df137139215"], "format": "uuid4", "title": "Secret Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Secrets"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.secrets.delete(\n    secret_id=\"bfc7824b-31b6-4a28-a0c4-7df137139215\",\n    project_id=1,\n    region_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Secrets.Delete(\n    context.TODO(),\n    \"bfc7824b-31b6-4a28-a0c4-7df137139215\",\n    cloud.SecretDeleteParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/securitygrouprules/{project_id}/{region_id}/{rule_id}":
    "put": {"operationId": "SecurityGroupRuleInstanceViewSet.put", "summary": "Update security group rule", "description": "Update the configuration of an existing security group rule.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "rule_id", "required": true, "description": "Security group rule ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Updated rule details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SecurityGroupRuleSerializer"}}}}, "404": {"description": "Security group rule not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChangeSecurityGroupRuleSerializer"}}}}, "tags": ["Security Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nsecurity_group_rule = client.cloud.security_groups.rules.replace(\n    rule_id=\"rule_id\",\n    project_id=0,\n    region_id=0,\n    direction=\"ingress\",\n    security_group_id=\"00000000-0000-4000-8000-000000000000\",\n)\nprint(security_group_rule.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  securityGroupRule, err := client.Cloud.SecurityGroups.Rules.Replace(\n    context.TODO(),\n    \"rule_id\",\n    cloud.SecurityGroupRuleReplaceParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      Direction: cloud.SecurityGroupRuleReplaceParamsDirectionIngress,\n      SecurityGroupID: \"00000000-0000-4000-8000-000000000000\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", securityGroupRule.ID)\n}\n"}]}
    "delete": {"operationId": "SecurityGroupRuleInstanceViewSet.delete", "summary": "Delete security group rule", "description": "Delete a specific rule from a security group.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "rule_id", "required": true, "description": "Security group rule ID", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK, the security group was deleted"}, "404": {"description": "Security group rule not found"}}, "tags": ["Security Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.security_groups.rules.delete(\n    rule_id=\"rule_id\",\n    project_id=0,\n    region_id=0,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.SecurityGroups.Rules.Delete(\n    context.TODO(),\n    \"rule_id\",\n    cloud.SecurityGroupRuleDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v1/securitygroups/{project_id}/{region_id}":
    "post": {"operationId": "SecurityGroupViewSet.post", "summary": "Create security group", "description": "Create a new security group with the specified configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Created security group details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SecurityGroupSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateSecurityGroupSerializer"}}}}, "tags": ["Security Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nsecurity_group = client.cloud.security_groups.create(\n    project_id=0,\n    region_id=0,\n    security_group={\n        \"name\": \"my_security_group\"\n    },\n)\nprint(security_group.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  securityGroup, err := client.Cloud.SecurityGroups.New(context.TODO(), cloud.SecurityGroupNewParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n    SecurityGroup: cloud.SecurityGroupNewParamsSecurityGroup{\n      Name: \"my_security_group\",\n    },\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", securityGroup.ID)\n}\n"}]}
    "get": {"operationId": "SecurityGroupViewSet.get", "summary": "List security groups", "description": "List all security groups in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit the number of returned security groups", "schema": {"type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Offset value is used to exclude the first set of records from the result", "schema": {"type": "integer"}}, {"in": "query", "name": "tag_key", "required": false, "description": "Filter by tag keys.", "schema": {"type": "array", "items": {"type": "string"}}}, {"in": "query", "name": "tag_key_value", "required": false, "description": "Filter by tag key-value pairs. Must be a valid JSON string.", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of security groups", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SecurityGroupSerializerList"}}}}}, "tags": ["Security Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.security_groups.list(\n    project_id=0,\n    region_id=0,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.SecurityGroups.List(context.TODO(), cloud.SecurityGroupListParams{\n    ProjectID: gcore.Int(0),\n    RegionID: gcore.Int(0),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/securitygroups/{project_id}/{region_id}/{group_id}":
    "get": {"operationId": "SecurityGroupInstanceViewSet.get", "summary": "Get security group", "description": "Get detailed information about a specific security group.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Security group ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Security group details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SecurityGroupSerializer"}}}}}, "tags": ["Security Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nsecurity_group = client.cloud.security_groups.get(\n    group_id=\"group_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(security_group.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  securityGroup, err := client.Cloud.SecurityGroups.Get(\n    context.TODO(),\n    \"group_id\",\n    cloud.SecurityGroupGetParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", securityGroup.ID)\n}\n"}]}
    "patch": {"operationId": "SecurityGroupInstanceViewSet.patch", "summary": "Update security group", "description": "Update the configuration of an existing security group.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Security group ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Updated security group details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SecurityGroupSerializer"}}}}, "400": {"description": "Invalid request parameters"}, "404": {"description": "Security group not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateSecurityGroupSerializer"}}}}, "tags": ["Security Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nsecurity_group = client.cloud.security_groups.update(\n    group_id=\"group_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(security_group.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  securityGroup, err := client.Cloud.SecurityGroups.Update(\n    context.TODO(),\n    \"group_id\",\n    cloud.SecurityGroupUpdateParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", securityGroup.ID)\n}\n"}]}
    "delete": {"operationId": "SecurityGroupInstanceViewSet.delete", "summary": "Delete security group", "description": "Delete a specific security group and all its associated rules.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Security group ID", "schema": {"type": "string"}}], "responses": {"204": {"description": "Everything is OK, the security group was deleted"}, "404": {"description": "Security group not found"}, "409": {"description": "Security group in use"}}, "tags": ["Security Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.security_groups.delete(\n    group_id=\"group_id\",\n    project_id=0,\n    region_id=0,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.SecurityGroups.Delete(\n    context.TODO(),\n    \"group_id\",\n    cloud.SecurityGroupDeleteParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v1/securitygroups/{project_id}/{region_id}/{group_id}/copy":
    "post": {"operationId": "SecurityGroupCopy.post", "summary": "Copy security group", "description": "Create a deep copy of an existing security group.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Security group ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Copied security group details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SecurityGroupSerializer"}}}}, "404": {"description": "Security group not found"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NameSerializerPydantic"}}}}, "tags": ["Security Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nsecurity_group = client.cloud.security_groups.copy(\n    group_id=\"group_id\",\n    project_id=0,\n    region_id=0,\n    name=\"some_name\",\n)\nprint(security_group.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  securityGroup, err := client.Cloud.SecurityGroups.Copy(\n    context.TODO(),\n    \"group_id\",\n    cloud.SecurityGroupCopyParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n      Name: \"some_name\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", securityGroup.ID)\n}\n"}]}
  "/cloud/v1/securitygroups/{project_id}/{region_id}/{group_id}/revert":
    "post": {"operationId": "SecurityGroupRestore.post", "summary": "Revert security group", "description": "Revert a security group to its previous state.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Security group ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Reverted security group details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SecurityGroupSerializer"}}}}, "400": {"description": "Security group cannot be reverted"}, "404": {"description": "Security group not found"}}, "tags": ["Security Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nsecurity_group = client.cloud.security_groups.revert_to_default(\n    group_id=\"group_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(security_group.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  securityGroup, err := client.Cloud.SecurityGroups.RevertToDefault(\n    context.TODO(),\n    \"group_id\",\n    cloud.SecurityGroupRevertToDefaultParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", securityGroup.ID)\n}\n"}]}
  "/cloud/v1/securitygroups/{project_id}/{region_id}/{group_id}/rules":
    "post": {"operationId": "SecurityRulesView.post", "summary": "Add security group rule", "description": "Add a new rule to an existing security group.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Security group ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Created rule details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SecurityGroupRuleSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateSecurityGroupRuleSerializer"}}}}, "tags": ["Security Groups"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nsecurity_group_rule = client.cloud.security_groups.rules.create(\n    group_id=\"group_id\",\n    project_id=0,\n    region_id=0,\n)\nprint(security_group_rule.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  securityGroupRule, err := client.Cloud.SecurityGroups.Rules.New(\n    context.TODO(),\n    \"group_id\",\n    cloud.SecurityGroupRuleNewParams{\n      ProjectID: gcore.Int(0),\n      RegionID: gcore.Int(0),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", securityGroupRule.ID)\n}\n"}]}
  "/cloud/v1/securitygroups/{project_id}/{region_id}/{group_id}/metadata":
    "post": {"operationId": "SecurityGroupMetadataHandler.post", "summary": "Create or update security group tags", "description": "Add or update tags for a security group.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Security group ID", "schema": {"type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RawMetadataSerializer"}}}}, "tags": ["Security Groups"]}
    "get": {"operationId": "SecurityGroupMetadataHandler.get", "summary": "List security group tags", "description": "List all tags associated with a security group.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Security group ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of key-value tags", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagCollectionSerializer"}}}}}, "deprecated": true, "tags": ["Security Groups"]}
    "put": {"operationId": "SecurityGroupMetadataHandler.put", "summary": "Replace security group tags", "description": "Replace all tags for a security group.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Security group ID", "schema": {"type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RawMetadataSerializer"}}}}, "tags": ["Security Groups"]}
  "/cloud/v1/securitygroups/{project_id}/{region_id}/{group_id}/metadata_item":
    "get": {"operationId": "SecurityGroupMetadataItemHandler.get", "summary": "Get security group tag", "description": "Please use `/v1/securitygroups/{`project_id`}/{`region_id`}/{`group_id`}` instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Security group ID", "schema": {"type": "string"}}, {"in": "query", "name": "key", "required": false, "description": "Tag key", "schema": {"type": "string"}}], "responses": {"200": {"description": "Tag details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagSerializer"}}}}}, "deprecated": true, "tags": ["Security Groups"]}
    "delete": {"operationId": "SecurityGroupMetadataItemHandler.delete", "summary": "Delete security group tag", "description": "Please use PATCH `/v1/securitygroups/{`project_id`}/{`region_id`}/{`group_id`}` instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "group_id", "required": true, "description": "Security group ID", "schema": {"type": "string"}}, {"in": "query", "name": "key", "required": false, "description": "Tag key", "schema": {"type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "tags": ["Security Groups"]}
  "/cloud/v1/lifecycle_policy/{project_id}/{region_id}":
    "post": {"operationId": "PoliciesViewSet.post", "summary": "Create snapshot policy", "description": "Create a new snapshot policy with the specified configuration.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LifecyclePolicySerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateLifecyclePolicySerializer"}}}}, "tags": ["Snapshot Schedules"]}
    "get": {"operationId": "PoliciesViewSet.get", "summary": "List snapshot policies", "description": "List all snapshot policies in the specified project and region.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LifecyclePolicyCollectionSerializer"}}}}}, "tags": ["Snapshot Schedules"]}
  "/cloud/v1/lifecycle_policy/{project_id}/{region_id}/{policy_id}":
    "get": {"operationId": "PolicyViewSet.get", "summary": "Get snapshot policy", "description": "Get detailed information about a specific snapshot policy.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "policy_id", "required": true, "description": "Lifecycle policy ID.", "schema": {"description": "Lifecycle policy ID.", "examples": [1], "title": "Policy Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LifecyclePolicySerializer"}}}}}, "tags": ["Snapshot Schedules"]}
    "patch": {"operationId": "PolicyViewSet.patch", "summary": "Update snapshot policy", "description": "Update the configuration of an existing snapshot policy.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "policy_id", "required": true, "description": "Lifecycle policy ID.", "schema": {"description": "Lifecycle policy ID.", "examples": [1], "title": "Policy Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LifecyclePolicySerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateLifecyclePolicySerializer"}}}}, "tags": ["Snapshot Schedules"]}
    "delete": {"operationId": "PolicyViewSet.delete", "summary": "Delete snapshot policy", "description": "Delete a specific snapshot policy and all its associated schedules.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "policy_id", "required": true, "description": "Lifecycle policy ID.", "schema": {"description": "Lifecycle policy ID.", "examples": [1], "title": "Policy Id", "type": "integer"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Snapshot Schedules"]}
  "/cloud/v1/lifecycle_policy/{project_id}/{region_id}/{policy_id}/add_schedules":
    "post": {"operationId": "AddSchedulesToPolicyViewSet.post", "summary": "Add schedules to policy", "description": "Add new schedules to an existing snapshot policy.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "policy_id", "required": true, "description": "Lifecycle policy ID.", "schema": {"description": "Lifecycle policy ID.", "examples": [1], "title": "Policy Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LifecyclePolicySerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddSchedulesSerializer"}}}}, "tags": ["Snapshot Schedules"]}
  "/cloud/v1/lifecycle_policy/{project_id}/{region_id}/{policy_id}/add_volumes_to_policy":
    "put": {"operationId": "AddVolumesInPolicyViewSet.put", "summary": "Add volumes to policy", "description": "Add volumes to an existing snapshot policy.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "policy_id", "required": true, "description": "Lifecycle policy ID.", "schema": {"description": "Lifecycle policy ID.", "examples": [1], "title": "Policy Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LifecyclePolicySerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/VolumeIdsSerializer"}}}}, "tags": ["Snapshot Schedules"]}
  "/cloud/v1/lifecycle_policy/{project_id}/{region_id}/{policy_id}/remove_schedules":
    "post": {"operationId": "RemoveSchedulesFromPolicyViewSet.post", "summary": "Remove schedules from policy", "description": "Remove schedules from an existing snapshot policy.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "policy_id", "required": true, "description": "Lifecycle policy ID.", "schema": {"description": "Lifecycle policy ID.", "examples": [1], "title": "Policy Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LifecyclePolicySerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RemoveScheduleSerializer"}}}}, "tags": ["Snapshot Schedules"]}
  "/cloud/v1/lifecycle_policy/{project_id}/{region_id}/{policy_id}/remove_volumes_from_policy":
    "put": {"operationId": "RemoveVolumesFromPolicyViewSet.put", "summary": "Remove volumes from policy", "description": "Remove volumes from an existing snapshot policy.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "policy_id", "required": true, "description": "Lifecycle policy ID.", "schema": {"description": "Lifecycle policy ID.", "examples": [1], "title": "Policy Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LifecyclePolicySerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/VolumeIdsSerializer"}}}}, "tags": ["Snapshot Schedules"]}
  "/cloud/v1/lifecycle_policy/{project_id}/{region_id}/estimate_max_policy_usage":
    "post": {"operationId": "PolicyCostViewSet.post", "summary": "Check snapshot policy quota", "description": "Calculate the maximum resource usage if all snapshots are created by the policy.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LifecyclePolicyUsageSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateLifecyclePolicySerializer"}}}}, "tags": ["Snapshot Schedules"]}
  "/cloud/v2/pricing/{project_id}/{region_id}/lifecycle_policy":
    "post": {"operationId": "LifecyclePolicyPricingV2ViewSet.post", "summary": "Preview snapshot policy price", "description": "Get the maximum usage cost for resources if the policy creates all snapshots.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LifeCyclePolicyV2ResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PricingLifecyclePolicyV2Serializer"}}}}, "tags": ["Snapshot Schedules"]}
  "/cloud/v1/schedule/{project_id}/{region_id}/{schedule_id}":
    "get": {"operationId": "SnapshotScheduleViewSet.get", "summary": "Get schedule", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "schedule_id", "required": true, "description": "Schedule ID", "schema": {"description": "Schedule ID", "examples": ["1488e2ce-f906-47fb-ba32-c25a3f63df4f"], "title": "Schedule Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ScheduleSerializer"}}}}}, "tags": ["Snapshot Schedules"]}
    "patch": {"operationId": "SnapshotScheduleViewSet.patch", "summary": "Update schedule", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "schedule_id", "required": true, "description": "Schedule ID", "schema": {"description": "Schedule ID", "examples": ["1488e2ce-f906-47fb-ba32-c25a3f63df4f"], "title": "Schedule Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ScheduleSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PatchScheduleSerializer"}}}}, "tags": ["Snapshot Schedules"]}
  "/cloud/v1/pricing/{project_id}/{region_id}/lifecycle_policy":
    "post": {"operationId": "MaxLifecyclePolicyPricingViewSet.post", "summary": "Preview snapshot policy price", "description": "Get maximum usage cost of resources if all snapshots are created by the policy", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateLifecyclePolicySerializer"}}}}, "tags": ["Snapshot Schedules"]}
  "/cloud/v1/pricing/{project_id}/{region_id}/snapshots":
    "post": {"operationId": "SnapshotPricingHandler.post", "summary": "Preview snapshot price", "description": "Preview the billing price for snapshots.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SnapshotPricingRequestSerializer"}}}}, "tags": ["Snapshots"]}
  "/cloud/v1/snapshots/{project_id}/{region_id}":
    "post": {"operationId": "SnapshotViewSet.post", "summary": "Create snapshot", "description": "Create a new snapshot from a volume.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}], "responses": {"200": {"description": "Created task ID", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}, "400": {"description": "Invalid request parameters"}, "403": {"description": "Insufficient permissions"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateSnapshotSerializer"}}}}, "tags": ["Snapshots"]}
    "get": {"operationId": "SnapshotViewSet.get", "summary": "List snapshots", "description": "List all volume snapshots in the specified project and region.\nResults can be filtered by volume, instance, schedule, or lifecycle policy.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "query", "name": "instance_id", "required": false, "description": "Can be used to list snapshots of any volume in a specific server instance", "schema": {"type": "string"}}, {"in": "query", "name": "lifecycle_policy_id", "required": false, "description": "Can be used to list snapshots by lifecycle policy id", "schema": {"type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit the number of returned snapshots", "schema": {"type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Offset value is used to exclude the first set of records from the result", "schema": {"type": "integer"}}, {"in": "query", "name": "schedule_id", "required": false, "description": "Can be used to list snapshots by schedule id", "schema": {"type": "string"}}, {"in": "query", "name": "volume_id", "required": false, "description": "Can be used to list snapshots of a single volume", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of snapshots with their details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SnapshotCollectionSerializer"}}}}}, "tags": ["Snapshots"]}
  "/cloud/v1/snapshots/{project_id}/{region_id}/{snapshot_id}":
    "get": {"operationId": "SnapshotInstanceViewSet.get", "summary": "Get snapshot", "description": "Get detailed information about a specific snapshot.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "snapshot_id", "required": true, "description": "Unique identifier of the snapshot", "schema": {"description": "Unique identifier of the snapshot", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Snapshot Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SnapshotSerializer"}}}}}, "tags": ["Snapshots"]}
    "patch": {"operationId": "SnapshotInstanceViewSet.patch", "summary": "Update snapshot", "description": "Rename snapshot or update tags.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "snapshot_id", "required": true, "description": "Unique identifier of the snapshot", "schema": {"description": "Unique identifier of the snapshot", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Snapshot Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SnapshotSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateSnapshotSerializer"}}}}, "tags": ["Snapshots"]}
    "delete": {"operationId": "SnapshotInstanceViewSet.delete", "summary": "Delete snapshot", "description": "Delete a specific snapshot.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "snapshot_id", "required": true, "description": "Unique identifier of the snapshot", "schema": {"description": "Unique identifier of the snapshot", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Snapshot Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Snapshots"]}
  "/cloud/v1/snapshots/{project_id}/{region_id}/{snapshot_id}/metadata":
    "put": {"operationId": "SnapshotInstanceMetadataViewSet.put", "summary": "Replace snapshot tags", "description": "Replace all tags for a snapshot.\nExisting tags are deleted and replaced with the tags from the request.\nUse PATCH /v1/snapshots/{`project_id`}/{`region_id`}/{`snapshot_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"type": "integer"}}, {"in": "path", "name": "snapshot_id", "required": true, "description": "Snapshot ID", "schema": {"type": "string"}}], "responses": {"200": {"description": "Updated snapshot details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SnapshotSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateTagsSerializer"}}}}, "tags": ["Snapshots"]}
  "/cloud/v1/tasks":
    "get": {"operationId": "TaskViewSet.get", "summary": "List tasks", "description": "", "parameters": [{"in": "query", "name": "from_timestamp", "required": false, "description": "ISO formatted datetime string. Filter the tasks by creation date greater than or equal to `from_timestamp`", "schema": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "ISO formatted datetime string. Filter the tasks by creation date greater than or equal to `from_timestamp`", "title": "From Timestamp"}}, {"in": "query", "name": "is_acknowledged", "required": false, "description": "Filter the tasks by their acknowledgement status", "schema": {"anyOf": ["type": "boolean", "type": "null"], "default": null, "description": "Filter the tasks by their acknowledgement status", "title": "Is Acknowledged"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit the number of returned tasks. Falls back to default of 10 if not specified. Limited by max limit value of 1000", "schema": {"default": 10, "description": "Limit the number of returned tasks. Falls back to default of 10 if not specified. Limited by max limit value of 1000", "examples": [100], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Sorting by creation date. Oldest first, or most recent first", "schema": {"$ref": "#/components/schemas/TaskOrderByChoices", "default": "desc", "description": "Sorting by creation date. Oldest first, or most recent first", "examples": ["asc", "desc"]}}, {"in": "query", "name": "project_id", "required": false, "description": "The project ID to filter the tasks by project. Supports multiple values of kind key=value1&key=value2", "schema": {"anyOf": [{"items": {"type": "integer"}, "type": "array"}, "type": "null"], "default": null, "description": "The project ID to filter the tasks by project. Supports multiple values of kind key=value1&key=value2", "title": "Project Id"}}, {"in": "query", "name": "region_id", "required": false, "description": "The region ID to filter the tasks by region. Supports multiple values of kind key=value1&key=value2", "schema": {"anyOf": [{"items": {"type": "integer"}, "type": "array"}, "type": "null"], "default": null, "description": "The region ID to filter the tasks by region. Supports multiple values of kind key=value1&key=value2", "title": "Region Id"}}, {"in": "query", "name": "sorting", "required": false, "description": "(DEPRECATED Use '`order_by`' instead) Sorting by creation date. Oldest first, or most recent first", "schema": {"$ref": "#/components/schemas/TaskOrderByChoices", "default": "desc", "deprecated": true, "description": "(DEPRECATED Use '`order_by`' instead) Sorting by creation date. Oldest first, or most recent first", "examples": ["asc", "desc"]}}, {"in": "query", "name": "state", "required": false, "description": "Filter the tasks by state. Supports multiple values of kind key=value1&key=value2", "schema": {"anyOf": [{"items": {"$ref": "#/components/schemas/TaskState"}, "type": "array"}, "type": "null"], "default": null, "description": "Filter the tasks by state. Supports multiple values of kind key=value1&key=value2", "title": "State"}}, {"in": "query", "name": "task_type", "required": false, "description": "Filter the tasks by their type one of ['`activate_ddos_profile`', '`attach_bm_to_reserved_fixed_ip`', '`attach_vm_interface`', '`attach_vm_to_reserved_fixed_ip`', '`attach_volume`', '`create_ai_cluster_gpu`', '`create_bm`', '`create_caas_container`', '`create_dbaas_postgres_cluster`', '`create_ddos_profile`', '`create_faas_function`', '`create_faas_namespace`', '`create_fip`', '`create_gpu_virtual_cluster`',
            '`create_image`', '`create_inference_application`', '`create_inference_instance`', '`create_k8s_cluster_pool_v2`', '`create_k8s_cluster_v2`', '`create_l7policy`', '`create_l7rule`', '`create_lblistener`', '`create_lbmember`', '`create_lbpool`', '`create_lbpool_health_monitor`', '`create_loadbalancer`', '`create_network`', '`create_reserved_fixed_ip`', '`create_router`', '`create_secret`', '`create_servergroup`', '`create_sfs`', '`create_snapshot`', '`create_subnet`', '`create_vm`', '`create_volume`', '`deactivate_ddos_profile`', '`delete_ai_cluster_gpu`', '`delete_caas_container`', '`delete_dbaas_postgres_cluster`', '`delete_ddos_profile`', '`delete_faas_function`', '`delete_faas_namespace`', '`delete_fip`', '`delete_gpu_virtual_cluster`', '`delete_gpu_virtual_server`', '`delete_image`', '`delete_inference_application`', '`delete_inference_instance`', '`delete_k8s_cluster_pool_v2`', '`delete_k8s_cluster_v2`', '`delete_l7policy`', '`delete_l7rule`', '`delete_lblistener`', '`delete_lbmember`', '`delete_lbmetadata`', '`delete_lbpool`', '`delete_loadbalancer`', '`delete_network`', '`delete_reserved_fixed_ip`', '`delete_router`', '`delete_secret`', '`delete_servergroup`', '`delete_sfs`', '`delete_snapshot`', '`delete_subnet`', '`delete_vm`', '`delete_volume`', '`detach_vm_interface`', '`detach_volume`', '`download_image`', '`downscale_ai_cluster_gpu`', '`downscale_gpu_virtual_cluster`', '`extend_sfs`', '`extend_volume`', '`failover_loadbalancer`', '`hard_reboot_gpu_baremetal_server`', '`hard_reboot_gpu_virtual_cluster`', '`hard_reboot_gpu_virtual_server`', '`hard_reboot_vm`', '`patch_caas_container`', '`patch_dbaas_postgres_cluster`', '`patch_faas_function`', '`patch_faas_namespace`', '`patch_lblistener`', '`patch_lbpool`', '`put_into_server_group`', '`put_l7policy`', '`put_l7rule`', '`rebuild_bm`', '`rebuild_gpu_baremetal_node`', '`remove_from_server_group`', '`replace_lbmetadata`', '`resize_k8s_cluster_v2`', '`resize_loadbalancer`', '`resize_vm`', '`resume_vm`', '`revert_volume`', '`soft_reboot_gpu_baremetal_server`', '`soft_reboot_gpu_virtual_cluster`', '`soft_reboot_gpu_virtual_server`', '`soft_reboot_vm`', '`start_gpu_baremetal_server`', '`start_gpu_virtual_cluster`', '`start_gpu_virtual_server`', '`start_vm`', '`stop_gpu_baremetal_server`', '`stop_gpu_virtual_cluster`', '`stop_gpu_virtual_server`', '`stop_vm`', '`suspend_vm`', '`sync_private_flavors`', '`update_ddos_profile`', '`update_inference_application`', '`update_inference_instance`', '`update_k8s_cluster_v2`', '`update_lbmetadata`', '`update_port_allowed_address_pairs`', '`update_tags_gpu_virtual_cluster`', '`upgrade_k8s_cluster_v2`', '`upscale_ai_cluster_gpu`', '`upscale_gpu_virtual_cluster`']", "schema": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Filter the tasks by their type one of ['`activate_ddos_profile`', '`attach_bm_to_reserved_fixed_ip`', '`attach_vm_interface`', '`attach_vm_to_reserved_fixed_ip`', '`attach_volume`', '`create_ai_cluster_gpu`', '`create_bm`', '`create_caas_container`', '`create_dbaas_postgres_cluster`', '`create_ddos_profile`', '`create_faas_function`', '`create_faas_namespace`', '`create_fip`', '`create_gpu_virtual_cluster`', '`create_image`', '`create_inference_application`', '`create_inference_instance`', '`create_k8s_cluster_pool_v2`', '`create_k8s_cluster_v2`', '`create_l7policy`', '`create_l7rule`', '`create_lblistener`', '`create_lbmember`', '`create_lbpool`', '`create_lbpool_health_monitor`', '`create_loadbalancer`', '`create_network`', '`create_reserved_fixed_ip`', '`create_router`', '`create_secret`', '`create_servergroup`', '`create_sfs`', '`create_snapshot`', '`create_subnet`', '`create_vm`', '`create_volume`', '`deactivate_ddos_profile`', '`delete_ai_cluster_gpu`', '`delete_caas_container`', '`delete_dbaas_postgres_cluster`', '`delete_ddos_profile`', '`delete_faas_function`', '`delete_faas_namespace`', '`delete_fip`', '`delete_gpu_virtual_cluster`', '`delete_gpu_virtual_server`', '`delete_image`', '`delete_inference_application`', '`delete_inference_instance`', '`delete_k8s_cluster_pool_v2`',
              '`delete_k8s_cluster_v2`', '`delete_l7policy`', '`delete_l7rule`', '`delete_lblistener`', '`delete_lbmember`', '`delete_lbmetadata`', '`delete_lbpool`', '`delete_loadbalancer`', '`delete_network`', '`delete_reserved_fixed_ip`', '`delete_router`', '`delete_secret`', '`delete_servergroup`', '`delete_sfs`', '`delete_snapshot`', '`delete_subnet`', '`delete_vm`', '`delete_volume`', '`detach_vm_interface`', '`detach_volume`', '`download_image`', '`downscale_ai_cluster_gpu`', '`downscale_gpu_virtual_cluster`', '`extend_sfs`', '`extend_volume`', '`failover_loadbalancer`', '`hard_reboot_gpu_baremetal_server`', '`hard_reboot_gpu_virtual_cluster`', '`hard_reboot_gpu_virtual_server`', '`hard_reboot_vm`', '`patch_caas_container`', '`patch_dbaas_postgres_cluster`', '`patch_faas_function`', '`patch_faas_namespace`', '`patch_lblistener`', '`patch_lbpool`', '`put_into_server_group`', '`put_l7policy`', '`put_l7rule`', '`rebuild_bm`', '`rebuild_gpu_baremetal_node`', '`remove_from_server_group`', '`replace_lbmetadata`', '`resize_k8s_cluster_v2`', '`resize_loadbalancer`', '`resize_vm`', '`resume_vm`', '`revert_volume`', '`soft_reboot_gpu_baremetal_server`', '`soft_reboot_gpu_virtual_cluster`', '`soft_reboot_gpu_virtual_server`', '`soft_reboot_vm`', '`start_gpu_baremetal_server`', '`start_gpu_virtual_cluster`', '`start_gpu_virtual_server`', '`start_vm`', '`stop_gpu_baremetal_server`', '`stop_gpu_virtual_cluster`', '`stop_gpu_virtual_server`', '`stop_vm`', '`suspend_vm`', '`sync_private_flavors`', '`update_ddos_profile`', '`update_inference_application`', '`update_inference_instance`', '`update_k8s_cluster_v2`', '`update_lbmetadata`', '`update_port_allowed_address_pairs`', '`update_tags_gpu_virtual_cluster`', '`upgrade_k8s_cluster_v2`', '`upscale_ai_cluster_gpu`', '`upscale_gpu_virtual_cluster`']", "title": "Task Type"}}, {"in": "query", "name": "to_timestamp", "required": false, "description": "ISO formatted datetime string. Filter the tasks by creation date less than or equal to `to_timestamp`", "schema": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "ISO formatted datetime string. Filter the tasks by creation date less than or equal to `to_timestamp`", "title": "To Timestamp"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskCollectionSerializer"}}}}}, "tags": ["Tasks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.tasks.list()\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Tasks.List(context.TODO(), cloud.TaskListParams{\n\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/tasks/{project_id}/{region_id}/active":
    "get": {"operationId": "TasksActiveInProjectViewSet.get", "summary": "List active tasks", "description": "", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "description": "Limit the number of returned tasks. Falls back to default of 10 if not specified. Limited by max limit value of 1000", "schema": {"default": 10, "description": "Limit the number of returned tasks. Falls back to default of 10 if not specified. Limited by max limit value of 1000", "examples": [100], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "task_type", "required": false, "description": "Filter the tasks by their type one of ['`activate_ddos_profile`', '`attach_bm_to_reserved_fixed_ip`', '`attach_vm_interface`', '`attach_vm_to_reserved_fixed_ip`', '`attach_volume`', '`create_ai_cluster_gpu`', '`create_bm`', '`create_caas_container`', '`create_dbaas_postgres_cluster`', '`create_ddos_profile`', '`create_faas_function`', '`create_faas_namespace`', '`create_fip`', '`create_gpu_virtual_cluster`', '`create_image`', '`create_inference_application`', '`create_inference_instance`', '`create_k8s_cluster_pool_v2`', '`create_k8s_cluster_v2`', '`create_l7policy`', '`create_l7rule`', '`create_lblistener`', '`create_lbmember`', '`create_lbpool`', '`create_lbpool_health_monitor`', '`create_loadbalancer`', '`create_network`', '`create_reserved_fixed_ip`', '`create_router`', '`create_secret`', '`create_servergroup`', '`create_sfs`', '`create_snapshot`', '`create_subnet`', '`create_vm`', '`create_volume`', '`deactivate_ddos_profile`', '`delete_ai_cluster_gpu`', '`delete_caas_container`', '`delete_dbaas_postgres_cluster`', '`delete_ddos_profile`', '`delete_faas_function`', '`delete_faas_namespace`', '`delete_fip`', '`delete_gpu_virtual_cluster`', '`delete_gpu_virtual_server`', '`delete_image`', '`delete_inference_application`', '`delete_inference_instance`', '`delete_k8s_cluster_pool_v2`', '`delete_k8s_cluster_v2`', '`delete_l7policy`', '`delete_l7rule`', '`delete_lblistener`', '`delete_lbmember`', '`delete_lbmetadata`', '`delete_lbpool`', '`delete_loadbalancer`', '`delete_network`', '`delete_reserved_fixed_ip`', '`delete_router`', '`delete_secret`', '`delete_servergroup`', '`delete_sfs`', '`delete_snapshot`', '`delete_subnet`', '`delete_vm`', '`delete_volume`', '`detach_vm_interface`', '`detach_volume`', '`download_image`', '`downscale_ai_cluster_gpu`', '`downscale_gpu_virtual_cluster`', '`extend_sfs`', '`extend_volume`', '`failover_loadbalancer`', '`hard_reboot_gpu_baremetal_server`', '`hard_reboot_gpu_virtual_cluster`', '`hard_reboot_gpu_virtual_server`', '`hard_reboot_vm`', '`patch_caas_container`', '`patch_dbaas_postgres_cluster`', '`patch_faas_function`', '`patch_faas_namespace`', '`patch_lblistener`', '`patch_lbpool`', '`put_into_server_group`', '`put_l7policy`', '`put_l7rule`', '`rebuild_bm`', '`rebuild_gpu_baremetal_node`', '`remove_from_server_group`', '`replace_lbmetadata`', '`resize_k8s_cluster_v2`', '`resize_loadbalancer`', '`resize_vm`', '`resume_vm`', '`revert_volume`', '`soft_reboot_gpu_baremetal_server`', '`soft_reboot_gpu_virtual_cluster`', '`soft_reboot_gpu_virtual_server`', '`soft_reboot_vm`', '`start_gpu_baremetal_server`', '`start_gpu_virtual_cluster`', '`start_gpu_virtual_server`', '`start_vm`', '`stop_gpu_baremetal_server`', '`stop_gpu_virtual_cluster`', '`stop_gpu_virtual_server`', '`stop_vm`',
            '`suspend_vm`', '`sync_private_flavors`', '`update_ddos_profile`', '`update_inference_application`', '`update_inference_instance`', '`update_k8s_cluster_v2`', '`update_lbmetadata`', '`update_port_allowed_address_pairs`', '`update_tags_gpu_virtual_cluster`', '`upgrade_k8s_cluster_v2`', '`upscale_ai_cluster_gpu`', '`upscale_gpu_virtual_cluster`']", "schema": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, "type": "null"], "default": null, "description": "Filter the tasks by their type one of ['`activate_ddos_profile`', '`attach_bm_to_reserved_fixed_ip`', '`attach_vm_interface`', '`attach_vm_to_reserved_fixed_ip`', '`attach_volume`', '`create_ai_cluster_gpu`', '`create_bm`', '`create_caas_container`', '`create_dbaas_postgres_cluster`', '`create_ddos_profile`', '`create_faas_function`', '`create_faas_namespace`', '`create_fip`', '`create_gpu_virtual_cluster`', '`create_image`', '`create_inference_application`', '`create_inference_instance`', '`create_k8s_cluster_pool_v2`', '`create_k8s_cluster_v2`', '`create_l7policy`', '`create_l7rule`', '`create_lblistener`', '`create_lbmember`', '`create_lbpool`', '`create_lbpool_health_monitor`', '`create_loadbalancer`', '`create_network`', '`create_reserved_fixed_ip`', '`create_router`', '`create_secret`', '`create_servergroup`', '`create_sfs`', '`create_snapshot`', '`create_subnet`', '`create_vm`', '`create_volume`', '`deactivate_ddos_profile`', '`delete_ai_cluster_gpu`', '`delete_caas_container`', '`delete_dbaas_postgres_cluster`', '`delete_ddos_profile`', '`delete_faas_function`', '`delete_faas_namespace`', '`delete_fip`', '`delete_gpu_virtual_cluster`', '`delete_gpu_virtual_server`', '`delete_image`', '`delete_inference_application`', '`delete_inference_instance`', '`delete_k8s_cluster_pool_v2`', '`delete_k8s_cluster_v2`', '`delete_l7policy`', '`delete_l7rule`', '`delete_lblistener`', '`delete_lbmember`', '`delete_lbmetadata`', '`delete_lbpool`', '`delete_loadbalancer`', '`delete_network`', '`delete_reserved_fixed_ip`', '`delete_router`', '`delete_secret`', '`delete_servergroup`', '`delete_sfs`', '`delete_snapshot`', '`delete_subnet`', '`delete_vm`', '`delete_volume`', '`detach_vm_interface`', '`detach_volume`', '`download_image`', '`downscale_ai_cluster_gpu`', '`downscale_gpu_virtual_cluster`', '`extend_sfs`', '`extend_volume`', '`failover_loadbalancer`', '`hard_reboot_gpu_baremetal_server`', '`hard_reboot_gpu_virtual_cluster`', '`hard_reboot_gpu_virtual_server`', '`hard_reboot_vm`', '`patch_caas_container`', '`patch_dbaas_postgres_cluster`', '`patch_faas_function`', '`patch_faas_namespace`', '`patch_lblistener`', '`patch_lbpool`', '`put_into_server_group`', '`put_l7policy`', '`put_l7rule`', '`rebuild_bm`', '`rebuild_gpu_baremetal_node`', '`remove_from_server_group`', '`replace_lbmetadata`', '`resize_k8s_cluster_v2`', '`resize_loadbalancer`', '`resize_vm`', '`resume_vm`', '`revert_volume`', '`soft_reboot_gpu_baremetal_server`', '`soft_reboot_gpu_virtual_cluster`', '`soft_reboot_gpu_virtual_server`', '`soft_reboot_vm`', '`start_gpu_baremetal_server`', '`start_gpu_virtual_cluster`', '`start_gpu_virtual_server`', '`start_vm`', '`stop_gpu_baremetal_server`', '`stop_gpu_virtual_cluster`', '`stop_gpu_virtual_server`', '`stop_vm`', '`suspend_vm`', '`sync_private_flavors`', '`update_ddos_profile`', '`update_inference_application`', '`update_inference_instance`', '`update_k8s_cluster_v2`', '`update_lbmetadata`', '`update_port_allowed_address_pairs`', '`update_tags_gpu_virtual_cluster`', '`upgrade_k8s_cluster_v2`', '`upscale_ai_cluster_gpu`', '`upscale_gpu_virtual_cluster`']", "title": "Task Type"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskCollectionSerializer"}}}}}, "tags": ["Tasks"]}
  "/cloud/v1/tasks/{task_id}":
    "get": {"operationId": "TaskInstanceViewSet.get", "summary": "Get task", "description": "", "parameters": [{"in": "path", "name": "task_id", "required": true, "description": "Task ID", "schema": {"description": "Task ID", "title": "Task Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskSerializer"}}}}}, "tags": ["Tasks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask = client.cloud.tasks.get(\n    \"task_id\",\n)\nprint(task.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  task, err := client.Cloud.Tasks.Get(context.TODO(), \"task_id\")\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", task.ID)\n}\n"}]}
  "/cloud/v1/tasks/{task_id}/acknowledge":
    "post": {"operationId": "TaskInstanceAcknowledge.post", "summary": "Acknowledge one task", "description": "", "parameters": [{"in": "path", "name": "task_id", "required": true, "description": "Task ID", "schema": {"description": "Task ID", "title": "Task Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskSerializer"}}}}}, "tags": ["Tasks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask = client.cloud.tasks.acknowledge_one(\n    \"task_id\",\n)\nprint(task.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  task, err := client.Cloud.Tasks.AcknowledgeOne(context.TODO(), \"task_id\")\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", task.ID)\n}\n"}]}
  "/cloud/v1/tasks/acknowledge_all":
    "post": {"operationId": "TasksAcknowledgeAll.post", "summary": "Acknowledge all tasks", "description": "", "parameters": [{"in": "query", "name": "project_id", "required": false, "description": "Project ID", "schema": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Project ID", "title": "Project Id"}}, {"in": "query", "name": "region_id", "required": false, "description": "Region ID", "schema": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Region ID", "title": "Region Id"}}], "responses": {"204": {"description": "No Content"}}, "tags": ["Tasks"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.tasks.acknowledge_all()"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Tasks.AcknowledgeAll(context.TODO(), cloud.TaskAcknowledgeAllParams{\n\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v1/tasks/acknowledge":
    "post": {"operationId": "TasksAcknowledge.post", "summary": "Acknowledge tasks", "description": "Deprecated\n\nUse `/v1/tasks/acknowledge_all` instead", "parameters": [{"in": "query", "name": "project_id", "required": false, "description": "Project ID of the project where tasks should be acknowledged", "schema": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Project ID of the project where tasks should be acknowledged", "examples": [123], "title": "Project Id"}}, {"in": "query", "name": "region_id", "required": false, "description": "Region ID of the region where tasks should be acknowledged", "schema": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Region ID of the region where tasks should be acknowledged", "examples": [123], "title": "Region Id"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeprecatedTasksAcknowledgeBodySerializer"}}}}, "tags": ["Tasks"]}
  "/cloud/v1/user_actions":
    "get": {"operationId": "UserActionLogClientViewSet.get", "summary": "List user actions", "description": "Retrieve user action log for one client or a set of projects", "parameters": [{"in": "query", "name": "action_type", "required": false, "description": "User action type. Several options can be specified.", "schema": {"description": "User action type. Several options can be specified.", "examples": [["activate", "delete"]], "items": {"$ref": "#/components/schemas/cloud_ActionType"}, "title": "Action Type", "type": "array"}}, {"in": "query", "name": "api_group", "required": false, "description": "API group that requested action belongs to. Several options can be specified.", "schema": {"description": "API group that requested action belongs to. Several options can be specified.", "examples": [["ai_cluster", "image"]], "items": {"$ref": "#/components/schemas/ApiGroup"}, "title": "Api Group", "type": "array"}}, {"in": "query", "name": "from_timestamp", "required": false, "description": "ISO formatted datetime string. Starting timestamp from which user actions are requested", "schema": {"description": "ISO formatted datetime string. Starting timestamp from which user actions are requested", "examples": ["2019-11-14T10:30:32Z"], "format": "date-time", "title": "From Timestamp", "type": "string"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "order_by", "required": false, "description": "Sorting by timestamp. Oldest first, or most recent first", "schema": {"$ref": "#/components/schemas/UserActionOrderByChoices", "default": "desc", "description": "Sorting by timestamp. Oldest first, or most recent first", "examples": ["asc"]}}, {"in": "query", "name": "project_id", "required": false, "description": "Project ID. Several options can be specified.", "schema": {"description": "Project ID. Several options can be specified.", "examples": [[1, 2, 3]], "items": {"type": "integer"}, "title": "Project Id", "type": "array"}}, {"in": "query", "name": "region_id", "required": false, "description": "Region ID. Several options can be specified.", "schema": {"description": "Region ID. Several options can be specified.", "examples": [[1, 2, 3]], "items": {"type": "integer"}, "title": "Region Id", "type": "array"}}, {"in": "query", "name": "resource_id", "required": false, "description": "Resource ID. Several options can be specified.", "schema": {"description": "Resource ID. Several options can be specified.", "items": {"type": "string"}, "title": "Resource Id", "type": "array"}}, {"in": "query", "name": "search_field", "required": false, "description": "Extra search field for common object properties such as name, IP address, or other, depending on the `resource_type`", "schema": {"description": "Extra search field for common object properties such as name, IP address, or other, depending on the `resource_type`", "examples": ["default"], "title": "Search Field", "type": "string"}}, {"in": "query", "name": "sorting", "required": false, "description": "(DEPRECATED Use '`order_by`' instead) Sorting by timestamp. Oldest first, or most recent first", "schema": {"$ref": "#/components/schemas/UserActionOrderByChoices", "default": "desc", "deprecated": true, "description": "(DEPRECATED Use '`order_by`' instead) Sorting by timestamp. Oldest first, or most recent first", "examples": ["asc"]}}, {"in": "query", "name": "to_timestamp", "required": false, "description": "ISO formatted datetime string.
            Ending timestamp until which user actions are requested", "schema": {"description": "ISO formatted datetime string. Ending timestamp until which user actions are requested", "examples": ["2019-11-14T10:30:32Z"], "format": "date-time", "title": "To Timestamp", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserActionCollectionSerializer"}}}}}, "tags": ["User Actions"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.audit_logs.list()\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.AuditLogs.List(context.TODO(), cloud.AuditLogListParams{\n\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/user_actions/amqp_subscriptions/{subscription_id}":
    "get": {"operationId": "UserActionLogAmqpSubscription.get", "summary": "Get ampq subscription", "description": "", "parameters": [{"in": "path", "name": "subscription_id", "required": true, "description": "Subscription ID", "schema": {"description": "Subscription ID", "examples": [17], "title": "Subscription Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserActionSubscriptionMqResponseSerializer"}}}}}, "tags": ["User Actions"]}
    "patch": {"operationId": "UserActionLogAmqpSubscription.patch", "summary": "Update amqp subscription", "description": "", "parameters": [{"in": "path", "name": "subscription_id", "required": true, "description": "Subscription ID", "schema": {"description": "Subscription ID", "examples": [17], "title": "Subscription Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserActionSubscriptionMqResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserActionSubscriptionUpdateSerializer"}}}}, "tags": ["User Actions"]}
  "/cloud/v1/user_actions/amqp_subscriptions_list":
    "get": {"operationId": "UserActionLogAmqpSubscribtionListViewSet.get", "summary": "List amqp subscriptions", "description": "Retrieve all existing AMQP subscriptions for user action logs.", "parameters": [{"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserActionsSubscriptionMqCollectionSerializer"}}}}}, "tags": ["User Actions"]}
  "/cloud/v1/user_actions/subscribe":
    "post": {"operationId": "UserActionLogSubscribtionViewSet.post", "summary": "Create subscription", "description": "Subscribe to the user action log. Subscription is created for the `client_id` that is taken from the JWT token.\nFor details on how to obtain a token, refer to the \"Account / Login\" section of the documentation.", "parameters": [], "responses": {"204": {"description": "No Content"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateUserActionSubscriptionSerializer"}}}}, "tags": ["User Actions"]}
  "/cloud/v1/user_actions/subscribe_amqp":
    "post": {"operationId": "UserActionLogSubscribtionMqViewSet.post", "summary": "Create amqp subscription", "description": "Subscribe to the user action log over AMQP. Subscription is created for the `client_id` that is taken from the\nJWT token. See how to get the token in the Account / Login section of this documentation", "parameters": [], "responses": {"204": {"description": "No Content"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateUserActionSubscriptionMqSerializer"}}}}, "tags": ["User Actions"]}
  "/cloud/v1/user_actions/subscribe_amqp_test":
    "post": {"operationId": "UserActionAmqpSubscriptionTest.post", "summary": "Send test message", "description": "Sending a test message to a specified message broker", "parameters": [], "responses": {"204": {"description": "No Content"}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TestMessageMQBodySerializer"}}}}, "tags": ["User Actions"]}
  "/cloud/v1/user_actions/subscriptions_list":
    "get": {"operationId": "UserActionLogSubscribtionListViewSet.get", "summary": "List subscriptions", "description": "Retrieve all existing HTTP webhook subscriptions for user action logs.", "parameters": [{"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserActionsSubscriptionCollectionSerializer"}}}}}, "tags": ["User Actions"]}
  "/cloud/v1/user_actions/unsubscribe":
    "post": {"operationId": "UserActionLogSubscribtionCancelViewSet.post", "summary": "Delete subscription", "description": "Unsubscribe from the user action log", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["User Actions"]}
  "/cloud/v1/user_actions/unsubscribe_amqp":
    "post": {"operationId": "UserActionLogSubscribtionMqCancelViewSet.post", "summary": "Delete amqp subscription", "description": "Unsubscribe from the user action log over AMQP", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["User Actions"]}
  "/cloud/v1/users":
    "get": {"operationId": "UsersListHandler.get", "summary": "List users", "description": "List all users in the account.", "parameters": [{"in": "query", "name": "limit", "required": false, "description": "Limit the number of returned items. Falls back to default of 1000 if not specified. Limited by max limit value of 1000", "schema": {"default": 1000, "description": "Limit the number of returned items. Falls back to default of 1000 if not specified. Limited by max limit value of 1000", "examples": [100], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "user_id", "required": false, "description": "User ID for filtering", "schema": {"description": "User ID for filtering", "examples": [123], "title": "User Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ClientUsersCollectionSerializer"}}}}}, "tags": ["User Role Assignments"]}
  "/cloud/v1/users/assignments":
    "post": {"operationId": "AssignmentHandler.post", "summary": "Create role assignment", "description": "Assign a role to an existing user in the specified scope.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoleAssignmentSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RequestAssignmentSerializer"}}}}, "tags": ["User Role Assignments"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nrole_assignment = client.cloud.users.role_assignments.create(\n    role=\"ClientAdministrator\",\n    user_id=777,\n)\nprint(role_assignment.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  roleAssignment, err := client.Cloud.Users.RoleAssignments.New(context.TODO(), cloud.UserRoleAssignmentNewParams{\n    Role: cloud.UserRoleAssignmentNewParamsRoleClientAdministrator,\n    UserID: 777,\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", roleAssignment.ID)\n}\n"}]}
    "get": {"operationId": "AssignmentHandler.get", "summary": "List role assignments", "description": "List all role assignments in the specified scope.", "parameters": [{"in": "query", "name": "limit", "required": false, "description": "Limit the number of returned items. Falls back to default of 1000 if not specified. Limited by max limit value of 1000", "schema": {"default": 1000, "description": "Limit the number of returned items. Falls back to default of 1000 if not specified. Limited by max limit value of 1000", "examples": [100], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "offset", "required": false, "description": "Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "project_id", "required": false, "description": "Project ID", "schema": {"description": "Project ID", "examples": [123], "title": "Project Id", "type": "integer"}}, {"in": "query", "name": "user_id", "required": false, "description": "User ID for filtering", "schema": {"description": "User ID for filtering", "examples": [123], "title": "User Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoleAssignmentCollectionSerializer"}}}}}, "tags": ["User Role Assignments"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.users.role_assignments.list()\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Users.RoleAssignments.List(context.TODO(), cloud.UserRoleAssignmentListParams{\n\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/users/assignments/{assignment_id}":
    "patch": {"operationId": "PatchDeleteAssignmentHandler.patch", "summary": "Update role assignment", "description": "Modify an existing role assignment for a user.", "parameters": [{"in": "path", "name": "assignment_id", "required": true, "description": "Assignment ID", "schema": {"description": "Assignment ID", "examples": [123], "title": "Assignment Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssignmentSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RequestAssignmentSerializer"}}}}, "tags": ["User Role Assignments"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nrole_assignment_update_delete = client.cloud.users.role_assignments.update(\n    assignment_id=123,\n    role=\"ClientAdministrator\",\n    user_id=777,\n)\nprint(role_assignment_update_delete.assignment_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  roleAssignmentUpdateDelete, err := client.Cloud.Users.RoleAssignments.Update(\n    context.TODO(),\n    123,\n    cloud.UserRoleAssignmentUpdateParams{\n      Role: cloud.UserRoleAssignmentUpdateParamsRoleClientAdministrator,\n      UserID: 777,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", roleAssignmentUpdateDelete.AssignmentID)\n}\n"}]}
    "delete": {"operationId": "PatchDeleteAssignmentHandler.delete", "summary": "Delete role assignment", "description": "Delete an existing role assignment.", "parameters": [{"in": "path", "name": "assignment_id", "required": true, "description": "Assignment ID", "schema": {"description": "Assignment ID", "examples": [123], "title": "Assignment Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssignmentSerializer"}}}}}, "tags": ["User Role Assignments"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nrole_assignment_update_delete = client.cloud.users.role_assignments.delete(\n    123,\n)\nprint(role_assignment_update_delete.assignment_id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  roleAssignmentUpdateDelete, err := client.Cloud.Users.RoleAssignments.Delete(context.TODO(), 123)\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", roleAssignmentUpdateDelete.AssignmentID)\n}\n"}]}
  "/cloud/v1/users/roles":
    "get": {"operationId": "RoleListHandler.get", "summary": "List roles", "description": "List of available roles is now exposed as an enum in endpoints where they are used,\nfor example (/v1/users/assignments).", "parameters": [{"in": "query", "name": "project_id", "required": false, "description": "Project ID", "schema": {"description": "Project ID", "examples": [123], "title": "Project Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoleCollectionSerializer"}}}}}, "deprecated": true, "tags": ["User Role Assignments"]}
  "/cloud/v1/pricing/{project_id}/{region_id}/volumes":
    "post": {"operationId": "VolumePricingHandler.post", "summary": "Preview volume price", "description": "Preview the billing price of a volume's type and size.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/VolumeOrSnapshotPricingRequestSerializer"}}}}, "tags": ["Volumes"]}
  "/cloud/v1/volumes/{project_id}/{region_id}":
    "post": {"operationId": "VolumeViewSet.post", "summary": "Create volume", "description": "Create a new volume in the project and region.\nThe volume can be created from scratch, from an image, or from a snapshot.\nOptionally attach the volume to an instance during creation.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateVolumeSerializer"}}}}, "tags": ["Volumes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.volumes.create(\n    project_id=1,\n    region_id=1,\n    image_id=\"169942e0-9b53-42df-95ef-1a8b6525c2bd\",\n    name=\"volume-1\",\n    size=10,\n    source=\"image\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Volumes.New(context.TODO(), cloud.VolumeNewParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
    "get": {"operationId": "VolumeViewSet.get", "summary": "List volumes", "description": "Retrieve a list of volumes in the project and region.\nThe list can be filtered by various parameters like bootable status,\nmetadata/tags, attachments, instance ID, name, and ID.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "query", "name": "bootable", "required": false, "description": "Filter by bootable field", "schema": {"description": "Filter by bootable field", "examples": [false], "title": "Bootable", "type": "boolean"}}, {"in": "query", "name": "cluster_id", "required": false, "description": "Filter volumes by k8s cluster ID", "schema": {"description": "Filter volumes by k8s cluster ID", "examples": ["t12345"], "title": "Cluster Id", "type": "string"}}, {"in": "query", "name": "has_attachments", "required": false, "description": "Filter by the presence of attachments", "schema": {"description": "Filter by the presence of attachments", "examples": [true], "title": "Has Attachments", "type": "boolean"}}, {"in": "query", "name": "id_part", "required": false, "description": "Filter the volume list result by the ID part of the volume", "schema": {"description": "Filter the volume list result by the ID part of the volume", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "title": "Id Part", "type": "string"}}, {"in": "query", "name": "instance_id", "required": false, "description": "Filter volumes by instance ID", "schema": {"description": "Filter volumes by instance ID", "examples": ["169942e0-9b53-42df-95ef-1a8b6525c2bd"], "format": "uuid4", "title": "Instance Id", "type": "string"}}, {"in": "query", "name": "limit", "required": false, "description": "Optional. Limit the number of returned items", "schema": {"default": 1000, "description": "Optional. Limit the number of returned items", "examples": [1000], "exclusiveMinimum": 0, "maximum": 1000, "title": "Limit", "type": "integer", "x-stainless-skip": ["terraform"]}}, {"in": "query", "name": "name_part", "required": false, "description": "Filter volumes by `name_part` inclusion in volume name.Any substring can be used and volumes will be returned with names containing the substring.", "schema": {"description": "Filter volumes by `name_part` inclusion in volume name.Any substring can be used and volumes will be returned with names containing the substring.", "examples": ["test"], "title": "Name Part", "type": "string"}}, {"in": "query", "name": "offset", "required": false, "description": "Optional. Offset value is used to exclude the first set of records from the result", "schema": {"default": 0, "description": "Optional. Offset value is used to exclude the first set of records from the result", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "tag_key", "required": false, "description": "Optional. Filter by tag keys. ?`tag_key`=key1&`tag_key`=key2", "schema": {"description": "Optional. Filter by tag keys. ?`tag_key`=key1&`tag_key`=key2", "examples": [["key1", "key2"]], "items": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1, "type": "string"}, "title": "Tag Key", "type": "array"}}, {"in": "query", "name": "tag_key_value", "required": false, "description": "Optional. Filter by tag key-value pairs.", "schema": {"contentMediaType": "application/json", "contentSchema": {"additionalProperties": {"description": "Tag value. The maximum size for a value is 1024 bytes.", "examples": ["my-tag-value"], "maxLength": 1024, "minLength": 1, "type": "string"}, "propertyNames": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1}, "type": "object"}, "description": "Optional.
              Filter by tag key-value pairs.", "title": "Tag Key Value", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VolumeCollectionSerializer"}}}}}, "tags": ["Volumes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\npage = client.cloud.volumes.list(\n    project_id=1,\n    region_id=1,\n)\npage = page.results[0]\nprint(page.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  page, err := client.Cloud.Volumes.List(context.TODO(), cloud.VolumeListParams{\n    ProjectID: gcore.Int(1),\n    RegionID: gcore.Int(1),\n  })\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", page)\n}\n"}]}
  "/cloud/v1/volumes/{project_id}/{region_id}/{volume_id}":
    "get": {"operationId": "VolumeInstanceViewSet.get", "summary": "Get volume", "description": "Retrieve detailed information about a specific volume.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VolumeSerializer"}}}}}, "tags": ["Volumes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nvolume = client.cloud.volumes.get(\n    volume_id=\"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    project_id=1,\n    region_id=1,\n)\nprint(volume.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  volume, err := client.Cloud.Volumes.Get(\n    context.TODO(),\n    \"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    cloud.VolumeGetParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", volume.ID)\n}\n"}]}
    "patch": {"operationId": "VolumeInstanceViewSet.patch", "summary": "Update volume", "description": "Rename a volume or update tags", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VolumeSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateVolumeSerializer"}}}}, "tags": ["Volumes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nvolume = client.cloud.volumes.update(\n    volume_id=\"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    project_id=1,\n    region_id=1,\n)\nprint(volume.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  volume, err := client.Cloud.Volumes.Update(\n    context.TODO(),\n    \"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    cloud.VolumeUpdateParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", volume.ID)\n}\n"}]}
    "delete": {"operationId": "VolumeInstanceViewSet.delete", "summary": "Delete volume", "description": "Delete a volume and all its snapshots.\nThe volume must be in an available state to be deleted.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}, {"in": "query", "name": "snapshots", "required": false, "description": "Comma separated list of snapshot IDs to be deleted with the volume.", "schema": {"description": "Comma separated list of snapshot IDs to be deleted with the volume.", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483,726ecfcc-7fd0-4e30-a86e-7892524aa484"], "title": "Snapshots", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "tags": ["Volumes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.volumes.delete(\n    volume_id=\"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    project_id=1,\n    region_id=1,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Volumes.Delete(\n    context.TODO(),\n    \"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    cloud.VolumeDeleteParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v2/volumes/{project_id}/{region_id}/{volume_id}/attach":
    "post": {"operationId": "VolumeInstanceAttachViewV2.post", "summary": "Attach volume", "description": "Attach the volume to instance. Note: ultra volume can only be attached to an instance with shared flavor", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AttachVolumeToInstanceSerializer"}}}}, "tags": ["Volumes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.volumes.attach_to_instance(\n    volume_id=\"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    project_id=1,\n    region_id=1,\n    instance_id=\"169942e0-9b53-42df-95ef-1a8b6525c2bd\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Volumes.AttachToInstance(\n    context.TODO(),\n    \"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    cloud.VolumeAttachToInstanceParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n      InstanceID: \"169942e0-9b53-42df-95ef-1a8b6525c2bd\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v2/volumes/{project_id}/{region_id}/{volume_id}/detach":
    "post": {"operationId": "VolumeInstanceDetachViewV2.post", "summary": "Detach volume", "description": "Detach the volume from instance", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceIdSerializer"}}}}, "tags": ["Volumes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.volumes.detach_from_instance(\n    volume_id=\"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    project_id=1,\n    region_id=1,\n    instance_id=\"169942e0-9b53-42df-95ef-1a8b6525c2bd\",\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Volumes.DetachFromInstance(\n    context.TODO(),\n    \"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    cloud.VolumeDetachFromInstanceParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n      InstanceID: \"169942e0-9b53-42df-95ef-1a8b6525c2bd\",\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/volumes/{project_id}/{region_id}/{volume_id}/extend":
    "post": {"operationId": "VolumeInstanceExtendView.post", "summary": "Extend volume", "description": "Increase the size of a volume.\nThe new size must be greater than the current size.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskIDsSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SizeSerializer"}}}}, "tags": ["Volumes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\ntask_id_list = client.cloud.volumes.resize(\n    volume_id=\"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    project_id=1,\n    region_id=1,\n    size=100,\n)\nprint(task_id_list.tasks)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  taskIDList, err := client.Cloud.Volumes.Resize(\n    context.TODO(),\n    \"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    cloud.VolumeResizeParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n      Size: 100,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", taskIDList.Tasks)\n}\n"}]}
  "/cloud/v1/volumes/{project_id}/{region_id}/{volume_id}/retype":
    "post": {"operationId": "VolumeInstanceRetypeView.post", "summary": "Change volume type", "description": "Change the type of a volume.\nThe volume must not have any snapshots to change its type.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VolumeSerializer"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/VolumeRetypeSerializer"}}}}, "tags": ["Volumes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nvolume = client.cloud.volumes.change_type(\n    volume_id=\"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    project_id=1,\n    region_id=1,\n    volume_type=\"ssd_hiiops\",\n)\nprint(volume.id)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  volume, err := client.Cloud.Volumes.ChangeType(\n    context.TODO(),\n    \"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    cloud.VolumeChangeTypeParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n      VolumeType: cloud.VolumeChangeTypeParamsVolumeTypeSsdHiiops,\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n  fmt.Printf(\"%+v\\n\", volume.ID)\n}\n"}]}
  "/cloud/v1/volumes/{project_id}/{region_id}/{volume_id}/revert":
    "post": {"operationId": "VolumeInstanceRevertView.post", "summary": "Revert volume", "description": "Revert a volume to its last snapshot. The volume must be in an available state to be reverted.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}], "responses": {"200": {"description": "OK"}}, "tags": ["Volumes"], "x-codeSamples": [{"lang": "Python", "source": "from gcore import Gcore\n\nclient = Gcore(\n    api_key=\"My API Key\",\n)\nclient.cloud.volumes.revert_to_last_snapshot(\n    volume_id=\"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    project_id=1,\n    region_id=1,\n)"}, {"lang": "Go", "source": "package main\n\nimport (\n  \"context\"\n\n  \"github.com/G-Core/gcore-go\"\n  \"github.com/G-Core/gcore-go/cloud\"\n  \"github.com/G-Core/gcore-go/option\"\n)\n\nfunc main() {\n  client := gcore.NewClient(\n    option.WithAPIKey(\"My API Key\"),\n  )\n  err := client.Cloud.Volumes.RevertToLastSnapshot(\n    context.TODO(),\n    \"726ecfcc-7fd0-4e30-a86e-7892524aa483\",\n    cloud.VolumeRevertToLastSnapshotParams{\n      ProjectID: gcore.Int(1),\n      RegionID: gcore.Int(1),\n    },\n  )\n  if err != nil {\n    panic(err.Error())\n  }\n}\n"}]}
  "/cloud/v1/volumes/{project_id}/{region_id}/{volume_id}/attach":
    "post": {"operationId": "VolumeInstanceAttachView.post", "summary": "Attach volume", "description": "Attach a volume to an instance.\nThe volume must be in an available state to be attached.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VolumeSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AttachVolumeToInstanceSerializer"}}}}, "tags": ["Volumes"]}
  "/cloud/v1/volumes/{project_id}/{region_id}/{volume_id}/detach":
    "post": {"operationId": "VolumeInstanceDetachView.post", "summary": "Detach volume", "description": "Detach a volume from an instance.\nThe volume must be in-use state to be detached.", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VolumeSerializer"}}}}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InstanceIdSerializer"}}}}, "tags": ["Volumes"]}
  "/cloud/v1/volumes/{project_id}/{region_id}/{volume_id}/metadata":
    "post": {"operationId": "VolumeMetadataHandler.post", "summary": "Create or update volume tags", "description": "Create or update one or more tags for a volume.\nIf a tag does not exist, it gets created.\nIf a tag already exists, its value is overwritten.\n\nUse PATCH /v1/volumes/{`project_id`}/{`region_id`}/{`volume_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateTagsSerializer"}}}}, "tags": ["Volumes"]}
    "get": {"operationId": "VolumeMetadataHandler.get", "summary": "List volume tags", "description": "Retrieve all tags associated with a volume.\n\nUse GET /v1/volumes/{`project_id`}/{`region_id`}/{`volume_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagCollectionSerializer"}}}}}, "deprecated": true, "tags": ["Volumes"]}
    "put": {"operationId": "VolumeMetadataHandler.put", "summary": "Replace volume tags", "description": "Delete all existing tags and replace them with the tags from the request.\n\nUse PATCH /v1/volumes/{`project_id`}/{`region_id`}/{`volume_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateTagsSerializer"}}}}, "tags": ["Volumes"]}
  "/cloud/v1/volumes/{project_id}/{region_id}/{volume_id}/metadata_item":
    "get": {"operationId": "VolumeMetadataItemHandler.get", "summary": "Get volume tag", "description": "Retrieve a specific tag by its key from a volume.\n\nUse GET /v1/volumes/{`project_id`}/{`region_id`}/{`volume_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}, {"in": "query", "name": "key", "required": true, "description": "Tag key", "schema": {"description": "Tag key", "examples": ["cost-center"], "title": "Key", "type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TagSerializer"}}}}}, "deprecated": true, "tags": ["Volumes"]}
    "delete": {"operationId": "VolumeMetadataItemHandler.delete", "summary": "Delete volume tag", "description": "Delete a specific tag by its key from a volume.\n\nUse PATCH /v1/volumes/{`project_id`}/{`region_id`}/{`volume_id`} instead", "parameters": [{"in": "path", "name": "project_id", "required": true, "description": "Project ID", "schema": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}}, {"in": "path", "name": "region_id", "required": true, "description": "Region ID", "schema": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}}, {"in": "path", "name": "volume_id", "required": true, "description": "Volume ID", "schema": {"description": "Volume ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Volume Id", "type": "string"}}, {"in": "query", "name": "key", "required": true, "description": "Tag key", "schema": {"description": "Tag key", "examples": ["cost-center"], "title": "Key", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "deprecated": true, "tags": ["Volumes"]}
tags:
- {"name": "Bare Metal", "x-displayName": "Bare Metal"}
- {"name": "Container as a Service", "x-displayName": "Container as a Service"}
- {"name": "Cost Reports", "x-displayName": "Cost Reports"}
- {"name": "DDoS Protection", "x-displayName": "DDoS Protection"}
- {"name": "Everywhere Inference", "x-displayName": "Everywhere Inference"}
- {"name": "Everywhere Inference Apps", "x-displayName": "Everywhere Inference Apps"}
- {"name": "File Shares", "x-displayName": "File Shares"}
- {"name": "Floating IPs", "x-displayName": "Floating IPs"}
- {"name": "Function as a Service", "x-displayName": "Function as a Service"}
- {"name": "GPU Cloud", "x-displayName": "GPU Cloud"}
- {"name": "IP Ranges", "x-displayName": "IP Ranges"}
- {"name": "Images", "x-displayName": "Images"}
- {"name": "Instances", "x-displayName": "Instances"}
- {"name": "Load Balancers", "x-displayName": "Load Balancers"}
- {"name": "Logging", "x-displayName": "Logging"}
- {"name": "Managed Kubernetes", "x-displayName": "Managed Kubernetes"}
- {"name": "Managed PostgreSQL", "x-displayName": "Managed PostgreSQL"}
- {"name": "Networks", "x-displayName": "Networks"}
- {"name": "Placement Groups", "x-displayName": "Placement Groups"}
- {"name": "Projects", "x-displayName": "Projects"}
- {"name": "Quotas", "x-displayName": "Quotas"}
- {"name": "Regions", "x-displayName": "Regions"}
- {"name": "Registry", "x-displayName": "Registry"}
- {"name": "Reservations", "x-displayName": "Reservations"}
- {"name": "Reserved IPs", "x-displayName": "Reserved IPs"}
- {"name": "Routers", "x-displayName": "Routers"}
- {"name": "SSH Keys", "x-displayName": "SSH Keys"}
- {"name": "Secrets", "x-displayName": "Secrets"}
- {"name": "Security Groups", "x-displayName": "Security Groups"}
- {"name": "Snapshot Schedules", "x-displayName": "Snapshot Schedules"}
- {"name": "Snapshots", "x-displayName": "Snapshots"}
- {"name": "Tasks", "x-displayName": "Tasks"}
- {"name": "User Actions", "x-displayName": "User Actions"}
- {"name": "User Role Assignments", "x-displayName": "User Role Assignments"}
- {"name": "Volumes", "x-displayName": "Volumes"}
x-tagGroups:
- {"name": "Cloud API", "tags": ["Bare Metal", "Container as a Service", "Cost Reports", "DDoS Protection", "Everywhere Inference", "Everywhere Inference Apps", "File Shares", "Floating IPs", "Function as a Service", "GPU Cloud", "IP Ranges", "Images", "Instances", "Load Balancers", "Logging", "Managed Kubernetes", "Managed PostgreSQL", "Networks", "Placement Groups", "Projects", "Quotas", "Regions", "Registry", "Reservations", "Reserved IPs", "Routers", "SSH Keys", "Secrets", "Security Groups", "Snapshot Schedules", "Snapshots", "Tasks", "User Actions", "User Role Assignments", "Volumes"]}
security: ["APIKey": []]
components:
  schemas:
    GroupOrdering: {"enum": ["created_at.asc", "created_at.desc", "status.asc", "status.desc"], "title": "GroupOrdering", "type": "string"}
    NetworkSerializer: {"properties": {"created_at": {"description": "Datetime when the network was created", "examples": ["2019-06-18T11:56:16+0000"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Task that created this entity", "examples": ["fd50fdd1-0482-4c9b-b847-fc9924665af6"], "title": "Creator Task Id"}, "default": {"anyOf": ["type": "boolean", "type": "null"], "description": "True if network has `is_default` attribute", "examples": [true], "title": "Default"}, "external": {"description": "True if the network `router:external` attribute", "examples": [true], "title": "External", "type": "boolean"}, "id": {"description": "Network ID", "examples": ["eed97610-708d-43a5-a9a5-caebd2b7b4ee"], "format": "uuid4", "title": "Id", "type": "string"}, "mtu": {"description": "MTU (maximum transmission unit). Default value is 1450", "examples": [1500], "title": "Mtu", "type": "integer"}, "name": {"description": "Network name", "examples": ["public"], "title": "Name", "type": "string"}, "port_security_enabled": {"description": "Indicates `port_security_enabled` status of all newly created in the network ports.", "examples": [true, false], "title": "Port Security Enabled", "type": "boolean"}, "project_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Project ID", "examples": [1337], "title": "Project Id"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "segmentation_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Id of network segment", "examples": [9], "title": "Segmentation Id"}, "shared": {"description": "True when the network is shared with your project by external owner", "examples": [false], "title": "Shared", "type": "boolean"}, "subnets": {"description": "List of subnetworks", "examples": [["f00624ab-41bc-4d54-a723-1673ce32d997", "41e0f698-4d39-483b-b77a-18eb070e4c09"]], "items": {"format": "uuid4", "type": "string"}, "title": "Subnets", "type": "array"}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "type": {"description": "Network type (vlan, vxlan)", "examples": ["vlan"], "title": "Type", "type": "string"}, "updated_at": {"description": "Datetime when the network was last updated", "examples": ["2019-06-18T11:57:00+0000"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["project_id", "region_id", "region", "id", "name", "mtu", "created_at", "updated_at", "type", "segmentation_id", "external", "default", "shared", "subnets", "creator_task_id", "task_id", "tags", "port_security_enabled"], "title": "NetworkSerializer", "type": "object"}
    BillingReservationOrderByChoices: {"enum": ["active_from.asc", "active_from.desc", "active_to.asc", "active_to.desc", "created_at.asc", "created_at.desc"], "title": "BillingReservationOrderByChoices", "type": "string"}
    NamespaceSerializer: {"properties": {"created_at": {"description": "Namespace creation date.", "examples": ["2023-08-22T11:21:00Z"], "title": "Created At", "type": "string"}, "description": {"anyOf": [{"maxLength": 255, "minLength": 0, "type": "string"}, "type": "null"], "default": null, "description": "Namespace description.", "examples": ["This is a sample namespace."], "title": "Description"}, "envs": {"anyOf": [{"patternProperties": {"^[a-zA-Z_][a-zA-Z0-9_]*$": {"maxLength": 255, "minLength": 0, "type": "string"}}, "propertyNames": {"maxLength": 255, "minLength": 1}, "type": "object"}, "type": "null"], "default": null, "description": "Namespace environment variables. Keys must match a specific regex pattern and be 1-255 characters long, and values must be 0-255 characters long.", "examples": ["ENV_VAR": "value"], "title": "Envs"}, "functions": {"description": "Namespace functions.", "items": {"$ref": "#/components/schemas/FunctionSerializer"}, "title": "Functions", "type": "array"}, "functions_deploy_status": {"additionalProperties": {"type": "integer"}, "description": "Deploy status of namespace functions.", "examples": ["deployed": 1], "title": "Functions Deploy Status", "type": "object"}, "name": {"description": "Namespace name.", "examples": ["namespace-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Name", "type": "string"}, "status": {"description": "Namespace status.", "examples": ["Active"], "title": "Status", "type": "string"}}, "required": ["name", "functions", "status", "created_at", "functions_deploy_status"], "title": "NamespaceSerializer", "type": "object"}
    GpuImageSerializer: {"properties": {"architecture": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Image architecture type", "examples": ["x86_64"], "title": "Architecture"}, "created_at": {"description": "Datetime when the image was created", "examples": ["2024-05-05T14:51:26.570866Z"], "format": "date-time", "title": "Created At", "type": "string"}, "id": {"description": "Image ID", "examples": ["44e136a7-15c1-4b5f-a086-20b7b3237d40"], "format": "uuid4", "title": "Id", "type": "string"}, "min_disk": {"description": "Minimal boot volume required", "examples": [1], "title": "Min Disk", "type": "integer"}, "min_ram": {"description": "Minimal VM RAM required", "examples": [0], "title": "Min Ram", "type": "integer"}, "name": {"description": "Image name", "examples": ["ubuntu-23.10-x64"], "title": "Name", "type": "string"}, "os_distro": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "OS Distribution", "examples": ["ubuntu"], "title": "Os Distro"}, "os_type": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The operating system installed on the image", "examples": ["linux"], "title": "Os Type"}, "os_version": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "OS version, i.e. 19.04 (for Ubuntu) or 9.4 for Debian", "examples": ["19.04"], "title": "Os Version"}, "size": {"default": 0, "description": "Image size in bytes.", "examples": [3758096384], "title": "Size", "type": "integer"}, "ssh_key": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Whether the image supports SSH key or not", "examples": ["allow"], "title": "Ssh Key"}, "status": {"description": "Image status", "examples": ["active"], "title": "Status", "type": "string"}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "updated_at": {"description": "Datetime when the image was updated", "examples": ["2024-05-05T14:51:26.570866Z"], "format": "date-time", "title": "Updated At", "type": "string"}, "visibility": {"description": "Image visibility. Globally visible images are public", "examples": ["public"], "title": "Visibility", "type": "string"}}, "required": ["id", "name", "status", "min_disk", "min_ram", "tags", "visibility", "created_at", "updated_at"], "title": "GpuImageSerializer", "type": "object"}
    CreateLbListenerSerializer: {"properties": {"allowed_cidrs": {"anyOf": [{"items": {"format": "ipvanynetwork", "type": "string"}, "type": "array"}, "type": "null"], "description": "Network CIDRs from which service will be accessible", "examples": [["10.0.0.0/8"]], "title": "Allowed Cidrs"}, "connection_limit": {"default": 100000, "description": "Limit of the simultaneous connections", "examples": [100000], "maximum": 1000000, "minimum": -1, "title": "Connection Limit", "type": "integer"}, "insert_x_forwarded": {"description": "Add headers X-Forwarded-For, X-Forwarded-Port, X-Forwarded-Proto to requests. Only used with HTTP or `TERMINATED_HTTPS` protocols.", "examples": [false], "title": "Insert X Forwarded", "type": "boolean"}, "loadbalancer_id": {"description": "Load balancer ID", "examples": ["30f4f55b-4a7c-48e0-9954-5cddfee216e7"], "format": "uuid4", "title": "Loadbalancer Id", "type": "string"}, "name": {"description": "Load balancer listener name", "examples": ["my_listener"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "protocol": {"$ref": "#/components/schemas/LbListenerProtocolEnum", "description": "Load balancer listener protocol", "examples": ["HTTP"]}, "protocol_port": {"description": "Protocol port", "examples": [80], "maximum": 65535, "minimum": 1, "title": "Protocol Port", "type": "integer"}, "secret_id": {"anyOf": [{"const": "", "type": "string"}, {"format": "uuid4", "type": "string"}], "description": "ID of the secret where PKCS12 file is stored for `TERMINATED_HTTPS` or PROMETHEUS listener", "examples": ["f2e734d0-fa2b-42c2-ad33-4c6db5101e00"], "title": "Secret Id"}, "sni_secret_id": {"description": "List of secrets IDs containing PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` or PROMETHEUS listeners", "examples": [["f2e734d0-fa2b-42c2-ad33-4c6db5101e00", "eb121225-7ded-4ff3-ae1f-599e145dd7cb"]], "items": {"format": "uuid4", "type": "string"}, "title": "Sni Secret Id", "type": "array"}, "timeout_client_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Frontend client inactivity timeout in milliseconds", "examples": [50000], "title": "Timeout Client Data"}, "timeout_member_connect": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member connection timeout in milliseconds", "examples": [50000], "title": "Timeout Member Connect"}, "timeout_member_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member inactivity timeout in milliseconds", "examples": [null], "title": "Timeout Member Data"}, "user_list": {"description": "Load balancer listener list of username and encrypted password items", "examples": [[{"encrypted_password": "$5$isRr.HJ1IrQP38.m$oViu3DJOpUG2ZsjCBtbITV3mqpxxbZfyWJojLPNSPO5", "username": "admin"}]], "items": {"$ref": "#/components/schemas/UserListItem"}, "title": "User List", "type": "array"}}, "required": ["name", "protocol", "protocol_port", "loadbalancer_id"], "title": "CreateLbListenerSerializer", "type": "object"}
    LoadBalancerPricingPreviewResponseSerializer: {"description": "Billing response preview schema for loadbalancer", "examples": [{"currency_code": "USD", "discount_percent": 0.16, "per_hour": {"external_ip": 0.02, "flavor": 0.8, "floating_ip": 0.05}, "per_month": {"external_ip": 14.4, "flavor": 576, "floating_ip": 36}, "price_status": "show", "price_without_discount_per_month": 604.8, "tax_percent": 17, "total_price_per_hour": 1.02, "total_price_per_month": 734.4}], "properties": {"currency_code": {"anyOf": [{"enum": ["AZN", "EUR", "USD"], "type": "string"}, "type": "null"], "description": "Currency code (3 letter code per ISO 4217)", "title": "Currency Code"}, "discount_percent": {"anyOf": ["type": "number", "type": "null"], "description": "Actual discount relative value", "examples": [0.16], "title": "Discount Percent"}, "per_hour": {"$ref": "#/components/schemas/DetailedLoadBalancerPricingSerializer", "description": "Prices per category charged per hour"}, "per_month": {"$ref": "#/components/schemas/DetailedLoadBalancerPricingSerializer", "description": "Prices per category charged per month"}, "price_status": {"$ref": "#/components/schemas/PriceDisplayStatus", "description": "Price status for the UI", "examples": ["show"]}, "price_without_discount_per_month": {"anyOf": ["type": "number", "type": "null"], "description": "Total price VAT inclusive per month without discount", "title": "Price Without Discount Per Month"}, "tax_percent": {"description": "Tax rate applied to the subtotal, represented as a percentage", "examples": [17, 12], "title": "Tax Percent", "type": "number"}, "total_price_per_hour": {"anyOf": ["type": "number", "type": "null"], "description": "Total price VAT inclusive per hour", "title": "Total Price Per Hour"}, "total_price_per_month": {"anyOf": ["type": "number", "type": "null"], "description": "Total price VAT inclusive per month", "title": "Total Price Per Month"}}, "required": ["currency_code", "per_hour", "per_month", "total_price_per_hour", "total_price_per_month", "price_status", "price_without_discount_per_month", "discount_percent", "tax_percent"], "title": "LoadBalancerPricingPreviewResponseSerializer", "type": "object"}
    ApiKeyListResponseSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/GetApiKeyResponseSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ApiKeyListResponseSerializer", "type": "object"}
    L7PolicySchema: {"type": "object", "properties": {"action": {"type": "string", "enum": ["REDIRECT_PREFIX", "REDIRECT_TO_POOL", "REDIRECT_TO_URL", "REJECT"], "readOnly": true, "description": "Action"}, "id": {"type": "string", "readOnly": true, "description": "ID"}, "listener_id": {"type": "string", "readOnly": true, "description": "Listener ID"}, "name": {"type": "string", "readOnly": true, "description": "Human-readable name of the policy"}, "operating_status": {"type": "string", "enum": ["DEGRADED", "DRAINING", "ERROR", "NO_MONITOR", "OFFLINE", "ONLINE"], "readOnly": true, "description": "L7 policy operating status"}, "position": {"type": "integer", "readOnly": true, "description": "The position of this policy on the listener. Positions start at 1."}, "project_id": {"type": "integer", "readOnly": true, "description": "Project ID"}, "provisioning_status": {"type": "string", "enum": ["ACTIVE", "DELETED", "ERROR", "PENDING_CREATE", "PENDING_DELETE", "PENDING_UPDATE"], "readOnly": true}, "redirect_http_code": {"type": "integer", "readOnly": true, "description": "Requests matching this policy will be redirected to the specified URL or Prefix URL with the HTTP response code. Valid if action is `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are 301, 302, 303, 307, or 308. Default is 302."}, "redirect_pool_id": {"type": "string", "readOnly": true, "description": "Requests matching this policy will be redirected to the pool with this ID. Only valid if action is `REDIRECT_TO_POOL`."}, "redirect_prefix": {"type": "string", "readOnly": true, "description": "Requests matching this policy will be redirected to this Prefix URL. Only valid if action is `REDIRECT_PREFIX`."}, "redirect_url": {"type": "string", "readOnly": true, "description": "Requests matching this policy will be redirected to this URL. Only valid if action is `REDIRECT_TO_URL`."}, "region": {"type": "string", "readOnly": true, "description": "Region name"}, "region_id": {"type": "integer", "readOnly": true, "description": "Region ID"}, "rules": {"type": "array", "default": [], "readOnly": true, "description": "Rules. All the rules associated with a given policy are logically ANDed together. A request must match all the policyâ€™s rules to match the policy.If you need to express a logical OR operation between rules, then do this by creating multiple policies with the same action.", "items": {"$ref": "#/components/schemas/L7RuleSchema"}}, "tags": {"type": "array", "description": "A list of simple strings assigned to the resource.", "items": {"type": "string", "readOnly": true}}, "task_id": {"type": "string", "readOnly": true, "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked."}}, "description": "L7Policy schema", "example": {"action": "REDIRECT_TO_URL", "created_at": "2020-11-16T13:48:20+0000", "id": "9b4b9a23-ccac-4945-bcdd-b0e793c12cd9", "listener_id": "0388b5e5-3393-4aa8-a88a-dbcdcedf9970", "name": "redirect-example.com", "operating_status": "ONLINE", "position": 1, "project_id": 1, "provisioning_status": "ACTIVE", "redirect_http_code": 301, "redirect_pool_id": "00000000-0000-4000-8000-000000000000", "redirect_prefix": "prefix", "redirect_url": "http://www.example.com", "region": "Luxembourg", "region_id": 1, "rules": [{"compare_type": "STARTS_WITH", "created_at": "2020-11-16T13:48:25+0000", "id": "0ca7bebd-7a54-4977-bca7-e4ac1e612ec7", "invert": false, "key": "key", "operating_status": "ONLINE", "project_id": 1, "provisioning_status": "ACTIVE", "region": "Luxembourg", "region_id": 1, "tags": ["test_tag"], "type": "PATH", "updated_at": "2020-11-16T13:48:26+0000", "value": "/images*"}], "tags": ["test_tag"], "updated_at": "2020-11-16T13:48:26+0000"}}
    RegistryArtifactCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/RegistryArtifactSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "RegistryArtifactCollectionSerializer", "type": "object"}
    FloatingIPCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/FloatingIPSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "FloatingIPCollectionSerializer", "type": "object"}
    RegistryUserUpdateSerializer: {"properties": {"duration": {"description": "User account operating time, days", "examples": [14], "maximum": 365, "minimum": -1, "title": "Duration", "type": "integer"}, "read_only": {"default": false, "description": "Read-only user", "examples": [false], "title": "Read Only", "type": "boolean"}}, "required": ["duration"], "title": "RegistryUserUpdateSerializer", "type": "object"}
    InferenceFlavorOutSerializerV3List: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/InferenceFlavorOutSerializerV3"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "InferenceFlavorOutSerializerV3List", "type": "object"}
    InstancePricingPreviewV2RequestSerializer: {"description": "Pricing details for creating instances with version 2 interfaces.", "examples": [{"flavor": "g1-standard-1-2", "interfaces": [{"floating_ip": {"source": "new"}, "network_id": "ddc28e44-2acb-499b-985b-831f29432e1c", "subnet_id": "2731a56e-a5c9-44be-80c2-02c57c594573", "type": "subnet"}, {"floating_ip": {"existing_floating_id": "57be69f6-6f6a-4f03-a4ad-8eb86c69ec0a", "source": "existing"}, "network_id": "53609647-2619-420a-b046-59905c8e3370", "subnet_id": "e3c6ee77-48cb-416b-b204-11b492cc776e3", "type": "subnet"}, {"network_id": "783b36b4-3ef4-48ac-879d-5b3ea53180d8", "subnet_id": "382a83e5-1b38-49f9-bd83-730353b29ed4", "type": "subnet"}, {"network_id": "783b36b4-3ef4-48ac-879d-5b3ea53180d8", "type": "any_subnet"}, "type": "external"], "names": ["my-instance-1"], "volumes": [{"size": 10, "source": "image", "type_name": "ssd_hiiops"}, {"size": 5, "source": "new-volume", "type_name": "standard"}, {"snapshot_id": "7cca40d7-a843-4e9f-ae08-62b9a394b1ab", "source": "snapshot"}]}], "properties": {"flavor": {"description": "The flavor of the instance.", "examples": ["g1-standard-1-2"], "title": "Flavor", "type": "string"}, "interfaces": {"description": "Subnet IPs and floating IPs", "items": {"$ref": "#/components/schemas/NewVmInterfaceSerializersPydantic"}, "title": "Interfaces", "type": "array"}, "name_templates": {"description": "A list of instance name templates. Either this or `names` must be specified.", "examples": [["my-instance-{ip_octets}"]], "items": {"anyOf": ["type": "string", "type": "null"]}, "title": "Name Templates", "type": "array"}, "names": {"description": "A list of instance names. Either this or `name_templates` must be specified.", "examples": [["my-instance-1"]], "items": {"type": "string"}, "title": "Names", "type": "array"}, "volumes": {"description": "A list of volumes to be created or used.", "examples": [[{"image_id": "b5b4d65d-945f-4b98-ab6f-332319c724ef", "size": 10, "source": "image", "type_name": "ssd_hiiops"}, {"size": 5, "source": "new-volume", "type_name": "standard"}]], "items": {"$ref": "#/components/schemas/InstanceVolumePricingRequestSerializer"}, "title": "Volumes", "type": "array"}}, "required": ["flavor", "interfaces"], "title": "InstancePricingPreviewV2RequestSerializer", "type": "object"}
    CreateSnapshotSerializer: {"properties": {"description": {"description": "Snapshot description", "examples": ["Snapshot description"], "title": "Description", "type": "string"}, "name": {"description": "Snapshot name", "examples": ["my-snapshot"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "volume_id": {"description": "Volume ID to make snapshot of", "examples": ["67baa7d1-08ea-4fc5-bef2-6b2465b7d227"], "format": "uuid4", "title": "Volume Id", "type": "string"}}, "required": ["volume_id", "name"], "title": "CreateSnapshotSerializer", "type": "object"}
    VirtualGPUClusterActionSerializer: {"discriminator": {"mapping": {"hard_reboot": "#/components/schemas/HardRebootVirtualGPUClusterSerializer", "resize": "#/components/schemas/ResizeVirtualGPUClusterSerializer", "soft_reboot": "#/components/schemas/SoftRebootVirtualGPUClusterSerializer", "start": "#/components/schemas/StartVirtualGPUClusterSerializer", "stop": "#/components/schemas/StopVirtualGPUClusterSerializer", "update_tags": "#/components/schemas/UpdateTagsGPUClusterSerializer"}, "propertyName": "action"}, "title": "VirtualGPUClusterActionSerializer", "anyOf": ["$ref": "#/components/schemas/StartVirtualGPUClusterSerializer", "$ref": "#/components/schemas/StopVirtualGPUClusterSerializer", "$ref": "#/components/schemas/SoftRebootVirtualGPUClusterSerializer", "$ref": "#/components/schemas/HardRebootVirtualGPUClusterSerializer", "$ref": "#/components/schemas/UpdateTagsGPUClusterSerializer", "$ref": "#/components/schemas/ResizeVirtualGPUClusterSerializer"]}
    CreateAllowPortAddressPairsSerializerV2: {"properties": {"allowed_address_pairs": {"default": [], "description": "A set of zero or more allowed port address pair and/or subnet masks", "examples": [[{"ip_address": "192.168.123.20", "mac_address": "00:16:3e:f2:87:16"}, {"ip_address": "192.168.0.0/17", "mac_address": "00:16:3e:f2:87:89"}]], "items": {"$ref": "#/components/schemas/AllowedAddressPairsSerializer"}, "maxItems": 10, "title": "Allowed Address Pairs", "type": "array"}}, "title": "CreateAllowPortAddressPairsSerializerV2", "type": "object"}
    ResourcesPricingResponseV2Serializer: {"description": "Pricing scheme for various resources", "examples": [{"instances": [{"currency_code": "USD", "discount_percent": 0.16, "price_per_hour": 1, "price_per_month": 720, "price_status": "show", "price_without_discount_per_month": 604.8, "tax_percent": 17}], "publicips": [{"currency_code": "USD", "discount_percent": 0.16, "price_per_hour": 1, "price_per_month": 720, "price_status": "show", "price_without_discount_per_month": 604.8, "tax_percent": 17}], "total_price": {"currency_code": "USD", "discount_percent": 0.16, "price_per_hour": 1, "price_per_month": 720, "price_status": "show", "price_without_discount_per_month": 604.8, "tax_percent": 17}, "volumes": [{"currency_code": "USD", "discount_percent": 0.16, "price_per_hour": 1, "price_per_month": 720, "price_status": "show", "price_without_discount_per_month": 604.8, "tax_percent": 17}]}], "properties": {"instances": {"items": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}, "title": "Instances", "type": "array"}, "publicips": {"items": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}, "title": "Publicips", "type": "array"}, "total_price": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}, "volumes": {"items": {"$ref": "#/components/schemas/ItemPriceResponseSerializer"}, "title": "Volumes", "type": "array"}}, "required": ["instances", "volumes", "publicips", "total_price"], "title": "ResourcesPricingResponseV2Serializer", "type": "object"}
    NetworkCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/NetworkSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "NetworkCollectionSerializer", "type": "object"}
    LoadBalancerPricingPreviewRequestSerializer: {"examples": ["flavor": "lb1-1-2"], "properties": {"flavor": {"description": "Load balancer flavor name", "examples": ["lb1-1-2"], "title": "Flavor", "type": "string"}}, "required": ["flavor"], "title": "LoadBalancerPricingPreviewRequestSerializer", "type": "object"}
    LbListenerCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/LbListenerSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "LbListenerCollectionSerializer", "type": "object"}
    K8sClusterPricingRequestV2Serializer: {"examples": ["pools": [{"flavor_id": "g0-standard-1-2", "node_count": 1}]], "properties": {"pools": {"description": "Cluster pools", "items": {"$ref": "#/components/schemas/K8sClusterPoolPricingRequestV2Serializer"}, "title": "Pools", "type": "array"}}, "required": ["pools"], "title": "K8sClusterPricingRequestV2Serializer", "type": "object"}
    SecurityGroupSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/SecurityGroupSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[SecurityGroupSerializer]", "type": "object"}
    InferenceInstanceInSerializerV3: {"properties": {"api_keys": {"description": "List of API keys for the inference instance. Multiple keys can be attached to one deployment.If `auth_enabled` and `api_keys` are both specified, a ValidationError will be raised.", "examples": [["key1", "key2"]], "items": {"type": "string"}, "title": "Api Keys", "type": "array"}, "auth_enabled": {"default": false, "deprecated": true, "description": "Set to `true` to enable API key authentication for the inference instance. `\"Authorization\": \"Bearer ****\\*\"` or `\"X-Api-Key\": \"****\\*\"` header is required for the requests to the instance if enabled. This field is deprecated and will be removed in the future. Use `api_keys` field instead.If `auth_enabled` and `api_keys` are both specified, a ValidationError will be raised.", "examples": [false], "title": "Auth Enabled", "type": "boolean"}, "command": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, "type": "null"], "default": null, "description": "Command to be executed when running a container from an image.", "examples": [["nginx", "-g", "daemon off;"]], "title": "Command"}, "containers": {"description": "List of containers for the inference instance.", "examples": [[{"region_id": 1, "scale": {"cooldown_period": 60, "max": 3, "min": 1, "triggers": {"cpu": {"threshold": 80}, "memory": {"threshold": 70}}}}]], "items": {"$ref": "#/components/schemas/ContainerInSerializerV3"}, "minItems": 1, "title": "Containers", "type": "array"}, "credentials_name": {"anyOf": ["type": "string", "type": "null"], "default": "", "description": "Registry credentials name", "examples": ["dockerhub"], "title": "Credentials Name"}, "description": {"anyOf": ["type": "string", "type": "null"], "default": "", "description": "Inference instance description.", "examples": ["My first instance"], "title": "Description"}, "envs": {"additionalProperties": {"type": "string"}, "default": {}, "description": "Environment variables for the inference instance.", "examples": [{"DEBUG_MODE": "False", "KEY": "12345"}], "title": "Envs", "type": "object"}, "flavor_name": {"description": "Flavor name for the inference instance.", "examples": ["inference-16vcpu-232gib-1xh100-80gb"], "minLength": 1, "title": "Flavor Name", "type": "string"}, "image": {"description": "Docker image for the inference instance. This field should contain the image name and tag in the format 'name:tag', e.g., 'nginx:latest'. It defaults to Docker Hub as the image registry, but any accessible Docker image URL can be specified.", "examples": ["nginx:latest"], "pattern": "^(?:(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)(?::[A-Za-z0-9_][A-Za-z0-9_.-]{0,127})?$", "title": "Image", "type": "string"}, "ingress_opts": {"anyOf": ["$ref": "#/components/schemas/IngressOptsSerializer", "type": "null"], "default": null, "description": "Ingress options for the inference instance", "examples": ["disable_response_buffering": true]}, "listening_port": {"description": "Listening port for the inference instance.", "examples": [80], "maximum": 65535, "minimum": 1, "title": "Listening Port", "type": "integer"}, "logging": {"anyOf": ["$ref": "#/components/schemas/LoggingInSerializer", "type": "null"], "default": null, "description": "Logging configuration for the inference instance", "examples": [{"destination_region_id": 1, "enabled": true, "retention_policy": {"period": 42}, "topic_name": "my-log-name"}, "enabled": false]}, "name": {"description": "Inference instance name.", "examples": ["my-instance"], "maxLength": 30, "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Name", "type": "string"}, "probes": {"anyOf": ["$ref": "#/components/schemas/InferenceInstanceProbesSerializerV2", "type": "null"], "default": null, "description": "Probes configured for all containers of the inference instance. If probes are not provided, and the `image_name` is from a the Model Catalog registry, the default probes will be used."}, "timeout": {"anyOf": [{"minimum": 0, "type": "integer"}, "type": "null"], "default": 120, "description": "Specifies
            the duration in seconds without any requests after which the containers will be downscaled to their minimum scale value as defined by `scale.min`. If set, this helps in optimizing resource usage by reducing the number of container instances during periods of inactivity. The default value when the parameter is not set is 120.", "examples": [120], "title": "Timeout", "x-stainless-naming": {"python": {"method_argument": "api_timeout"}}}}, "required": ["name", "image", "listening_port", "containers", "flavor_name"], "title": "InferenceInstanceInSerializerV3", "type": "object"}
    InferenceRegistryCredentialOutSerializer: {"properties": {"name": {"description": "Registry credential name.", "examples": ["docker-io"], "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Name", "type": "string"}, "project_id": {"description": "Project ID to which the inference registry credentials belongs.", "examples": [1], "title": "Project Id", "type": "integer"}, "registry_url": {"description": "Registry URL.", "examples": ["registry.example.com"], "title": "Registry Url", "type": "string"}, "username": {"description": "Registry username.", "examples": ["username"], "title": "Username", "type": "string"}}, "required": ["project_id", "name", "username", "registry_url"], "title": "InferenceRegistryCredentialOutSerializer", "type": "object"}
    HttpResponseClientErrorSchema: {"type": "object", "description": "Response object with error", "properties": {"exception_class": {"type": "string", "description": "ValidationError"}, "message": {"type": "string", "description": "Error message"}, "request_id": {"type": "string", "description": "Request ID, if logging is not in debug mode"}}, "example": {"exception_class": "ValidationError", "message": "Validation error: {'limit': ['Not a valid integer.']}", "request_id": "6c220206-3812-49e6-9b0e-802ad906cd77"}}
    NewInterfaceSpecificSubnetSchema: {"type": "object", "properties": {"ddos_profile": {"type": ["null", "object"], "description": "Advanced DDoS protection.", "allOf": ["$ref": "#/components/schemas/DeprecatedCreateDdosProfileSchema"]}, "interface_name": {"type": "string", "maxLength": 37, "description": "Interface name"}, "port_group": {"type": "integer", "minimum": 0, "maximum": 1, "description": "Each group will be added to the separate trunk."}, "security_groups": {"type": "array", "description": "List of security group IDs", "items": {"$ref": "#/components/schemas/MandatoryIdSchema"}}, "subnet_id": {"type": "string", "description": "Port will get an IP address from this subnet"}, "type": {"type": "string", "default": "subnet", "description": "Must be 'subnet'"}}, "required": ["subnet_id"], "description": "Instance will be attached to specified subnet", "example": {"subnet_id": "e3c6ee77-48cb-416b-b204-11b492cc776e3", "type": "subnet", "security_groups": ["id": "4536dba1-93b1-492e-b3df-270b6b9f3650", "id": "cee2ca1f-507a-4a31-b714-f6c1ffb4bdfa"], "ddos_profile": {"profile_template": 29, "fields": []}, "interface_name": "my-subnet-interface"}}
    PatchLaasStatusSerializer: {"properties": {"is_initialized": {"description": "Boolean showing whether client is initialized with LaaS", "examples": [true], "title": "Is Initialized", "type": "boolean"}, "namespace": {"anyOf": [{"maxLength": 32, "minLength": 0, "type": "string"}, "type": "null"], "default": null, "description": "Optional. Custom namespace", "examples": ["custom"], "title": "Namespace"}}, "required": ["is_initialized"], "title": "PatchLaasStatusSerializer", "type": "object"}
    PullSecretUpdateSerializer: {"properties": {"login": {"anyOf": [{"maxLength": 100, "minLength": 1, "type": "string"}, "type": "null"], "default": null, "description": "Pull secret login", "examples": ["login"], "title": "Login"}, "password": {"anyOf": [{"format": "password", "maxLength": 5000, "minLength": 1, "type": "string", "writeOnly": true}, "type": "null"], "default": null, "description": "Pull secret password", "examples": ["password"], "title": "Password"}, "registry": {"anyOf": [{"maxLength": 400, "minLength": 1, "type": "string"}, "type": "null"], "default": null, "description": "Pull secret registry", "examples": ["some.registry.com"], "title": "Registry"}}, "title": "PullSecretUpdateSerializer", "type": "object"}
    PricingLifecyclePolicyV2Serializer: {"properties": {"schedules": {"default": [], "description": "List of schedules associated with the policy.", "items": {"$ref": "#/components/schemas/CreateScheduleSerializer"}, "maxItems": 10, "title": "Schedules", "type": "array"}, "volume_ids": {"description": "List of volume IDs.", "examples": [["3ed9e2ce-f906-47fb-ba32-c25a3f63df4f"]], "items": {"format": "uuid4", "type": "string"}, "maxItems": 100, "minItems": 1, "title": "Volume Ids", "type": "array", "uniqueItems": true}}, "required": ["volume_ids"], "title": "PricingLifecyclePolicyV2Serializer", "type": "object"}
    CreateAIClusterGPUSerializer: {"properties": {"flavor": {"description": "Flavor name", "examples": ["bm3-ai-1xlarge-h100-80-8"], "title": "Flavor", "type": "string"}, "image_id": {"description": "Image ID", "examples": ["f01fd9a0-9548-48ba-82dc-a8c8b2d6f2f1"], "format": "uuid4", "title": "Image Id", "type": "string"}, "instances_count": {"default": 1, "description": "Number of servers to create", "examples": [1], "minimum": 1, "title": "Instances Count", "type": "integer"}, "interfaces": {"description": "A list of network interfaces for the server. You can create one or more interfaces - private, public, or both.", "examples": [[{"network_id": "024a29e9-b4b7-4c91-9a46-505be123d9f8", "subnet_id": "91200a6c-07e0-42aa-98da-32d1f6545ae7", "type": "subnet"}]], "items": {"$ref": "#/components/schemas/CreateGPUClusterInterfaceSerializer"}, "minItems": 1, "title": "Interfaces", "type": "array"}, "name": {"description": "GPU Cluster name", "examples": ["my-gpu-cluster"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "password": {"description": "A password for a bare metal server. This parameter is used to set a password for the \"Admin\" user on a Windows instance, a default user or a new user on a Linux instance", "title": "Password", "type": "string"}, "security_groups": {"description": "Security group UUIDs", "items": {"$ref": "#/components/schemas/MandatoryIdSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "ssh_key_name": {"description": "Specifies the name of the SSH keypair, created via the\n[/v1/`ssh_keys` endpoint](/docs/api-reference/cloud/ssh-keys/add-or-generate-ssh-key).", "examples": ["my-ssh-key"], "title": "Ssh Key Name", "type": "string"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "user_data": {"description": "String in base64 format. Must not be passed together with 'username' or 'password'. Examples of the `user_data`: https://cloudinit.readthedocs.io/en/latest/topics/examples.html", "title": "User Data", "type": "string"}, "username": {"description": "A name of a new user in the Linux instance. It may be passed with a 'password' parameter", "title": "Username", "type": "string"}}, "required": ["name", "flavor", "image_id", "interfaces"], "title": "CreateAIClusterGPUSerializer", "type": "object"}
    RegionCapacityOutSerializerV3List: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/RegionCapacityOutSerializerV3"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "RegionCapacityOutSerializerV3List", "type": "object"}
    UsageReportResponseSerializer: {"properties": {"count": {"description": "Total count of the resources", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "resources": {"items": {"discriminator": {"mapping": {"ai_cluster": "#/components/schemas/ResourceAiClusterSerializer", "ai_virtual_cluster": "#/components/schemas/ResourceAiVirtualClusterSerializer", "backup": "#/components/schemas/ResourceBackupSerializer", "baremetal": "#/components/schemas/ResourceBaremetalSerializer", "basic_vm": "#/components/schemas/ResourceBasicVmSerializer", "containers": "#/components/schemas/ResourceContainerSerializer", "dbaas_postgresql_connection_pooler": "#/components/schemas/ResourceDBAASPostgreSQLPoolerSerializer", "dbaas_postgresql_cpu": "#/components/schemas/ResourceDBAASPostgreSQLCPUSerializer", "dbaas_postgresql_memory": "#/components/schemas/ResourceDBAASPostgreSQLMemorySerializer", "dbaas_postgresql_public_network": "#/components/schemas/ResourceDBAASPostgreSQLPublicNetworkSerializer", "dbaas_postgresql_volume": "#/components/schemas/ResourceDBAASPostgreSQLVolumeSerializer", "egress_traffic": "#/components/schemas/ResourceEgressTrafficSerializer", "external_ip": "#/components/schemas/ResourceExternalIpSerializer", "file_share": "#/components/schemas/ResourceFileShareSerializer", "floatingip": "#/components/schemas/ResourceFloatingIpSerializer", "functions": "#/components/schemas/ResourceFunctionsSerializer", "functions_calls": "#/components/schemas/ResourceFunctionCallsSerializer", "functions_traffic": "#/components/schemas/ResourceFunctionEgressTrafficSerializer", "image": "#/components/schemas/ResourceImagesSerializer", "inference": "#/components/schemas/ResourceInferenceSerializer", "instance": "#/components/schemas/ResourceInstanceSerializer", "load_balancer": "#/components/schemas/ResourceLoadBalancerSerializer", "log_index": "#/components/schemas/ResourceLogIndexSerializer", "snapshot": "#/components/schemas/ResourceSnapshotSerializer", "volume": "#/components/schemas/ResourceVolumeSerializer"}, "propertyName": "type"}, "anyOf": ["$ref": "#/components/schemas/ResourceAiClusterSerializer", "$ref": "#/components/schemas/ResourceAiVirtualClusterSerializer", "$ref": "#/components/schemas/ResourceBaremetalSerializer", "$ref": "#/components/schemas/ResourceBasicVmSerializer", "$ref": "#/components/schemas/ResourceBackupSerializer", "$ref": "#/components/schemas/ResourceContainerSerializer", "$ref": "#/components/schemas/ResourceEgressTrafficSerializer", "$ref": "#/components/schemas/ResourceExternalIpSerializer", "$ref": "#/components/schemas/ResourceFileShareSerializer", "$ref": "#/components/schemas/ResourceFloatingIpSerializer", "$ref": "#/components/schemas/ResourceFunctionsSerializer", "$ref": "#/components/schemas/ResourceFunctionCallsSerializer", "$ref": "#/components/schemas/ResourceFunctionEgressTrafficSerializer", "$ref": "#/components/schemas/ResourceImagesSerializer", "$ref": "#/components/schemas/ResourceInferenceSerializer", "$ref": "#/components/schemas/ResourceInstanceSerializer", "$ref": "#/components/schemas/ResourceLoadBalancerSerializer", "$ref": "#/components/schemas/ResourceLogIndexSerializer", "$ref": "#/components/schemas/ResourceSnapshotSerializer", "$ref": "#/components/schemas/ResourceVolumeSerializer", "$ref": "#/components/schemas/ResourceDBAASPostgreSQLPoolerSerializer", "$ref": "#/components/schemas/ResourceDBAASPostgreSQLMemorySerializer", "$ref": "#/components/schemas/ResourceDBAASPostgreSQLPublicNetworkSerializer", "$ref": "#/components/schemas/ResourceDBAASPostgreSQLCPUSerializer", "$ref": "#/components/schemas/ResourceDBAASPostgreSQLVolumeSerializer"]}, "title": "Resources", "type": "array"}, "totals": {"items": {"discriminator": {"mapping": {"ai_cluster": "#/components/schemas/TotalAiClusterReportItemSerializer", "ai_virtual_cluster": "#/components/schemas/TotalAiVirtualClusterReportItemSerializer", "baremetal": "#/components/schemas/TotalBaremetalReportItemSerializer", "basic_vm": "#/components/schemas/TotalBasicVmReportItemSerializer", "containers": "#/components/schemas/TotalContainerReportItemSerializer",
                "dbaas_postgresql_connection_pooler": "#/components/schemas/TotalDBAASPostgreSQLPoolerReportItemSerializer", "dbaas_postgresql_cpu": "#/components/schemas/TotalDBAASPostgreSQLCPUReportItemSerializer", "dbaas_postgresql_memory": "#/components/schemas/TotalDBAASPostgreSQLMemoryReportItemSerializer", "dbaas_postgresql_public_network": "#/components/schemas/TotalDBAASPostgreSQLPublicNetworkReportItemSerializer", "dbaas_postgresql_volume": "#/components/schemas/TotalDBAASPostgreSQLVolumeReportItemSerializer", "egress_traffic": "#/components/schemas/TotalEgressTrafficReportItemSerializer", "external_ip": "#/components/schemas/TotalExternalIpReportItemSerializer", "file_share": "#/components/schemas/TotalFileShareReportItemSerializer", "floatingip": "#/components/schemas/TotalFloatingIpReportItemSerializer", "functions": "#/components/schemas/TotalFunctionsReportItemSerializer", "functions_calls": "#/components/schemas/TotalFunctionCallsReportItemSerializer", "functions_traffic": "#/components/schemas/TotalFunctionEgressTrafficReportItemSerializer", "image": "#/components/schemas/TotalImagesReportItemSerializer", "inference": "#/components/schemas/TotalInferenceReportItemSerializer", "instance": "#/components/schemas/TotalInstanceReportItemSerializer", "load_balancer": "#/components/schemas/TotalLoadBalancerReportItemSerializer", "log_index": "#/components/schemas/TotalLogIndexReportItemSerializer", "snapshot": "#/components/schemas/TotalSnapshotReportItemSerializer", "volume": "#/components/schemas/TotalVolumeReportItemSerializer"}, "propertyName": "type"}, "anyOf": ["$ref": "#/components/schemas/TotalAiClusterReportItemSerializer", "$ref": "#/components/schemas/TotalAiVirtualClusterReportItemSerializer", "$ref": "#/components/schemas/TotalBaremetalReportItemSerializer", "$ref": "#/components/schemas/TotalBasicVmReportItemSerializer", "$ref": "#/components/schemas/TotalContainerReportItemSerializer", "$ref": "#/components/schemas/TotalEgressTrafficReportItemSerializer", "$ref": "#/components/schemas/TotalExternalIpReportItemSerializer", "$ref": "#/components/schemas/TotalFileShareReportItemSerializer", "$ref": "#/components/schemas/TotalFloatingIpReportItemSerializer", "$ref": "#/components/schemas/TotalFunctionsReportItemSerializer", "$ref": "#/components/schemas/TotalFunctionCallsReportItemSerializer", "$ref": "#/components/schemas/TotalFunctionEgressTrafficReportItemSerializer", "$ref": "#/components/schemas/TotalImagesReportItemSerializer", "$ref": "#/components/schemas/TotalInferenceReportItemSerializer", "$ref": "#/components/schemas/TotalInstanceReportItemSerializer", "$ref": "#/components/schemas/TotalLoadBalancerReportItemSerializer", "$ref": "#/components/schemas/TotalLogIndexReportItemSerializer", "$ref": "#/components/schemas/TotalSnapshotReportItemSerializer", "$ref": "#/components/schemas/TotalVolumeReportItemSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLPoolerReportItemSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLMemoryReportItemSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLPublicNetworkReportItemSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLCPUReportItemSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLVolumeReportItemSerializer"]}, "title": "Totals", "type": "array"}}, "required": ["count", "resources", "totals"], "title": "UsageReportResponseSerializer", "type": "object"}
    ResourceEgressTrafficSerializer: {"description": "These properties are common for all individual egress traffic\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["egress_traffic_baremetal_gbs"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "bytes", "description": "Unit of billing value", "examples": ["bytes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "instance_name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Name of the instance", "examples": ["instance_name"], "title": "Instance Name"}, "instance_type": {"$ref": "#/components/schemas/EgressTrafficInstanceType", "description": "Type of the instance", "examples": ["baremetal"]}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "port_id": {"description": "ID of the port the traffic is associated with", "format": "uuid", "title": "Port Id", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"description": "Unit of size", "examples": ["bytes"], "title": "Size Unit", "type": "string"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "egress_traffic", "title": "Type", "type": "string"}, "vm_id": {"description": "ID of the bare metal server the traffic is associated with", "format": "uuid", "title": "Vm Id", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "instance_type", "first_seen", "last_seen", "project_id", "vm_id", "size_unit", "port_id", "tags"], "title": "ResourceEgressTrafficSerializer", "type": "object"}
    InferenceInstanceLogSerializerV3List: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/InferenceInstanceLogSerializerV3"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "InferenceInstanceLogSerializerV3List", "type": "object"}
    InstanceIdSerializer: {"properties": {"instance_id": {"description": "Instance ID", "examples": ["169942e0-9b53-42df-95ef-1a8b6525c2bd"], "format": "uuid4", "title": "Instance Id", "type": "string"}}, "required": ["instance_id"], "title": "InstanceIdSerializer", "type": "object"}
    K8sClusterCreateV2Serializer: {"properties": {"add_ons": {"$ref": "#/components/schemas/K8sClusterAddonsCreateV2Serializer", "description": "Cluster add-ons configuration", "examples": ["slurm": {"enabled": true, "file_share_id": "cbc94d0e-06c6-4d12-9e86-9782ba14fc8c", "ssh_key_ids": ["25735292-bd97-44b0-a1af-d7eab876261d", "efc01f3a-35b9-4385-89f9-e38439093ee7"], "worker_count": 2}]}, "authentication": {"anyOf": ["$ref": "#/components/schemas/K8sClusterAuthenticationCreateV2Serializer", "type": "null"], "default": null, "description": "Authentication settings", "examples": ["oidc": {"client_id": "kubernetes", "groups_claim": "groups", "groups_prefix": "oidc:", "issuer_url": "https://accounts.provider.example", "required_claims": {"claim": "value"}, "signing_algs": ["RS256", "RS512"], "username_claim": "sub", "username_prefix": "oidc:"}]}, "autoscaler_config": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": null, "description": "Cluster autoscaler configuration.\n\nIt allows you to override the default cluster-autoscaler parameters provided by the platform with your preferred values.\n\nSupported parameters (in alphabetical order):\n- balance-similar-node-groups (boolean: true/false) - Detect similar node groups and balance the number of nodes between them.\n- expander (string: random, most-pods, least-waste, price, priority, grpc) - Type of node group expander to be used in scale up. Specifying multiple values separated by commas will call the expanders in succession until there is only one option remaining.\n- expendable-pods-priority-cutoff (float) - Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.\n- ignore-daemonsets-utilization (boolean: true/false) - Should CA ignore DaemonSet pods when calculating resource utilization for scaling down.\n- max-empty-bulk-delete (integer) - Maximum number of empty nodes that can be deleted at the same time.\n- max-graceful-termination-sec (integer) - Maximum number of seconds CA waits for pod termination when trying to scale down a node.\n- max-node-provision-time (duration: e.g., '15m') - The default maximum time CA waits for node to be provisioned - the value can be overridden per node group.\n- max-total-unready-percentage (float) - Maximum percentage of unready nodes in the cluster. After this is exceeded, CA halts operations.\n- new-pod-scale-up-delay (duration: e.g., '10s') - Pods less than this old will not be considered for scale-up. Can be increased for individual pods through annotation.\n- ok-total-unready-count (integer) - Number of allowed unready nodes, irrespective of max-total-unready-percentage.\n- scale-down-delay-after-add (duration: e.g., '10m') - How long after scale up that scale down evaluation resumes.\n- scale-down-delay-after-delete (duration: e.g., '10s') - How long after node deletion that scale down evaluation resumes.\n- scale-down-delay-after-failure (duration: e.g., '3m') - How long after scale down failure that scale down evaluation resumes.\n- scale-down-enabled (boolean: true/false) - Should CA scale down the cluster.\n- scale-down-unneeded-time (duration: e.g., '10m') - How long a node should be unneeded before it is eligible for scale down.\n- scale-down-unready-time (duration: e.g., '20m') - How long an unready node should be unneeded before it is eligible for scale down.\n- scale-down-utilization-threshold (float) - The maximum value between the sum of cpu requests and sum of memory requests of all pods running on the node divided by node's corresponding allocatable resource, below which a node can be considered for scale down.\n- scan-interval (duration: e.g., '10s') - How often cluster is reevaluated for scale up or down.\n- skip-nodes-with-custom-controller-pods (boolean: true/false) - If true cluster autoscaler will never delete nodes with pods owned by custom controllers.\n- skip-nodes-with-local-storage (boolean: true/false)
            - If true cluster autoscaler will never delete nodes with pods with local storage, e.g. EmptyDir or HostPath.\n- skip-nodes-with-system-pods (boolean: true/false) - If true cluster autoscaler will never delete nodes with pods from kube-system (except for DaemonSet or mirror pods).", "examples": ["scale-down-unneeded-time": "5m"], "title": "Autoscaler Config"}, "cni": {"anyOf": ["$ref": "#/components/schemas/K8sClusterCNICreateV2Serializer", "type": "null"], "default": null, "description": "Cluster CNI settings", "examples": [{"cilium": {"encryption": true, "hubble_relay": true, "hubble_ui": true, "lb_acceleration": true, "lb_mode": "snat", "tunnel": "geneve"}, "provider": "cilium"}]}, "csi": {"$ref": "#/components/schemas/K8sClusterCSICreateV2Serializer", "description": "Container Storage Interface (CSI) driver settings", "examples": ["nfs": {"vast_enabled": true}]}, "ddos_profile": {"anyOf": ["$ref": "#/components/schemas/K8sClusterDdosProfileCreateV2Serializer", "type": "null"], "default": null, "description": "Advanced DDoS Protection profile", "examples": [{"enabled": true, "fields": [{"base_field": 10, "field_value": [45046, 45047]}], "profile_template": 29}]}, "fixed_network": {"anyOf": ["type": "string", "type": "null"], "default": "", "description": "The network of the cluster", "examples": ["3fa85f64-5717-4562-b3fc-2c963f66afa6"], "title": "Fixed Network"}, "fixed_subnet": {"anyOf": ["type": "string", "type": "null"], "default": "", "description": "The subnet of the cluster", "examples": ["3fa85f64-5717-4562-b3fc-2c963f66afa6"], "title": "Fixed Subnet"}, "is_ipv6": {"anyOf": ["type": "boolean", "type": "null"], "default": false, "description": "Enable public v6 address", "examples": [true, false], "title": "Is Ipv6"}, "keypair": {"description": "The keypair of the cluster", "examples": ["some_keypair"], "maxLength": 255, "minLength": 1, "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Keypair", "type": "string"}, "logging": {"anyOf": ["$ref": "#/components/schemas/K8sClusterLoggingCreateV2Serializer", "type": "null"], "default": null, "description": "Logging configuration", "examples": [{"destination_region_id": 1, "enabled": true, "retention_policy": {"period": 45}, "topic_name": "my-log-name"}, null]}, "name": {"description": "The name of the cluster", "examples": ["string"], "maxLength": 20, "minLength": 1, "pattern": "^[a-z][a-z0-9\\-]{0,18}[a-z0-9]$", "title": "Name", "type": "string"}, "pods_ip_pool": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The IP pool for the pods", "examples": ["172.16.0.0/18"], "title": "Pods Ip Pool"}, "pods_ipv6_pool": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The IPv6 pool for the pods", "examples": ["2a03:90c0:88:393::/64"], "title": "Pods Ipv6 Pool"}, "pools": {"description": "The pools of the cluster", "items": {"$ref": "#/components/schemas/K8sClusterPoolCreateV2Serializer"}, "minItems": 1, "title": "Pools", "type": "array"}, "services_ip_pool": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The IP pool for the services", "examples": ["172.24.0.0/18"], "title": "Services Ip Pool"}, "services_ipv6_pool": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The IPv6 pool for the services", "examples": ["2a03:90c0:88:381::/108"], "title": "Services Ipv6 Pool"}, "version": {"description": "The version of the k8s cluster", "examples": ["1.28.1"], "title": "Version", "type": "string"}}, "required": ["keypair", "name", "pools", "version"], "title": "K8sClusterCreateV2Serializer", "type": "object"}
    AssignFloatingIPSerializer: {"properties": {"fixed_ip_address": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "default": null, "description": "Fixed IP address", "examples": ["192.168.10.15"], "title": "Fixed Ip Address"}, "port_id": {"description": "Port ID", "examples": ["ee2402d0-f0cd-4503-9b75-69be1d11c5f1"], "format": "uuid4", "title": "Port Id", "type": "string"}}, "required": ["port_id"], "title": "AssignFloatingIPSerializer", "type": "object"}
    ResourceDBAASPostgreSQLPoolerSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_public_network_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the cluster", "examples": ["cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_connection_pooler", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the cluster", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid"], "title": "ResourceDBAASPostgreSQLPoolerSerializer", "type": "object"}
    NewVmInterfaceSerializersPydantic: {"discriminator": {"mapping": {"any_subnet": "#/components/schemas/NewInterfaceAnySubnetFipSerializerPydantic", "external": "#/components/schemas/NewInterfaceExternalSerializerPydantic", "reserved_fixed_ip": "#/components/schemas/NewInterfaceReservedFixedIpFipSerializerPydantic", "subnet": "#/components/schemas/NewInterfaceSpecificSubnetFipSerializerPydantic"}, "propertyName": "type"}, "title": "NewVmInterfaceSerializersPydantic", "anyOf": ["$ref": "#/components/schemas/NewInterfaceExternalSerializerPydantic", "$ref": "#/components/schemas/NewInterfaceSpecificSubnetFipSerializerPydantic", "$ref": "#/components/schemas/NewInterfaceAnySubnetFipSerializerPydantic", "$ref": "#/components/schemas/NewInterfaceReservedFixedIpFipSerializerPydantic"]}
    RegionProductChoices: {"enum": ["containers", "inference"], "title": "RegionProductChoices", "type": "string"}
    CreateLbPoolSerializer: {"properties": {"ca_secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Secret ID of CA certificate bundle", "title": "Ca Secret Id"}, "crl_secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Secret ID of CA revocation list file", "title": "Crl Secret Id"}, "healthmonitor": {"anyOf": ["$ref": "#/components/schemas/CreateLbHealthMonitorSerializer", "type": "null"], "default": null, "description": "Health monitor details", "examples": [{"delay": 10, "http_method": "GET", "max_retries": 3, "max_retries_down": 3, "timeout": 5, "type": "HTTP", "url_path": "/"}]}, "lb_algorithm": {"$ref": "#/components/schemas/LbAlgorithmEnum", "description": "Load balancer algorithm", "examples": ["ROUND_ROBIN"]}, "listener_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "Listener ID", "title": "Listener Id"}, "loadbalancer_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "Loadbalancer ID", "examples": ["bbb35f84-35cc-4b2f-84c2-a6a29bba68aa"], "title": "Loadbalancer Id"}, "members": {"anyOf": [{"items": {"$ref": "#/components/schemas/CreateLbPoolMemberSerializer"}, "type": "array"}, "type": "null"], "default": null, "description": "Pool members", "examples": [[{"address": "192.168.1.101", "instance_id": "a7e7e8d6-0bf7-4ac9-8170-831b47ee2ba9", "protocol_port": 8000, "weight": 2}, {"address": "192.168.1.102", "instance_id": "169942e0-9b53-42df-95ef-1a8b6525c2bd", "protocol_port": 8000, "weight": 4}]], "title": "Members"}, "name": {"description": "Pool name", "examples": ["pool_name"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "protocol": {"$ref": "#/components/schemas/LbPoolProtocolEnum", "description": "Protocol", "examples": ["HTTP"]}, "secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Secret ID for TLS client authentication to the member servers", "title": "Secret Id"}, "session_persistence": {"anyOf": ["$ref": "#/components/schemas/MutateLbSessionPersistence", "type": "null"], "default": null, "description": "Session persistence details", "examples": [{"cookie_name": "cookie_name", "type": "APP_COOKIE"}]}, "timeout_client_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "default": null, "description": "Frontend client inactivity timeout in milliseconds", "examples": [50000], "title": "Timeout Client Data"}, "timeout_member_connect": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "default": null, "description": "Backend member connection timeout in milliseconds", "examples": [50000], "title": "Timeout Member Connect"}, "timeout_member_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "default": null, "description": "Backend member inactivity timeout in milliseconds", "title": "Timeout Member Data"}}, "required": ["name", "lb_algorithm", "protocol"], "title": "CreateLbPoolSerializer", "type": "object"}
    ClusterManagedBy: {"enum": ["k8s", "user"], "title": "ClusterManagedBy", "type": "string"}
    ClientUsersCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/ClientUsersSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ClientUsersCollectionSerializer", "type": "object"}
    UsageReportRequestSerializer: {"additionalProperties": false, "properties": {"enable_last_day": {"default": false, "description": "Expenses for the last specified day are taken into account. As the default, False.", "examples": [false], "title": "Enable Last Day", "type": "boolean"}, "limit": {"default": 10, "description": "The response resources limit. Defaults to 10.", "examples": [10], "exclusiveMinimum": 0, "title": "Limit", "type": "integer"}, "offset": {"default": 0, "description": "The response resources offset.", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}, "projects": {"anyOf": [{"items": {"type": "integer"}, "type": "array"}, "type": "null"], "default": null, "description": "List of project IDs", "examples": [[16, 17, 18, 19, 20]], "title": "Projects"}, "regions": {"description": "List of region IDs.", "examples": [[1, 2, 3]], "items": {"type": "integer"}, "title": "Regions", "type": "array"}, "schema_filter": {"description": "Extended filter for field filtering.", "discriminator": {"mapping": {"ai_cluster": "#/components/schemas/SchemaFilterAiClusterSerializer", "ai_virtual_cluster": "#/components/schemas/SchemaFilterAiVirtualClusterSerializer", "backup": "#/components/schemas/SchemaFilterBackupSerializer", "baremetal": "#/components/schemas/SchemaFilterBaremetalSerializer", "basic_vm": "#/components/schemas/SchemaFilterBasicVmSerializer", "containers": "#/components/schemas/SchemaFilterContainersSerializer", "dbaas_postgresql_connection_pooler": "#/components/schemas/SchemaFilterDBAASPostgreSQLPoolerSerializer", "dbaas_postgresql_cpu": "#/components/schemas/SchemaFilterDBAASPostgreSQLCPUSerializer", "dbaas_postgresql_memory": "#/components/schemas/SchemaFilterDBAASPostgreSQLMemorySerializer", "dbaas_postgresql_public_network": "#/components/schemas/SchemaFilterDBAASPostgreSQLPublicNetworkSerializer", "dbaas_postgresql_volume": "#/components/schemas/SchemaFilterDBAASPostgreSQLVolumeSerializer", "egress_traffic": "#/components/schemas/SchemaFilterEgressTrafficSerializer", "external_ip": "#/components/schemas/SchemaFilterExternalIpSerializer", "file_share": "#/components/schemas/SchemaFilterFileShareSerializer", "floatingip": "#/components/schemas/SchemaFilterFloatingIpSerializer", "functions": "#/components/schemas/SchemaFilterFunctionsSerializer", "functions_calls": "#/components/schemas/SchemaFilterFunctionsCallsSerializer", "functions_traffic": "#/components/schemas/SchemaFilterFunctionsTrafficSerializer", "image": "#/components/schemas/SchemaFilterImageSerializer", "inference": "#/components/schemas/SchemaFilterInferenceSerializer", "instance": "#/components/schemas/SchemaFilterInstanceSerializer", "load_balancer": "#/components/schemas/SchemaFilterLoadBalancerSerializer", "log_index": "#/components/schemas/SchemaFilterLogIndexSerializer", "snapshot": "#/components/schemas/SchemaFilterSnapshotSerializer", "volume": "#/components/schemas/SchemaFilterVolumeSerializer"}, "propertyName": "type"}, "examples": [{"field": "flavor", "type": "instance", "values": ["g1-standard-1-2"]}], "title": "Schema Filter", "anyOf": ["$ref": "#/components/schemas/SchemaFilterSnapshotSerializer", "$ref": "#/components/schemas/SchemaFilterInstanceSerializer", "$ref": "#/components/schemas/SchemaFilterAiClusterSerializer", "$ref": "#/components/schemas/SchemaFilterAiVirtualClusterSerializer", "$ref": "#/components/schemas/SchemaFilterBasicVmSerializer", "$ref": "#/components/schemas/SchemaFilterBaremetalSerializer", "$ref": "#/components/schemas/SchemaFilterVolumeSerializer", "$ref": "#/components/schemas/SchemaFilterFileShareSerializer", "$ref": "#/components/schemas/SchemaFilterImageSerializer", "$ref": "#/components/schemas/SchemaFilterFloatingIpSerializer", "$ref": "#/components/schemas/SchemaFilterEgressTrafficSerializer", "$ref": "#/components/schemas/SchemaFilterLoadBalancerSerializer", "$ref": "#/components/schemas/SchemaFilterExternalIpSerializer", "$ref": "#/components/schemas/SchemaFilterBackupSerializer", "$ref": "#/components/schemas/SchemaFilterLogIndexSerializer", "$ref": "#/components/schemas/SchemaFilterFunctionsSerializer",
            "$ref": "#/components/schemas/SchemaFilterFunctionsCallsSerializer", "$ref": "#/components/schemas/SchemaFilterFunctionsTrafficSerializer", "$ref": "#/components/schemas/SchemaFilterContainersSerializer", "$ref": "#/components/schemas/SchemaFilterInferenceSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLVolumeSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLPublicNetworkSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLCPUSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLMemorySerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLPoolerSerializer"]}, "sorting": {"default": ["project": "asc"], "description": "List of sorting filters (JSON objects) fields: project. directions: asc, desc.", "items": {"$ref": "#/components/schemas/UsageReportSortingRequestSerializer"}, "title": "Sorting", "type": "array"}, "tags": {"$ref": "#/components/schemas/TagsFilterSerializer", "description": "Filter by tags", "examples": [{"condition_type": "OR", "conditions": [{"key": "os_version", "strict": true, "value": "22.04"}, {"key": "os_version", "strict": true, "value": "23.04"}]}]}, "time_from": {"description": "The start date of the report period (ISO 8601). The report starts from the beginning of this day.", "examples": ["2023-01-01T00:00:00Z"], "format": "date-time", "title": "Time From", "type": "string"}, "time_to": {"description": "The end date of the report period (ISO 8601). The report ends just before the beginning of this day.", "examples": ["2023-02-01T00:00:00Z"], "format": "date-time", "title": "Time To", "type": "string"}, "types": {"description": "List of resource types to be filtered in the report.", "examples": [["egress_traffic", "instance"]], "items": {"$ref": "#/components/schemas/PrebillingResourceTypes"}, "title": "Types", "type": "array"}}, "required": ["time_from", "time_to"], "title": "UsageReportRequestSerializer", "type": "object"}
    FaasApiKeyPatchSerializer: {"properties": {"description": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Optional key description", "examples": ["key-description"], "title": "Description"}, "expire": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Key expires at", "examples": ["2023-08-22T11:21:00Z"], "title": "Expire"}, "functions": {"description": "List of functions using key", "items": {"$ref": "#/components/schemas/NamespacedName"}, "title": "Functions", "type": "array"}}, "required": ["functions"], "title": "FaasApiKeyPatchSerializer", "type": "object"}
    CreateKeypairSerializer: {"properties": {"public_key": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Public part of the key. To generate public and private keys in the platform, do not specify the parameter in the request body.", "examples": ["ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFHrnwGVBZs6q6vmTBzQFfzdRLQW8N6Rd0ogGe3h8tm83ZJLTTsF+1H4JcOvwI5ETkHMaFIWd2U15nHU5M7plE6UPRKfzy4rq6yI6cE4tojd3A9attMpbEEX7EbGKrbrb4AsjzxHKAVaREAb31ZplJkUlsiees25hTQXBcWQnOESlc9RCxZ/QQgNUUgqm7QGg7CNkL8Mpq9V4YaOhcFGWj0jXP1CL3g6Xe3xJo1CmUbkIOGUyAmrSfLEiy2O91iOUhbmYQyXksznNrT9O6uLkijf6syLZOdyAuUd/Z86eYXej4/YsvIA5eIFU4B6y9zOXEO2A81txPYMRAytYt7+e7 alice@alice"], "title": "Public Key"}, "shared_in_project": {"anyOf": ["type": "boolean", "type": "null"], "default": true, "description": "Keypair is shared for all users in the project. Default True", "examples": [true, false], "title": "Shared In Project"}, "sshkey_name": {"description": "Keypair name", "examples": ["alice"], "maxLength": 255, "minLength": 1, "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Sshkey Name", "type": "string"}}, "required": ["sshkey_name"], "title": "Create Keypair schema", "type": "object"}
    LbListenerSerializer: {"properties": {"allowed_cidrs": {"anyOf": [{"items": {"format": "ipvanynetwork", "type": "string"}, "type": "array"}, "type": "null"], "description": "Network CIDRs from which service will be accessible", "examples": [["10.0.0.0/8"]], "title": "Allowed Cidrs"}, "connection_limit": {"description": "Limit of simultaneous connections", "maximum": 1000000, "minimum": -1, "title": "Connection Limit", "type": "integer"}, "creator_task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Task that created this entity", "examples": ["de105b9c-c095-4f1c-9b76-aaa9bc60e32a"], "title": "Creator Task Id"}, "id": {"description": "Load balancer listener ID", "examples": ["43658ea9-54bd-4807-90b1-925921c9a0d1"], "format": "uuid4", "title": "Id", "type": "string"}, "insert_headers": {"description": "Dictionary of additional header insertion into HTTP headers. Only used with HTTP and `TERMINATED_HTTPS` protocols.", "title": "Insert Headers", "type": "object"}, "loadbalancer_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Load balancer ID", "examples": ["67149a91-739b-42bf-bbd1-cb64f723dad7"], "title": "Loadbalancer Id"}, "name": {"description": "Load balancer listener name", "examples": ["lbaas_test_listener"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "operating_status": {"$ref": "#/components/schemas/OperatingStatusEnum", "description": "Listener operating status"}, "pool_count": {"anyOf": ["type": "integer", "type": "null"], "description": "Number of pools (for UI)", "examples": [1], "title": "Pool Count"}, "protocol": {"$ref": "#/components/schemas/LbListenerProtocolEnum", "description": "Load balancer protocol", "examples": ["TCP"]}, "protocol_port": {"description": "Protocol port", "examples": [80], "maximum": 65535, "minimum": 1, "title": "Protocol Port", "type": "integer"}, "provisioning_status": {"$ref": "#/components/schemas/ProvisioningStatusEnum", "description": "Listener lifecycle status"}, "secret_id": {"anyOf": ["type": "string", "type": "null"], "description": "ID of the secret where PKCS12 file is stored for `TERMINATED_HTTPS` or PROMETHEUS load balancer", "examples": ["e36200c7-114b-44e6-ba1a-043b2bd53879"], "title": "Secret Id"}, "sni_secret_id": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, "type": "null"], "description": "List of secret's ID containing PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` or PROMETHEUS listeners", "examples": [["e36200c7-114b-44e6-ba1a-043b2bd53879", "c5d156ce-0925-4aef-b458-cce46bd346f0"]], "title": "Sni Secret Id"}, "stats": {"anyOf": ["$ref": "#/components/schemas/LoadbalancerStatsSerializer", "type": "null"], "description": "Statistics of the load balancer. It is available only in get functions by a flag.", "examples": [{"active_connections": 0, "bytes_in": 34942398609, "bytes_out": 304777113641, "request_errors": 4, "total_connections": 21095970}]}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "title": "Task Id"}, "timeout_client_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Frontend client inactivity timeout in milliseconds", "examples": [50000], "title": "Timeout Client Data"}, "timeout_member_connect": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member connection timeout in milliseconds", "examples": [5000], "title": "Timeout Member Connect"}, "timeout_member_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member inactivity timeout in milliseconds", "examples": [50000], "title": "Timeout Member Data"}, "user_list": {"description": "Load balancer listener users list", "examples": [[{"encrypted_password": "$5$isRr.HJ1IrQP38.m$oViu3DJOpUG2ZsjCBtbITV3mqpxxbZfyWJojLPNSPO5",
                "username": "admin"}]], "items": {"$ref": "#/components/schemas/UserListItem"}, "title": "User List", "type": "array"}}, "required": ["id", "name", "protocol", "protocol_port", "loadbalancer_id", "insert_headers", "pool_count", "operating_status", "provisioning_status", "creator_task_id", "task_id", "secret_id", "sni_secret_id", "allowed_cidrs", "timeout_client_data", "timeout_member_connect", "timeout_member_data", "connection_limit", "user_list", "stats"], "title": "LbListenerSerializer", "type": "object"}
    LoadBalancerPatchSerializer: {"properties": {"logging": {"$ref": "#/components/schemas/LoadbalancerLoggingSerializer", "description": "Logging configuration"}, "name": {"description": "Name.", "examples": ["some_name"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "preferred_connectivity": {"$ref": "#/components/schemas/MemberConnectivity", "description": "Preferred option to establish connectivity between load balancer and its pools members"}, "tags": {"anyOf": ["$ref": "#/components/schemas/UpdateTagsSerializer", "type": "null"], "description": "Update key-value tags using JSON Merge Patch semantics (RFC 7386). Provide key-value pairs to add or update tags. Set tag values to `null` to remove tags. Unspecified tags remain unchanged. Read-only tags are always preserved and cannot be modified.\n\n**Examples:**\n\n\\* **Add/update tags:** `{'tags': {'environment': 'production', 'team': 'backend'}}` adds new tags or updates existing ones.\n\n\\* **Delete tags:** `{'tags': {'`old_tag`': null}}` removes specific tags.\n\n\\* **Remove all tags:** `{'tags': null}` removes all user-managed tags (read-only tags are preserved).\n\n\\* **Partial update:** `{'tags': {'environment': 'staging'}}` only updates specified tags.\n\n\\* **Mixed operations:** `{'tags': {'environment': 'production', '`cost_center`': 'engineering', '`deprecated_tag`': null}}` adds/updates 'environment' and '`cost_center`' while removing '`deprecated_tag`', preserving other existing tags.\n\n\\* **Replace all:** first delete existing tags with null values, then add new ones in the same request.", "examples": [{"my-tag": "my-tag-value", "my-tag-to-remove": null}]}}, "title": "LoadBalancerPatchSerializer", "type": "object"}
    TotalDBAASPostgreSQLPublicNetworkReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_public_network_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_public_network", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalDBAASPostgreSQLPublicNetworkReportItemSerializer", "type": "object"}
    LimitsRequestSerializer: {"properties": {"client_id": {"description": "Client ID", "examples": [1], "title": "Client Id", "type": "integer"}, "created_at": {"description": "Datetime when the request was created.", "examples": ["2019-07-26T13:25:03Z"], "format": "date-time", "title": "Created At", "type": "string"}, "description": {"anyOf": ["type": "string", "type": "null"], "description": "Describe the reason, in general terms.", "examples": ["Scale up mysql cluster"], "title": "Description"}, "id": {"description": "Request ID", "examples": [1], "title": "Id", "type": "integer"}, "requested_limits": {"$ref": "#/components/schemas/AllClientQuotasLimitsSerializer", "description": "Requested limits."}, "status": {"description": "Request status", "examples": ["in progress"], "title": "Status", "type": "string"}, "updated_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "description": "Datetime when the request was updated.", "title": "Updated At"}}, "required": ["id", "client_id", "requested_limits", "status"], "title": "LimitsRequest object", "type": "object"}
    BareMetalStatusQueryChoices: {"enum": ["ACTIVE", "BUILD", "ERROR", "HARD_REBOOT", "REBOOT", "REBUILD", "RESCUE", "SHUTOFF", "SUSPENDED"], "title": "BareMetalStatusQueryChoices", "type": "string"}
    InstanceSerializer: {"properties": {"addresses": {"additionalProperties": {"items": {"anyOf": ["$ref": "#/components/schemas/InstanceFloatingAddressSerializer", "$ref": "#/components/schemas/InstanceFixedAddressShortSerializer", "$ref": "#/components/schemas/InstanceFixedAddressSerializer"]}, "type": "array"}, "description": "Map of `network_name` to list of addresses in that network", "title": "Addresses", "type": "object"}, "blackhole_ports": {"description": "IP addresses of the instances that are blackholed by DDoS mitigation system", "items": {"$ref": "#/components/schemas/BlackholePortSerializer"}, "title": "Blackhole Ports", "type": "array"}, "created_at": {"description": "Datetime when instance was created", "examples": ["2023-11-29T10:56:49Z"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": ["type": "string", "type": "null"], "description": "Task that created this entity", "title": "Creator Task Id"}, "ddos_profile": {"anyOf": ["$ref": "#/components/schemas/GetClientProfileSerializer", "type": "null"], "description": "Advanced DDoS protection profile. It is always `null` if query parameter `with_ddos=true` is not set."}, "fixed_ip_assignments": {"anyOf": [{"items": {"$ref": "#/components/schemas/IpAssignmentsSerializer"}, "type": "array"}, "type": "null"], "description": "Fixed IP assigned to instance", "title": "Fixed Ip Assignments"}, "flavor": {"anyOf": ["$ref": "#/components/schemas/InstanceFlavorSerializer", "$ref": "#/components/schemas/BareMetalFlavorSerializer", "$ref": "#/components/schemas/DeprecatedGpuClusterFlavorSerializer"], "description": "Flavor", "title": "Flavor"}, "id": {"description": "Instance ID", "examples": ["6c6aa80f-7836-4dc2-a2ae-125e248be476"], "format": "uuid4", "title": "Id", "type": "string"}, "instance_description": {"anyOf": ["type": "string", "type": "null"], "description": "Instance description", "examples": ["Instance description"], "title": "Instance Description"}, "instance_isolation": {"anyOf": ["$ref": "#/components/schemas/IsolationSerializer", "type": "null"], "description": "Instance isolation information"}, "name": {"description": "Instance name", "examples": ["my-instance-1"], "title": "Name", "type": "string"}, "project_id": {"description": "Project ID", "examples": [111], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [4], "title": "Region Id", "type": "integer"}, "security_groups": {"description": "Security groups", "items": {"$ref": "#/components/schemas/NameSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "ssh_key_name": {"anyOf": ["type": "string", "type": "null"], "description": "SSH key assigned to instance", "title": "Ssh Key Name"}, "status": {"$ref": "#/components/schemas/InstanceStatus", "description": "Instance status", "examples": ["ACTIVE"]}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": ["type": "string", "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "task_state": {"anyOf": ["type": "string", "type": "null"], "description": "Task state", "title": "Task State"}, "vm_state": {"$ref": "#/components/schemas/InstanceVMState", "description": "Virtual machine state (active)", "examples": ["active"]}, "volumes": {
          "description": "List of volumes", "items": {"$ref": "#/components/schemas/InstanceVolumeSerializer"}, "title": "Volumes", "type": "array"}}, "required": ["id", "name", "created_at", "status", "vm_state", "volumes", "flavor", "tags", "instance_description", "addresses", "security_groups", "ssh_key_name", "creator_task_id", "task_state", "task_id", "blackhole_ports", "ddos_profile", "fixed_ip_assignments", "instance_isolation", "region", "region_id", "project_id"], "title": "InstanceSerializer", "type": "object"}
    ResourceFunctionEgressTrafficSerializer: {"description": "These properties are common for all individual function egress traffic\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["faas_function_egress_traffic_gbs"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "GB", "description": "Unit of billing value", "examples": ["GB"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the function egress traffic", "examples": ["function_egress_traffic_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "functions_traffic", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the function egress traffic", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid"], "title": "ResourceFunctionEgressTrafficSerializer", "type": "object"}
    InferenceInstanceInUpdateSerializerV3: {"properties": {"api_keys": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, "type": "null"], "description": "List of API keys for the inference instance. Multiple keys can be attached to one deployment.If `auth_enabled` and `api_keys` are both specified, a ValidationError will be raised.If `[]` is provided, the API keys will be removed and auth will be disabled on the deployment.", "examples": [["key1", "key2"]], "title": "Api Keys"}, "auth_enabled": {"deprecated": true, "description": "Set to `true` to enable API key authentication for the inference instance. `\"Authorization\": \"Bearer ****\\*\"` or `\"X-Api-Key\": \"****\\*\"` header is required for the requests to the instance if enabled. This field is deprecated and will be removed in the future. Use `api_keys` field instead.If `auth_enabled` and `api_keys` are both specified, a ValidationError will be raised.", "examples": [false], "title": "Auth Enabled", "type": "boolean"}, "command": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, "type": "null"], "default": null, "description": "Command to be executed when running a container from an image.", "examples": [["nginx", "-g", "daemon off;"]], "title": "Command"}, "containers": {"anyOf": [{"items": {"$ref": "#/components/schemas/ContainerInUpdateSerializerV3"}, "minItems": 1, "type": "array"}, "type": "null"], "default": null, "description": "List of containers for the inference instance.", "title": "Containers"}, "credentials_name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Registry credentials name", "examples": ["dockerhub"], "title": "Credentials Name"}, "description": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Inference instance description.", "examples": ["My first instance"], "title": "Description"}, "envs": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": null, "description": "Environment variables for the inference instance.", "examples": [{"DEBUG_MODE": "False", "KEY": "12345"}], "title": "Envs"}, "flavor_name": {"description": "Flavor name for the inference instance.", "examples": ["inference-16vcpu-232gib-1xh100-80gb"], "title": "Flavor Name", "type": "string"}, "image": {"anyOf": [{"pattern": "^(?:(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)(?::[A-Za-z0-9_][A-Za-z0-9_.-]{0,127})?$", "type": "string"}, "type": "null"], "default": null, "description": "Docker image for the inference instance. This field should contain the image name and tag in the format 'name:tag', e.g., 'nginx:latest'. It defaults to Docker Hub as the image registry, but any accessible Docker image URL can be specified.", "examples": ["nginx:latest"], "title": "Image"}, "ingress_opts": {"anyOf": ["$ref": "#/components/schemas/IngressOptsSerializer", "type": "null"], "default": null, "description": "Ingress options for the inference instance", "examples": ["disable_response_buffering": true]}, "listening_port": {"anyOf": [{"maximum": 65535, "minimum": 1, "type": "integer"}, "type": "null"], "default": null, "description": "Listening port for the inference instance.", "examples": [80], "title": "Listening Port"}, "logging": {"anyOf": ["$ref": "#/components/schemas/LoggingInSerializer", "type": "null"], "default": null, "description": "Logging configuration for the inference instance", "examples": [{"destination_region_id": 1, "enabled": true, "retention_policy": {"period": 42}, "topic_name": "my-log-name"}, "enabled": false]}, "probes": {"anyOf": ["$ref": "#/components/schemas/PatchInferenceInstanceProbesSerializerV2", "type": "null"], "description": "Probes configured for all containers of the inference instance."}, "timeout": {"anyOf": [{"minimum": 0, "type": "integer"}, "type": "null"], "default": null, "description": "Specifies the duration in seconds without any requests after which the containers will be downscaled to their minimum scale value as defined by `scale.min`. If set, this helps in optimizing resource usage by reducing
            the number of container instances during periods of inactivity. The default value when the parameter is not set is 120.", "examples": [120], "title": "Timeout", "x-stainless-naming": {"python": {"method_argument": "api_timeout"}}}}, "title": "InferenceInstanceInUpdateSerializerV3", "type": "object"}
    RegionSerializerAiList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/RegionSerializerAi"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[RegionSerializerAi]", "type": "object"}
    LifeCyclePolicyV2ResponseSerializer: {"description": "Billing response preview schema for server instance.", "examples": [{"currency_code": "USD", "discount": 0, "per_hour": {"volumes": [{"discount": 0.1, "price": 78, "type": "cold"}, {"discount": 0, "price": 78, "type": "ssd_hiiops"}, {"discount": 0.1, "price": 78, "type": "standard"}]}, "per_month": {"volumes": [{"discount": 0.1, "price": 178, "type": "cold"}, {"discount": 0, "price": 178, "type": "ssd_hiiops"}, {"discount": 0.1, "price": 178, "type": "standard"}]}, "price_status": "show", "price_without_discount_per_month": 734.4, "tax_percent": 17, "total_price_per_hour": 1.02, "total_price_per_month": 734.4}], "properties": {"currency_code": {"description": "Currency code (3-letter code per ISO 4217).", "enum": ["AZN", "EUR", "USD"], "examples": ["USD", "EUR", "AZN"], "title": "Currency Code", "type": "string"}, "discount": {"anyOf": ["type": "number", "type": "null"], "description": "Discount value within range [0..1] where 1 is 100%.", "examples": [0.1, 0.02, 0.99], "title": "Discount"}, "per_hour": {"$ref": "#/components/schemas/VolumePricingWithDiscountPerPeriodSerializer", "description": "Prices per category charged per hour.", "examples": ["volumes": [{"discount": 0.1, "price": 78, "type": "cold"}, {"discount": 0, "price": 78, "type": "ssd_hiiops"}, {"discount": 0.1, "price": 78, "type": "standard"}]]}, "per_month": {"$ref": "#/components/schemas/VolumePricingWithDiscountPerPeriodSerializer", "description": "Prices per category charged per month.", "examples": ["volumes": [{"discount": 0.1, "price": 178, "type": "cold"}, {"discount": 0, "price": 178, "type": "ssd_hiiops"}, {"discount": 0.1, "price": 178, "type": "standard"}]]}, "price_status": {"$ref": "#/components/schemas/PriceDisplayStatus", "description": "Price status for the UI.", "examples": ["show", "hide"]}, "price_without_discount_per_month": {"anyOf": ["type": "number", "type": "null"], "description": "Total price VAT inclusive per month without discount.", "examples": [800, 1000.5], "title": "Price Without Discount Per Month"}, "tax_percent": {"description": "Tax rate applied to the subtotal, represented as a percentage", "examples": [0, 17, 12], "title": "Tax Percent", "type": "number"}, "total_price_per_hour": {"anyOf": ["type": "number", "type": "null"], "description": "Total price VAT inclusive per hour.", "examples": [1.02, 2.5], "title": "Total Price Per Hour"}, "total_price_per_month": {"anyOf": ["type": "number", "type": "null"], "description": "Total price VAT inclusive per month.", "examples": [734.4, 1200], "title": "Total Price Per Month"}}, "required": ["currency_code", "discount", "per_hour", "per_month", "price_status", "price_without_discount_per_month", "total_price_per_hour", "total_price_per_month", "tax_percent"], "title": "LifeCyclePolicyV2ResponseSerializer", "type": "object"}
    K8sClusterAuthenticationCreateV2Serializer: {"properties": {"oidc": {"anyOf": ["$ref": "#/components/schemas/K8sClusterOIDCV2Serializer", "type": "null"], "default": null, "description": "OIDC authentication settings"}}, "title": "K8sClusterAuthenticationCreateV2Serializer", "type": "object"}
    CheckQuotaBeforeBaremetalGpuClusterCreationSerializer: {"properties": {"flavor": {"description": "Cluster flavor", "examples": ["g3-ai-32-192-1500-l40s-48-1"], "title": "Flavor", "type": "string"}, "servers_count": {"description": "Number of servers in the cluster", "examples": [3], "exclusiveMaximum": 1000, "exclusiveMinimum": 0, "title": "Servers Count", "type": "integer"}, "servers_settings": {"$ref": "#/components/schemas/BaremetalGpuServerSettingsQuotaSerializer", "description": "Configuration settings for the servers in the cluster"}}, "required": ["flavor", "servers_count"], "title": "CheckQuotaBeforeBaremetalGpuClusterCreationSerializer", "type": "object"}
    TotalDBAASPostgreSQLCPUReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_cpu_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_cpu", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalDBAASPostgreSQLCPUReportItemSerializer", "type": "object"}
    IdNameListSchema: {"type": "object", "properties": {"count": {"type": "integer", "description": "Number of objects"}, "results": {"type": "array", "description": "Objects", "items": {"$ref": "#/components/schemas/IdNameSchema"}}}, "example": {"count": 1, "results": [{"id": "2bf3a5d7-9072-40aa-8ac0-a64e39427a2c", "name": "Test"}]}}
    NamespacedName: {"properties": {"name": {"description": "Function name", "examples": ["function-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Name", "type": "string"}, "namespace": {"description": "Namespace name", "examples": ["namespace-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Namespace", "type": "string"}}, "required": ["name", "namespace"], "title": "NamespacedName", "type": "object"}
    ApiKeysOrderByChoices: {"enum": ["created_at.asc", "created_at.desc", "expire.asc", "expire.desc", "name.asc", "name.desc"], "title": "ApiKeysOrderByChoices", "type": "string"}
    SchemaFilterFloatingIpSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterFloatingIpEnum", "description": "Field name to filter by", "examples": ["ip_address"]}, "type": {"const": "floatingip", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["10.100.178.92"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterFloatingIpSerializer", "type": "object"}
    VolumeRetypeSerializer: {"description": "Volume retype request body schema", "properties": {"volume_type": {"$ref": "#/components/schemas/RetypableVolumeTypeChoices", "description": "New volume type name", "examples": ["ssd_hiiops"]}}, "required": ["volume_type"], "title": "VolumeRetypeSerializer", "type": "object"}
    TotalInstanceReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["g1-standard-1-2_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "flavor": {"description": "Flavor of the instance", "examples": ["g1-standard-1-2"], "title": "Flavor", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "instance", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor"], "title": "TotalInstanceReportItemSerializer", "type": "object"}
    SchemaFilterFunctionsSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterFunctionsEnum", "description": "Field name to filter by"}, "type": {"const": "functions", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["10"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterFunctionsSerializer", "type": "object"}
    InstancePutServerGroupSchema: {"type": "object", "properties": {"servergroup_id": {"type": "string", "description": "Anti-affinity or affinity or soft-anti-affinity server group ID."}}, "required": ["servergroup_id"], "description": "InstancePutServerGroup schema", "example": {"servergroup_id": "47003067-550a-6f17-93b6-81ee16ba061e"}}
    ImageCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/ImageSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ImageCollectionSerializer", "type": "object"}
    CreateLifecyclePolicySerializer: {"properties": {"action": {"$ref": "#/components/schemas/LifecyclePolicyActionEnum", "description": "Action that the policy will perform.", "examples": ["volume_snapshot"]}, "name": {"description": "Name of the lifecycle policy.", "examples": ["schedule_1"], "title": "Name", "type": "string"}, "schedules": {"default": [], "description": "List of schedules associated with the policy.", "items": {"$ref": "#/components/schemas/CreateScheduleSerializer"}, "maxItems": 10, "title": "Schedules", "type": "array"}, "status": {"$ref": "#/components/schemas/LifecyclePolicyStatusesEnum", "default": "active", "description": "Current status of the lifecycle policy.", "examples": ["active"]}, "volume_ids": {"default": [], "description": "List of volume IDs.", "examples": [["3ed9e2ce-f906-47fb-ba32-c25a3f63df4f"]], "items": {"format": "uuid4", "type": "string"}, "title": "Volume Ids", "type": "array"}}, "required": ["action", "name"], "title": "CreateLifecyclePolicySerializer", "type": "object"}
    DbaasStatusSerializer: {"properties": {"is_initialized": {"description": "DBAAS service status", "examples": [true, false], "title": "Is Initialized", "type": "boolean"}}, "required": ["is_initialized"], "title": "DbaasStatusSerializer", "type": "object"}
    SchemaFilterBasicVmSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterInstanceEnum", "description": "Field name to filter by", "examples": ["flavor"]}, "type": {"const": "basic_vm", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["g2s-shared-1-2-25"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterBasicVmSerializer", "type": "object"}
    BaremetalCapacitySchema: {"type": "object", "description": "Available bare metal nodes count per flavor", "properties": {"capacity": {"type": "object", "additionalProperties": true, "description": "Bare metal capacity dict. Bare metal flavors are the keys of this dictionary, available nodes count are corresponding values"}}, "example": {"capacity": {"bm1-basic-small": 3, "bm1-infrastructure-small": 2, "bm1-infrastructure-medium": 1}}}
    GpuClusterRequiredQuotaSerializer: {"properties": {"baremetal_gpu_a100_count_limit": {"description": "Bare metal A100 GPU server count limit", "examples": [1], "title": "Baremetal Gpu A100 Count Limit", "type": "integer"}, "baremetal_gpu_a100_count_requested": {"description": "Bare metal A100 GPU server count requested", "examples": [1], "title": "Baremetal Gpu A100 Count Requested", "type": "integer"}, "baremetal_gpu_a100_count_usage": {"description": "Bare metal A100 GPU server count usage", "examples": [1], "title": "Baremetal Gpu A100 Count Usage", "type": "integer"}, "baremetal_gpu_h100_count_limit": {"description": "Bare metal H100 GPU server count limit", "examples": [1], "title": "Baremetal Gpu H100 Count Limit", "type": "integer"}, "baremetal_gpu_h100_count_requested": {"description": "Bare metal H100 GPU server count requested", "examples": [1], "title": "Baremetal Gpu H100 Count Requested", "type": "integer"}, "baremetal_gpu_h100_count_usage": {"description": "Bare metal H100 GPU server count usage", "examples": [1], "title": "Baremetal Gpu H100 Count Usage", "type": "integer"}, "baremetal_gpu_h200_count_limit": {"description": "Bare metal H200 GPU server count limit", "examples": [1], "title": "Baremetal Gpu H200 Count Limit", "type": "integer"}, "baremetal_gpu_h200_count_requested": {"description": "Bare metal H200 GPU server count requested", "examples": [1], "title": "Baremetal Gpu H200 Count Requested", "type": "integer"}, "baremetal_gpu_h200_count_usage": {"description": "Bare metal H200 GPU server count usage", "examples": [1], "title": "Baremetal Gpu H200 Count Usage", "type": "integer"}, "baremetal_gpu_l40s_count_limit": {"description": "Bare metal L40S GPU server count limit", "examples": [1], "title": "Baremetal Gpu L40S Count Limit", "type": "integer"}, "baremetal_gpu_l40s_count_requested": {"description": "Bare metal L40S GPU server count requested", "examples": [1], "title": "Baremetal Gpu L40S Count Requested", "type": "integer"}, "baremetal_gpu_l40s_count_usage": {"description": "Bare metal L40S GPU server count usage", "examples": [1], "title": "Baremetal Gpu L40S Count Usage", "type": "integer"}, "external_ip_count_limit": {"description": "External IP Count limit", "examples": [10], "title": "External Ip Count Limit", "type": "integer"}, "external_ip_count_requested": {"description": "External IP Count requested", "examples": [1], "title": "External Ip Count Requested", "type": "integer"}, "external_ip_count_usage": {"description": "External IP Count usage", "examples": [1], "title": "External Ip Count Usage", "type": "integer"}, "floating_count_limit": {"description": "Floating IP Count usage", "examples": [1], "title": "Floating Count Limit", "type": "integer"}, "floating_count_requested": {"description": "Floating IP Count requested", "examples": [1], "title": "Floating Count Requested", "type": "integer"}, "floating_count_usage": {"description": "External IP Count requested", "examples": [1], "title": "Floating Count Usage", "type": "integer"}}, "title": "GpuClusterRequiredQuotaSerializer", "type": "object"}
    ChangeListenerNameSerializer: {"properties": {"name": {"description": "Name.", "examples": ["some_name"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}}, "required": ["name"], "title": "ChangeListenerNameSerializer", "type": "object"}
    ImageSerializer: {"properties": {"architecture": {"$ref": "#/components/schemas/ImageArchitectureTypeEnum", "default": "x86_64", "description": "An image architecture type: aarch64, `x86_64`", "examples": ["x86_64"]}, "created_at": {"description": "Datetime when the image was created", "examples": ["2024-05-05T14:51:26.570866Z"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Task that created this entity", "examples": ["b10dd116-07f5-4225-abb7-f42da5cb78fb"], "title": "Creator Task Id"}, "description": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Image description", "examples": ["string"], "title": "Description"}, "disk_format": {"description": "Disk format", "examples": ["raw"], "title": "Disk Format", "type": "string"}, "display_order": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "", "examples": [2010], "title": "Display Order"}, "hw_firmware_type": {"anyOf": ["$ref": "#/components/schemas/ImageHwFirmwareTypeEnum", "type": "null"], "default": null, "description": "Specifies the type of firmware with which to boot the guest.", "examples": ["bios"]}, "hw_machine_type": {"anyOf": ["$ref": "#/components/schemas/HwMachineTypeEnum", "type": "null"], "default": null, "description": "A virtual chipset type.", "examples": ["q35"]}, "id": {"description": "Image ID", "examples": ["44e136a7-15c1-4b5f-a086-20b7b3237d40"], "title": "Id", "type": "string"}, "is_baremetal": {"anyOf": ["type": "boolean", "type": "null"], "default": false, "description": "Set to true if the image will be used by bare metal servers. Defaults to false.", "examples": [false], "title": "Is Baremetal"}, "min_disk": {"description": "Minimal boot volume required", "examples": [3], "title": "Min Disk", "type": "integer"}, "min_ram": {"description": "Minimal VM RAM required", "examples": [0], "title": "Min Ram", "type": "integer"}, "name": {"description": "Image display name", "examples": ["ubuntu-20.10-x64"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "os_distro": {"description": "OS Distribution, i.e. Debian, CentOS, Ubuntu, CoreOS etc.", "examples": ["ubuntu"], "title": "Os Distro", "type": "string"}, "os_type": {"$ref": "#/components/schemas/ImageOsTypeEnum", "description": "The operating system installed on the image.", "examples": ["linux"]}, "os_version": {"description": "OS version, i.e. 19.04 (for Ubuntu) or 9.4 for Debian", "examples": ["20.10"], "title": "Os Version", "type": "string"}, "project_id": {"description": "Project ID", "examples": [1337], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "size": {"description": "Image size in bytes", "examples": [2361393152], "title": "Size", "type": "integer"}, "ssh_key": {"anyOf": ["$ref": "#/components/schemas/SshKeyEnum", "type": "null"], "default": null, "description": "Whether the image supports SSH key or not", "examples": ["allow"]}, "status": {"description": "Image status, i.e. active", "examples": ["active"], "title": "Status", "type": "string"}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The UUID of the active task that currently holds a lock on the resource.
            This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "updated_at": {"description": "Datetime when the image was updated", "examples": ["2024-05-05T14:51:26.570866Z"], "format": "date-time", "title": "Updated At", "type": "string"}, "visibility": {"description": "Image visibility. Globally visible images are public", "examples": ["public"], "title": "Visibility", "type": "string"}}, "required": ["project_id", "region_id", "region", "id", "name", "status", "visibility", "min_disk", "min_ram", "os_distro", "os_version", "created_at", "updated_at", "size", "disk_format", "os_type", "tags"], "title": "Image schema", "type": "object"}
    TotalAiClusterReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["bm3-ai-1xlarge-h100-80-8_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "flavor": {"description": "Flavor of the Baremetal GPU cluster", "examples": ["bm3-ai-1xlarge-h100-80-8"], "title": "Flavor", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "ai_cluster", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor"], "title": "TotalAiClusterReportItemSerializer", "type": "object"}
    K8sClusterVersionV2SerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/K8sClusterVersionV2Serializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[K8sClusterVersionV2Serializer]", "type": "object"}
    SchemaFilterVolumeSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterVolumeEnum", "description": "Field name to filter by", "examples": ["last_size"]}, "type": {"const": "volume", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["10"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterVolumeSerializer", "type": "object"}
    SchemaFilterLogIndexSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterLogIndexEnum", "description": "Field name to filter by", "examples": ["last_size"]}, "type": {"const": "log_index", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["10"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterLogIndexSerializer", "type": "object"}
    TotalFunctionEgressTrafficReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["faas_function_egress_traffic_gbs"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "GB", "description": "Unit of billing value", "examples": ["GB"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "functions_traffic", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalFunctionEgressTrafficReportItemSerializer", "type": "object"}
    FlavorIdSchema: {"type": "object", "properties": {"flavor_id": {"type": "string", "description": "Flavor ID"}}, "required": ["flavor_id"], "description": "FlavorId schema", "example": {"flavor_id": "g1s-shared-1-0.5"}}
    SSHKeySerializer: {"additionalProperties": false, "properties": {"created_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "description": "SSH key creation time", "examples": ["2025-06-16T17:05:50Z"], "title": "Created At"}, "fingerprint": {"description": "Fingerprint", "examples": ["86:75:ce:e7:e9:1e:f0:79:ec:6f:d8:92:9b:43:fc:4d"], "title": "Fingerprint", "type": "string"}, "id": {"description": "SSH key ID", "examples": ["36a7a97a-0672-4911-8f2b-92cd4e5b0d91"], "format": "uuid4", "title": "Id", "type": "string"}, "name": {"description": "SSH key name", "examples": ["my-ssh-key"], "maxLength": 255, "minLength": 1, "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "project_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Project ID", "examples": [1], "title": "Project Id"}, "public_key": {"description": "The public part of an SSH key is the shareable portion of an SSH key pair. It can be safely sent to servers or services to grant access. It does not contain sensitive information.", "examples": ["ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIjxL6g1II8NsO8odvBwGKvq2Dx/h/xrvsV9b9LVIYKm my-username@my-hostname"], "title": "Public Key", "type": "string"}, "shared_in_project": {"description": "SSH key will be visible to all users in the project", "examples": [true], "title": "Shared In Project", "type": "boolean"}, "state": {"$ref": "#/components/schemas/KeypairState", "description": "SSH key state", "examples": ["ACTIVE", "DELETING"]}}, "required": ["id", "public_key", "name", "fingerprint", "state", "project_id", "shared_in_project", "created_at"], "title": "SSH key response object", "type": "object"}
    UpdateVolumeSerializer: {"properties": {"name": {"description": "Name", "examples": ["some_name"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "tags": {"anyOf": ["$ref": "#/components/schemas/UpdateTagsSerializer", "type": "null"], "description": "Update key-value tags using JSON Merge Patch semantics (RFC 7386). Provide key-value pairs to add or update tags. Set tag values to `null` to remove tags. Unspecified tags remain unchanged. Read-only tags are always preserved and cannot be modified.\n\n**Examples:**\n\n\\* **Add/update tags:** `{'tags': {'environment': 'production', 'team': 'backend'}}` adds new tags or updates existing ones.\n\n\\* **Delete tags:** `{'tags': {'`old_tag`': null}}` removes specific tags.\n\n\\* **Remove all tags:** `{'tags': null}` removes all user-managed tags (read-only tags are preserved).\n\n\\* **Partial update:** `{'tags': {'environment': 'staging'}}` only updates specified tags.\n\n\\* **Mixed operations:** `{'tags': {'environment': 'production', '`cost_center`': 'engineering', '`deprecated_tag`': null}}` adds/updates 'environment' and '`cost_center`' while removing '`deprecated_tag`', preserving other existing tags.\n\n\\* **Replace all:** first delete existing tags with null values, then add new ones in the same request.", "examples": [{"my-tag": "my-tag-value", "my-tag-to-remove": null}]}}, "title": "UpdateVolumeSerializer", "type": "object"}
    ShareSSHKeySerializer: {"properties": {"shared_in_project": {"description": "Share your ssh key with all users in the project", "examples": [true, false], "title": "Shared In Project", "type": "boolean"}}, "required": ["shared_in_project"], "title": "Request body schema for share or unshare keypair", "type": "object"}
    FileShareRequiredQuotaSerializer: {"properties": {"sfs_count_limit": {"description": "Shared file system Count limit", "examples": [10], "title": "Sfs Count Limit", "type": "integer"}, "sfs_count_requested": {"description": "Shared file system Count requested", "examples": [1], "title": "Sfs Count Requested", "type": "integer"}, "sfs_count_usage": {"description": "Shared file system Count usage", "examples": [1], "title": "Sfs Count Usage", "type": "integer"}, "sfs_size_limit": {"description": "Shared file system Size, GiB limit", "examples": [100], "title": "Sfs Size Limit", "type": "integer"}, "sfs_size_requested": {"description": "Shared file system Size, GiB requested", "examples": [50], "title": "Sfs Size Requested", "type": "integer"}, "sfs_size_usage": {"description": "Shared file system Size, GiB usage", "examples": [90], "title": "Sfs Size Usage", "type": "integer"}}, "title": "FileShareRequiredQuotaSerializer", "type": "object"}
    LoadbalancerMetricsSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/LoadbalancerMetricsSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[LoadbalancerMetricsSerializer]", "type": "object"}
    NameDescriptionSerializer: {"properties": {"description": {"anyOf": [{"maxLength": 255, "type": "string"}, "type": "null"], "default": null, "description": "Description of the project.", "examples": ["Project description"], "title": "Description"}, "name": {"description": "Name of the entity, following a specific format.", "examples": ["New Project"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}}, "required": ["name"], "title": "NameDescriptionSerializer", "type": "object"}
    CheckQuotaBeforeLoadbalancerCreationSchema: {"type": "object", "properties": {"floating_ip": {"description": "Floating IP configuration for assignment", "allOf": ["$ref": "#/components/schemas/NewInterfaceFloatingIpSchema"]}, "logging": {"description": "Logging configuration", "type": "object", "properties": {"destination_region_id": {"type": ["integer", "null"], "description": "Destination region id to which the logs will be written"}, "enabled": {"type": "boolean", "description": "'True' to activate, 'False' to deactivate logging"}, "retention_policy": {"$ref": "#/components/schemas/LaasIndexRetentionPolicySchema"}, "topic_name": {"type": ["string", "null"], "description": "Existing logging topic name or None. Use only with 'enabled': True"}}, "example": {"enabled": false, "topic_name": "some_topic_name", "destination_region_id": 1, "retention_policy": {"period": 45}}}}, "description": "Checking Loadbalancer quotas before the creation.", "example": {"floating_ip": {"source": "new"}, "logging": {"enabled": false, "topic_name": "some_topic_name", "destination_region_id": 1, "retention_policy": {"period": 45}}}}
    BaremetalGPUClusterActionSerializer: {"discriminator": {"mapping": {"update_tags": "#/components/schemas/UpdateTagsGPUClusterSerializer"}, "propertyName": "action"}, "title": "BaremetalGPUClusterActionSerializer", "anyOf": ["$ref": "#/components/schemas/UpdateTagsGPUClusterSerializer"]}
    CheckQuotaBeforeBMCreationSerializer: {"properties": {"flavor": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Bare metal flavor name.", "examples": ["bm1-basic-medium"], "title": "Flavor"}, "interfaces": {"description": "Subnet IPs and floating IPs", "examples": [[{"network_id": "024a29e9-b4b7-4c91-9a46-505be123d9f8", "subnet_id": "91200a6c-07e0-42aa-98da-32d1f6545ae7", "type": "subnet"}]], "items": {"$ref": "#/components/schemas/NewVmInterfaceSerializersPydantic"}, "title": "Interfaces", "type": "array"}, "name_templates": {"description": "A list of instance name templates. Either this or `names` must be specified.", "examples": [["my-instance-{ip_octets}"]], "items": {"anyOf": ["type": "string", "type": "null"]}, "title": "Name Templates", "type": "array"}, "names": {"description": "A list of instance names. Either this or `name_templates` must be specified.", "examples": [["my-instance-1"]], "items": {"type": "string"}, "title": "Names", "type": "array"}}, "title": "CheckQuotaBeforeBMCreationSerializer", "type": "object"}
    CreateTagsSerializer: {"additionalProperties": {"description": "Tag value. The maximum size for a value is 1024 bytes.", "examples": ["my-tag-value"], "maxLength": 1024, "minLength": 1, "type": "string"}, "description": "A tag is a key-value pair that can be associated with a resource,\nenabling efficient filtering and grouping for better organization and management.\nSome tags are read-only and cannot be modified by the user.\nTags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "propertyNames": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1}, "title": "CreateTagsSerializer", "type": "object"}
    AIClusterSerializer: {"properties": {"cluster_id": {"description": "GPU Cluster ID", "examples": ["d1e1500b-e2be-40aa-9a4b-cc493fa1af30"], "format": "uuid4", "title": "Cluster Id", "type": "string"}, "cluster_name": {"description": "GPU Cluster Name", "examples": ["my-gpu-cluster"], "title": "Cluster Name", "type": "string"}, "cluster_status": {"$ref": "#/components/schemas/AIClusterStatusEnum", "description": "GPU Cluster status", "examples": ["ACTIVE"]}, "created_at": {"anyOf": ["type": "string", "type": "null"], "description": "Datetime when the cluster was created", "examples": ["2025-04-17 12:05:22.597284"], "title": "Created At"}, "creator_task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "deprecated": true, "description": "Task that created this entity", "examples": ["d1e1500b-e2be-40aa-9a4b-cc493fa1af30"], "title": "Creator Task Id"}, "flavor": {"description": "Flavor ID is the same as the name", "examples": ["bm3-ai-1xlarge-h100-80-8"], "title": "Flavor", "type": "string"}, "image_id": {"description": "Image ID", "examples": ["f01fd9a0-9548-48ba-82dc-a8c8b2d6f2f1"], "format": "uuid4", "title": "Image Id", "type": "string"}, "image_name": {"anyOf": ["type": "string", "type": "null"], "description": "Image name", "examples": ["ubuntu-22.04-x64-nvidia-a100/h100-550-12.4-eni"], "title": "Image Name"}, "interfaces": {"anyOf": [{"items": {"$ref": "#/components/schemas/AIClusterNetworkSerializer"}, "type": "array"}, "type": "null"], "description": "Networks managed by user and associated with the cluster", "title": "Interfaces"}, "password": {"anyOf": ["type": "string", "type": "null"], "description": "A password for a bare metal server. This parameter is used to set a password for the \"Admin\" user on a Windows instance, a default user or a new user on a Linux instance", "examples": ["my-password"], "title": "Password"}, "project_id": {"description": "Project ID", "examples": [1337], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "servers": {"description": "GPU cluster servers", "items": {"$ref": "#/components/schemas/GPUClusterServerSerializer"}, "title": "Servers", "type": "array"}, "ssh_key_name": {"anyOf": ["type": "string", "type": "null"], "description": "Keypair name to inject into new cluster(s)", "examples": ["my-ssh-key"], "title": "Ssh Key Name"}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Task ID associated with the cluster", "examples": ["d1e1500b-e2be-40aa-9a4b-cc493fa1af30"], "title": "Task Id"}, "task_status": {"$ref": "#/components/schemas/TaskDetailedStateEnum", "description": "Task status", "examples": ["FINISHED"]}, "user_data": {"anyOf": ["type": "string", "type": "null"], "description": "String in base64 format. Must not be passed together with 'username' or 'password'. Examples of the `user_data`: https://cloudinit.readthedocs.io/en/latest/topics/examples.html", "title": "User Data"}, "username": {"anyOf": ["type": "string", "type": "null"], "description": "A name of a new user in the Linux instance. It may be passed with a 'password' parameter", "examples": ["my-username"], "title": "Username"}}, "required": ["region_id", "region", "project_id", "cluster_id", "cluster_name", "cluster_status", "task_id", "task_status", "creator_task_id", "created_at", "flavor",
        "image_id", "image_name", "interfaces", "ssh_key_name", "user_data", "username", "password", "servers", "tags"], "title": "AIClusterSerializer", "type": "object"}
    LbPoolProtocolEnum: {"enum": ["HTTP", "HTTPS", "PROXY", "PROXYV2", "TCP", "UDP"], "title": "LbPoolProtocolEnum", "type": "string"}
    InferenceInstanceApikeySecretSerializerV3: {"properties": {"secret": {"description": "API key secret", "examples": ["my-secret"], "title": "Secret", "type": "string"}, "status": {"$ref": "#/components/schemas/InferenceInstanceApiKeyStatus", "description": "API key status", "examples": ["READY"]}}, "required": ["secret", "status"], "title": "InferenceInstanceApikeySecretSerializerV3", "type": "object"}
    VirtualClusterListSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/VirtualClusterSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "VirtualClusterListSerializer", "type": "object"}
    InstanceStatusQuery: {"enum": ["ACTIVE", "BUILD", "ERROR", "HARD_REBOOT", "MIGRATING", "PAUSED", "REBOOT", "REBUILD", "RESIZE", "REVERT_RESIZE", "SHELVED", "SHELVED_OFFLOADED", "SHUTOFF", "SOFT_DELETED", "SUSPENDED", "VERIFY_RESIZE"], "title": "InstanceStatusQuery", "type": "string"}
    K8sClusterCheckLimitsV2Serializer: {"properties": {"logging": {"anyOf": ["$ref": "#/components/schemas/K8sClusterCheckLimitsLoggingV2Serializer", "type": "null"], "default": null, "description": "Logging configuration", "examples": [{"destination_region_id": 1, "enabled": true, "topic_name": "my-log-name"}, null]}, "pools": {"anyOf": [{"items": {"$ref": "#/components/schemas/K8sClusterCheckLimitsPoolV2Serializer"}, "type": "array"}, "type": "null"], "default": null, "description": "K8s pools to create", "examples": [[{"boot_volume_size": 10, "flavor_id": "g1-standard-1-2", "min_node_count": 1, "name": "test"}]], "title": "Pools"}}, "title": "K8sClusterCheckLimitsV2Serializer", "type": "object"}
    SubnetListOrderByChoices: {"enum": ["available_ips.asc", "available_ips.desc", "cidr.asc", "cidr.desc", "created_at.asc", "created_at.desc", "name.asc", "name.desc", "total_ips.asc", "total_ips.desc", "updated_at.asc", "updated_at.desc"], "title": "SubnetListOrderByChoices", "type": "string"}
    RegionSerializer: {"properties": {"access_level": {"$ref": "#/components/schemas/RegionAccessType", "description": "The access level of the region.", "examples": ["core"]}, "available_volume_types": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, "type": "null"], "description": "List of available volume types, 'standard', '`ssd_hiiops`', 'cold'].", "examples": [["standard", "ssd_hiiops", "cold"]], "title": "Available Volume Types"}, "coordinates": {"anyOf": ["$ref": "#/components/schemas/Coordinate", "type": "null"], "description": "Coordinates of the region", "examples": [{"latitude": 41.40338, "longitude": 2.17403}], "title": "Coordinates"}, "country": {"anyOf": ["type": "string", "type": "null"], "description": "Country", "examples": ["LU"], "title": "Country"}, "created_at": {"description": "Region creation date and time", "examples": ["2019-12-31T23:59:59Z"], "format": "date-time", "title": "Created At", "type": "string"}, "created_on": {"deprecated": true, "description": "This field is deprecated. Use `created_at` instead.", "examples": ["2019-12-31T23:59:59Z"], "format": "date-time", "title": "Created On", "type": "string"}, "ddos_endpoint_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "deprecated": true, "description": "DDoS endpoint ID", "examples": [3], "title": "Ddos Endpoint Id"}, "display_name": {"description": "Human-readable region name", "examples": ["Luxembourg"], "title": "Display Name", "type": "string"}, "endpoint_type": {"$ref": "#/components/schemas/RegionEndpointType", "description": "Endpoint type", "examples": ["public"]}, "external_network_id": {"anyOf": ["type": "string", "type": "null"], "description": "External network ID for Neutron", "examples": ["c843c3e6-ef4d-4b92-8db2-e16ac05c5650"], "title": "External Network Id"}, "file_share_types": {"anyOf": [{"items": {"$ref": "#/components/schemas/FileShareStorageType"}, "type": "array"}, "type": "null"], "description": "List of available file share types", "examples": [["standard", "vast"]], "title": "File Share Types"}, "has_ai": {"description": "Region has AI capability", "examples": [true], "title": "Has Ai", "type": "boolean"}, "has_ai_gpu": {"description": "Region has AI GPU capability", "examples": [true], "title": "Has Ai Gpu", "type": "boolean"}, "has_baremetal": {"description": "Region has bare metal capability", "examples": [false], "title": "Has Baremetal", "type": "boolean"}, "has_basic_vm": {"description": "Region has basic vm capability", "examples": [false], "title": "Has Basic Vm", "type": "boolean"}, "has_dbaas": {"description": "Region has DBAAS service", "examples": [false], "title": "Has Dbaas", "type": "boolean"}, "has_ddos": {"description": "Region has Advanced DDoS Protection capability", "examples": [true, false], "title": "Has Ddos", "type": "boolean"}, "has_k8s": {"description": "Region has managed kubernetes capability", "examples": [true], "title": "Has K8S", "type": "boolean"}, "has_kvm": {"description": "Region has KVM virtualization capability", "examples": [true], "title": "Has Kvm", "type": "boolean"}, "has_sfs": {"description": "Region has SFS capability", "examples": [false], "title": "Has Sfs", "type": "boolean"}, "id": {"description": "Region ID", "examples": [1], "title": "Id", "type": "integer"}, "keystone_id": {"description": "Foreign key to Keystone entity", "examples": [1], "title": "Keystone Id", "type": "integer"}, "keystone_name": {"description": "Technical region name", "examples": ["ED-9"], "title": "Keystone Name", "type": "string"}, "metrics_database_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Foreign key to Metrics database entity", "examples": [1], "title": "Metrics Database Id"}, "state": {"$ref": "#/components/schemas/RegionState", "description": "Region state", "examples": ["NEW"]}, "task_id": {"anyOf": ["type": "string", "type": "null"], "deprecated": true, "description": "This field is deprecated and can be ignored", "examples": [null], "title": "Task Id"}, "vlan_physical_network": {"description": "Physical network name to create vlan
            networks", "examples": ["br-ex"], "title": "Vlan Physical Network", "type": "string"}, "zone": {"anyOf": ["$ref": "#/components/schemas/Zone", "type": "null"], "description": "Geographical zone", "examples": ["EMEA"]}}, "required": ["id", "display_name", "keystone_name", "state", "country", "zone", "task_id", "endpoint_type", "external_network_id", "created_on", "created_at", "keystone_id", "has_kvm", "has_baremetal", "has_basic_vm", "has_sfs", "has_dbaas", "has_ddos", "vlan_physical_network", "available_volume_types", "metrics_database_id", "access_level", "has_k8s", "has_ai", "has_ai_gpu", "coordinates", "file_share_types"], "title": "Region object", "type": "object"}
    SchemaFilterDBAASPostgreSQLMemorySerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLEnum", "description": "Field name to filter by", "examples": ["uuid"]}, "type": {"const": "dbaas_postgresql_memory", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["066e202a-fc9a-43f2-a74d-be34afbee5c9"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterDBAASPostgreSQLMemorySerializer", "type": "object"}
    UploadVirtualGpuImageSerializer: {"properties": {"architecture": {"anyOf": ["$ref": "#/components/schemas/ImageArchitectureTypeEnum", "type": "null"], "default": "x86_64", "description": "Image architecture type: aarch64, `x86_64`", "examples": ["x86_64"]}, "cow_format": {"default": false, "description": "When True, image cannot be deleted unless all volumes, created from it, are deleted.", "examples": [true], "title": "Cow Format", "type": "boolean"}, "hw_firmware_type": {"anyOf": ["$ref": "#/components/schemas/ImageHwFirmwareTypeEnum", "type": "null"], "default": null, "description": "Specifies the type of firmware with which to boot the guest.", "examples": ["bios"]}, "name": {"description": "Image name", "examples": ["ubuntu-23.10-x64"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "os_distro": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "OS Distribution, i.e. Debian, CentOS, Ubuntu, CoreOS etc.", "title": "Os Distro"}, "os_type": {"anyOf": ["$ref": "#/components/schemas/ImageOsTypeEnum", "type": "null"], "default": "linux", "description": "The operating system installed on the image. Linux by default", "examples": ["linux"]}, "os_version": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "OS version, i.e. 19.04 (for Ubuntu) or 9.4 for Debian", "examples": ["19.04"], "title": "Os Version"}, "ssh_key": {"$ref": "#/components/schemas/SshKeyEnum", "default": "allow", "description": "Permission to use a ssh key in instances", "examples": ["allow"]}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "url": {"anyOf": [{"format": "uri", "minLength": 1, "type": "string"}, "type": "string"], "description": "Image URL", "examples": ["http://mirror.noris.net/cirros/0.4.0/cirros-0.4.0-x86_64-disk.img"], "title": "Url"}}, "required": ["url", "name"], "title": "UploadVirtualGpuImageSerializer", "type": "object"}
    RoleAssignmentSerializer: {"properties": {"assigned_by": {"anyOf": ["type": "integer", "type": "null"], "title": "Assigned By"}, "client_id": {"description": "Client ID", "examples": [123], "title": "Client Id", "type": "integer"}, "created_at": {"description": "Created timestamp", "examples": ["2019-06-25T08:42:42Z"], "format": "date-time", "title": "Created At", "type": "string"}, "id": {"description": "Assignment ID", "examples": [12], "title": "Id", "type": "integer"}, "project_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Project ID", "examples": [123], "title": "Project Id"}, "role": {"$ref": "#/components/schemas/CustomerAssignableRole", "description": "User role", "examples": ["ClientAdministrator"]}, "updated_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "description": "Updated timestamp", "examples": ["2019-06-25T08:42:42Z"], "title": "Updated At"}, "user_id": {"description": "User ID", "examples": [123], "title": "User Id", "type": "integer"}}, "required": ["id", "user_id", "role", "client_id", "project_id", "assigned_by", "created_at", "updated_at"], "title": "Role assignments schema", "type": "object"}
    ResizeLoadBalancer: {"properties": {"flavor": {"description": "Name of the desired flavor to resize to.", "examples": ["lb1-2-4", "lb1-4-8"], "title": "Flavor", "type": "string"}}, "required": ["flavor"], "title": "ResizeLoadBalancer", "type": "object"}
    AIAppCatalogList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/AIAppCatalog"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "AIAppCatalogList", "type": "object"}
    InstancesOrderByChoices: {"enum": ["created.asc", "created.desc", "name.asc", "name.desc"], "title": "InstancesOrderByChoices", "type": "string"}
    CostReportTotalsRequestSerializer: {"additionalProperties": false, "properties": {"enable_last_day": {"default": false, "description": "Expenses for the last specified day are taken into account. As the default, False.", "examples": [false], "title": "Enable Last Day", "type": "boolean"}, "projects": {"description": "List of project IDs", "examples": [[16, 17, 18, 19, 20]], "items": {"type": "integer"}, "title": "Projects", "type": "array"}, "regions": {"description": "List of region IDs.", "examples": [[1, 2, 3]], "items": {"type": "integer"}, "title": "Regions", "type": "array"}, "response_format": {"$ref": "#/components/schemas/CostReportTotalsResponseFormat", "default": "json", "description": "Format of the response (csv or json).", "examples": ["csv_totals", "json"]}, "rounding": {"default": true, "description": "Round cost values to 5 decimal places. When false, returns full precision.", "title": "Rounding", "type": "boolean"}, "schema_filter": {"description": "Extended filter for field filtering.", "discriminator": {"mapping": {"ai_cluster": "#/components/schemas/SchemaFilterAiClusterSerializer", "ai_virtual_cluster": "#/components/schemas/SchemaFilterAiVirtualClusterSerializer", "backup": "#/components/schemas/SchemaFilterBackupSerializer", "baremetal": "#/components/schemas/SchemaFilterBaremetalSerializer", "basic_vm": "#/components/schemas/SchemaFilterBasicVmSerializer", "containers": "#/components/schemas/SchemaFilterContainersSerializer", "dbaas_postgresql_connection_pooler": "#/components/schemas/SchemaFilterDBAASPostgreSQLPoolerSerializer", "dbaas_postgresql_cpu": "#/components/schemas/SchemaFilterDBAASPostgreSQLCPUSerializer", "dbaas_postgresql_memory": "#/components/schemas/SchemaFilterDBAASPostgreSQLMemorySerializer", "dbaas_postgresql_public_network": "#/components/schemas/SchemaFilterDBAASPostgreSQLPublicNetworkSerializer", "dbaas_postgresql_volume": "#/components/schemas/SchemaFilterDBAASPostgreSQLVolumeSerializer", "egress_traffic": "#/components/schemas/SchemaFilterEgressTrafficSerializer", "external_ip": "#/components/schemas/SchemaFilterExternalIpSerializer", "file_share": "#/components/schemas/SchemaFilterFileShareSerializer", "floatingip": "#/components/schemas/SchemaFilterFloatingIpSerializer", "functions": "#/components/schemas/SchemaFilterFunctionsSerializer", "functions_calls": "#/components/schemas/SchemaFilterFunctionsCallsSerializer", "functions_traffic": "#/components/schemas/SchemaFilterFunctionsTrafficSerializer", "image": "#/components/schemas/SchemaFilterImageSerializer", "inference": "#/components/schemas/SchemaFilterInferenceSerializer", "instance": "#/components/schemas/SchemaFilterInstanceSerializer", "load_balancer": "#/components/schemas/SchemaFilterLoadBalancerSerializer", "log_index": "#/components/schemas/SchemaFilterLogIndexSerializer", "snapshot": "#/components/schemas/SchemaFilterSnapshotSerializer", "volume": "#/components/schemas/SchemaFilterVolumeSerializer"}, "propertyName": "type"}, "examples": [{"field": "flavor", "type": "instance", "values": ["g1-standard-1-2"]}], "title": "Schema Filter", "anyOf": ["$ref": "#/components/schemas/SchemaFilterSnapshotSerializer", "$ref": "#/components/schemas/SchemaFilterInstanceSerializer", "$ref": "#/components/schemas/SchemaFilterAiClusterSerializer", "$ref": "#/components/schemas/SchemaFilterAiVirtualClusterSerializer", "$ref": "#/components/schemas/SchemaFilterBasicVmSerializer", "$ref": "#/components/schemas/SchemaFilterBaremetalSerializer", "$ref": "#/components/schemas/SchemaFilterVolumeSerializer", "$ref": "#/components/schemas/SchemaFilterFileShareSerializer", "$ref": "#/components/schemas/SchemaFilterImageSerializer", "$ref": "#/components/schemas/SchemaFilterFloatingIpSerializer", "$ref": "#/components/schemas/SchemaFilterEgressTrafficSerializer", "$ref": "#/components/schemas/SchemaFilterLoadBalancerSerializer", "$ref": "#/components/schemas/SchemaFilterExternalIpSerializer", "$ref": "#/components/schemas/SchemaFilterBackupSerializer", "$ref": "#/components/schemas/SchemaFilterLogIndexSerializer", "$ref": "#/components/schemas/SchemaFilterFunctionsSerializer",
            "$ref": "#/components/schemas/SchemaFilterFunctionsCallsSerializer", "$ref": "#/components/schemas/SchemaFilterFunctionsTrafficSerializer", "$ref": "#/components/schemas/SchemaFilterContainersSerializer", "$ref": "#/components/schemas/SchemaFilterInferenceSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLVolumeSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLPublicNetworkSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLCPUSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLMemorySerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLPoolerSerializer"]}, "tags": {"$ref": "#/components/schemas/TagsFilterSerializer", "description": "Filter by tags", "examples": [{"condition_type": "OR", "conditions": [{"key": "os_version", "strict": true, "value": "22.04"}, {"key": "os_version", "strict": true, "value": "23.04"}]}]}, "time_from": {"description": "The start date of the report period (ISO 8601). The report starts from the beginning of this day.", "examples": ["2023-01-01T00:00:00Z"], "format": "date-time", "title": "Time From", "type": "string"}, "time_to": {"description": "The end date of the report period (ISO 8601). The report ends just before the beginning of this day.", "examples": ["2023-02-01T00:00:00Z"], "format": "date-time", "title": "Time To", "type": "string"}, "types": {"description": "List of resource types to be filtered in the report.", "examples": [["egress_traffic", "instance"]], "items": {"$ref": "#/components/schemas/PrebillingResourceTypes"}, "title": "Types", "type": "array"}}, "required": ["time_from", "time_to"], "title": "CostReportTotalsRequestSerializer", "type": "object"}
    NewInterfaceExternalSerializerPydantic: {"description": "Instance will be attached to default external network", "examples": [{"interface_name": "eth0", "ip_family": "ipv4", "type": "external"}], "properties": {"interface_name": {"description": "Interface name. Defaults to `null` and is returned as `null` in the API response if not set.", "maxLength": 37, "title": "Interface Name", "type": "string"}, "ip_family": {"anyOf": ["$ref": "#/components/schemas/InterfaceIPFamily", "type": "null"], "default": "ipv4", "description": "Specify `ipv4`, `ipv6`, or `dual` to enable both."}, "security_groups": {"description": "Specifies security group UUIDs to be applied to the instance network interface.", "items": {"$ref": "#/components/schemas/MandatoryIdSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "type": {"const": "external", "description": "A public IP address will be assigned to the instance.", "title": "Type", "type": "string"}}, "required": ["type"], "title": "NewInterfaceExternalSerializerPydantic", "type": "object"}
    PullSecretSerializer: {"properties": {"login": {"description": "Pull secret login", "examples": ["login"], "title": "Login", "type": "string"}, "name": {"description": "Pull secret name", "examples": ["my-secret"], "title": "Name", "type": "string"}, "registry": {"description": "Pull secret registry", "examples": ["some.registry.com"], "title": "Registry", "type": "string"}, "updated_at": {"description": "Pull secret updated at", "examples": ["2021-01-01T00:00:00Z"], "title": "Updated At", "type": "string"}}, "required": ["name", "registry", "login", "updated_at"], "title": "PullSecretSerializer", "type": "object"}
    ItemPriceResponseSerializer: {"description": "Response with prices per hour and per month", "examples": [{"currency_code": "USD", "discount_percent": 0.16, "price_per_hour": 1, "price_per_month": 720, "price_status": "show", "price_without_discount_per_month": 604.8, "tax_percent": 17}], "properties": {"currency_code": {"anyOf": [{"enum": ["AZN", "EUR", "USD"], "type": "string"}, "type": "null"], "description": "Currency code (3 letter code per ISO 4217)", "title": "Currency Code"}, "discount_percent": {"anyOf": ["type": "number", "type": "null"], "description": "Actual discount relative value", "examples": [0.16], "title": "Discount Percent"}, "price_per_hour": {"anyOf": ["type": "number", "type": "null"], "description": "Price of the item charged per hour", "examples": [1], "title": "Price Per Hour"}, "price_per_month": {"anyOf": ["type": "number", "type": "null"], "description": "Price of the item charged per month", "examples": [720], "title": "Price Per Month"}, "price_status": {"$ref": "#/components/schemas/PriceDisplayStatus", "description": "Price status for the UI", "examples": ["show"]}, "price_without_discount_per_month": {"anyOf": ["type": "number", "type": "null"], "description": "Total price VAT inclusive per month without discount", "examples": [604.8], "title": "Price Without Discount Per Month"}, "tax_percent": {"description": "Tax rate applied to the subtotal, represented as a percentage", "examples": [0, 17, 12], "title": "Tax Percent", "type": "number"}}, "required": ["currency_code", "price_per_hour", "price_per_month", "price_without_discount_per_month", "discount_percent", "price_status", "tax_percent"], "title": "ItemPriceResponseSerializer", "type": "object"}
    K8sClusterV2Serializer: {"properties": {"add_ons": {"$ref": "#/components/schemas/K8sClusterAddonsV2Serializer", "description": "Cluster add-ons configuration", "examples": ["slurm": {"enabled": true, "file_share_id": "cbc94d0e-06c6-4d12-9e86-9782ba14fc8c", "ssh_key_ids": ["25735292-bd97-44b0-a1af-d7eab876261d", "efc01f3a-35b9-4385-89f9-e38439093ee7"], "worker_count": 2}]}, "authentication": {"anyOf": ["$ref": "#/components/schemas/K8sClusterAuthenticationV2Serializer", "type": "null"], "default": null, "description": "Cluster authentication settings", "examples": [{"kubeconfig_created_at": "2024-02-15T11:53:03Z", "kubeconfig_expires_at": "2026-02-15T11:53:03Z", "oidc": {"client_id": "kubernetes", "groups_claim": "groups", "groups_prefix": "oidc:", "issuer_url": "https://accounts.provider.example", "required_claims": {"claim": "value"}, "signing_algs": ["RS256", "RS512"], "username_claim": "sub", "username_prefix": "oidc:"}}]}, "autoscaler_config": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": null, "description": "Cluster autoscaler configuration.\n\nIt contains overrides to the default cluster-autoscaler parameters provided by the platform.", "examples": ["scale-down-unneeded-time": "5m"], "title": "Autoscaler Config"}, "cni": {"anyOf": ["$ref": "#/components/schemas/K8sClusterCNIV2Serializer", "type": "null"], "default": null, "description": "Cluster CNI settings"}, "created_at": {"description": "Function creation date", "examples": ["2023-02-15T11:53:03Z"], "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Task that created this entity", "examples": ["1772de21-f013-4b70-9f8f-a518985b3bc2"], "title": "Creator Task Id"}, "csi": {"$ref": "#/components/schemas/K8sClusterCSIV2Serializer", "description": "Cluster CSI settings"}, "ddos_profile": {"anyOf": ["$ref": "#/components/schemas/K8sClusterDdosProfileV2Serializer", "type": "null"], "default": null, "description": "Advanced DDoS Protection profile", "examples": [{"enabled": true, "fields": [{"base_field": 10, "field_value": [45046, 45047]}], "profile_template": 29}]}, "fixed_network": {"anyOf": ["type": "string", "type": "null"], "default": "", "description": "Fixed network id", "examples": ["3fa85f64-5717-4562-b3fc-2c963f66afa6"], "title": "Fixed Network"}, "fixed_subnet": {"anyOf": ["type": "string", "type": "null"], "default": "", "description": "Fixed subnet id", "examples": ["90729bc3-dd37-4761-ae09-b32f2f0a365b"], "title": "Fixed Subnet"}, "id": {"description": "Cluster pool uuid", "examples": ["f01fd9a0-9548-48ba-82dc-a8c8b2d6f2f1"], "title": "Id", "type": "string"}, "is_ipv6": {"default": false, "description": "Enable public v6 address", "examples": [true, false], "title": "Is Ipv6", "type": "boolean"}, "is_public": {"description": "Cluster is public", "examples": [false], "title": "Is Public", "type": "boolean"}, "keypair": {"description": "Keypair", "examples": ["mykeypair"], "title": "Keypair", "type": "string"}, "logging": {"anyOf": ["$ref": "#/components/schemas/LoggingOutSerializer", "type": "null"], "description": "Logging configuration", "examples": [{"destination_region_id": 1, "enabled": true, "retention_policy": {"period": 45}, "topic_name": "my-log-name"}]}, "name": {"description": "Name", "examples": ["test k8s"], "title": "Name", "type": "string"}, "pods_ip_pool": {"anyOf": ["type": "string", "type": "null"], "default": "172.16.0.0/18", "description": "The IP pool for the pods", "examples": ["172.16.0.0/18"], "title": "Pods Ip Pool"}, "pods_ipv6_pool": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The IPv6 pool for the pods", "examples": ["2a03:90c0:88:393::/64"], "title": "Pods Ipv6 Pool"}, "pools": {"description": "pools", "items": {"$ref": "#/components/schemas/K8sClusterPoolV2Serializer"}, "title": "Pools", "type": "array"}, "services_ip_pool": {"anyOf": ["type": "string", "type": "null"], "default": "172.24.0.0/18", "description": "The IP pool for the services", "examples": [
            "172.24.0.0/18"], "title": "Services Ip Pool"}, "services_ipv6_pool": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The IPv6 pool for the services", "examples": ["2a03:90c0:88:381::/108"], "title": "Services Ipv6 Pool"}, "status": {"$ref": "#/components/schemas/K8sClusterV2Status", "description": "Status", "examples": ["Provisioned"]}, "task_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "version": {"description": "K8s version", "examples": ["v1.28.1"], "title": "Version", "type": "string"}}, "required": ["add_ons", "csi", "created_at", "id", "is_public", "keypair", "logging", "name", "pools", "status", "version"], "title": "K8sClusterV2Serializer", "type": "object"}
    BaremetalClusterInstanceServersList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/BaremetalClusterInstanceServer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "BaremetalClusterInstanceServersList", "type": "object"}
    ResizeSfsSerializer: {"properties": {"size": {"description": "File Share new size in GiB.", "examples": [5], "minimum": 1, "title": "Size", "type": "integer"}}, "required": ["size"], "title": "ResizeSfsSerializer", "type": "object"}
    PatchFloatingIPSerializer: {"properties": {"tags": {"anyOf": ["$ref": "#/components/schemas/UpdateTagsSerializer", "type": "null"], "description": "Update key-value tags using JSON Merge Patch semantics (RFC 7386). Provide key-value pairs to add or update tags. Set tag values to `null` to remove tags. Unspecified tags remain unchanged. Read-only tags are always preserved and cannot be modified.\n\n**Examples:**\n\n\\* **Add/update tags:** `{'tags': {'environment': 'production', 'team': 'backend'}}` adds new tags or updates existing ones.\n\n\\* **Delete tags:** `{'tags': {'`old_tag`': null}}` removes specific tags.\n\n\\* **Remove all tags:** `{'tags': null}` removes all user-managed tags (read-only tags are preserved).\n\n\\* **Partial update:** `{'tags': {'environment': 'staging'}}` only updates specified tags.\n\n\\* **Mixed operations:** `{'tags': {'environment': 'production', '`cost_center`': 'engineering', '`deprecated_tag`': null}}` adds/updates 'environment' and '`cost_center`' while removing '`deprecated_tag`', preserving other existing tags.\n\n\\* **Replace all:** first delete existing tags with null values, then add new ones in the same request.", "examples": [{"my-tag": "my-tag-value", "my-tag-to-remove": null}]}}, "title": "PatchFloatingIPSerializer", "type": "object"}
    UserCredentialsSerializer: {"properties": {"password": {"description": "Password", "examples": ["<PASSWORD>"], "title": "Password", "type": "string"}, "username": {"description": "Username", "examples": ["myuser"], "title": "Username", "type": "string"}}, "required": ["password", "username"], "title": "UserCredentialsSerializer", "type": "object"}
    NewInterfaceSpecificSubnetFipSerializerPydantic: {"description": "The instance will get an IP address from the selected network.\nIf you choose to add a floating IP, the instance will be reachable from the internet.\nOtherwise, it will only have a private IP within the network.", "examples": [{"floating_ip": {"existing_floating_id": "57be69f6-6f6a-4f03-a4ad-8eb86c69ec0a", "source": "existing"}, "network_id": "59905c8e-2619-420a-b046-536096473370", "subnet_id": "e3c6ee77-48cb-416b-b204-11b492cc776e3", "type": "subnet"}], "properties": {"floating_ip": {"description": "Allows the instance to have a public IP that can be reached from the internet.", "discriminator": {"mapping": {"existing": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer", "new": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer"}, "propertyName": "source"}, "title": "Floating Ip", "anyOf": ["$ref": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer", "$ref": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer"]}, "interface_name": {"description": "Interface name. Defaults to `null` and is returned as `null` in the API response if not set.", "maxLength": 37, "title": "Interface Name", "type": "string"}, "network_id": {"description": "The network where the instance will be connected.", "format": "uuid4", "title": "Network Id", "type": "string"}, "security_groups": {"description": "Specifies security group UUIDs to be applied to the instance network interface.", "items": {"$ref": "#/components/schemas/MandatoryIdSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "subnet_id": {"description": "The instance will get an IP address from this subnet.", "format": "uuid4", "title": "Subnet Id", "type": "string"}, "type": {"const": "subnet", "description": "The instance will get an IP address from the selected network. If you choose to add a floating IP, the instance will be reachable from the internet. Otherwise, it will only have a private IP within the network.", "title": "Type", "type": "string"}}, "required": ["type", "network_id", "subnet_id"], "title": "NewInterfaceSpecificSubnetFipSerializerPydantic", "type": "object"}
    ClusterInstanceServersList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/ClusterInstanceServer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ClusterInstanceServersList", "type": "object"}
    ResourceAiVirtualClusterSerializer: {"description": "These properties are common for all individual AI Virtual clusters\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["g3-ai-32-192-1500-l40s-48-1_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the Virtual GPU cluster", "examples": ["g3-ai-32-192-1500-l40s-48-1"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the AI cluster", "examples": ["ai_virtual_cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "ai_virtual_cluster", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the Virtual GPU cluster", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "first_seen", "last_seen", "project_id", "last_name", "uuid", "tags"], "title": "ResourceAiVirtualClusterSerializer", "type": "object"}
    LoadbalancerStatsSerializer: {"properties": {"active_connections": {"description": "Currently active connections", "examples": [0], "title": "Active Connections", "type": "integer"}, "bytes_in": {"description": "Total bytes received", "examples": [34942398609], "title": "Bytes In", "type": "integer"}, "bytes_out": {"description": "Total bytes sent", "examples": [304777113641], "title": "Bytes Out", "type": "integer"}, "request_errors": {"description": "Total requests that were unable to be fulfilled", "examples": [4], "title": "Request Errors", "type": "integer"}, "total_connections": {"description": "Total connections handled", "examples": [21095970], "title": "Total Connections", "type": "integer"}}, "required": ["active_connections", "bytes_in", "bytes_out", "request_errors", "total_connections"], "title": "LoadbalancerStatsSerializer", "type": "object"}
    AppDeploymentList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/AppDeployment"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "AppDeploymentList", "type": "object"}
    MLCatalogModelCardListSerializerV3: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/MLCatalogModelCardSerializerV3"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "MLCatalogModelCardListSerializerV3", "type": "object"}
    K8sClusterAuthenticationV2Serializer: {"properties": {"kubeconfig_created_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Kubeconfig creation date", "examples": ["2024-02-15T11:53:03Z"], "title": "Kubeconfig Created At"}, "kubeconfig_expires_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Kubeconfig expiration date", "examples": ["2026-02-15T11:53:03Z"], "title": "Kubeconfig Expires At"}, "oidc": {"anyOf": ["$ref": "#/components/schemas/K8sClusterOIDCV2Serializer", "type": "null"], "default": null, "description": "OIDC authentication settings"}}, "title": "K8sClusterAuthenticationV2Serializer", "type": "object"}
    CustomerAssignableRole: {"enum": ["ClientAdministrator", "InternalNetworkOnlyUser", "Observer", "ProjectAdministrator", "User"], "title": "CustomerAssignableRole", "type": "string"}
    GetApiKeyResponseSerializer: {"properties": {"created_at": {"description": "Timestamp when the API Key was created.", "examples": ["2023-10-01T12:00:00Z"], "title": "Created At", "type": "string"}, "deployment_names": {"description": "List of inference deployment names to which this API Key has been attached.", "examples": [["inference-1", "inference-2"]], "items": {"type": "string"}, "title": "Deployment Names", "type": "array"}, "description": {"anyOf": ["type": "string", "type": "null"], "description": "Description of the API Key.", "examples": ["This key is used for accessing the inference service."], "title": "Description"}, "expires_at": {"anyOf": ["type": "string", "type": "null"], "description": "Timestamp when the API Key will expire.", "examples": ["2024-10-01T12:00:00Z"], "title": "Expires At"}, "name": {"description": "API Key name.", "examples": ["my-api-key"], "title": "Name", "type": "string"}}, "required": ["name", "description", "created_at", "expires_at", "deployment_names"], "title": "GetApiKeyResponseSerializer", "type": "object"}
    FloatingIPSerializer: {"properties": {"created_at": {"description": "Datetime when the floating IP was created", "examples": ["2019-06-13T13:58:12+0000"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Task that created this entity", "examples": ["d1e1500b-e2be-40aa-9a4b-cc493fa1af30"], "title": "Creator Task Id"}, "fixed_ip_address": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "description": "IP address of the port the floating IP is attached to", "examples": ["192.168.10.15"], "title": "Fixed Ip Address"}, "floating_ip_address": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "description": "IP Address of the floating IP", "examples": ["172.24.4.34"], "title": "Floating Ip Address"}, "id": {"description": "Floating IP ID", "examples": ["c64e5db1-5f1f-43ec-a8d9-5090df85b82d"], "format": "uuid4", "title": "Id", "type": "string"}, "port_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Port ID the floating IP is attached to. The `fixed_ip_address` is the IP address of the port.", "examples": ["ee2402d0-f0cd-4503-9b75-69be1d11c5f1"], "title": "Port Id"}, "project_id": {"description": "Project ID", "examples": [1337], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "router_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Router ID", "examples": ["11005a33-c5ac-4c96-ab6f-8f2827cc7da6"], "title": "Router Id"}, "status": {"anyOf": ["$ref": "#/components/schemas/FloatingIPStatus", "type": "null"], "description": "Floating IP status", "examples": ["ACTIVE", "DOWN", "ERROR"]}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": ["a4eb4b29-048e-42f6-a5e1-2c18bc001c45"], "title": "Task Id"}, "updated_at": {"description": "Datetime when the floating IP was last updated", "examples": ["2019-06-13T13:58:12+0000"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["project_id", "region_id", "region", "creator_task_id", "fixed_ip_address", "floating_ip_address", "id", "tags", "port_id", "router_id", "status", "task_id", "created_at", "updated_at"], "title": "FloatingIPSerializer", "type": "object"}
    InstanceFixedAddressSerializer: {"description": "Schema for `fixed` addresses. This schema is used when fetching a single instance.", "properties": {"addr": {"description": "IP address", "examples": ["10.0.0.17"], "title": "Addr", "type": "string"}, "interface_name": {"anyOf": ["type": "string", "type": "null"], "description": "Interface name. This field will be `null` if `with_interfaces_name=true` is not set in the request when listing instances. It will also be `null` if the `interface_name` was not specified during instance creation or when attaching the interface.", "examples": ["my-interface"], "title": "Interface Name"}, "subnet_id": {"description": "The unique identifier of the subnet associated with this address. Included only in the response for a single-resource lookup (GET by ID). For the trunk subports, this field is always set.", "examples": ["ba83aec4-7bc1-4979-b934-a11fc1d36cf3"], "title": "Subnet Id", "type": "string"}, "subnet_name": {"description": "The name of the subnet associated with this address. Included only in the response for a single-resource lookup (GET by ID). For the trunk subports, this field is always set.", "examples": ["my-subnet"], "title": "Subnet Name", "type": "string"}, "type": {"const": "fixed", "description": "Type of the address", "examples": ["fixed"], "title": "Type", "type": "string"}}, "required": ["addr", "type", "interface_name", "subnet_name", "subnet_id"], "title": "Fixed IP Address", "type": "object"}
    PatchPGClusterSerializer: {"properties": {"databases": {"default": [], "items": {"$ref": "#/components/schemas/Database"}, "title": "Databases", "type": "array"}, "flavor": {"anyOf": ["$ref": "#/components/schemas/Flavor", "type": "null"], "default": null, "description": "New instance RAM and CPU"}, "high_availability": {"anyOf": ["$ref": "#/components/schemas/HighAvailabilityOptions", "type": "null"], "default": null, "description": "New High Availability settings"}, "network": {"anyOf": ["$ref": "#/components/schemas/PublicNetwork", "type": "null"], "default": null, "title": "Network"}, "pg_server_configuration": {"anyOf": ["$ref": "#/components/schemas/PatchPostgreSQLServerConfig", "type": "null"], "default": null, "description": "New PosgtreSQL cluster configuration"}, "storage": {"anyOf": ["$ref": "#/components/schemas/StorageSize", "type": "null"], "default": null, "description": "New storage configuration"}, "users": {"default": [], "items": {"$ref": "#/components/schemas/PgUser"}, "title": "Users", "type": "array"}}, "title": "PatchPGClusterSerializer", "type": "object"}
    CaasApiKeySerializer: {"properties": {"containers": {"description": "List of containers using key", "examples": [[{"name": "my-container", "namespace": "space"}]], "items": {"$ref": "#/components/schemas/CaasNamespacedName"}, "title": "Containers", "type": "array"}, "created_at": {"description": "Key starts to work", "examples": ["2023-08-22T11:21:00Z"], "format": "date-time", "title": "Created At", "type": "string"}, "description": {"description": "Key description", "examples": ["my first key"], "title": "Description", "type": "string"}, "expire": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "description": "Key expires at", "examples": ["2023-07-31T00:00:00Z"], "title": "Expire"}, "is_disabled": {"description": "Set to true if key is disabled", "examples": [false], "title": "Is Disabled", "type": "boolean"}, "name": {"description": "Key name", "examples": ["my-key"], "title": "Name", "type": "string"}, "source": {"description": "Source of the apikey, can be 'cloud' or 'iate'", "examples": ["cloud"], "title": "Source", "type": "string"}, "status": {"description": "Key status", "examples": ["Expired"], "title": "Status", "type": "string"}}, "required": ["name", "description", "created_at", "status", "source", "expire", "is_disabled", "containers"], "title": "CaasApiKeySerializer", "type": "object"}
    AppTemplateCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/AppTemplateSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "AppTemplateCollectionSerializer", "type": "object"}
    LoadBalancerPricingPreviewV2RequestSerializer: {"description": "Price preview loadbalancer schema", "examples": [{"flavor": "lb1-1-2", "floating_ip": {"existing_floating_id": "c64e5db1-5f1f-43ec-a8d9-5090df85b82d", "source": "existing"}}], "properties": {"flavor": {"description": "Load balancer flavor name", "examples": ["lb1-1-2"], "title": "Flavor", "type": "string"}, "floating_ip": {"description": "Allows the instance to have a public IP that can be reached from the internet.", "discriminator": {"mapping": {"existing": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer", "new": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer"}, "propertyName": "source"}, "title": "Floating Ip", "anyOf": ["$ref": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer", "$ref": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer"]}, "vip_ip_family": {"anyOf": ["$ref": "#/components/schemas/InterfaceIPFamily", "type": "null"], "default": null, "description": "Which subnet should be selected if not specified: IPv4, IPv6 or use dual stack.", "examples": ["ipv4"]}, "vip_network_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Network ID for load balancer. If not specified, default external network will be used. Mutually exclusive with `vip_port_id`", "examples": ["ddc28e44-2acb-499b-985b-831f29432e1c"], "title": "Vip Network Id"}, "vip_port_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Existing Reserved Fixed IP port ID for load balancer. Mutually exclusive with `vip_network_id`", "examples": ["57be69f6-6f6a-4f03-a4ad-8eb86c69ec0a"], "title": "Vip Port Id"}, "vip_subnet_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Subnet ID for load balancer. If not specified, any subnet from `vip_network_id` will be selected. Ignored when `vip_network_id` is not specified.", "examples": ["2731a56e-a5c9-44be-80c2-02c57c594573"], "title": "Vip Subnet Id"}}, "required": ["flavor"], "title": "LoadBalancerPricingPreviewV2RequestSerializer", "type": "object"}
    ContainerSerializer: {"properties": {"address": {"description": "Container address", "examples": ["some.example.com"], "title": "Address", "type": "string"}, "commands": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Container's commands", "examples": ["python3 app.py -m test"], "title": "Commands"}, "created_at": {"description": "Container creation date", "examples": ["2021-01-01T00:00:00Z"], "format": "date-time", "title": "Created At", "type": "string"}, "deploy_status": {"$ref": "#/components/schemas/DeployStatusSerializer", "description": "Container deploy status"}, "description": {"description": "Container description", "examples": ["My first container"], "title": "Description", "type": "string"}, "envs": {"description": "Container environment variables", "examples": [{"ENVIRONMENT_VARIABLE": "value 2", "ENV_VAR": "value 1"}], "patternProperties": {"^[a-zA-Z_][a-zA-Z0-9_]*$": {"maxLength": 255, "type": "string"}}, "propertyNames": {"maxLength": 255}, "title": "Envs", "type": "object"}, "flavor": {"description": "Container flavor", "examples": ["250mCPU-512MiB"], "title": "Flavor", "type": "string"}, "image": {"description": "Container image", "examples": ["nginx:latest"], "title": "Image", "type": "string"}, "is_api_key_auth": {"description": "Enable/Disable api key authentication", "examples": [false], "title": "Is Api Key Auth", "type": "boolean"}, "is_disabled": {"description": "Set to true if container is disabled", "examples": [false], "title": "Is Disabled", "type": "boolean"}, "listening_port": {"description": "Container listening port", "examples": [80], "title": "Listening Port", "type": "integer"}, "logging": {"anyOf": ["$ref": "#/components/schemas/LoggingOutSerializer", "type": "null"], "default": null, "description": "Logging configuration", "examples": [{"destination_region_id": 1, "enabled": true, "retention_policy": {"period": 45}, "topic_name": "my-log-name"}]}, "name": {"description": "Container name", "examples": ["nginx"], "title": "Name", "type": "string"}, "namespace": {"description": "Container namespace", "examples": ["default"], "title": "Namespace", "type": "string"}, "pull_secret": {"anyOf": ["type": "string", "type": "null"], "description": "Image pull secret", "examples": ["my-secret"], "title": "Pull Secret"}, "scale": {"$ref": "#/components/schemas/ScaleSerializer", "description": "Container autoscaling", "examples": [{"max": 2, "min": 1}]}, "source": {"description": "Source of the container, can be 'cloud' or 'iate'", "examples": ["cloud"], "title": "Source", "type": "string"}, "status": {"description": "Container status", "examples": ["RUNNING"], "title": "Status", "type": "string"}, "status_message": {"anyOf": ["type": "string", "type": "null"], "description": "Container status message", "examples": ["Some container status"], "title": "Status Message"}, "timeout": {"description": "Container timeout in seconds", "examples": [5], "title": "Timeout", "type": "integer", "x-stainless-naming": {"python": {"method_argument": "api_timeout"}}}}, "required": ["name", "image", "listening_port", "description", "envs", "timeout", "flavor", "source", "scale", "is_disabled", "is_api_key_auth", "pull_secret", "status", "status_message", "namespace", "address", "created_at", "deploy_status"], "title": "ContainerSerializer", "type": "object"}
    MandatoryIdSchema: {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "description": "Resource ID"}}, "required": ["id"], "description": "MandatoryIdSchema schema", "example": {"id": "ae74714c-c380-48b4-87f8-758d656cdad6"}}
    InferenceBoxSecretsSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/InferenceBoxSecretsSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "InferenceBoxSecretsSerializerList", "type": "object"}
    SchemaFilterFloatingIpEnum: {"enum": ["ip_address", "last_name", "type", "uuid"], "title": "SchemaFilterFloatingIpEnum", "type": "string"}
    LoadbalancerMetricsRequestSerializer: {"properties": {"time_interval": {"description": "Time interval", "examples": [6], "title": "Time Interval", "type": "integer"}, "time_unit": {"$ref": "#/components/schemas/InstanceMetricsTimeUnitEnum", "description": "Time interval unit", "examples": ["hour"]}}, "required": ["time_interval", "time_unit"], "title": "LoadbalancerMetricsRequestSerializer", "type": "object"}
    BaremetalClusterCreateSerializer: {"properties": {"flavor": {"description": "Cluster flavor ID", "examples": ["g3-ai-32-192-1500-l40s-48-1"], "title": "Flavor", "type": "string"}, "image_id": {"description": "System image ID", "examples": ["3793c250-0b3b-4678-bab3-e11afbc29657"], "title": "Image Id", "type": "string"}, "name": {"description": "Cluster name", "examples": ["gpu-cluster-1"], "maxLength": 256, "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "servers_count": {"description": "Number of servers in the cluster", "examples": [3], "exclusiveMaximum": 1000, "exclusiveMinimum": 0, "title": "Servers Count", "type": "integer"}, "servers_settings": {"$ref": "#/components/schemas/BaremetalServerSettingsInputSerializer", "description": "Configuration settings for the servers in the cluster"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}}, "required": ["name", "flavor", "image_id", "servers_count", "servers_settings"], "title": "BaremetalClusterCreateSerializer", "type": "object"}
    VolumeCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/VolumeSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "VolumeCollectionSerializer", "type": "object"}
    AIClusterPricingPreviewRequestSerializer: {"description": "Pricing schema for AI cluster creation with detailed prices per category", "examples": [{"flavor": "bm1-ai-small-v1pod-4", "instances_count": 1, "interfaces": [{"floating_ip": {"source": "new"}, "network_id": "ddc28e44-2acb-499b-985b-831f29432e1c", "subnet_id": "2731a56e-a5c9-44be-80c2-02c57c594573", "type": "subnet"}], "name": "poplar-ubuntu", "volumes": [{"size": 10, "source": "image", "type_name": "ssd_hiiops"}, {"size": 5, "source": "new-volume", "type_name": "standard"}, {"snapshot_id": "7cca40d7-a843-4e9f-ae08-62b9a394b1ab", "source": "snapshot"}]}], "properties": {"flavor": {"description": "AI cluster flavor", "title": "Flavor", "type": "string"}, "instances_count": {"default": 1, "description": "A multiplier that would be used to calculate the price, multiplying the flavor, IP, and volume prices by this number", "title": "Instances Count", "type": "integer"}, "interfaces": {"description": "Subnet IPs and floating IPs", "items": {"$ref": "#/components/schemas/NewVmInterfaceSerializersPydantic"}, "title": "Interfaces", "type": "array"}, "name": {"description": "AI cluster name", "title": "Name", "type": "string"}, "volumes": {"description": "Volumes attached to the AI cluster", "items": {"$ref": "#/components/schemas/InstanceVolumePricingRequestSerializer"}, "title": "Volumes", "type": "array"}}, "required": ["name", "flavor", "interfaces"], "title": "AIClusterPricingPreviewRequestSerializer", "type": "object"}
    CaasFlavorListSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/CaasFlavorSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "CaasFlavorListSerializer", "type": "object"}
    TotalDBAASPostgreSQLMemoryReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_memory_gbmin"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_memory", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalDBAASPostgreSQLMemoryReportItemSerializer", "type": "object"}
    ImageHwFirmwareTypeEnum: {"enum": ["bios", "uefi"], "title": "ImageHwFirmwareTypeEnum", "type": "string"}
    CreateFloatingIPSerializer: {"properties": {"fixed_ip_address": {"anyOf": [{"format": "ipv4", "type": "string"}, "type": "null"], "default": null, "description": "If the port has multiple IP addresses, a specific one can be selected using this field. If not specified, the first IP in the port's list will be used by default.", "examples": ["192.168.10.15"], "title": "Fixed Ip Address", "x-stainless-terraform-configurability": "computed_optional"}, "port_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "If provided, the floating IP will be immediately attached to the specified port.", "examples": ["ee2402d0-f0cd-4503-9b75-69be1d11c5f1"], "title": "Port Id", "x-stainless-terraform-configurability": "computed_optional"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}}, "title": "CreateFloatingIPSerializer", "type": "object"}
    CreateLbPoolMemberSerializer: {"properties": {"address": {"description": "Member IP address", "examples": ["192.168.40.33"], "format": "ipvanyaddress", "title": "Address", "type": "string"}, "admin_state_up": {"default": true, "description": "Administrative state of the resource. When set to true, the resource is enabled and operational. When set to false, the resource is disabled and will not process traffic. When null is passed, the value is skipped and defaults to true.", "examples": [true], "title": "Admin State Up", "type": "boolean"}, "backup": {"default": false, "description": "Set to true if the member is a backup member, to which traffic will be sent exclusively when all non-backup members will be unreachable. It allows to realize ACTIVE-BACKUP load balancing without thinking about VRRP and VIP configuration. Default is false.", "examples": [true, false], "title": "Backup", "type": "boolean"}, "instance_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "Either `subnet_id` or `instance_id` should be provided", "examples": ["a7e7e8d6-0bf7-4ac9-8170-831b47ee2ba9"], "title": "Instance Id"}, "monitor_address": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "default": null, "description": "An alternate IP address used for health monitoring of a backend member. Default is null which monitors the member address.", "title": "Monitor Address"}, "monitor_port": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "An alternate protocol port used for health monitoring of a backend member. Default is null which monitors the member `protocol_port`.", "title": "Monitor Port"}, "protocol_port": {"description": "Member IP port", "examples": [80], "title": "Protocol Port", "type": "integer"}, "subnet_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "`subnet_id` in which `address` is present. Either `subnet_id` or `instance_id` should be provided", "examples": ["32283b0b-b560-4690-810c-f672cbb2e28d"], "title": "Subnet Id"}, "weight": {"description": "Member weight. Valid values are 0 < `weight` <= 256, defaults to 1. Controls traffic distribution based on the pool's load balancing algorithm:\n\\* `ROUND_ROBIN`: Distributes connections to each member in turn according to weights. Higher weight = more turns in the cycle. Example: weights 3 vs 1 = ~75% vs ~25% of requests.\n\\* `LEAST_CONNECTIONS`: Sends new connections to the member with fewest active connections, performing round-robin within groups of the same normalized load. Higher weight = allowed to hold more simultaneous connections before being considered 'more loaded'. Example: weights 2 vs 1 means 20 vs 10 active connections is treated as balanced.\n\\* `SOURCE_IP`: Routes clients consistently to the same member by hashing client source IP; hash result is modulo total weight of running members. Higher weight = more hash buckets, so more client IPs map to that member. Example: weights 2 vs 1 = roughly two-thirds of distinct client IPs map to the higher-weight member.", "examples": [1], "exclusiveMinimum": 0, "maximum": 256, "title": "Weight", "type": "integer"}}, "required": ["protocol_port", "address"], "title": "CreateLbPoolMemberSerializer", "type": "object"}
    ListGpuImageSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/GpuImageSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListGpuImageSerializer", "type": "object"}
    KeypairSerializer: {"additionalProperties": false, "properties": {"created_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Keypair creation datetime", "title": "Created At"}, "fingerprint": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Key fingerprint", "examples": ["86:75:ce:e7:e9:1e:f0:79:ec:6f:d8:92:9b:43:fc:4d"], "title": "Fingerprint"}, "id": {"description": "Key ID, equal to `sshkey_name`", "examples": ["36a7a97a-0672-4911-8f2b-92cd4e5b0d91"], "title": "Id", "type": "string"}, "name": {"description": "Keypair name", "examples": ["alice"], "maxLength": 255, "minLength": 1, "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "private_key": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Private part of the key", "examples": ["<private_key>"], "title": "Private Key"}, "project_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Project ID", "examples": [1], "title": "Project Id"}, "public_key": {"description": "Public part of the key. To generate public and private keys in the platform, do not specify the parameter in the request body.", "examples": ["ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFHrnwGVBZs6q6vmTBzQFfzdRLQW8N6Rd0ogGe3h8tm83ZJLTTsF+1H4JcOvwI5ETkHMaFIWd2U15nHU5M7plE6UPRKfzy4rq6yI6cE4tojd3A9attMpbEEX7EbGKrbrb4AsjzxHKAVaREAb31ZplJkUlsiees25hTQXBcWQnOESlc9RCxZ/QQgNUUgqm7QGg7CNkL8Mpq9V4YaOhcFGWj0jXP1CL3g6Xe3xJo1CmUbkIOGUyAmrSfLEiy2O91iOUhbmYQyXksznNrT9O6uLkijf6syLZOdyAuUd/Z86eYXej4/YsvIA5eIFU4B6y9zOXEO2A81txPYMRAytYt7+e7 alice@alice"], "title": "Public Key", "type": "string"}, "shared_in_project": {"description": "Keypair is shared for all users in the project", "examples": [true], "title": "Shared In Project", "type": "boolean"}, "state": {"$ref": "#/components/schemas/KeypairState", "description": "Keypair state", "examples": ["ACTIVE", "DELETING"]}}, "required": ["id", "public_key", "name", "state", "shared_in_project"], "title": "Keypair response object", "type": "object"}
    FileShareStorageType: {"enum": ["standard", "vast"], "title": "FileShareStorageType", "type": "string"}
    MemberConnectivity: {"enum": ["L2", "L3"], "title": "MemberConnectivity", "type": "string"}
    LbPoolInstanceSerializer: {"properties": {"ca_secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Secret ID of CA certificate bundle", "title": "Ca Secret Id"}, "creator_task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Task that created this entity", "examples": ["d8334c12-2881-4c4a-84ad-1b21fea73ad1"], "title": "Creator Task Id"}, "crl_secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Secret ID of CA revocation list file", "title": "Crl Secret Id"}, "healthmonitor": {"anyOf": ["$ref": "#/components/schemas/LbHealthMonitorSerializer", "type": "null"], "description": "Health monitor parameters"}, "id": {"description": "Pool ID", "examples": ["9fccf0a3-c0de-441d-9afd-2b9b58b08b9f"], "format": "uuid4", "title": "Id", "type": "string"}, "lb_algorithm": {"$ref": "#/components/schemas/LbAlgorithmEnum", "description": "Load balancer algorithm", "examples": ["ROUND_ROBIN"]}, "listeners": {"description": "Listeners IDs", "examples": [["id": "c63341da-ea44-4027-bbf6-1f1939c783da"]], "items": {"$ref": "#/components/schemas/MandatoryIdSerializerPydantic"}, "title": "Listeners", "type": "array"}, "loadbalancers": {"description": "Load balancers IDs", "examples": [["id": "79943b39-5e67-47e1-8878-85044b39667a"]], "items": {"$ref": "#/components/schemas/MandatoryIdSerializerPydantic"}, "title": "Loadbalancers", "type": "array"}, "members": {"description": "Pool members", "items": {"$ref": "#/components/schemas/DetailedLbPoolMemberSerializer"}, "title": "Members", "type": "array"}, "name": {"description": "Pool name", "examples": ["lbaas_test_pool"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "operating_status": {"$ref": "#/components/schemas/OperatingStatusEnum", "description": "Pool operating status", "examples": ["ONLINE"]}, "protocol": {"$ref": "#/components/schemas/LbPoolProtocolEnum", "description": "Protocol", "examples": ["TCP"]}, "provisioning_status": {"$ref": "#/components/schemas/ProvisioningStatusEnum", "description": "Pool lifecycle status", "examples": ["ACTIVE"]}, "secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Secret ID for TLS client authentication to the member servers", "title": "Secret Id"}, "session_persistence": {"anyOf": ["$ref": "#/components/schemas/LbSessionPersistence", "type": "null"], "description": "Session persistence parameters"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "timeout_client_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Frontend client inactivity timeout in milliseconds", "examples": [50000], "title": "Timeout Client Data"}, "timeout_member_connect": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member connection timeout in milliseconds", "examples": [50000], "title": "Timeout Member Connect"}, "timeout_member_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member inactivity timeout in milliseconds", "examples": [null], "title": "Timeout Member Data"}}, "required": ["id", "name", "lb_algorithm", "protocol", "loadbalancers", "listeners", "members", "session_persistence", "operating_status", "provisioning_status", "creator_task_id", "task_id", "timeout_client_data", "timeout_member_connect", "timeout_member_data", "secret_id", "crl_secret_id", "ca_secret_id", "healthmonitor"], "title": "LbPoolInstanceSerializer", "type": "object"}
    CostReportTotalsResponseFormat: {"enum": ["csv_totals", "json"], "title": "CostReportTotalsResponseFormat", "type": "string"}
    SecurityGroupRuleSerializer: {"properties": {"created_at": {"description": "Datetime when the rule was created", "examples": ["2019-06-18T11:56:16+0000"], "format": "date-time", "title": "Created At", "type": "string"}, "description": {"anyOf": ["type": "string", "type": "null"], "default": "", "description": "Rule description", "examples": ["Some description"], "title": "Description"}, "direction": {"description": "Ingress or egress, which is the direction in which the security group rule is applied", "enum": ["egress", "ingress"], "title": "Direction", "type": "string"}, "ethertype": {"anyOf": [{"enum": ["IPv4", "IPv6"], "type": "string"}, "type": "null"], "default": null, "description": "Must be IPv4 or IPv6, and addresses represented in CIDR must match the ingress or egress rules.", "examples": ["IPv4"], "title": "Ethertype"}, "id": {"description": "The ID of the security group rule", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Id", "type": "string"}, "port_range_max": {"anyOf": [{"maximum": 65535, "minimum": 0, "type": "integer"}, "type": "null"], "default": null, "description": "The maximum port number in the range that is matched by the security group rule", "examples": [80], "title": "Port Range Max"}, "port_range_min": {"anyOf": [{"maximum": 65535, "minimum": 0, "type": "integer"}, "type": "null"], "default": null, "description": "The minimum port number in the range that is matched by the security group rule", "examples": [80], "title": "Port Range Min"}, "protocol": {"anyOf": ["$ref": "#/components/schemas/SecurityGroupProtocolEnum", "type": "null"], "default": null, "description": "Protocol", "examples": ["tcp"]}, "remote_group_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "The remote group UUID to associate with this security group rule", "title": "Remote Group Id"}, "remote_ip_prefix": {"anyOf": [{"format": "ipvanynetwork", "type": "string"}, "type": "null"], "default": null, "description": "The remote IP prefix that is matched by this security group rule", "examples": ["10.0.0.0/8"], "title": "Remote Ip Prefix"}, "revision_number": {"description": "The revision number of the resource", "examples": [0], "title": "Revision Number", "type": "integer"}, "security_group_id": {"description": "The security group ID to associate with this security group rule", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Security Group Id", "type": "string"}, "updated_at": {"description": "Datetime when the rule was last updated", "examples": ["2019-06-18T11:57:00+0000"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["id", "security_group_id", "created_at", "updated_at", "revision_number", "direction"], "title": "SecurityGroupRuleSerializer", "type": "object"}
    FileSharePricingRequestSerializer: {"examples": [{"size": 1000, "source": "new-file-share"}], "properties": {"size": {"description": "File share size in GiB", "title": "Size", "type": "integer"}, "source": {"$ref": "#/components/schemas/CreateFileShareSource", "description": "Only 'new-file-share'"}, "type_name": {"$ref": "#/components/schemas/FileShareStorageType", "default": "standard", "description": "File share type"}}, "required": ["source", "size"], "title": "FileSharePricingRequestSerializer", "type": "object"}
    PatchRouterSerializer: {"properties": {"external_gateway_info": {"anyOf": ["$ref": "#/components/schemas/RouterExternalManualGwSerializer", "type": "null"], "default": null, "description": "New external gateway.", "examples": [{"enable_snat": false, "network_id": "d7745dcf-b302-4795-9d61-6cc52487af48", "type": "manual"}]}, "name": {"anyOf": [{"pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "type": "string"}, "type": "null"], "default": null, "description": "New name of router", "examples": ["my_renamed_router"], "title": "Name"}, "routes": {"anyOf": [{"items": {"$ref": "#/components/schemas/RouteInSerializer"}, "type": "array"}, "type": "null"], "default": null, "description": "List of custom routes.", "examples": [[{"destination": "10.0.3.0/24", "nexthop": "10.0.0.13"}]], "title": "Routes"}}, "title": "PatchRouterSerializer", "type": "object"}
    TotalBasicVmReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["g2s-shared-1-2-25_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "flavor": {"description": "Flavor of the basic VM", "examples": ["g2s-shared-1-2-25"], "title": "Flavor", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "basic_vm", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor"], "title": "TotalBasicVmReportItemSerializer", "type": "object"}
    ScaleSerializer: {"properties": {"cooldown_period": {"anyOf": [{"maximum": 3600, "minimum": 1, "type": "integer"}, "type": "null"], "default": 60, "description": "Cooldown period in seconds", "title": "Cooldown Period"}, "max": {"description": "Maximum number of instances", "maximum": 25, "minimum": 1, "title": "Max", "type": "integer"}, "min": {"description": "Minimum number of instances", "maximum": 25, "minimum": 0, "title": "Min", "type": "integer"}, "triggers": {"anyOf": ["$ref": "#/components/schemas/ScaleTriggersSerializer", "type": "null"], "default": null, "description": "Scale triggers configuration"}}, "required": ["min", "max"], "title": "ScaleSerializer", "type": "object"}
    LifecyclePolicyCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/LifecyclePolicySerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "LifecyclePolicyCollectionSerializer", "type": "object"}
    UpdateLifecyclePolicySerializer: {"properties": {"name": {"description": "Name of the lifecycle policy.", "examples": ["schedule_1"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "status": {"$ref": "#/components/schemas/LifecyclePolicyStatusesEnum", "description": "Status of the lifecycle policy.", "examples": ["paused"]}}, "title": "UpdateLifecyclePolicySerializer", "type": "object"}
    UpdateL7PolicySchema: {"type": "object", "properties": {"action": {"type": "string", "enum": ["REDIRECT_PREFIX", "REDIRECT_TO_POOL", "REDIRECT_TO_URL", "REJECT"], "description": "Action"}, "name": {"type": "string", "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "description": "Human-readable name of the policy"}, "position": {"type": "integer", "description": "The position of this policy on the listener. Positions start at 1."}, "redirect_http_code": {"type": "integer", "description": "Requests matching this policy will be redirected to the specified URL or Prefix URL with the HTTP response code. Valid if action is `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are 301, 302, 303, 307, or 308. Default is 302."}, "redirect_pool_id": {"type": "string", "description": "Requests matching this policy will be redirected to the pool with this ID. Only valid if action is `REDIRECT_TO_POOL`."}, "redirect_prefix": {"type": "string", "description": "Requests matching this policy will be redirected to this Prefix URL. Only valid if action is `REDIRECT_PREFIX`."}, "redirect_url": {"type": "string", "description": "Requests matching this policy will be redirected to this URL. Only valid if action is `REDIRECT_TO_URL`."}, "tags": {"type": "array", "description": "A list of simple strings assigned to the resource.", "items": {"type": "string"}}}, "required": ["action"], "description": "UpdateL7Policy schema", "example": {"action": "REDIRECT_TO_URL", "name": "redirect-images.example.com", "position": 1, "redirect_http_code": 301, "redirect_url": "http://images.example.com", "tags": ["updated_tag"]}}
    InstanceMetricsListSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/InstanceMetricsSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "InstanceMetricsListSerializer", "type": "object"}
    SchemaFilterBackupSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterBackupEnum", "description": "Field name to filter by", "examples": ["last_size"]}, "type": {"const": "backup", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["10"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterBackupSerializer", "type": "object"}
    GetClientProfileSerializer: {"properties": {"fields": {"description": "List of configured field values for the protection profile", "items": {"$ref": "#/components/schemas/ClientProfileFieldSerializer"}, "title": "Fields", "type": "array"}, "id": {"description": "Unique identifier for the DDoS protection profile", "examples": [0], "title": "Id", "type": "integer"}, "options": {"$ref": "#/components/schemas/ProfileOptionsSerializer", "description": "Configuration options controlling profile activation and BGP routing", "examples": [{"active": true, "bgp": true}]}, "profile_template": {"anyOf": ["$ref": "#/components/schemas/ClientProfileTemplateSerializer", "type": "null"], "description": "Complete template configuration data used for this profile"}, "profile_template_description": {"anyOf": ["type": "string", "type": "null"], "description": "Detailed description of the protection template used for this profile", "examples": ["ARK server ports. Valid port values are in range 1000-65535"], "title": "Profile Template Description"}, "protocols": {"anyOf": [{"items": {"$ref": "#/components/schemas/ProtocolsOnPortSerializer"}, "type": "array"}, "type": "null"], "description": "List of network protocols and ports configured for protection", "examples": [[{"port": "80", "protocols": ["TCP", "HTTP"]}, {"port": "53", "protocols": ["UDP"]}]], "title": "Protocols"}, "site": {"anyOf": [{"maxLength": 50, "type": "string"}, "type": "null"], "description": "Geographic site identifier where the protection is deployed", "examples": ["ED"], "title": "Site"}, "status": {"anyOf": ["$ref": "#/components/schemas/DdosProfileStatusSerializer", "type": "null"], "description": "Current operational status and any error information for the profile", "examples": [{"error_description": "", "status": "Updated"}]}}, "required": ["id", "options", "site", "protocols", "status", "profile_template_description", "profile_template", "fields"], "title": "GetClientProfileSerializer", "type": "object"}
    K8sClusterCNIV2Serializer: {"properties": {"cilium": {"anyOf": ["$ref": "#/components/schemas/K8sClusterCiliumV2Serializer", "type": "null"], "default": null, "description": "Cilium settings"}, "provider": {"$ref": "#/components/schemas/K8sClusterCNI", "default": "calico", "description": "CNI provider", "examples": ["calico"]}}, "title": "K8sClusterCNIV2Serializer", "type": "object"}
    CreateBillingReservationRequestSerializer: {"properties": {"has_windows": {"default": false, "title": "Has Windows", "type": "boolean"}, "name": {"title": "Name", "type": "string"}, "period": {"enum": ["MONTHS12", "MONTHS36"], "title": "Period", "type": "string"}, "region_id": {"title": "Region Id", "type": "integer"}, "resources": {"items": {"$ref": "#/components/schemas/BillingReservationPricingResourceRequestSerializer"}, "title": "Resources", "type": "array"}}, "required": ["period", "resources", "region_id", "name"], "title": "CreateBillingReservationRequestSerializer", "type": "object"}
    BlackholePortSerializer: {"properties": {"AlarmEnd": {"description": "A date-time string giving the time that the alarm ended", "examples": ["2025-02-05 12:04:30Z"], "format": "date-time", "title": "Alarmend", "type": "string"}, "AlarmStart": {"description": "A date-time string giving the time that the alarm started", "examples": ["2025-02-05 12:04:11Z"], "format": "date-time", "title": "Alarmstart", "type": "string"}, "AlarmState": {"$ref": "#/components/schemas/BlackholePortAlarmState", "description": "Current state of alarm", "examples": ["alarm"]}, "AlertDuration": {"description": "Total alert duration", "examples": ["2 hours"], "title": "Alertduration", "type": "string"}, "DestinationIP": {"description": "Notification destination IP address", "examples": ["80.240.114.116"], "title": "Destinationip", "type": "string"}, "ID": {"description": "", "title": "Id", "type": "integer"}}, "required": ["ID", "AlarmState", "AlarmStart", "AlarmEnd", "AlertDuration", "DestinationIP"], "title": "BlackholePortSerializer", "type": "object"}
    RegionRequestedQuotasSerializer: {"properties": {"baremetal_basic_count_limit": {"description": "Basic bare metal servers count limit", "examples": [0], "title": "Baremetal Basic Count Limit", "type": "integer"}, "baremetal_basic_count_requested": {"description": "Basic bare metal servers count requested", "examples": [1], "title": "Baremetal Basic Count Requested", "type": "integer"}, "baremetal_basic_count_usage": {"description": "Basic bare metal servers count usage", "examples": [0], "title": "Baremetal Basic Count Usage", "type": "integer"}, "baremetal_gpu_a100_count_limit": {"description": "Bare metal A100 GPU server count limit", "examples": [0], "title": "Baremetal Gpu A100 Count Limit", "type": "integer"}, "baremetal_gpu_a100_count_requested": {"description": "Bare metal A100 GPU server count requested", "examples": [1], "title": "Baremetal Gpu A100 Count Requested", "type": "integer"}, "baremetal_gpu_a100_count_usage": {"description": "Bare metal A100 GPU server count usage", "examples": [0], "title": "Baremetal Gpu A100 Count Usage", "type": "integer"}, "baremetal_gpu_h100_count_limit": {"description": "Bare metal H100 GPU server count limit", "examples": [0], "title": "Baremetal Gpu H100 Count Limit", "type": "integer"}, "baremetal_gpu_h100_count_requested": {"description": "Bare metal H100 GPU server count requested", "examples": [1], "title": "Baremetal Gpu H100 Count Requested", "type": "integer"}, "baremetal_gpu_h100_count_usage": {"description": "Bare metal H100 GPU server count usage", "examples": [0], "title": "Baremetal Gpu H100 Count Usage", "type": "integer"}, "baremetal_gpu_h200_count_limit": {"description": "Bare metal H200 GPU server count limit", "examples": [0], "title": "Baremetal Gpu H200 Count Limit", "type": "integer"}, "baremetal_gpu_h200_count_requested": {"description": "Bare metal H200 GPU server count requested", "examples": [1], "title": "Baremetal Gpu H200 Count Requested", "type": "integer"}, "baremetal_gpu_h200_count_usage": {"description": "Bare metal H200 GPU server count usage", "examples": [0], "title": "Baremetal Gpu H200 Count Usage", "type": "integer"}, "baremetal_gpu_l40s_count_limit": {"description": "Bare metal L40S GPU server count limit", "examples": [0], "title": "Baremetal Gpu L40S Count Limit", "type": "integer"}, "baremetal_gpu_l40s_count_requested": {"description": "Bare metal L40S GPU server count requested", "examples": [1], "title": "Baremetal Gpu L40S Count Requested", "type": "integer"}, "baremetal_gpu_l40s_count_usage": {"description": "Bare metal L40S GPU server count usage", "examples": [0], "title": "Baremetal Gpu L40S Count Usage", "type": "integer"}, "baremetal_hf_count_limit": {"description": "High-frequency bare metal servers count limit", "examples": [0], "title": "Baremetal Hf Count Limit", "type": "integer"}, "baremetal_hf_count_requested": {"description": "High-frequency bare metal servers count requested", "examples": [1], "title": "Baremetal Hf Count Requested", "type": "integer"}, "baremetal_hf_count_usage": {"description": "High-frequency bare metal servers count usage", "examples": [0], "title": "Baremetal Hf Count Usage", "type": "integer"}, "baremetal_infrastructure_count_limit": {"description": "Infrastructure bare metal servers count limit", "examples": [0], "title": "Baremetal Infrastructure Count Limit", "type": "integer"}, "baremetal_infrastructure_count_requested": {"description": "Infrastructure bare metal servers count requested", "examples": [1], "title": "Baremetal Infrastructure Count Requested", "type": "integer"}, "baremetal_infrastructure_count_usage": {"description": "Infrastructure bare metal servers count usage", "examples": [0], "title": "Baremetal Infrastructure Count Usage", "type": "integer"}, "baremetal_network_count_limit": {"description": "Bare metal Network Count limit", "examples": [0], "title": "Baremetal Network Count Limit", "type": "integer"}, "baremetal_network_count_requested": {"description": "Bare metal Network Count requested", "examples": [1], "title": "Baremetal Network Count Requested", "type": "integer"},
        "baremetal_network_count_usage": {"description": "Bare metal Network Count usage", "examples": [0], "title": "Baremetal Network Count Usage", "type": "integer"}, "baremetal_storage_count_limit": {"description": "Storage bare metal servers count limit", "examples": [0], "title": "Baremetal Storage Count Limit", "type": "integer"}, "baremetal_storage_count_requested": {"description": "Storage bare metal servers count requested", "examples": [1], "title": "Baremetal Storage Count Requested", "type": "integer"}, "baremetal_storage_count_usage": {"description": "Storage bare metal servers count usage", "examples": [0], "title": "Baremetal Storage Count Usage", "type": "integer"}, "caas_container_count_limit": {"description": "Containers count limit", "examples": [0], "title": "Caas Container Count Limit", "type": "integer"}, "caas_container_count_requested": {"description": "Containers count requested", "examples": [1], "title": "Caas Container Count Requested", "type": "integer"}, "caas_container_count_usage": {"description": "Containers count usage", "examples": [0], "title": "Caas Container Count Usage", "type": "integer"}, "caas_cpu_count_limit": {"description": "mCPU count for containers limit", "examples": [0], "title": "Caas Cpu Count Limit", "type": "integer"}, "caas_cpu_count_requested": {"description": "mCPU count for containers requested", "examples": [1], "title": "Caas Cpu Count Requested", "type": "integer"}, "caas_cpu_count_usage": {"description": "mCPU count for containers usage", "examples": [0], "title": "Caas Cpu Count Usage", "type": "integer"}, "caas_gpu_count_limit": {"description": "Containers gpu count limit", "examples": [0], "title": "Caas Gpu Count Limit", "type": "integer"}, "caas_gpu_count_requested": {"description": "Containers gpu count requested", "examples": [1], "title": "Caas Gpu Count Requested", "type": "integer"}, "caas_gpu_count_usage": {"description": "Containers gpu count usage", "examples": [0], "title": "Caas Gpu Count Usage", "type": "integer"}, "caas_ram_size_limit": {"description": "MB memory count for containers limit", "examples": [0], "title": "Caas Ram Size Limit", "type": "integer"}, "caas_ram_size_requested": {"description": "MB memory count for containers requested", "examples": [1], "title": "Caas Ram Size Requested", "type": "integer"}, "caas_ram_size_usage": {"description": "MB memory count for containers usage", "examples": [0], "title": "Caas Ram Size Usage", "type": "integer"}, "cluster_count_limit": {"description": "K8s clusters count limit", "examples": [0], "title": "Cluster Count Limit", "type": "integer"}, "cluster_count_requested": {"description": "K8s clusters count requested", "examples": [1], "title": "Cluster Count Requested", "type": "integer"}, "cluster_count_usage": {"description": "K8s clusters count usage", "examples": [0], "title": "Cluster Count Usage", "type": "integer"}, "cpu_count_limit": {"description": "vCPU Count limit", "examples": [0], "title": "Cpu Count Limit", "type": "integer"}, "cpu_count_requested": {"description": "vCPU Count requested", "examples": [1], "title": "Cpu Count Requested", "type": "integer"}, "cpu_count_usage": {"description": "vCPU Count usage", "examples": [0], "title": "Cpu Count Usage", "type": "integer"}, "dbaas_postgres_cluster_count_limit": {"description": "DBaaS cluster count limit", "examples": [0], "title": "Dbaas Postgres Cluster Count Limit", "type": "integer"}, "dbaas_postgres_cluster_count_requested": {"description": "DBaaS cluster count requested", "examples": [1], "title": "Dbaas Postgres Cluster Count Requested", "type": "integer"}, "dbaas_postgres_cluster_count_usage": {"description": "DBaaS cluster count usage", "examples": [0], "title": "Dbaas Postgres Cluster Count Usage", "type": "integer"}, "external_ip_count_limit": {"description": "External IP Count limit", "examples": [0], "title": "External Ip Count Limit", "type": "integer"}, "external_ip_count_requested": {"description": "External IP Count requested", "examples": [1], "title": "External Ip Count Requested", "type": "integer"}, "external_ip_count_usage": {
          "description": "External IP Count usage", "examples": [0], "title": "External Ip Count Usage", "type": "integer"}, "faas_cpu_count_limit": {"description": "mCPU count for functions limit", "examples": [0], "title": "Faas Cpu Count Limit", "type": "integer"}, "faas_cpu_count_requested": {"description": "mCPU count for functions requested", "examples": [1], "title": "Faas Cpu Count Requested", "type": "integer"}, "faas_cpu_count_usage": {"description": "mCPU count for functions usage", "examples": [0], "title": "Faas Cpu Count Usage", "type": "integer"}, "faas_function_count_limit": {"description": "Functions count limit", "examples": [0], "title": "Faas Function Count Limit", "type": "integer"}, "faas_function_count_requested": {"description": "Functions count requested", "examples": [1], "title": "Faas Function Count Requested", "type": "integer"}, "faas_function_count_usage": {"description": "Functions count usage", "examples": [0], "title": "Faas Function Count Usage", "type": "integer"}, "faas_namespace_count_limit": {"description": "Functions namespace count limit", "examples": [0], "title": "Faas Namespace Count Limit", "type": "integer"}, "faas_namespace_count_requested": {"description": "Functions namespace count requested", "examples": [1], "title": "Faas Namespace Count Requested", "type": "integer"}, "faas_namespace_count_usage": {"description": "Functions namespace count usage", "examples": [0], "title": "Faas Namespace Count Usage", "type": "integer"}, "faas_ram_size_limit": {"description": "MB memory count for functions limit", "examples": [0], "title": "Faas Ram Size Limit", "type": "integer"}, "faas_ram_size_requested": {"description": "MB memory count for functions requested", "examples": [1], "title": "Faas Ram Size Requested", "type": "integer"}, "faas_ram_size_usage": {"description": "MB memory count for functions usage", "examples": [0], "title": "Faas Ram Size Usage", "type": "integer"}, "firewall_count_limit": {"description": "Firewalls Count limit", "examples": [0], "title": "Firewall Count Limit", "type": "integer"}, "firewall_count_requested": {"description": "Firewalls Count requested", "examples": [1], "title": "Firewall Count Requested", "type": "integer"}, "firewall_count_usage": {"description": "Firewalls Count usage", "examples": [0], "title": "Firewall Count Usage", "type": "integer"}, "floating_count_limit": {"description": "Floating IP Count limit", "examples": [0], "title": "Floating Count Limit", "type": "integer"}, "floating_count_requested": {"description": "Floating IP Count requested", "examples": [1], "title": "Floating Count Requested", "type": "integer"}, "floating_count_usage": {"description": "Floating IP Count usage", "examples": [0], "title": "Floating Count Usage", "type": "integer"}, "gpu_count_limit": {"description": "GPU Count limit", "examples": [0], "title": "Gpu Count Limit", "type": "integer"}, "gpu_count_requested": {"description": "GPU Count requested", "examples": [1], "title": "Gpu Count Requested", "type": "integer"}, "gpu_count_usage": {"description": "GPU Count usage", "examples": [0], "title": "Gpu Count Usage", "type": "integer"}, "gpu_virtual_a100_count_limit": {"description": "Virtual A100 GPU card count limit", "examples": [0], "title": "Gpu Virtual A100 Count Limit", "type": "integer"}, "gpu_virtual_a100_count_requested": {"description": "Virtual A100 GPU card count requested", "examples": [1], "title": "Gpu Virtual A100 Count Requested", "type": "integer"}, "gpu_virtual_a100_count_usage": {"description": "Virtual A100 GPU card count usage", "examples": [0], "title": "Gpu Virtual A100 Count Usage", "type": "integer"}, "gpu_virtual_h100_count_limit": {"description": "Virtual H100 GPU card count limit", "examples": [0], "title": "Gpu Virtual H100 Count Limit", "type": "integer"}, "gpu_virtual_h100_count_requested": {"description": "Virtual H100 GPU card count requested", "examples": [1], "title": "Gpu Virtual H100 Count Requested", "type": "integer"}, "gpu_virtual_h100_count_usage": {"description": "Virtual H100 GPU card count usage", "examples": [
            0], "title": "Gpu Virtual H100 Count Usage", "type": "integer"}, "gpu_virtual_h200_count_limit": {"description": "Virtual H200 GPU card count limit", "examples": [0], "title": "Gpu Virtual H200 Count Limit", "type": "integer"}, "gpu_virtual_h200_count_requested": {"description": "Virtual H200 GPU card count requested", "examples": [1], "title": "Gpu Virtual H200 Count Requested", "type": "integer"}, "gpu_virtual_h200_count_usage": {"description": "Virtual H200 GPU card count usage", "examples": [0], "title": "Gpu Virtual H200 Count Usage", "type": "integer"}, "gpu_virtual_l40s_count_limit": {"description": "Virtual L40S GPU card count limit", "examples": [0], "title": "Gpu Virtual L40S Count Limit", "type": "integer"}, "gpu_virtual_l40s_count_requested": {"description": "Virtual L40S GPU card count requested", "examples": [1], "title": "Gpu Virtual L40S Count Requested", "type": "integer"}, "gpu_virtual_l40s_count_usage": {"description": "Virtual L40S GPU card count usage", "examples": [0], "title": "Gpu Virtual L40S Count Usage", "type": "integer"}, "image_count_limit": {"description": "Images Count limit", "examples": [0], "title": "Image Count Limit", "type": "integer"}, "image_count_requested": {"description": "Images Count requested", "examples": [1], "title": "Image Count Requested", "type": "integer"}, "image_count_usage": {"description": "Images Count usage", "examples": [0], "title": "Image Count Usage", "type": "integer"}, "image_size_limit": {"description": "Images Size, GiB limit", "examples": [0], "title": "Image Size Limit", "type": "integer"}, "image_size_requested": {"description": "Images Size, GiB requested", "examples": [1], "title": "Image Size Requested", "type": "integer"}, "image_size_usage": {"description": "Images Size, GiB usage", "examples": [0], "title": "Image Size Usage", "type": "integer"}, "ipu_count_limit": {"description": "IPU Count limit", "examples": [0], "title": "Ipu Count Limit", "type": "integer"}, "ipu_count_requested": {"description": "IPU Count requested", "examples": [1], "title": "Ipu Count Requested", "type": "integer"}, "ipu_count_usage": {"description": "IPU Count usage", "examples": [0], "title": "Ipu Count Usage", "type": "integer"}, "laas_topic_count_limit": {"description": "LaaS Topics Count limit", "examples": [0], "title": "Laas Topic Count Limit", "type": "integer"}, "laas_topic_count_requested": {"description": "LaaS Topics Count requested", "examples": [1], "title": "Laas Topic Count Requested", "type": "integer"}, "laas_topic_count_usage": {"description": "LaaS Topics Count usage", "examples": [0], "title": "Laas Topic Count Usage", "type": "integer"}, "loadbalancer_count_limit": {"description": "Load Balancers Count limit", "examples": [0], "title": "Loadbalancer Count Limit", "type": "integer"}, "loadbalancer_count_requested": {"description": "Load Balancers Count requested", "examples": [1], "title": "Loadbalancer Count Requested", "type": "integer"}, "loadbalancer_count_usage": {"description": "Load Balancers Count usage", "examples": [0], "title": "Loadbalancer Count Usage", "type": "integer"}, "network_count_limit": {"description": "Networks Count limit", "examples": [0], "title": "Network Count Limit", "type": "integer"}, "network_count_requested": {"description": "Networks Count requested", "examples": [1], "title": "Network Count Requested", "type": "integer"}, "network_count_usage": {"description": "Networks Count usage", "examples": [0], "title": "Network Count Usage", "type": "integer"}, "ram_limit": {"description": "RAM Size, GiB limit", "examples": [0], "title": "Ram Limit", "type": "integer"}, "ram_requested": {"description": "RAM Size, GiB requested", "examples": [1], "title": "Ram Requested", "type": "integer"}, "ram_usage": {"description": "RAM Size, GiB usage", "examples": [0], "title": "Ram Usage", "type": "integer"}, "registry_count_limit": {"description": "Registries count limit", "examples": [0], "title": "Registry Count Limit", "type": "integer"}, "registry_count_requested": {"description": "Registries count requested", "examples": [
            1], "title": "Registry Count Requested", "type": "integer"}, "registry_count_usage": {"description": "Registries count usage", "examples": [0], "title": "Registry Count Usage", "type": "integer"}, "registry_storage_limit": {"description": "Registries volume usage, GiB limit", "examples": [0], "title": "Registry Storage Limit", "type": "integer"}, "registry_storage_requested": {"description": "Registries volume usage, GiB requested", "examples": [1], "title": "Registry Storage Requested", "type": "integer"}, "registry_storage_usage": {"description": "Registries volume usage, GiB usage", "examples": [0], "title": "Registry Storage Usage", "type": "integer"}, "router_count_limit": {"description": "Routers Count limit", "examples": [0], "title": "Router Count Limit", "type": "integer"}, "router_count_requested": {"description": "Routers Count requested", "examples": [1], "title": "Router Count Requested", "type": "integer"}, "router_count_usage": {"description": "Routers Count usage", "examples": [0], "title": "Router Count Usage", "type": "integer"}, "secret_count_limit": {"description": "Secret Count limit", "examples": [0], "title": "Secret Count Limit", "type": "integer"}, "secret_count_requested": {"description": "Secret Count requested", "examples": [1], "title": "Secret Count Requested", "type": "integer"}, "secret_count_usage": {"description": "Secret Count usage", "examples": [0], "title": "Secret Count Usage", "type": "integer"}, "servergroup_count_limit": {"description": "Placement Group Count limit", "examples": [0], "title": "Servergroup Count Limit", "type": "integer"}, "servergroup_count_requested": {"description": "Placement Group Count requested", "examples": [1], "title": "Servergroup Count Requested", "type": "integer"}, "servergroup_count_usage": {"description": "Placement Group Count usage", "examples": [0], "title": "Servergroup Count Usage", "type": "integer"}, "sfs_count_limit": {"description": "Shared file system Count limit", "examples": [0], "title": "Sfs Count Limit", "type": "integer"}, "sfs_count_requested": {"description": "Shared file system Count requested", "examples": [1], "title": "Sfs Count Requested", "type": "integer"}, "sfs_count_usage": {"description": "Shared file system Count usage", "examples": [0], "title": "Sfs Count Usage", "type": "integer"}, "sfs_size_limit": {"description": "Shared file system Size, GiB limit", "examples": [0], "title": "Sfs Size Limit", "type": "integer"}, "sfs_size_requested": {"description": "Shared file system Size, GiB requested", "examples": [1], "title": "Sfs Size Requested", "type": "integer"}, "sfs_size_usage": {"description": "Shared file system Size, GiB usage", "examples": [0], "title": "Sfs Size Usage", "type": "integer"}, "shared_vm_count_limit": {"description": "Basic VMs Count limit", "examples": [0], "title": "Shared Vm Count Limit", "type": "integer"}, "shared_vm_count_requested": {"description": "Basic VMs Count requested", "examples": [1], "title": "Shared Vm Count Requested", "type": "integer"}, "shared_vm_count_usage": {"description": "Basic VMs Count usage", "examples": [0], "title": "Shared Vm Count Usage", "type": "integer"}, "snapshot_schedule_count_limit": {"description": "Snapshot Schedules Count limit", "examples": [0], "title": "Snapshot Schedule Count Limit", "type": "integer"}, "snapshot_schedule_count_requested": {"description": "Snapshot Schedules Count requested", "examples": [1], "title": "Snapshot Schedule Count Requested", "type": "integer"}, "snapshot_schedule_count_usage": {"description": "Snapshot Schedules Count usage", "examples": [0], "title": "Snapshot Schedule Count Usage", "type": "integer"}, "subnet_count_limit": {"description": "Subnets Count limit", "examples": [0], "title": "Subnet Count Limit", "type": "integer"}, "subnet_count_requested": {"description": "Subnets Count requested", "examples": [1], "title": "Subnet Count Requested", "type": "integer"}, "subnet_count_usage": {"description": "Subnets Count usage", "examples": [0], "title": "Subnet Count Usage", "type": "integer"}, "vm_count_limit": {
          "description": "Instances Dedicated Count limit", "examples": [0], "title": "Vm Count Limit", "type": "integer"}, "vm_count_requested": {"description": "Instances Dedicated Count requested", "examples": [1], "title": "Vm Count Requested", "type": "integer"}, "vm_count_usage": {"description": "Instances Dedicated Count usage", "examples": [0], "title": "Vm Count Usage", "type": "integer"}, "volume_count_limit": {"description": "Volumes Count limit", "examples": [0], "title": "Volume Count Limit", "type": "integer"}, "volume_count_requested": {"description": "Volumes Count requested", "examples": [1], "title": "Volume Count Requested", "type": "integer"}, "volume_count_usage": {"description": "Volumes Count usage", "examples": [0], "title": "Volume Count Usage", "type": "integer"}, "volume_size_limit": {"description": "Volumes Size, GiB limit", "examples": [0], "title": "Volume Size Limit", "type": "integer"}, "volume_size_requested": {"description": "Volumes Size, GiB requested", "examples": [1], "title": "Volume Size Requested", "type": "integer"}, "volume_size_usage": {"description": "Volumes Size, GiB usage", "examples": [0], "title": "Volume Size Usage", "type": "integer"}, "volume_snapshots_count_limit": {"description": "Snapshots Count limit", "examples": [0], "title": "Volume Snapshots Count Limit", "type": "integer"}, "volume_snapshots_count_requested": {"description": "Snapshots Count requested", "examples": [1], "title": "Volume Snapshots Count Requested", "type": "integer"}, "volume_snapshots_count_usage": {"description": "Snapshots Count usage", "examples": [0], "title": "Volume Snapshots Count Usage", "type": "integer"}, "volume_snapshots_size_limit": {"description": "Snapshots Size, GiB limit", "examples": [0], "title": "Volume Snapshots Size Limit", "type": "integer"}, "volume_snapshots_size_requested": {"description": "Snapshots Size, GiB requested", "examples": [1], "title": "Volume Snapshots Size Requested", "type": "integer"}, "volume_snapshots_size_usage": {"description": "Snapshots Size, GiB usage", "examples": [0], "title": "Volume Snapshots Size Usage", "type": "integer"}}, "title": "RegionRequestedQuotasSerializer", "type": "object"}
    FloatingIPStatus: {"enum": ["ACTIVE", "DOWN", "ERROR"], "title": "FloatingIPStatus", "type": "string"}
    FunctionSerializer: {"properties": {"autoscaling": {"$ref": "#/components/schemas/FaasAutoscalingSerializer", "description": "Autoscaling configuration for the function. Keys must be '`min_instances`' or '`max_instances`', and values must be integers between 0 and 50.", "examples": [{"max_instances": 2, "min_instances": 1}]}, "build_message": {"description": "Function build message.", "examples": ["Building"], "title": "Build Message", "type": "string"}, "build_status": {"description": "Function build status.", "examples": ["Building"], "title": "Build Status", "type": "string"}, "code_text": {"description": "Function code text.", "examples": ["def main():\n    return 'Hello World'"], "maxLength": 100000, "minLength": 1, "title": "Code Text", "type": "string"}, "created_at": {"description": "Function creation date.", "examples": ["2023-08-22T11:21:00Z"], "title": "Created At", "type": "string"}, "dependencies": {"description": "Dependencies for the function to install.", "examples": ["numpy==1.21.0\npandas==1.3.0"], "maxLength": 100000, "title": "Dependencies", "type": "string"}, "deploy_status": {"additionalProperties": {"type": "integer"}, "description": "Function deploy status.", "examples": ["deployed": 1], "title": "Deploy Status", "type": "object"}, "description": {"description": "Description of the function.", "examples": ["This is a sample function."], "maxLength": 255, "minLength": 0, "title": "Description", "type": "string"}, "enable_api_key": {"anyOf": ["type": "boolean", "type": "null"], "default": null, "description": "Enable or disable API key authentication.", "examples": [true], "title": "Enable Api Key"}, "endpoint": {"description": "Function endpoint.", "examples": ["https://example.com/function-name"], "title": "Endpoint", "type": "string"}, "envs": {"anyOf": [{"patternProperties": {"^[a-zA-Z_][a-zA-Z0-9_]*$": {"maxLength": 255, "minLength": 0, "type": "string"}}, "propertyNames": {"maxLength": 255, "minLength": 1}, "type": "object"}, "type": "null"], "default": null, "description": "Environment variables for the function. Keys must match a specific regex pattern and be 1-255 characters long, and values must be 0-255 characters long.", "examples": ["ENV_VAR": "value"], "title": "Envs"}, "flavor": {"description": "The name of the flavor associated with the function.", "examples": ["64m-64MB"], "title": "Flavor", "type": "string"}, "id": {"description": "Function ID.", "examples": ["c8a920ad-b5a4-47d5-b8b9-0e6c35cd800f"], "title": "Id", "type": "string"}, "main_method": {"description": "The main startup method name.", "examples": ["run"], "maxLength": 100, "minLength": 1, "title": "Main Method", "type": "string"}, "name": {"description": "Function name.", "examples": ["function-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Name", "type": "string"}, "runtime": {"description": "Function runtime.", "examples": ["python3.7.12"], "title": "Runtime", "type": "string"}, "status": {"description": "Function status.", "examples": ["Running"], "title": "Status", "type": "string"}, "timeout": {"description": "Function timeout in seconds.", "examples": [5], "maximum": 180, "minimum": 0, "title": "Timeout", "type": "integer", "x-stainless-naming": {"python": {"method_argument": "api_timeout"}}}}, "required": ["id", "name", "runtime", "timeout", "flavor", "autoscaling", "code_text", "main_method", "endpoint", "build_status", "build_message", "status", "created_at", "deploy_status", "dependencies", "description"], "title": "FunctionSerializer", "type": "object"}
    DeprecatedTasksAcknowledgeBodySerializer: {"properties": {"task_ids": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, "type": "null"], "default": null, "description": "List of tasks ids", "title": "Task Ids"}}, "title": "DeprecatedTasksAcknowledgeBodySerializer", "type": "object"}
    ResizeVirtualGPUClusterSerializer: {"properties": {"action": {"const": "resize", "description": "Action name", "examples": ["resize"], "title": "Action", "type": "string"}, "servers_count": {"description": "Requested servers count", "examples": [5], "exclusiveMinimum": 0, "title": "Servers Count", "type": "integer"}}, "required": ["action", "servers_count"], "title": "ResizeVirtualGPUClusterSerializer", "type": "object"}
    DBAASPGConfiguration: {"properties": {"flavors": {"items": {"$ref": "#/components/schemas/FlavorConfiguration"}, "title": "Available flavors", "type": "array"}, "storage_classes": {"items": {"$ref": "#/components/schemas/StorageClass"}, "title": "Available storages", "type": "array"}, "versions": {"description": "Available versions", "examples": [["14", "15"]], "items": {"type": "string"}, "title": "Versions", "type": "array"}}, "required": ["versions", "storage_classes", "flavors"], "title": "DBAASPGConfiguration", "type": "object"}
    TotalSnapshotReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["snap_t_standard_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "snapshot", "title": "Type", "type": "string"}, "volume_type": {"description": "Type of the volume", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "volume_type"], "title": "TotalSnapshotReportItemSerializer", "type": "object"}
    RegionAccessType: {"enum": ["core", "edge"], "title": "RegionAccessType", "type": "string"}
    K8sClusterPoolV2SerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/K8sClusterPoolV2Serializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[K8sClusterPoolV2Serializer]", "type": "object"}
    PatchLbListenerSerializer: {"properties": {"allowed_cidrs": {"anyOf": [{"items": {"format": "ipvanynetwork", "type": "string"}, "type": "array"}, "type": "null"], "description": "Network CIDRs from which service will be accessible", "examples": [["10.0.0.0/8"]], "title": "Allowed Cidrs"}, "connection_limit": {"description": "Limit of simultaneous connections", "examples": [100000], "maximum": 1000000, "minimum": -1, "title": "Connection Limit", "type": "integer"}, "name": {"description": "Load balancer listener name", "examples": ["new_listener_name"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "ID of the secret where PKCS12 file is stored for `TERMINATED_HTTPS` or PROMETHEUS load balancer", "examples": ["af4a64e7-03ca-470f-9a09-b77d54c5abd8"], "title": "Secret Id"}, "sni_secret_id": {"anyOf": [{"items": {"format": "uuid4", "type": "string"}, "type": "array"}, "type": "null"], "description": "List of secret's ID containing PKCS12 format certificate/key bundfles for `TERMINATED_HTTPS` or PROMETHEUS listeners", "examples": [["af4a64e7-03ca-470f-9a09-b77d54c5abd8", "12b43d95-d420-4c79-a883-49bf146cbdff"]], "title": "Sni Secret Id"}, "timeout_client_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Frontend client inactivity timeout in milliseconds", "examples": [50000], "title": "Timeout Client Data"}, "timeout_member_connect": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member connection timeout in milliseconds", "examples": [50000], "title": "Timeout Member Connect"}, "timeout_member_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member inactivity timeout in milliseconds", "examples": [null], "title": "Timeout Member Data"}, "user_list": {"anyOf": [{"items": {"$ref": "#/components/schemas/UserListItem"}, "type": "array"}, "type": "null"], "description": "Load balancer listener users list", "examples": [[{"encrypted_password": "$5$isRr.HJ1IrQP38.m$oViu3DJOpUG2ZsjCBtbITV3mqpxxbZfyWJojLPNSPO5", "username": "admin"}]], "title": "User List"}}, "title": "PatchLbListenerSerializer", "type": "object"}
    PatchReservedFixedIPSerializer: {"properties": {"is_vip": {"description": "If reserved fixed IP should be a VIP", "examples": [true], "title": "Is Vip", "type": "boolean"}}, "required": ["is_vip"], "title": "PatchReservedFixedIPSerializer", "type": "object"}
    RemoteConsoleSerializer: {"properties": {"remote_console": {"$ref": "#/components/schemas/RemoteConsoleData", "description": "Remote console information", "examples": [{"protocol": "vnc", "type": "novnc", "url": "https://console-novnc-lux4.cloud.gcore.com/vnc_auto.html?path=%3Ftoken%3Df445c4b6-0a77-4fae-bc0e-147201dbfbea"}]}}, "required": ["remote_console"], "title": "RemoteConsoleSerializer", "type": "object"}
    K8sClusterCNICreateV2Serializer: {"properties": {"cilium": {"anyOf": ["$ref": "#/components/schemas/K8sClusterCiliumV2Serializer", "type": "null"], "default": null, "description": "Cilium settings"}, "provider": {"$ref": "#/components/schemas/K8sClusterCNI", "default": "calico", "description": "CNI provider", "examples": ["calico"]}}, "title": "K8sClusterCNICreateV2Serializer", "type": "object"}
    BareMetalFlavorSerializer: {"description": "Bare metal flavor schema embedded into instance schema", "properties": {"architecture": {"description": "CPU architecture", "examples": ["x86_64"], "title": "Architecture", "type": "string"}, "flavor_id": {"description": "Flavor ID is the same as name", "examples": ["g2-standard-32-64"], "title": "Flavor Id", "type": "string"}, "flavor_name": {"description": "Flavor name", "examples": ["g2-standard-32-64"], "title": "Flavor Name", "type": "string"}, "hardware_description": {"$ref": "#/components/schemas/BareMetalFlavorHardwareDescriptionSerializer", "description": "Additional hardware description"}, "os_type": {"description": "Operating system", "examples": ["linux"], "title": "Os Type", "type": "string"}, "ram": {"description": "RAM size in MiB", "examples": [2048], "title": "Ram", "type": "integer"}, "resource_class": {"description": "Flavor resource class for mapping to hardware capacity", "examples": ["bm2-hf-medium"], "title": "Resource Class", "type": "string"}, "vcpus": {"description": "Virtual CPU count. For bare metal flavors, it's a physical CPU count", "examples": [1], "title": "Vcpus", "type": "integer"}}, "required": ["flavor_id", "flavor_name", "vcpus", "ram", "hardware_description", "os_type", "architecture", "resource_class"], "title": "Bare metal flavor", "type": "object"}
    ApiGroup: {"enum": ["ai_cluster", "backup_service", "caas_container", "caas_key", "caas_pull_secret", "dbaas_postgres", "ddos_profile", "faas_function", "faas_key", "faas_namespace", "file_shares", "floating_ip", "image", "inference_at_the_edge", "instance", "instance_isolation", "k8s_cluster", "k8s_cluster_template", "k8s_pool", "laas", "laas_topic", "lb_health_monitor", "lb_l7policy", "lb_l7rule", "lblistener", "lbpool", "lbpool_member", "lifecycle_policy", "lifecycle_policy_volume_member", "loadbalancer", "network", "port", "project", "quota_limit_request", "registry", "reservation", "reserved_fixed_ip", "role", "router", "secret", "securitygroup", "securitygrouprule", "servergroup", "shared_flavor", "shared_image", "shared_network", "snapshot", "snapshot_schedule", "ssh_key", "subnet", "user", "vip_ip_addresses", "volume"], "title": "ApiGroup", "type": "string"}
    RegistrySerializer: {"properties": {"created_at": {"description": "Registry creation date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Created At", "type": "string"}, "id": {"description": "Registry ID", "examples": [1], "title": "Id", "type": "integer"}, "name": {"description": "Registry name", "examples": ["company-name"], "title": "Name", "type": "string"}, "repo_count": {"description": "Number of repositories in the registry", "examples": [1], "title": "Repo Count", "type": "integer"}, "storage_limit": {"description": "Registry storage limit, GiB", "examples": [5], "title": "Storage Limit", "type": "integer"}, "storage_used": {"description": "Registry storage used, bytes", "examples": [1000000000], "title": "Storage Used", "type": "integer"}, "updated_at": {"description": "Registry modification date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Updated At", "type": "string"}, "url": {"description": "Registry url", "title": "Url", "type": "string"}}, "required": ["id", "name", "storage_limit", "storage_used", "url", "created_at", "updated_at", "repo_count"], "title": "RegistrySerializer", "type": "object"}
    DdosProfileStatusSerializer: {"properties": {"error_description": {"description": "Detailed error message describing any issues with the profile operation", "examples": ["An error occured while deleting profile"], "title": "Error Description", "type": "string"}, "status": {"description": "Current operational status of the DDoS protection profile", "examples": ["Error Deleting"], "maxLength": 30, "minLength": 3, "title": "Status", "type": "string"}}, "required": ["status", "error_description"], "title": "DdosProfileStatusSerializer", "type": "object"}
    PatchSubnetSerializer: {"properties": {"dns_nameservers": {"anyOf": [{"items": {"format": "ipvanyaddress", "type": "string"}, "type": "array"}, "type": "null"], "default": null, "description": "List IP addresses of DNS servers to advertise via DHCP.", "examples": [["8.8.4.4", "1.1.1.1"]], "title": "Dns Nameservers"}, "enable_dhcp": {"anyOf": ["type": "boolean", "type": "null"], "default": null, "description": "True if DHCP should be enabled", "examples": [true], "title": "Enable Dhcp"}, "gateway_ip": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "description": "Default GW IPv4 address to advertise in DHCP routes in this subnet. Omit this field to let the cloud backend allocate it automatically. Set to null if no gateway must be advertised by this subnet's DHCP (useful when attaching instances to multiple subnets in order to prevent default route conflicts).", "examples": ["192.168.10.1"], "title": "Gateway Ip"}, "host_routes": {"anyOf": [{"items": {"$ref": "#/components/schemas/RouteInSerializer"}, "type": "array"}, "type": "null"], "default": null, "description": "List of custom static routes to advertise via DHCP.", "examples": [[{"destination": "10.0.3.0/24", "nexthop": "10.0.0.13"}]], "title": "Host Routes"}, "name": {"anyOf": [{"pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "type": "string"}, "type": "null"], "default": null, "description": "Name", "examples": ["some_name"], "title": "Name"}, "tags": {"anyOf": ["$ref": "#/components/schemas/UpdateTagsSerializer", "type": "null"], "description": "Update key-value tags using JSON Merge Patch semantics (RFC 7386). Provide key-value pairs to add or update tags. Set tag values to `null` to remove tags. Unspecified tags remain unchanged. Read-only tags are always preserved and cannot be modified.\n\n**Examples:**\n\n\\* **Add/update tags:** `{'tags': {'environment': 'production', 'team': 'backend'}}` adds new tags or updates existing ones.\n\n\\* **Delete tags:** `{'tags': {'`old_tag`': null}}` removes specific tags.\n\n\\* **Remove all tags:** `{'tags': null}` removes all user-managed tags (read-only tags are preserved).\n\n\\* **Partial update:** `{'tags': {'environment': 'staging'}}` only updates specified tags.\n\n\\* **Mixed operations:** `{'tags': {'environment': 'production', '`cost_center`': 'engineering', '`deprecated_tag`': null}}` adds/updates 'environment' and '`cost_center`' while removing '`deprecated_tag`', preserving other existing tags.\n\n\\* **Replace all:** first delete existing tags with null values, then add new ones in the same request.", "examples": [{"my-tag": "my-tag-value", "my-tag-to-remove": null}]}}, "title": "PatchSubnetSerializer", "type": "object"}
    ProjectSerializer: {"properties": {"client_id": {"description": "ID associated with the client.", "examples": [1], "title": "Client Id", "type": "integer"}, "created_at": {"description": "Datetime of creation, which is automatically generated.", "examples": ["2019-12-31T23:59:59Z"], "format": "date-time", "title": "Created At", "type": "string"}, "deleted_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "description": "Datetime of deletion, which is automatically generated if the project is deleted.", "title": "Deleted At"}, "description": {"anyOf": [{"maxLength": 255, "type": "string"}, "type": "null"], "description": "Description of the project.", "examples": ["Project description"], "title": "Description"}, "id": {"description": "Project ID, which is automatically generated upon creation.", "examples": [1], "title": "Id", "type": "integer"}, "is_default": {"description": "Indicates if the project is the default one. Each client always has one default project.", "examples": [true], "title": "Is Default", "type": "boolean"}, "name": {"description": "Unique project name for a client.", "examples": ["default"], "title": "Name", "type": "string"}, "state": {"description": "The state of the project.", "examples": ["ACTIVE"], "title": "State", "type": "string"}, "task_id": {"anyOf": ["type": "string", "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": ["7244e161-664c-4afd-a34e-7003eac4d949"], "title": "Task Id"}}, "required": ["client_id", "created_at", "deleted_at", "description", "id", "is_default", "name", "state", "task_id"], "title": "ProjectSerializer", "type": "object"}
    ResourceDBAASPostgreSQLVolumeSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_public_network_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the cluster", "examples": ["cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"description": "Unit of size", "examples": ["GiB"], "title": "Size Unit", "type": "string"}, "type": {"const": "dbaas_postgresql_volume", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the cluster", "format": "uuid", "title": "Uuid", "type": "string"}, "volume_type": {"description": "Type of the volume", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "volume_type", "first_seen", "last_seen", "project_id", "last_name", "uuid", "size_unit"], "title": "ResourceDBAASPostgreSQLVolumeSerializer", "type": "object"}
    ChangeNamespaceSerializer: {"properties": {"description": {"anyOf": [{"maxLength": 255, "minLength": 0, "type": "string"}, "type": "null"], "default": null, "description": "Namespace description.", "examples": ["This is a sample namespace."], "title": "Description"}, "envs": {"anyOf": [{"patternProperties": {"^[a-zA-Z_][a-zA-Z0-9_]*$": {"maxLength": 255, "minLength": 0, "type": "string"}}, "propertyNames": {"maxLength": 255, "minLength": 1}, "type": "object"}, "type": "null"], "default": null, "description": "Namespace environment variables. Keys must match a specific regex pattern and be 1-255 characters long, and values must be 0-255 characters long.", "examples": ["ENV_VAR": "value"], "title": "Envs"}}, "title": "ChangeNamespaceSerializer", "type": "object"}
    InstanceMetricsRequestSerializer: {"description": "Time range and time unit, required to obtain instance metrics.\nAvailable intervals are 1h, 6h, 24h, 7 days, 14 days.\nTime delta in the results is fixed and depends on the time range:\n1h - 15 seconds,\n6h - 20 seconds,\n24h - 2 minutes,\n7 days - 10 minutes,\n14 days - 20 minutes.", "properties": {"time_interval": {"description": "Time interval.", "examples": [6], "title": "Time Interval", "type": "integer"}, "time_unit": {"$ref": "#/components/schemas/InstanceMetricsTimeUnitEnum", "description": "Time interval unit.", "examples": ["hour"]}}, "required": ["time_interval", "time_unit"], "title": "Instance metrics request schema", "type": "object"}
    ResourceAiClusterSerializer: {"description": "These properties are common for all individual AI clusters\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["bm3-ai-1xlarge-h100-80-8_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the Baremetal GPU cluster", "examples": ["bm3-ai-1xlarge-h100-80-8"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the AI cluster", "examples": ["ai_cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "ai_cluster", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the Baremetal GPU cluster", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "first_seen", "last_seen", "project_id", "last_name", "uuid", "tags"], "title": "ResourceAiClusterSerializer", "type": "object"}
    PatchInferenceInstanceProbesSerializerV2: {"additionalProperties": false, "properties": {"liveness_probe": {"anyOf": ["$ref": "#/components/schemas/PatchInferenceInstanceContainerProbeConfigurationInSerializerV2", "type": "null"], "description": "Liveness probe configuration"}, "readiness_probe": {"anyOf": ["$ref": "#/components/schemas/PatchInferenceInstanceContainerProbeConfigurationInSerializerV2", "type": "null"], "description": "Readiness probe configuration"}, "startup_probe": {"anyOf": ["$ref": "#/components/schemas/PatchInferenceInstanceContainerProbeConfigurationInSerializerV2", "type": "null"], "description": "Startup probe configuration"}}, "title": "PatchInferenceInstanceProbesSerializerV2", "type": "object"}
    ImageArchitectureTypeEnum: {"enum": ["aarch64", "x86_64"], "title": "ImageArchitectureTypeEnum", "type": "string"}
    ContainerPriceRequestSerializer: {"properties": {"flavor": {"description": "Container flavor", "examples": ["250mCPU-512MiB"], "pattern": "^[0-9]{0,12}mCPU-[0-9]{0,12}M[i]?B$", "title": "Flavor", "type": "string"}, "scale": {"$ref": "#/components/schemas/ScaleSerializer", "description": "Container autoscaling", "examples": [{"max": 2, "min": 1}]}}, "required": ["flavor", "scale"], "title": "ContainerPriceRequestSerializer", "type": "object"}
    CaasApiKeyUpdateSerializer: {"properties": {"containers": {"anyOf": [{"items": {"$ref": "#/components/schemas/CaasNamespacedName"}, "type": "array"}, "type": "null"], "default": null, "description": "List of containers using key", "examples": [[{"name": "my-container", "namespace": "space"}]], "title": "Containers"}, "description": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Key description", "examples": ["my first key"], "title": "Description"}, "expire": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Key expires at", "examples": ["2023-07-31T00:00:00Z"], "title": "Expire"}, "is_disabled": {"anyOf": ["type": "boolean", "type": "null"], "default": null, "description": "Set to true if key is disabled", "examples": [false], "title": "Is Disabled"}}, "title": "CaasApiKeyUpdateSerializer", "type": "object"}
    RegionCoverageSerializer: {"properties": {"is_covered": {"description": "Is the current region covered by the Advanced DDoS protection features.", "examples": [true], "title": "Is Covered", "type": "boolean"}}, "required": ["is_covered"], "title": "RegionCoverageSerializer", "type": "object"}
    CreateUserActionSubscriptionSerializer: {"properties": {"auth_header_name": {"description": "Authorization header name", "examples": ["Authorization"], "title": "Auth Header Name", "type": "string"}, "auth_header_value": {"description": "Authorization header value", "examples": ["Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNTc0OTU0MDY0LCJqdGkiOiJiYXIiLCJ1c2VyX2lkIjoxLCJ1c2VyX3R5cGUiOiJjb21tb24iLCJ1c2VyX2dyb3VwcyI6WyJVc2VycyJdLCJjbGllbnRfaWQiOjEsImVtYWlsIjoidGVzdEB0ZXN0LnRlc3QiLCJ1c2VybmFtZSI6InRlc3RAdGVzdC50ZXN0IiwiaXNfYWRtaW4iOmZhbHNlLCJjbGllbnRfbmFtZSI6Ik5hbWUiLCJleGNoYW5nZWFibGUiOnRydWUsImZha2VfdXNlcl9pZCI6MSwicmp0aSI6ImZvbyJ9.YTH_s67j7xyWlFLy093RxReT5PmitnawLr25Jh7Ix14"], "title": "Auth Header Value", "type": "string"}, "url": {"description": "URL to send user action logs for the specified client", "examples": ["https://your-url.com/receive-user-action-messages"], "title": "Url", "type": "string"}}, "required": ["url", "auth_header_name", "auth_header_value"], "title": "Scheme for creating a subscription to user_action on webhook", "type": "object"}
    ResourceFunctionsSerializer: {"description": "These properties are common for all individual functions\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["faas_function_resources_sec"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "GBS", "description": "Unit of billing value", "examples": ["GBS"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the function", "examples": ["function_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "functions", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the function", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid"], "title": "ResourceFunctionsSerializer", "type": "object"}
    GPUClusterServerSerializer: {"properties": {"addresses": {"additionalProperties": {"items": {"anyOf": ["$ref": "#/components/schemas/InstanceFloatingAddressSerializer", "$ref": "#/components/schemas/InstanceFixedAddressShortSerializer", "$ref": "#/components/schemas/InstanceFixedAddressSerializer"]}, "type": "array"}, "description": "Map of `network_name` to list of addresses in that network", "title": "Addresses", "type": "object"}, "blackhole_ports": {"description": "IP addresses of the instances that are blackholed by DDoS mitigation system", "items": {"$ref": "#/components/schemas/BlackholePortSerializer"}, "title": "Blackhole Ports", "type": "array"}, "created_at": {"description": "Datetime when GPU server was created", "examples": ["2023-11-29T10:56:49Z"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": ["type": "string", "type": "null"], "description": "Task that created this entity", "title": "Creator Task Id"}, "ddos_profile": {"anyOf": ["$ref": "#/components/schemas/GetClientProfileSerializer", "type": "null"], "description": "Advanced DDoS protection profile. It is always `null` if query parameter `with_ddos=true` is not set."}, "fixed_ip_assignments": {"anyOf": [{"items": {"$ref": "#/components/schemas/IpAssignmentsSerializer"}, "type": "array"}, "type": "null"], "description": "Fixed IP assigned to instance", "title": "Fixed Ip Assignments"}, "flavor": {"$ref": "#/components/schemas/DeprecatedGpuClusterFlavorSerializer", "description": "Flavor"}, "id": {"description": "GPU server ID", "examples": ["6c6aa80f-7836-4dc2-a2ae-125e248be476"], "format": "uuid4", "title": "Id", "type": "string"}, "instance_description": {"anyOf": ["type": "string", "type": "null"], "description": "Instance description", "examples": ["Instance description"], "title": "Instance Description"}, "instance_isolation": {"anyOf": ["$ref": "#/components/schemas/IsolationSerializer", "type": "null"], "description": "Instance isolation information"}, "name": {"description": "GPU server name", "examples": ["my-server-1"], "title": "Name", "type": "string"}, "project_id": {"description": "Project ID", "examples": [111], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [4], "title": "Region Id", "type": "integer"}, "security_groups": {"description": "Security groups", "items": {"$ref": "#/components/schemas/NameSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "ssh_key_name": {"anyOf": ["type": "string", "type": "null"], "description": "SSH key name assigned to instance", "examples": ["my-ssh-key"], "title": "Ssh Key Name"}, "status": {"$ref": "#/components/schemas/InstanceStatus", "description": "Instance status", "examples": ["ACTIVE"]}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": ["type": "string", "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "task_state": {"anyOf": ["type": "string", "type": "null"], "description": "Task state", "title": "Task State"}, "vm_state": {"$ref": "#/components/schemas/InstanceVMState", "description": "Virtual machine state (active)", "examples": ["active"]}}, "required": ["id", "name", "created_at", "status", "vm_state", "flavor", "tags", "instance_description",
        "addresses", "security_groups", "ssh_key_name", "creator_task_id", "task_state", "task_id", "blackhole_ports", "ddos_profile", "fixed_ip_assignments", "instance_isolation", "region", "region_id", "project_id"], "title": "GPUClusterServerSerializer", "type": "object"}
    AIImageCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/AIImageSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "AIImageCollectionSerializer", "type": "object"}
    InterfaceIPFamily: {"enum": ["dual", "ipv4", "ipv6"], "title": "InterfaceIPFamily", "type": "string"}
    SchemaFilterDBAASPostgreSQLEnum: {"enum": ["last_name", "type", "uuid"], "title": "SchemaFilterDBAASPostgreSQLEnum", "type": "string"}
    CreateInstanceVolumeListSchema: {"type": "object", "properties": {"volumes": {"type": "array", "description": "Volumes details. Non-important info such as names may be omitted.", "items": {"$ref": "#/components/schemas/CheckFlavorVolumeSchema"}}}, "required": ["volumes"], "description": "CreateInstanceVolumeList schema", "example": {"volumes": [{"attachment_tag": "root", "boot_index": 0, "image_id": "f01fd9a0-9548-48ba-82dc-a8c8b2d6f2f1", "name": "TestVM5 Ubuntu boot image", "size": 10, "source": "image", "type_name": "ssd_hiiops"}]}}
    IpAssignmentsSerializer: {"properties": {"external": {"description": "Is network external", "title": "External", "type": "boolean"}, "ip_address": {"description": "Ip address", "examples": ["123.123.123.1"], "title": "Ip Address", "type": "string"}, "subnet_id": {"description": "Interface subnet id", "examples": ["eaafdc3c-f48b-4eb4-826f-057dfc7d6476"], "title": "Subnet Id", "type": "string"}}, "required": ["subnet_id", "ip_address", "external"], "title": "IpAssignmentsSerializer", "type": "object"}
    LoadbalancerSerializer: {"properties": {"additional_vips": {"description": "List of additional IP addresses", "items": {"$ref": "#/components/schemas/NetworkPortFixedIp"}, "title": "Additional Vips", "type": "array"}, "created_at": {"description": "Datetime when the load balancer was created", "examples": ["2019-06-18T11:56:16+0000"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "Task that created this entity", "examples": ["9f3ec11e-bcd4-4fe6-924a-a4439a56ad22"], "title": "Creator Task Id"}, "ddos_profile": {"anyOf": ["$ref": "#/components/schemas/GetClientProfileSerializer", "type": "null"], "default": null, "description": "Loadbalancer advanced DDoS protection profile."}, "flavor": {"anyOf": ["$ref": "#/components/schemas/LbFlavorSerializer", "type": "null"], "default": null, "description": "Load balancer flavor (if not default)", "examples": [{"flavor_id": "1d276f53-2834-4855-9859-aa922f073055", "flavor_name": "lb1-1-2", "ram": 2048, "vcpus": 1}]}, "floating_ips": {"description": "List of assigned floating IPs", "items": {"$ref": "#/components/schemas/FloatingIPSerializer"}, "title": "Floating Ips", "type": "array"}, "id": {"description": "Load balancer ID", "examples": ["e8ab1be4-1521-4266-be69-28dad4148a30"], "format": "uuid4", "title": "Id", "type": "string"}, "listeners": {"description": "Load balancer listeners", "items": {"$ref": "#/components/schemas/ListenerSerializer"}, "title": "Listeners", "type": "array"}, "logging": {"anyOf": ["$ref": "#/components/schemas/LoggingOutSerializer", "type": "null"], "default": null, "description": "Logging configuration", "examples": [{"destination_region_id": 1, "enabled": true, "retention_policy": {"period": 45}, "topic_name": "my-log-name"}]}, "name": {"description": "Load balancer name", "examples": ["lbaas_test_lb"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "operating_status": {"$ref": "#/components/schemas/OperatingStatusEnum", "description": "Load balancer operating status"}, "preferred_connectivity": {"$ref": "#/components/schemas/MemberConnectivity", "default": "L2", "description": "Preferred option to establish connectivity between load balancer and its pools members", "examples": ["L2", "L3"]}, "project_id": {"description": "Project ID", "examples": [1337], "title": "Project Id", "type": "integer"}, "provisioning_status": {"$ref": "#/components/schemas/ProvisioningStatusEnum", "description": "Load balancer lifecycle status"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "stats": {"anyOf": ["$ref": "#/components/schemas/LoadbalancerStatsSerializer", "type": "null"], "default": null, "description": "Statistics of load balancer.", "examples": [{"active_connections": 0, "bytes_in": 34942398609, "bytes_out": 304777113641, "request_errors": 4, "total_connections": 21095970}]}, "tags_v2": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags V2", "type": "array"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "title": "Task Id"}, "updated_at": {"anyOf": [{"format": "date-time", "type": "string"},
            "type": "null"], "default": null, "description": "Datetime when the load balancer was last updated", "examples": ["2019-06-18T11:57:00+0000"], "title": "Updated At"}, "vip_address": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "default": null, "description": "Load balancer IP address", "examples": ["5.5.5.5"], "title": "Vip Address"}, "vip_ip_family": {"anyOf": ["$ref": "#/components/schemas/InterfaceIPFamily", "type": "null"], "default": null, "description": "Load balancer IP family", "examples": ["ipv4"]}, "vip_port_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "The ID of the Virtual IP (VIP) port.", "examples": ["4177d1ef-f1c2-4e45-a531-3e05dfa6d848"], "title": "Vip Port Id"}, "vrrp_ips": {"description": "List of VRRP IP addresses", "items": {"$ref": "#/components/schemas/VRRPIP"}, "title": "Vrrp Ips", "type": "array"}}, "required": ["project_id", "region_id", "region", "id", "name", "operating_status", "provisioning_status", "created_at", "tags_v2"], "title": "LoadbalancerSerializer", "type": "object"}
    ProfileOptionsSerializer: {"properties": {"active": {"description": "Controls whether the DDoS protection profile is enabled and actively protecting the resource", "examples": [true], "title": "Active", "type": "boolean"}, "bgp": {"description": "Enables Border Gateway Protocol (BGP) routing for DDoS protection traffic", "examples": [true], "title": "Bgp", "type": "boolean"}}, "required": ["active", "bgp"], "title": "ProfileOptionsSerializer", "type": "object"}
    IdNameSchema: {"type": "object", "properties": {"id": {"type": "string", "description": "ID"}, "name": {"type": "string", "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "description": "Name."}}, "required": ["name"], "description": "IdName schema", "example": {"id": "2bf3a5d7-9072-40aa-8ac0-a64e39427a2c", "name": "Test"}}
    ImageCreateFromVolumeSerializer: {"properties": {"architecture": {"$ref": "#/components/schemas/ImageArchitectureTypeEnum", "default": "x86_64", "description": "Image CPU architecture type: `aarch64`, `x86_64`", "examples": ["x86_64"]}, "hw_firmware_type": {"anyOf": ["$ref": "#/components/schemas/ImageHwFirmwareTypeEnum", "type": "null"], "default": null, "description": "Specifies the type of firmware with which to boot the guest.", "examples": ["bios"]}, "hw_machine_type": {"anyOf": ["$ref": "#/components/schemas/HwMachineTypeEnum", "type": "null"], "default": null, "description": "A virtual chipset type.", "examples": ["q35"]}, "is_baremetal": {"default": false, "description": "Set to true if the image will be used by bare metal servers. Defaults to false.", "examples": [false], "title": "Is Baremetal", "type": "boolean"}, "name": {"description": "Image name", "examples": ["my-image"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "os_type": {"$ref": "#/components/schemas/ImageOsTypeEnum", "default": "linux", "description": "The operating system installed on the image.", "examples": ["linux"]}, "source": {"const": "volume", "default": "volume", "description": "Image source", "examples": ["volume"], "title": "Source", "type": "string"}, "ssh_key": {"$ref": "#/components/schemas/SshKeyEnum", "default": "allow", "description": "Whether the image supports SSH key or not", "examples": ["allow"]}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "volume_id": {"description": "Required if source is volume. Volume id", "examples": ["d478ae29-dedc-4869-82f0-96104425f565"], "format": "uuid4", "title": "Volume Id", "type": "string"}}, "required": ["volume_id", "name"], "title": "ImageCreateFromVolumeSerializer", "type": "object"}
    cloud_ActionType: {"enum": ["activate", "attach", "change_logging_resources", "create", "create_access_rule", "deactivate", "delete", "delete_access_rule", "delete_metadata", "detach", "disable_logging", "disable_portsecurity", "download", "enable_logging", "enable_portsecurity", "failover", "put_into_servergroup", "reboot", "reboot_hard", "rebuild", "regenerate_credentials", "remove_from_servergroup", "replace_metadata", "resize", "resume", "retype", "revert", "scale_down", "scale_up", "start", "stop", "suspend", "update", "update_metadata", "upgrade"], "title": "ActionType", "type": "string"}
    CheckQuotasBeforeRegistryCreation: {"properties": {"storage_limit": {"default": 0, "description": "Registry storage limit, GiB", "examples": [5], "title": "Storage Limit", "type": "integer"}}, "title": "CheckQuotasBeforeRegistryCreation", "type": "object"}
    TotalInferenceReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["inference_gpu_l40s_48_sec"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"description": "Unit of billing value", "examples": ["H"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "inference", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalInferenceReportItemSerializer", "type": "object"}
    InstanceFixedAddressShortSerializer: {"description": "Schema for `fixed` addresses. This schema is used when listing instances.\nIt omits the `subnet_name` and `subnet_id` fields.", "properties": {"addr": {"description": "IP address", "examples": ["10.0.0.17"], "title": "Addr", "type": "string"}, "interface_name": {"anyOf": ["type": "string", "type": "null"], "description": "Interface name. This field will be `null` if `with_interfaces_name=true` is not set in the request when listing instances. It will also be `null` if the `interface_name` was not specified during instance creation or when attaching the interface.", "examples": ["my-interface"], "title": "Interface Name"}, "type": {"const": "fixed", "description": "Type of the address", "examples": ["fixed"], "title": "Type", "type": "string"}}, "required": ["addr", "type", "interface_name"], "title": "Fixed IP Address (short)", "type": "object"}
    UserActionCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/UserActionSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "UserActionCollectionSerializer", "type": "object"}
    NamespaceAvailabilitySerializer: {"properties": {"available": {"description": "Is namespace available", "examples": [true], "title": "Available", "type": "boolean"}, "namespace": {"description": "Client namespace", "examples": ["custom_namespace"], "title": "Namespace", "type": "string"}}, "required": ["namespace", "available"], "title": "NamespaceAvailabilitySerializer", "type": "object"}
    AccessRuleSerializer: {"properties": {"access_level": {"$ref": "#/components/schemas/AccessLevelChoices", "description": "Access mode", "examples": ["ro"]}, "access_to": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, {"format": "ipvanynetwork", "type": "string"}], "description": "Source IP or network", "examples": ["192.168.1.1", "2001:db8::1", "10.0.0.0/24", "fd00::/8", "0.0.0.0/0", "::/0"], "title": "Access To"}, "id": {"description": "Access Rule ID", "examples": ["4f09d7dd-f1f8-4352-b015-741b2192db47"], "format": "uuid4", "title": "Id", "type": "string"}, "state": {"$ref": "#/components/schemas/AccessRuleStateChoices", "description": "Access Rule state", "examples": ["active"]}}, "required": ["access_level", "access_to", "id", "state"], "title": "AccessRuleSerializer", "type": "object"}
    TagSerializer: {"description": "A tag is a key-value pair that can be associated with a resource,\nenabling efficient filtering and grouping for better organization and management.\nSome tags are read-only and cannot be modified by the user.\nTags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "properties": {"key": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "title": "Key", "type": "string"}, "read_only": {"description": "If true, the tag is read-only and cannot be modified by the user", "examples": [false], "title": "Read Only", "type": "boolean"}, "value": {"description": "Tag value. The maximum size for a value is 1024 bytes.", "examples": ["my-tag-value"], "title": "Value", "type": "string"}}, "required": ["key", "value", "read_only"], "title": "TagSerializer", "type": "object"}
    AccessRuleStateChoices: {"enum": ["active", "applying", "denying", "error", "new", "queued_to_apply", "queued_to_deny"], "title": "AccessRuleStateChoices", "type": "string"}
    UserActionSubscriptionUpdateSerializer: {"properties": {"connection_string": {"description": "Connection string of the following structure \"scheme://username:password@host:port/`virtual_host`\"", "examples": ["amqps://guest:guest@192.168.123.20:5671/user_action_events"], "title": "Connection String", "type": "string"}, "exchange": {"description": "Exchange name", "title": "Exchange", "type": "string"}, "receive_child_client_events": {"description": "Set to true if you would like to receive user action logs of all clients with the `reseller_id` matching the current `client_id`. Defaults to false", "examples": [false], "title": "Receive Child Client Events", "type": "boolean"}, "routing_key": {"description": "Routing key", "examples": ["foo"], "title": "Routing Key", "type": "string"}}, "title": "UserActionSubscriptionUpdateSerializer", "type": "object"}
    RegistryResizeSerializer: {"properties": {"storage_limit": {"default": 5, "description": "Registry storage limit, GiB", "examples": [5], "maximum": 1000, "minimum": 1, "title": "Storage Limit", "type": "integer"}}, "title": "RegistryResizeSerializer", "type": "object"}
    AppTemplateSerializer: {"properties": {"app_config": {"anyOf": [{"items": {"anyOf": ["$ref": "#/components/schemas/AppTemplateConfigSerializer", "$ref": "#/components/schemas/AppTemplateConfigWithDefaultSerializer"]}, "type": "array"}, "type": "null"], "description": "Config", "title": "App Config"}, "category": {"description": "Application category", "examples": ["gaming"], "title": "Category", "type": "string"}, "description": {"description": "Description", "examples": ["tf2server.description"], "title": "Description", "type": "string"}, "developer": {"description": "Developer name", "examples": ["Team Fortress 2 team"], "title": "Developer", "type": "string"}, "display_name": {"description": "Application display name", "examples": ["Team Fortress 2 server"], "title": "Display Name", "type": "string"}, "id": {"description": "Application id", "examples": ["tf2server"], "title": "Id", "type": "string"}, "image_name": {"description": "Image used to deploy the application", "examples": ["ubuntu-20.04-x64"], "title": "Image Name", "type": "string"}, "min_disk": {"description": "Application disk requirements", "examples": [30], "title": "Min Disk", "type": "integer"}, "min_ram": {"description": "Application RAM requirements", "examples": [16], "title": "Min Ram", "type": "integer"}, "min_vcpus": {"anyOf": ["type": "integer", "type": "null"], "description": "Application VCPUs requirements", "examples": [4], "title": "Min Vcpus"}, "os_name": {"description": "OS name", "examples": ["Ubuntu 20.04"], "title": "Os Name", "type": "string"}, "os_version": {"anyOf": ["type": "number", "type": "null"], "description": "OS version", "examples": [20.04], "title": "Os Version"}, "region_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Region id", "examples": [1], "title": "Region Id"}, "short_description": {"description": "Short description", "examples": ["tf2server.short_description"], "title": "Short Description", "type": "string"}, "usage": {"description": "Usage", "examples": ["tf2server.usage"], "title": "Usage", "type": "string"}, "version": {"description": "Application version", "examples": ["latest"], "title": "Version", "type": "string"}, "website": {"description": "Application website", "examples": ["www.tf2server.com"], "title": "Website", "type": "string"}}, "required": ["id", "region_id", "category", "version", "os_name", "os_version", "display_name", "short_description", "description", "website", "developer", "image_name", "usage", "min_disk", "min_vcpus", "min_ram", "app_config"], "title": "AppTemplateSerializer", "type": "object"}
    AIClusterFlavorWithPriceCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/AIClusterFlavorWithPriceSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "AIClusterFlavorWithPriceCollectionSerializer", "type": "object"}
    K8sClusterPoolResizeV2Serializer: {"properties": {"node_count": {"description": "Target node count", "examples": [2], "maximum": 200, "minimum": 1, "title": "Node Count", "type": "integer"}}, "required": ["node_count"], "title": "K8sClusterPoolResizeV2Serializer", "type": "object"}
    ListGpuVirtualFlavorSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/GpuVirtualFlavorSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListGpuVirtualFlavorSerializer", "type": "object"}
    CreateNetworkSerializer: {"properties": {"create_router": {"default": true, "description": "Defaults to True", "examples": [true], "title": "Create Router", "type": "boolean"}, "name": {"description": "Network name", "examples": ["my network"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "type": {"$ref": "#/components/schemas/NetworkType", "default": "vxlan", "description": "vlan or vxlan network type is allowed. Default value is vxlan", "examples": ["vxlan"]}}, "required": ["name"], "title": "CreateNetworkSerializer", "type": "object"}
    SchemaFilterDBAASPostgreSQLPublicNetworkSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLEnum", "description": "Field name to filter by", "examples": ["uuid"]}, "type": {"const": "dbaas_postgresql_public_network", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["066e202a-fc9a-43f2-a74d-be34afbee5c9"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterDBAASPostgreSQLPublicNetworkSerializer", "type": "object"}
    ResourceDBAASPostgreSQLPublicNetworkSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_public_network_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the cluster", "examples": ["cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_public_network", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the cluster", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid"], "title": "ResourceDBAASPostgreSQLPublicNetworkSerializer", "type": "object"}
    GPUClusterServerCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/GPUClusterServerSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "GPUClusterServerCollectionSerializer", "type": "object"}
    SchemaFilterExternalIpSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterExternalIpEnum", "description": "Field name to filter by", "examples": ["ip_address"]}, "type": {"const": "external_ip", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["10.100.178.92"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterExternalIpSerializer", "type": "object"}
    ContainerCreateSerializer: {"properties": {"commands": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Container's commands", "examples": ["python3 app.py -m test"], "title": "Commands"}, "description": {"default": "", "description": "Container description", "examples": ["My first container"], "maxLength": 255, "title": "Description", "type": "string"}, "envs": {"description": "Container environment variables", "examples": [{"ENVIRONMENT_VARIABLE": "value 2", "ENV_VAR": "value 1"}], "patternProperties": {"^[a-zA-Z_][a-zA-Z0-9_]*$": {"maxLength": 255, "type": "string"}}, "propertyNames": {"maxLength": 255}, "title": "Envs", "type": "object"}, "flavor": {"description": "Container flavor", "examples": ["250mCPU-512MiB"], "pattern": "^[0-9]{0,12}mCPU-[0-9]{0,12}M[i]?B$", "title": "Flavor", "type": "string"}, "image": {"description": "Container image", "examples": ["nginx:latest"], "maxLength": 230, "title": "Image", "type": "string"}, "is_api_key_auth": {"default": false, "description": "Enable/Disable api key authentication. Enable api key is temporarily disabled. As a result, using CaaS with authorization is currently not supported.", "examples": [false], "title": "Is Api Key Auth", "type": "boolean"}, "is_disabled": {"default": false, "description": "Set to true if container is disabled", "examples": [false], "title": "Is Disabled", "type": "boolean"}, "listening_port": {"description": "Container listening port", "examples": [80], "maximum": 65535, "minimum": 1, "title": "Listening Port", "type": "integer"}, "logging": {"anyOf": ["$ref": "#/components/schemas/LoggingSerializer", "type": "null"], "default": null, "description": "Logging configuration", "examples": [{"destination_region_id": 1, "enabled": true, "retention_policy": {"period": 45}, "topic_name": "my-log-name"}, "enabled": false]}, "name": {"description": "Container name", "examples": ["nginx"], "maxLength": 43, "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]+[a-zA-Z0-9]$", "title": "Name", "type": "string"}, "pull_secret": {"anyOf": [{"maxLength": 400, "type": "string"}, "type": "null"], "default": null, "description": "Image pull secret", "examples": ["my-secret"], "title": "Pull Secret"}, "scale": {"$ref": "#/components/schemas/ScaleSerializer", "description": "Container autoscaling", "examples": [{"max": 2, "min": 1}]}, "timeout": {"anyOf": [{"maximum": 180, "minimum": 0, "type": "integer"}, "type": "null"], "default": null, "description": "Container timeout in seconds", "examples": [5], "title": "Timeout", "x-stainless-naming": {"python": {"method_argument": "api_timeout"}}}}, "required": ["name", "image", "listening_port", "flavor", "scale"], "title": "ContainerCreateSerializer", "type": "object"}
    UpdateImageSerializer: {"properties": {"hw_firmware_type": {"$ref": "#/components/schemas/ImageHwFirmwareTypeEnum", "description": "Specifies the type of firmware with which to boot the guest.", "examples": ["bios"]}, "hw_machine_type": {"$ref": "#/components/schemas/HwMachineTypeEnum", "description": "A virtual chipset type.", "examples": ["q35"]}, "is_baremetal": {"description": "Set to true if the image will be used by bare metal servers.", "examples": [false], "title": "Is Baremetal", "type": "boolean"}, "name": {"description": "Image display name", "examples": ["my-image"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "os_type": {"$ref": "#/components/schemas/ImageOsTypeEnum", "description": "The operating system installed on the image.", "examples": ["linux"]}, "ssh_key": {"$ref": "#/components/schemas/SshKeyEnum", "description": "Whether the image supports SSH key or not", "examples": ["allow"]}, "tags": {"$ref": "#/components/schemas/UpdateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}}, "title": "UpdateImageSerializer", "type": "object"}
    K8sClusterUpgradeV2Serializer: {"properties": {"version": {"description": "Target k8s cluster version", "examples": ["v1.28.1"], "title": "Version", "type": "string"}}, "required": ["version"], "title": "K8sClusterUpgradeV2Serializer", "type": "object"}
    LbFlavorSerializer: {"properties": {"flavor_id": {"description": "Flavor ID is the same as name", "examples": ["g2-standard-32-64"], "title": "Flavor Id", "type": "string"}, "flavor_name": {"description": "Flavor name", "examples": ["g2-standard-32-64"], "title": "Flavor Name", "type": "string"}, "ram": {"description": "RAM size in MiB", "examples": [2048], "title": "Ram", "type": "integer"}, "vcpus": {"description": "Virtual CPU count. For bare metal flavors, it's a physical CPU count", "examples": [1], "title": "Vcpus", "type": "integer"}}, "required": ["flavor_id", "flavor_name", "vcpus", "ram"], "title": "LbFlavorSerializer", "type": "object"}
    DeprecatedGpuClusterFlavorSerializer: {"description": "GPU cluster flavor schema embedded into instance schema", "properties": {"architecture": {"description": "CPU architecture", "examples": ["x86_64"], "title": "Architecture", "type": "string"}, "flavor_id": {"description": "Flavor ID is the same as name", "examples": ["g2-standard-32-64"], "title": "Flavor Id", "type": "string"}, "flavor_name": {"description": "Flavor name", "examples": ["g2-standard-32-64"], "title": "Flavor Name", "type": "string"}, "hardware_description": {"$ref": "#/components/schemas/DeprecatedAIClusterServerFlavorHardwareDescriptionSerializer", "description": "Additional hardware description"}, "os_type": {"description": "Operating system", "examples": ["linux"], "title": "Os Type", "type": "string"}, "ram": {"description": "RAM size in MiB", "examples": [2048], "title": "Ram", "type": "integer"}, "resource_class": {"description": "Flavor resource class for mapping to hardware capacity", "examples": ["bm2-hf-medium"], "title": "Resource Class", "type": "string"}, "vcpus": {"description": "Virtual CPU count. For bare metal flavors, it's a physical CPU count", "examples": [1], "title": "Vcpus", "type": "integer"}}, "required": ["flavor_id", "flavor_name", "vcpus", "ram", "hardware_description", "os_type", "architecture", "resource_class"], "title": "GPU cluster flavor", "type": "object"}
    InferenceRegistryCredentialInSerializer: {"properties": {"name": {"description": "Registry credential name.", "examples": ["docker-io"], "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Name", "type": "string"}, "password": {"description": "Registry password.", "examples": ["password"], "minLength": 1, "title": "Password", "type": "string"}, "registry_url": {"description": "Registry URL.", "examples": ["registry.example.com"], "minLength": 1, "title": "Registry Url", "type": "string"}, "username": {"description": "Registry username.", "examples": ["username"], "minLength": 1, "title": "Username", "type": "string"}}, "required": ["name", "username", "password", "registry_url"], "title": "InferenceRegistryCredentialInSerializer", "type": "object"}
    MutateLbSessionPersistence: {"properties": {"cookie_name": {"anyOf": [{"pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "type": "string"}, "type": "null"], "default": null, "description": "Should be set if app cookie or http cookie is used", "examples": ["cookie_name"], "title": "Cookie Name"}, "persistence_granularity": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Subnet mask if `source_ip` is used. For UDP ports only", "title": "Persistence Granularity"}, "persistence_timeout": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Session persistence timeout. For UDP ports only", "title": "Persistence Timeout"}, "type": {"$ref": "#/components/schemas/SessionPersistenceTypeEnum", "description": "Session persistence type", "examples": ["APP_COOKIE"]}}, "required": ["type"], "title": "MutateLbSessionPersistence", "type": "object"}
    CreateSSHKeySerializer: {"properties": {"name": {"description": "SSH key name", "examples": ["my-ssh-key"], "maxLength": 255, "minLength": 1, "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "public_key": {"description": "The public part of an SSH key is the shareable portion of an SSH key pair. It can be safely sent to servers or services to grant access. It does not contain sensitive information.\n- If youâ€™re uploading your own key, provide the public part here (usually found in a file like `id_ed25519.pub`).\n- If you want the platform to generate an Ed25519 key pair for you, leave this field empty â€” the system will return the private key in the response **once only**.", "examples": ["ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIjxL6g1II8NsO8odvBwGKvq2Dx/h/xrvsV9b9LVIYKm my-username@my-hostname"], "title": "Public Key", "type": "string"}, "shared_in_project": {"default": true, "description": "SSH key is shared with all users in the project", "examples": [true, false], "title": "Shared In Project", "type": "boolean"}}, "required": ["name"], "title": "Create SSH Key schema", "type": "object"}
    TotalFunctionsReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["faas_function_resources_sec"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "GBS", "description": "Unit of billing value", "examples": ["GBS"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "functions", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalFunctionsReportItemSerializer", "type": "object"}
    PGClusterCreateSerializer: {"properties": {"cluster_name": {"description": "PostgreSQL cluster name", "maxLength": 50, "minLength": 1, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "Cluster Name", "type": "string"}, "databases": {"default": [], "items": {"$ref": "#/components/schemas/Database"}, "title": "Databases", "type": "array"}, "flavor": {"$ref": "#/components/schemas/Flavor", "description": "Instance RAM and CPU"}, "high_availability": {"anyOf": ["$ref": "#/components/schemas/HighAvailabilityOptions", "type": "null"], "description": "High Availability settings"}, "network": {"$ref": "#/components/schemas/PublicNetwork", "title": "Network"}, "pg_server_configuration": {"$ref": "#/components/schemas/PostgreSQLServerConfig", "description": "PosgtreSQL cluster configuration"}, "storage": {"$ref": "#/components/schemas/Storage", "description": "Cluster's storage configuration"}, "users": {"default": [], "items": {"$ref": "#/components/schemas/PgUser"}, "title": "Users", "type": "array"}}, "required": ["cluster_name", "network", "high_availability", "flavor", "storage", "pg_server_configuration"], "title": "PGClusterCreateSerializer", "type": "object"}
    ClientProfileTemplateSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/ClientProfileTemplateSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ClientProfileTemplateSerializerList", "type": "object"}
    CreateLoadbalancerSerializer: {"properties": {"flavor": {"description": "Load balancer flavor name", "examples": ["lb1-1-2", "lb2-2-2"], "title": "Flavor", "type": "string"}, "floating_ip": {"description": "Floating IP configuration for assignment", "discriminator": {"mapping": {"existing": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer", "new": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer"}, "propertyName": "source"}, "examples": [{"existing_floating_id": "c64e5db1-5f1f-43ec-a8d9-5090df85b82d", "source": "existing"}], "title": "Floating Ip", "anyOf": ["$ref": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer", "$ref": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer"]}, "listeners": {"description": "Load balancer listeners. Maximum 50 per LB (excluding Prometheus endpoint listener).", "items": {"$ref": "#/components/schemas/CreateListenerSerializer"}, "maxItems": 51, "title": "Listeners", "type": "array"}, "logging": {"$ref": "#/components/schemas/LoadbalancerLoggingSerializer", "description": "Logging configuration"}, "name": {"description": "Load balancer name", "examples": ["new_load_balancer"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "name_template": {"description": "Load balancer name which will be changed by template.", "examples": ["lb_name_template"], "pattern": "^[a-zA-Z0-9{][a-zA-Z 0-9._\\-}{]{1,61}[a-zA-Z0-9._}]$", "title": "Name Template", "type": "string"}, "preferred_connectivity": {"$ref": "#/components/schemas/MemberConnectivity", "default": "L2", "description": "Preferred option to establish connectivity between load balancer and its pools members. L2 provides best performance, L3 provides less IPs usage. It is taking effect only if `instance_id` + `ip_address` is provided, not `subnet_id` + `ip_address`, because we're considering this as intentional `subnet_id` specification.", "examples": ["L2", "L3"], "x-stainless-terraform-configurability": "computed_optional"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "vip_ip_family": {"$ref": "#/components/schemas/InterfaceIPFamily", "description": "IP family for load balancer subnet auto-selection if `vip_network_id` is specified", "examples": ["ipv4"], "x-stainless-terraform-configurability": "computed_optional"}, "vip_network_id": {"description": "Network ID for load balancer. If not specified, default external network will be used. Mutually exclusive with `vip_port_id`", "examples": ["ac307687-31a4-4a11-a949-6bea1b2878f5"], "format": "uuid4", "title": "Vip Network Id", "type": "string"}, "vip_port_id": {"description": "Existing Reserved Fixed IP port ID for load balancer. Mutually exclusive with `vip_network_id`", "examples": ["ff83e13a-b256-4be2-ba5d-028d3f0ab450"], "format": "uuid4", "title": "Vip Port Id", "type": "string", "x-stainless-terraform-configurability": "computed_optional"}, "vip_subnet_id": {"description": "Subnet ID for load balancer. If not specified, any subnet from `vip_network_id` will be selected. Ignored when `vip_network_id` is not specified.", "examples": ["4e7802d3-5023-44b8-b298-7726558fddf4"], "format": "uuid4", "title": "Vip Subnet Id", "type": "string"}}, "title": "CreateLoadbalancerSerializer", "type": "object"}
    FaasApiKeySerializer: {"properties": {"created_at": {"description": "Key starts to work", "examples": ["2023-08-22T11:21:00Z"], "title": "Created At", "type": "string"}, "description": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Optional key description", "examples": ["key-description"], "title": "Description"}, "expire": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Key expires at", "examples": ["2023-08-22T11:21:00Z"], "title": "Expire"}, "functions": {"description": "List of functions using key", "items": {"$ref": "#/components/schemas/NamespacedName"}, "title": "Functions", "type": "array"}, "name": {"description": "Key name", "examples": ["key-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Name", "type": "string"}, "status": {"description": "Key status", "examples": ["Expired"], "title": "Status", "type": "string"}}, "required": ["functions", "name", "created_at", "status"], "title": "FaasApiKeySerializer", "type": "object"}
    ScheduleSerializer: {"discriminator": {"mapping": {"cron": "#/components/schemas/GetCronScheduleSerializer", "interval": "#/components/schemas/GetIntervalScheduleSerializer"}, "propertyName": "type"}, "title": "ScheduleSerializer", "anyOf": ["$ref": "#/components/schemas/GetCronScheduleSerializer", "$ref": "#/components/schemas/GetIntervalScheduleSerializer"]}
    CreateRouterSerializer: {"properties": {"external_gateway_info": {"anyOf": ["$ref": "#/components/schemas/RouterExternalManualGwSerializer", "$ref": "#/components/schemas/RouterExternalDefaultGwSerializer", "type": "null"], "default": null, "description": "", "examples": [{"enable_snat": true, "type": "default"}], "title": "External Gateway Info"}, "interfaces": {"anyOf": [{"items": {"$ref": "#/components/schemas/CreateRouterInterfaceSubnetSerializer"}, "type": "array"}, "type": "null"], "default": null, "description": "List of interfaces to attach to router immediately after creation.", "examples": [[{"subnet_id": "3ed9e2ce-f906-47fb-ba32-c25a3f63df4f", "type": "subnet"}]], "title": "Interfaces"}, "name": {"description": "name of router", "examples": ["my_wonderful_router"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "routes": {"anyOf": [{"items": {"$ref": "#/components/schemas/RouteInSerializer"}, "type": "array"}, "type": "null"], "default": null, "description": "List of custom routes.", "examples": [[{"destination": "10.0.3.0/24", "nexthop": "10.0.0.13"}]], "title": "Routes"}}, "required": ["name"], "title": "CreateRouterSerializer", "type": "object"}
    ClusterCreateSerializer: {"properties": {"flavor": {"description": "Cluster flavor ID", "examples": ["g3-ai-32-192-1500-l40s-48-1"], "title": "Flavor", "type": "string"}, "name": {"description": "Cluster name", "examples": ["gpu-cluster-1"], "maxLength": 256, "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "servers_count": {"description": "Number of servers in the cluster", "examples": [3], "exclusiveMaximum": 1000, "exclusiveMinimum": 0, "title": "Servers Count", "type": "integer"}, "servers_settings": {"$ref": "#/components/schemas/VirtualServerSettingsInputSerializer", "description": "Configuration settings for the servers in the cluster"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}}, "required": ["name", "flavor", "servers_count", "servers_settings"], "title": "ClusterCreateSerializer", "type": "object"}
    AttachVolumeToInstanceSerializer: {"description": "Attach volume to instance schema", "properties": {"attachment_tag": {"description": "Block device attachment tag (not exposed in the normal tags).", "examples": ["boot", "data", "logs"], "pattern": "^[^,/]{1,60}$", "title": "Attachment Tag", "type": "string"}, "instance_id": {"description": "Instance ID.", "examples": ["169942e0-9b53-42df-95ef-1a8b6525c2bd"], "format": "uuid4", "title": "Instance Id", "type": "string"}}, "required": ["instance_id"], "title": "AttachVolumeToInstanceSerializer", "type": "object"}
    NewInterfaceAnySubnetFipSerializerPydantic: {"examples": [{"floating_ip": {"existing_floating_id": "57be69f6-6f6a-4f03-a4ad-8eb86c69ec0a", "source": "existing"}, "interface_name": "my-any-subnet-interface", "ip_address": "192.168.6.9", "network_id": "59905c8e-2619-420a-b046-536096473370", "type": "any_subnet"}], "properties": {"floating_ip": {"description": "Allows the instance to have a public IP that can be reached from the internet.", "discriminator": {"mapping": {"existing": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer", "new": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer"}, "propertyName": "source"}, "title": "Floating Ip", "anyOf": ["$ref": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer", "$ref": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer"]}, "interface_name": {"description": "Interface name. Defaults to `null` and is returned as `null` in the API response if not set.", "maxLength": 37, "title": "Interface Name", "type": "string"}, "ip_address": {"description": "You can specify a specific IP address from your subnet.", "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "ip_family": {"anyOf": ["$ref": "#/components/schemas/InterfaceIPFamily", "type": "null"], "default": "ipv4", "description": "Specify `ipv4`, `ipv6`, or `dual` to enable both."}, "network_id": {"description": "The network where the instance will be connected.", "format": "uuid4", "title": "Network Id", "type": "string"}, "security_groups": {"description": "Specifies security group UUIDs to be applied to the instance network interface.", "items": {"$ref": "#/components/schemas/MandatoryIdSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "type": {"const": "any_subnet", "description": "Instance will be attached to a subnet with the largest count of free IPs.", "title": "Type", "type": "string"}}, "required": ["type", "network_id"], "title": "NewInterfaceAnySubnetFipSerializerPydantic", "type": "object"}
    PatchPostgreSQLServerConfig: {"properties": {"pg_conf": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "New pg.conf file settings", "examples": ["\nlisten_addresses = 'localhost'\nport = 5432\nmax_connections = 100\nshared_buffers = 128MB\nlogging_collector = on"], "title": "Pg Conf"}, "pooler": {"anyOf": ["$ref": "#/components/schemas/PoolerConfigurationSchema", "type": "null"], "default": null, "examples": [null], "title": "Pooler configuration for master"}, "version": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "New cluster version", "examples": ["15"], "title": "Version"}}, "title": "PatchPostgreSQLServerConfig", "type": "object"}
    FaasFlavorsListSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/FaasFlavorSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "FaasFlavorsListSerializer", "type": "object"}
    SecretCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/SecretSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "SecretCollectionSerializer", "type": "object"}
    K8sClusterPoolPricingRequestV2Serializer: {"examples": [{"boot_volume_size": 10, "boot_volume_type": "ssd_hiiops", "flavor_id": "g0-standard-1-2", "node_count": 1}], "properties": {"boot_volume_size": {"anyOf": [{"maximum": 2000, "minimum": 10, "type": "integer"}, "type": "null"], "default": null, "description": "Size (in GiB) of the boot volume. Required for virtual instances.", "title": "Boot Volume Size"}, "boot_volume_type": {"anyOf": ["$ref": "#/components/schemas/VolumeType", "type": "null"], "default": null, "description": "Type of the boot volume. Required for virtual instances."}, "flavor_id": {"description": "Flavor ID.", "title": "Flavor Id", "type": "string"}, "is_public_ipv4": {"default": false, "description": "Enable public v4 address.", "title": "Is Public Ipv4", "type": "boolean"}, "node_count": {"default": 1, "description": "Minimum node count.", "maximum": 200, "minimum": 1, "title": "Node Count", "type": "integer"}}, "required": ["flavor_id"], "title": "K8sClusterPoolPricingRequestV2Serializer", "type": "object"}
    DeployStatusSerializer: {"properties": {"ready": {"description": "Number of ready instances", "examples": [1], "title": "Ready", "type": "integer"}, "total": {"description": "Total number of instances", "examples": [2], "title": "Total", "type": "integer"}}, "required": ["total", "ready"], "title": "DeployStatusSerializer", "type": "object"}
    SchemaFilterFunctionsCallsSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterFunctionsCallsEnum", "description": "Field name to filter by", "examples": ["uuid"]}, "type": {"const": "functions_calls", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["066e202a-fc9a-43f2-a74d-be34afbee5c9"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterFunctionsCallsSerializer", "type": "object"}
    SizeSerializer: {"properties": {"size": {"description": "New volume size in GiB", "examples": [100], "minimum": 1, "title": "Size", "type": "integer"}}, "required": ["size"], "title": "SizeSerializer", "type": "object"}
    K8sClusterCiliumV2Serializer: {"properties": {"encryption": {"default": false, "description": "Wireguard encryption", "title": "Encryption", "type": "boolean"}, "hubble_relay": {"default": false, "description": "Hubble Relay", "title": "Hubble Relay", "type": "boolean"}, "hubble_ui": {"default": false, "description": "Hubble UI", "title": "Hubble Ui", "type": "boolean"}, "lb_acceleration": {"default": false, "description": "LoadBalancer acceleration", "title": "Lb Acceleration", "type": "boolean"}, "lb_mode": {"$ref": "#/components/schemas/K8sClusterCiliumLBMode", "default": "snat", "description": "LoadBalancer mode", "examples": ["hybrid", "snat", "dsr"]}, "mask_size": {"default": 24, "description": "Mask size for IPv4", "examples": [24], "title": "Mask Size", "type": "integer"}, "mask_size_v6": {"default": 120, "description": "Mask size for IPv6", "examples": [120], "title": "Mask Size V6", "type": "integer"}, "routing_mode": {"$ref": "#/components/schemas/K8sClusterCiliumRoutingMode", "default": "tunnel", "description": "Routing mode", "examples": ["tunnel"]}, "tunnel": {"$ref": "#/components/schemas/K8sClusterCiliumTunnel", "default": "geneve", "description": "CNI provider", "examples": ["geneve"]}}, "title": "K8sClusterCiliumV2Serializer", "type": "object"}
    CreateListenerSerializer: {"properties": {"allowed_cidrs": {"anyOf": [{"items": {"format": "ipvanynetwork", "type": "string"}, "type": "array"}, "type": "null"], "description": "Network CIDRs from which service will be accessible", "examples": [["10.0.0.0/8"]], "title": "Allowed Cidrs"}, "connection_limit": {"default": 100000, "description": "Limit of the simultaneous connections", "examples": [100000], "maximum": 1000000, "minimum": -1, "title": "Connection Limit", "type": "integer"}, "insert_x_forwarded": {"description": "Add headers X-Forwarded-For, X-Forwarded-Port, X-Forwarded-Proto to requests. Only used with HTTP or `TERMINATED_HTTPS` protocols.", "examples": [false], "title": "Insert X Forwarded", "type": "boolean"}, "name": {"description": "Load balancer listener name", "examples": ["my_listener"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "pools": {"description": "Member pools", "items": {"$ref": "#/components/schemas/CreateLbPoolSerializer"}, "maxItems": 1, "title": "Pools", "type": "array"}, "protocol": {"$ref": "#/components/schemas/LbListenerProtocolEnum", "description": "Load balancer listener protocol", "examples": ["HTTP"]}, "protocol_port": {"description": "Protocol port", "examples": [80], "maximum": 65535, "minimum": 1, "title": "Protocol Port", "type": "integer"}, "secret_id": {"anyOf": [{"const": "", "type": "string"}, {"format": "uuid4", "type": "string"}], "description": "ID of the secret where PKCS12 file is stored for `TERMINATED_HTTPS` or PROMETHEUS listener", "examples": ["f2e734d0-fa2b-42c2-ad33-4c6db5101e00"], "title": "Secret Id"}, "sni_secret_id": {"description": "List of secrets IDs containing PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` or PROMETHEUS listeners", "examples": [["f2e734d0-fa2b-42c2-ad33-4c6db5101e00", "eb121225-7ded-4ff3-ae1f-599e145dd7cb"]], "items": {"format": "uuid4", "type": "string"}, "title": "Sni Secret Id", "type": "array"}, "timeout_client_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Frontend client inactivity timeout in milliseconds", "examples": [50000], "title": "Timeout Client Data"}, "timeout_member_connect": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member connection timeout in milliseconds", "examples": [50000], "title": "Timeout Member Connect"}, "timeout_member_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member inactivity timeout in milliseconds", "examples": [null], "title": "Timeout Member Data"}, "user_list": {"description": "Load balancer listener list of username and encrypted password items", "examples": [[{"encrypted_password": "$5$isRr.HJ1IrQP38.m$oViu3DJOpUG2ZsjCBtbITV3mqpxxbZfyWJojLPNSPO5", "username": "admin"}]], "items": {"$ref": "#/components/schemas/UserListItem"}, "title": "User List", "type": "array"}}, "required": ["name", "protocol", "protocol_port"], "title": "CreateListenerSerializer", "type": "object"}
    UpdateClusterSerializer: {"properties": {"name": {"description": "Cluster name", "examples": ["gpu-cluster-1"], "maxLength": 256, "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}}, "required": ["name"], "title": "UpdateClusterSerializer", "type": "object"}
    CreateServerGroupSerializer: {"properties": {"name": {"description": "The name of the server group.", "examples": ["my-server-group"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,108}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "policy": {"$ref": "#/components/schemas/ServerGroupPolicyEnum", "description": "The server group policy.", "examples": ["anti-affinity"]}}, "required": ["name", "policy"], "title": "Create server group schema", "type": "object"}
    CreateSecurityGroupRuleSerializer: {"properties": {"description": {"description": "Rule description", "examples": ["Some description"], "maxLength": 255, "title": "Description", "type": "string"}, "direction": {"description": "Ingress or egress, which is the direction in which the security group is applied", "enum": ["egress", "ingress"], "examples": ["ingress"], "title": "Direction", "type": "string"}, "ethertype": {"description": "Ether type", "enum": ["IPv4", "IPv6"], "examples": ["IPv4"], "title": "Ethertype", "type": "string"}, "port_range_max": {"anyOf": [{"maximum": 65535, "minimum": 0, "type": "integer"}, "type": "null"], "description": "The maximum port number in the range that is matched by the security group rule", "examples": [80], "title": "Port Range Max"}, "port_range_min": {"anyOf": [{"maximum": 65535, "minimum": 0, "type": "integer"}, "type": "null"], "description": "The minimum port number in the range that is matched by the security group rule", "examples": [80], "title": "Port Range Min"}, "protocol": {"$ref": "#/components/schemas/SecurityGroupProtocolEnum", "description": "Protocol", "examples": ["tcp"]}, "remote_group_id": {"description": "The remote group UUID to associate with this security group", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Remote Group Id", "type": "string"}, "remote_ip_prefix": {"anyOf": [{"format": "ipvanynetwork", "type": "string"}, "type": "null"], "description": "The remote IP prefix that is matched by this security group rule", "examples": ["10.0.0.0/8"], "title": "Remote Ip Prefix"}}, "title": "CreateSecurityGroupRuleSerializer", "type": "object"}
    RouterSerializer: {"properties": {"created_at": {"description": "Datetime when the router was created", "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "Task that created this entity", "title": "Creator Task Id"}, "distributed": {"description": "Whether the router is distributed or centralized.", "examples": [true, false], "title": "Distributed", "type": "boolean"}, "external_gateway_info": {"anyOf": ["$ref": "#/components/schemas/ExternalGatewaySerializer", "type": "null"], "default": null, "description": "State of this router's external gateway."}, "id": {"description": "Router ID", "format": "uuid4", "title": "Id", "type": "string"}, "interfaces": {"description": "List of router interfaces.", "items": {"$ref": "#/components/schemas/PortSerializer"}, "title": "Interfaces", "type": "array"}, "name": {"description": "Router name", "title": "Name", "type": "string"}, "project_id": {"description": "Project ID", "examples": [1337], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "routes": {"description": "List of custom routes.", "items": {"$ref": "#/components/schemas/RouteOutSerializer"}, "title": "Routes", "type": "array"}, "status": {"description": "Status of the router.", "title": "Status", "type": "string"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "title": "Task Id"}, "updated_at": {"description": "Datetime when the router was last updated", "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["project_id", "region_id", "region", "id", "name", "status", "distributed", "interfaces", "routes", "created_at", "updated_at", "task_id"], "title": "RouterSerializer", "type": "object"}
    K8sClusterAddonsCreateV2Serializer: {"properties": {"slurm": {"$ref": "#/components/schemas/K8sClusterSlurmAddonEnableV2Serializer", "description": "Slurm add-on configuration"}}, "title": "K8sClusterAddonsCreateV2Serializer", "type": "object"}
    SchemaFilterContainersSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterContainersEnum", "description": "Field name to filter by", "examples": ["uuid"]}, "type": {"const": "containers", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["066e202a-fc9a-43f2-a74d-be34afbee5c9"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterContainersSerializer", "type": "object"}
    LaasStatusSerializer: {"properties": {"is_initialized": {"description": "Boolean showing whether client is initialized with LaaS", "examples": [true], "title": "Is Initialized", "type": "boolean"}, "namespace": {"anyOf": ["type": "string", "type": "null"], "description": "Client namespace", "examples": [null, "2ehwccnfzytsnt576dkmvs"], "title": "Namespace"}}, "required": ["namespace", "is_initialized"], "title": "LaasStatusSerializer", "type": "object"}
    InferenceRegistryCredentialOutSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/InferenceRegistryCredentialOutSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "InferenceRegistryCredentialOutSerializerList", "type": "object"}
    K8sClusterPoolUpdateV2Serializer: {"properties": {"auto_healing_enabled": {"anyOf": ["type": "boolean", "type": "null"], "default": null, "description": "Enable/disable auto healing", "examples": [true], "title": "Auto Healing Enabled"}, "labels": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": null, "description": "Labels applied to the cluster pool", "examples": ["my-label": "foo"], "title": "Labels"}, "max_node_count": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Maximum node count", "examples": [3], "title": "Max Node Count"}, "min_node_count": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Minimum node count", "examples": [1], "title": "Min Node Count"}, "node_count": {"anyOf": ["type": "integer", "type": "null"], "default": null, "deprecated": true, "description": "This field is deprecated. Please use the cluster pool resize handler instead.", "examples": [2], "title": "Node Count"}, "taints": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": null, "description": "Taints applied to the cluster pool", "examples": ["my-taint": "bar:NoSchedule"], "title": "Taints"}}, "title": "K8sClusterPoolUpdateV2Serializer", "type": "object"}
    ResourceInferenceSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["inference_gpu_l40s_48_sec"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"description": "Unit of billing value", "examples": ["H"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the inference deployment", "examples": ["inference-16vcpu-232gib-1xl40s-48gb"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the inference deployment", "examples": ["deployment_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "inference", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the inference deployment", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid", "flavor"], "title": "ResourceInferenceSerializer", "type": "object"}
    CaasApiKeyCreateResultSerializer: {"properties": {"containers": {"description": "List of containers using key", "examples": [[{"name": "my-container", "namespace": "space"}]], "items": {"$ref": "#/components/schemas/CaasNamespacedName"}, "title": "Containers", "type": "array"}, "created_at": {"description": "Key starts to work", "examples": ["2023-08-22T11:21:00Z"], "format": "date-time", "title": "Created At", "type": "string"}, "description": {"description": "Key description", "examples": ["my first key"], "title": "Description", "type": "string"}, "expire": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "description": "Key expires at", "examples": ["2023-07-31T00:00:00Z"], "title": "Expire"}, "is_disabled": {"description": "Set to true if key is disabled", "examples": [false], "title": "Is Disabled", "type": "boolean"}, "name": {"description": "Key name", "examples": ["my-key"], "title": "Name", "type": "string"}, "secret": {"description": "Secret api key", "examples": ["my-secret"], "title": "Secret", "type": "string"}, "source": {"description": "Source of the apikey, can be 'cloud' or 'iate'", "examples": ["cloud"], "title": "Source", "type": "string"}, "status": {"description": "Key status", "examples": ["Expired"], "title": "Status", "type": "string"}}, "required": ["name", "description", "secret", "created_at", "status", "source", "expire", "is_disabled", "containers"], "title": "CaasApiKeyCreateResultSerializer", "type": "object"}
    DeprecatedAIClusterServerFlavorHardwareDescriptionSerializer: {"properties": {"cpu": {"description": "Human-readable CPU description", "examples": ["1x Intel Xeon 4C/8T 3.7 GHz"], "title": "Cpu", "type": "string"}, "disk": {"description": "Human-readable disk description", "examples": ["2x 250GiB SSD"], "title": "Disk", "type": "string"}, "gpu": {"description": "Human-readable GPU description", "examples": ["NVIDIA h100-8GPU (80GB)"], "title": "Gpu", "type": "string"}, "license": {"description": "If the flavor is licensed, this field contains the license type", "examples": [""], "title": "License", "type": "string"}, "network": {"description": "Human-readable NIC description", "examples": ["1x 500Mbps"], "title": "Network", "type": "string"}, "ram": {"description": "Human-readable RAM description", "examples": ["32 GiB"], "title": "Ram", "type": "string"}}, "required": ["cpu", "ram", "disk", "license", "network", "gpu"], "title": "Detailed flavor hardware description of GPU cluster server flavor", "type": "object"}
    SecretSerializer: {"properties": {"algorithm": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Metadata provided by a user or system for informational purposes. Defaults to None", "examples": ["aes"], "title": "Algorithm"}, "bit_length": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Metadata provided by a user or system for informational purposes. Value must be greater than zero. Defaults to None", "examples": [256], "title": "Bit Length"}, "content_types": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": null, "description": "Describes the content-types that can be used to retrieve the payload. The content-type used with symmetric secrets is application/octet-stream", "examples": ["default": "application/octet-stream"], "title": "Content Types"}, "created": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Datetime when the secret was created. The format is 2020-01-01T12:00:00+00:00", "examples": ["2023-03-23T20:00:00+00:00"], "title": "Created"}, "expiration": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Datetime when the secret will expire. The format is 2020-01-01T12:00:00+00:00. Defaults to None", "examples": ["2023-06-23T20:00:00+00:00"], "title": "Expiration"}, "id": {"description": "Secret uuid", "examples": ["bfc7824b-31b6-4a28-a0c4-7df137139215"], "title": "Id", "type": "string"}, "mode": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Metadata provided by a user or system for informational purposes. Defaults to None", "examples": ["cbc"], "title": "Mode"}, "name": {"description": "Secret name", "examples": ["AES key"], "title": "Name", "type": "string"}, "secret_type": {"$ref": "#/components/schemas/SecretTypesEnum", "description": "Secret type, base64 encoded. symmetric - Used for storing byte arrays such as keys suitable for symmetric encryption; public - Used for storing the public key of an asymmetric keypair; private - Used for storing the private key of an asymmetric keypair; passphrase - Used for storing plain text passphrases; certificate - Used for storing cryptographic certificates such as X.509 certificates; opaque - Used for backwards compatibility with previous versions of the API", "examples": ["opaque"]}, "status": {"description": "Status", "examples": ["ACTIVE"], "title": "Status", "type": "string"}}, "required": ["name", "id", "secret_type", "status"], "title": "SecretSerializer", "type": "object"}
    InstanceVolumePricingRequestSerializer: {"description": "Schema lists only the fields required to calculate price", "examples": [{"size": 1000, "source": "new-volume", "type_name": "standard"}], "properties": {"size": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Volume size in GiB.", "examples": [1000], "title": "Size"}, "snapshot_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The snapshot ID. It is mandatory if the volume is created from a snapshot.", "examples": ["7cca40d7-a843-4e9f-ae08-62b9a394b1ab"], "title": "Snapshot Id"}, "source": {"$ref": "#/components/schemas/VolumeSource", "description": "The source of the volume. It must be one of: 'new-volume', 'image', 'snapshot', 'apptemplate'.", "examples": ["new-volume"]}, "type_name": {"anyOf": ["$ref": "#/components/schemas/VolumeTypeName", "type": "null"], "default": null, "description": "The type of the volume. It must be one of: 'standard', '`ssd_hiiops`', 'cold', 'ultra'.", "examples": ["standard"]}}, "required": ["source"], "title": "InstanceVolumePricingRequestSerializer", "type": "object"}
    SoftRebootVirtualGPUClusterSerializer: {"properties": {"action": {"const": "soft_reboot", "description": "Action name", "examples": ["soft_reboot"], "title": "Action", "type": "string"}}, "required": ["action"], "title": "SoftRebootVirtualGPUClusterSerializer", "type": "object"}
    ResourceLogIndexSerializer: {"description": "These properties are common for all individual log indexes\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["log_index_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the log index", "examples": ["log_index_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "last_size": {"description": "Size of the log index in bytes", "examples": [100000000], "title": "Last Size", "type": "integer"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"description": "Unit of size", "examples": ["bytes"], "title": "Size Unit", "type": "string"}, "type": {"const": "log_index", "title": "Type", "type": "string"}, "uuid": {"anyOf": [{"format": "uuid", "type": "string"}, "type": "null"], "description": "UUID of the log index", "title": "Uuid"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_size", "size_unit", "last_name", "uuid"], "title": "ResourceLogIndexSerializer", "type": "object"}
    CostReportResourcesResponseSerializer: {"properties": {"count": {"description": "Count of all the resources", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "price_status": {"$ref": "#/components/schemas/CostReportPriceDisplayStatus", "description": "Price status for the UI, type: string"}, "results": {"items": {"discriminator": {"mapping": {"ai_cluster": "#/components/schemas/ResourceAiClusterWithCostSerializer", "ai_virtual_cluster": "#/components/schemas/ResourceAiVirtualClusterWithCostSerializer", "backup": "#/components/schemas/ResourceBackupWithCostSerializer", "baremetal": "#/components/schemas/ResourceBaremetalWithCostSerializer", "basic_vm": "#/components/schemas/ResourceBasicVmWithCostSerializer", "containers": "#/components/schemas/ResourceContainerWithCostSerializer", "dbaas_postgresql_connection_pooler": "#/components/schemas/ResourceDBAASPostgreSQLPoolerWithCostSerializer", "dbaas_postgresql_cpu": "#/components/schemas/ResourceDBAASPostgreSQLCPUWithCostSerializer", "dbaas_postgresql_memory": "#/components/schemas/ResourceDBAASPostgreSQLMemoryWithCostSerializer", "dbaas_postgresql_public_network": "#/components/schemas/ResourceDBAASPostgreSQLPublicNetworkWithCostSerializer", "dbaas_postgresql_volume": "#/components/schemas/ResourceDBAASPostgreSQLVolumeWithCostSerializer", "egress_traffic": "#/components/schemas/ResourceEgressTrafficWithCostSerializer", "external_ip": "#/components/schemas/ResourceExternalIpWithCostSerializer", "file_share": "#/components/schemas/ResourceFileShareWithCostSerializer", "floatingip": "#/components/schemas/ResourceFloatingIpWithCostSerializer", "functions": "#/components/schemas/ResourceFunctionsWithCostSerializer", "functions_calls": "#/components/schemas/ResourceFunctionCallsWithCostSerializer", "functions_traffic": "#/components/schemas/ResourceFunctionEgressTrafficWithCostSerializer", "image": "#/components/schemas/ResourceImagesWithCostSerializer", "inference": "#/components/schemas/ResourceInferenceWithCostSerializer", "instance": "#/components/schemas/ResourceInstanceWithCostSerializer", "load_balancer": "#/components/schemas/ResourceLoadBalancerWithCostSerializer", "log_index": "#/components/schemas/ResourceLogIndexWithCostSerializer", "snapshot": "#/components/schemas/ResourceSnapshotWithCostSerializer", "volume": "#/components/schemas/ResourceVolumeWithCostSerializer"}, "propertyName": "type"}, "anyOf": ["$ref": "#/components/schemas/ResourceAiClusterWithCostSerializer", "$ref": "#/components/schemas/ResourceAiVirtualClusterWithCostSerializer", "$ref": "#/components/schemas/ResourceBaremetalWithCostSerializer", "$ref": "#/components/schemas/ResourceBasicVmWithCostSerializer", "$ref": "#/components/schemas/ResourceBackupWithCostSerializer", "$ref": "#/components/schemas/ResourceContainerWithCostSerializer", "$ref": "#/components/schemas/ResourceEgressTrafficWithCostSerializer", "$ref": "#/components/schemas/ResourceExternalIpWithCostSerializer", "$ref": "#/components/schemas/ResourceFileShareWithCostSerializer", "$ref": "#/components/schemas/ResourceFloatingIpWithCostSerializer", "$ref": "#/components/schemas/ResourceFunctionsWithCostSerializer", "$ref": "#/components/schemas/ResourceFunctionCallsWithCostSerializer", "$ref": "#/components/schemas/ResourceFunctionEgressTrafficWithCostSerializer", "$ref": "#/components/schemas/ResourceImagesWithCostSerializer", "$ref": "#/components/schemas/ResourceInferenceWithCostSerializer", "$ref": "#/components/schemas/ResourceInstanceWithCostSerializer", "$ref": "#/components/schemas/ResourceLoadBalancerWithCostSerializer", "$ref": "#/components/schemas/ResourceLogIndexWithCostSerializer", "$ref": "#/components/schemas/ResourceSnapshotWithCostSerializer", "$ref": "#/components/schemas/ResourceVolumeWithCostSerializer", "$ref": "#/components/schemas/ResourceDBAASPostgreSQLPoolerWithCostSerializer", "$ref": "#/components/schemas/ResourceDBAASPostgreSQLMemoryWithCostSerializer", "$ref": "#/components/schemas/ResourceDBAASPostgreSQLPublicNetworkWithCostSerializer", "$ref": "#/components/schemas/ResourceDBAASPostgreSQLCPUWithCostSerializer",
              "$ref": "#/components/schemas/ResourceDBAASPostgreSQLVolumeWithCostSerializer"]}, "title": "Results", "type": "array"}}, "required": ["count", "results", "price_status"], "title": "CostReportResourcesResponseSerializer", "type": "object"}
    InstanceInterfaceTrunkCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/InstanceInterfaceTrunkSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "InstanceInterfaceTrunkCollectionSerializer", "type": "object"}
    LbAlgorithmEnum: {"enum": ["LEAST_CONNECTIONS", "ROUND_ROBIN", "SOURCE_IP"], "title": "LbAlgorithmEnum", "type": "string"}
    TotalFunctionCallsReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["faas_function_calls_piece"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "MLS", "description": "Unit of billing value", "examples": ["MLS"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "functions_calls", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalFunctionCallsReportItemSerializer", "type": "object"}
    EgressTrafficInstanceType: {"enum": ["baremetal", "vm"], "title": "EgressTrafficInstanceType", "type": "string"}
    ActivateWithInstanceSerializer: {"properties": {"activate_profile": {"default": true, "description": "Automatically activates the DDoS protection profile when the associated instance is started", "examples": [true], "title": "Activate Profile", "type": "boolean"}}, "title": "ActivateWithInstanceSerializer", "type": "object"}
    ApiKeyUpdateRequestSerializer: {"properties": {"description": {"anyOf": [{"maxLength": 300, "type": "string"}, "type": "null"], "description": "Description of the API Key.", "examples": ["This key is used for accessing the inference service."], "title": "Description"}}, "title": "ApiKeyUpdateRequestSerializer", "type": "object"}
    ResourceInstanceSerializer: {"description": "These properties are common for all individual instances\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["g1-standard-1-2_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the instance", "examples": ["g1-standard-1-2"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the instance", "examples": ["instance_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "instance", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the instance", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "first_seen", "last_seen", "project_id", "last_name", "uuid", "tags"], "title": "ResourceInstanceSerializer", "type": "object"}
    SchemaFilterBackupEnum: {"enum": ["last_name", "last_size", "schedule_id", "source_volume_uuid", "type", "uuid"], "title": "SchemaFilterBackupEnum", "type": "string"}
    SecurityGroupProtocolEnum: {"enum": ["ah", "any", "dccp", "egp", "esp", "gre", "icmp", "igmp", "ipencap", "ipip", "ipv6-encap", "ipv6-frag", "ipv6-icmp", "ipv6-nonxt", "ipv6-opts", "ipv6-route", "ospf", "pgm", "rsvp", "sctp", "tcp", "udp", "udplite", "vrrp"], "title": "SecurityGroupProtocolEnum", "type": "string"}
    SchemaFilterFunctionsEnum: {"enum": ["last_name", "type", "uuid"], "title": "SchemaFilterFunctionsEnum", "type": "string"}
    CreateAccessRuleSerializer: {"properties": {"access_mode": {"$ref": "#/components/schemas/AccessLevelChoices", "description": "Access mode", "examples": ["ro"]}, "ip_address": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, {"format": "ipvanynetwork", "type": "string"}], "description": "Source IP or network", "examples": ["192.168.1.1", "2001:db8::1", "10.0.0.0/24", "fd00::/8", "0.0.0.0/0", "::/0"], "title": "Ip Address"}}, "required": ["access_mode", "ip_address"], "title": "CreateAccessRuleSerializer", "type": "object"}
    PullSecretCreateSerializer: {"properties": {"login": {"description": "Pull secret login", "examples": ["login"], "maxLength": 100, "minLength": 1, "title": "Login", "type": "string"}, "name": {"description": "Pull secret name", "examples": ["my-secret"], "maxLength": 250, "minLength": 1, "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Name", "type": "string"}, "password": {"description": "Pull secret password", "examples": ["password"], "format": "password", "maxLength": 5000, "minLength": 1, "title": "Password", "type": "string", "writeOnly": true}, "registry": {"description": "Pull secret registry", "examples": ["some.registry.com"], "maxLength": 400, "minLength": 1, "title": "Registry", "type": "string"}}, "required": ["name", "registry", "login", "password"], "title": "PullSecretCreateSerializer", "type": "object"}
    CostReportTotalsResponseSerializer: {"properties": {"count": {"description": "Count of returned totals", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "price_status": {"$ref": "#/components/schemas/CostReportPriceDisplayStatus", "description": "Price status for the UI, type: string"}, "results": {"items": {"discriminator": {"mapping": {"ai_cluster": "#/components/schemas/TotalAiClusterWithCostSerializer", "ai_virtual_cluster": "#/components/schemas/TotalAiVirtualClusterWithCostSerializer", "backup": "#/components/schemas/TotalBackupWithCostSerializer", "baremetal": "#/components/schemas/TotalBaremetalWithCostSerializer", "basic_vm": "#/components/schemas/TotalBasicVmWithCostSerializer", "containers": "#/components/schemas/TotalContainerWithCostSerializer", "dbaas_postgresql_connection_pooler": "#/components/schemas/TotalDBAASPostgreSQLPoolerWithCostSerializer", "dbaas_postgresql_cpu": "#/components/schemas/TotalDBAASPostgreSQLCPUWithCostSerializer", "dbaas_postgresql_memory": "#/components/schemas/TotalDBAASPostgreSQLMemoryWithCostSerializer", "dbaas_postgresql_public_network": "#/components/schemas/TotalDBAASPostgreSQLPublicNetworkWithCostSerializer", "dbaas_postgresql_volume": "#/components/schemas/TotalDBAASPostgreSQLVolumeWithCostSerializer", "egress_traffic": "#/components/schemas/TotalEgressTrafficWithCostSerializer", "external_ip": "#/components/schemas/TotalExternalIpWithCostSerializer", "file_share": "#/components/schemas/TotalFileShareWithCostSerializer", "floatingip": "#/components/schemas/TotalFloatingIpWithCostSerializer", "functions": "#/components/schemas/TotalFunctionsWithCostSerializer", "functions_calls": "#/components/schemas/TotalFunctionCallsWithCostSerializer", "functions_traffic": "#/components/schemas/TotalFunctionEgressTrafficWithCostSerializer", "image": "#/components/schemas/TotalImagesWithCostSerializer", "inference": "#/components/schemas/TotalInferenceWithCostSerializer", "instance": "#/components/schemas/TotalInstanceWithCostSerializer", "load_balancer": "#/components/schemas/TotalLoadBalancerWithCostSerializer", "log_index": "#/components/schemas/TotalLogIndexWithCostSerializer", "snapshot": "#/components/schemas/TotalSnapshotWithCostSerializer", "volume": "#/components/schemas/TotalVolumeWithCostSerializer"}, "propertyName": "type"}, "anyOf": ["$ref": "#/components/schemas/TotalAiClusterWithCostSerializer", "$ref": "#/components/schemas/TotalAiVirtualClusterWithCostSerializer", "$ref": "#/components/schemas/TotalBaremetalWithCostSerializer", "$ref": "#/components/schemas/TotalBasicVmWithCostSerializer", "$ref": "#/components/schemas/TotalBackupWithCostSerializer", "$ref": "#/components/schemas/TotalContainerWithCostSerializer", "$ref": "#/components/schemas/TotalEgressTrafficWithCostSerializer", "$ref": "#/components/schemas/TotalExternalIpWithCostSerializer", "$ref": "#/components/schemas/TotalFileShareWithCostSerializer", "$ref": "#/components/schemas/TotalFloatingIpWithCostSerializer", "$ref": "#/components/schemas/TotalFunctionsWithCostSerializer", "$ref": "#/components/schemas/TotalFunctionCallsWithCostSerializer", "$ref": "#/components/schemas/TotalFunctionEgressTrafficWithCostSerializer", "$ref": "#/components/schemas/TotalImagesWithCostSerializer", "$ref": "#/components/schemas/TotalInferenceWithCostSerializer", "$ref": "#/components/schemas/TotalInstanceWithCostSerializer", "$ref": "#/components/schemas/TotalLoadBalancerWithCostSerializer", "$ref": "#/components/schemas/TotalLogIndexWithCostSerializer", "$ref": "#/components/schemas/TotalSnapshotWithCostSerializer", "$ref": "#/components/schemas/TotalVolumeWithCostSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLPoolerWithCostSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLMemoryWithCostSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLPublicNetworkWithCostSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLCPUWithCostSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLVolumeWithCostSerializer"]}, "title": "Results", "type": "array"}}, "required": [
        "count", "results", "price_status"], "title": "CostReportTotalsResponseSerializer", "type": "object"}
    VolumeIdsSerializer: {"properties": {"volume_ids": {"description": "List of volume IDs.", "examples": [["1488e2ce-f906-47fb-ba32-c25a3f63df4f"]], "items": {"type": "string"}, "title": "Volume Ids", "type": "array"}}, "required": ["volume_ids"], "title": "VolumeIdsSerializer", "type": "object"}
    AIAppCatalog: {"properties": {"components": {"additionalProperties": {"$ref": "#/components/schemas/AIAppCatalogComponent"}, "description": "Configurable components of the application", "title": "Components", "type": "object"}, "cover_url": {"description": "URL to the application's cover image", "examples": ["https://cdn.example.com"], "title": "Cover Url", "type": "string"}, "description": {"description": "Brief overview of the application", "examples": ["This is a demo application"], "title": "Description", "type": "string"}, "display_name": {"description": "Human-readable name of the application", "examples": ["Llama-3.2-1B-Instruct"], "title": "Display Name", "type": "string"}, "name": {"description": "Unique application identifier in the catalog", "examples": ["demo-app"], "title": "Name", "type": "string"}, "readme": {"description": "Detailed documentation or instructions", "examples": ["Detailed documentation"], "title": "Readme", "type": "string"}, "tags": {"additionalProperties": {"type": "string"}, "description": "Categorization key-value pairs", "examples": [{"category": "Model", "model_docs_endpoint": "/docs", "model_inference_engine": "vllm", "model_owner": "Meta", "model_type": "Text Generation"}], "title": "Tags", "type": "object"}}, "required": ["name", "display_name", "cover_url", "description", "readme", "tags", "components"], "title": "AIAppCatalog", "type": "object"}
    ResourceAiVirtualClusterWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["AI Infrastructure: g3-ai-128-768-6000-l40s-48-4 (128vCPU/768GB RAM/6000GB NVMe/L40S-48GB-4GPU) Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["g3-ai-32-192-1500-l40s-48-1_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the Virtual GPU cluster", "examples": ["g3-ai-32-192-1500-l40s-48-1"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the AI cluster", "examples": ["ai_virtual_cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "ai_virtual_cluster", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the Virtual GPU cluster", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "first_seen", "last_seen", "project_id", "last_name", "uuid", "tags", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceAiVirtualClusterWithCostSerializer", "type": "object"}
    RoleAssignmentCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/RoleAssignmentSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "RoleAssignmentCollectionSerializer", "type": "object"}
    SchemaFilterDBAASPostgreSQLCPUSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLEnum", "description": "Field name to filter by", "examples": ["uuid"]}, "type": {"const": "dbaas_postgresql_cpu", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["066e202a-fc9a-43f2-a74d-be34afbee5c9"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterDBAASPostgreSQLCPUSerializer", "type": "object"}
    RegionalDiffQuotasSchema: {"type": "object", "properties": {"baremetal_basic_count_limit": {"type": "integer", "description": "Basic bare metal servers count limit"}, "baremetal_basic_count_requested": {"type": "integer", "description": "Basic bare metal servers count requested"}, "baremetal_basic_count_usage": {"type": "integer", "description": "Basic bare metal servers count usage"}, "baremetal_gpu_a100_count_limit": {"type": "integer", "description": "Bare metal A100 GPU server count limit"}, "baremetal_gpu_a100_count_requested": {"type": "integer", "description": "Bare metal A100 GPU server count requested"}, "baremetal_gpu_a100_count_usage": {"type": "integer", "description": "Bare metal A100 GPU server count usage"}, "baremetal_gpu_h100_count_limit": {"type": "integer", "description": "Bare metal H100 GPU server count limit"}, "baremetal_gpu_h100_count_requested": {"type": "integer", "description": "Bare metal H100 GPU server count requested"}, "baremetal_gpu_h100_count_usage": {"type": "integer", "description": "Bare metal H100 GPU server count usage"}, "baremetal_gpu_h200_count_limit": {"type": "integer", "description": "Bare metal H200 GPU server count limit"}, "baremetal_gpu_h200_count_requested": {"type": "integer", "description": "Bare metal H200 GPU server count requested"}, "baremetal_gpu_h200_count_usage": {"type": "integer", "description": "Bare metal H200 GPU server count usage"}, "baremetal_gpu_l40s_count_limit": {"type": "integer", "description": "Bare metal L40S GPU server count limit"}, "baremetal_gpu_l40s_count_requested": {"type": "integer", "description": "Bare metal L40S GPU server count requested"}, "baremetal_gpu_l40s_count_usage": {"type": "integer", "description": "Bare metal L40S GPU server count usage"}, "baremetal_hf_count_limit": {"type": "integer", "description": "High-frequency bare metal servers count limit"}, "baremetal_hf_count_requested": {"type": "integer", "description": "High-frequency bare metal servers count requested"}, "baremetal_hf_count_usage": {"type": "integer", "description": "High-frequency bare metal servers count usage"}, "baremetal_infrastructure_count_limit": {"type": "integer", "description": "Infrastructure bare metal servers count limit"}, "baremetal_infrastructure_count_requested": {"type": "integer", "description": "Infrastructure bare metal servers count requested"}, "baremetal_infrastructure_count_usage": {"type": "integer", "description": "Infrastructure bare metal servers count usage"}, "baremetal_network_count_limit": {"type": "integer", "description": "Bare metal Network Count limit"}, "baremetal_network_count_requested": {"type": "integer", "description": "Bare metal Network Count requested"}, "baremetal_network_count_usage": {"type": "integer", "description": "Bare metal Network Count usage"}, "baremetal_storage_count_limit": {"type": "integer", "description": "Storage bare metal servers count limit"}, "baremetal_storage_count_requested": {"type": "integer", "description": "Storage bare metal servers count requested"}, "baremetal_storage_count_usage": {"type": "integer", "description": "Storage bare metal servers count usage"}, "caas_container_count_limit": {"type": "integer", "description": "Containers count limit"}, "caas_container_count_requested": {"type": "integer", "description": "Containers count requested"}, "caas_container_count_usage": {"type": "integer", "description": "Containers count usage"}, "caas_cpu_count_limit": {"type": "integer", "description": "mCPU count for containers limit"}, "caas_cpu_count_requested": {"type": "integer", "description": "mCPU count for containers requested"}, "caas_cpu_count_usage": {"type": "integer", "description": "mCPU count for containers usage"}, "caas_gpu_count_limit": {"type": "integer", "description": "Containers gpu count limit"}, "caas_gpu_count_requested": {"type": "integer", "description": "Containers gpu count requested"}, "caas_gpu_count_usage": {"type": "integer", "description": "Containers gpu count usage"}, "caas_ram_size_limit": {"type": "integer", "description": "MB memory count for containers
            limit"}, "caas_ram_size_requested": {"type": "integer", "description": "MB memory count for containers requested"}, "caas_ram_size_usage": {"type": "integer", "description": "MB memory count for containers usage"}, "cluster_count_limit": {"type": "integer", "description": "K8s clusters count limit"}, "cluster_count_requested": {"type": "integer", "description": "K8s clusters count requested"}, "cluster_count_usage": {"type": "integer", "description": "K8s clusters count usage"}, "cpu_count_limit": {"type": "integer", "description": "vCPU Count limit"}, "cpu_count_requested": {"type": "integer", "description": "vCPU Count requested"}, "cpu_count_usage": {"type": "integer", "description": "vCPU Count usage"}, "dbaas_postgres_cluster_count_limit": {"type": "integer", "description": "DBaaS cluster count limit"}, "dbaas_postgres_cluster_count_requested": {"type": "integer", "description": "DBaaS cluster count requested"}, "dbaas_postgres_cluster_count_usage": {"type": "integer", "description": "DBaaS cluster count usage"}, "external_ip_count_limit": {"type": "integer", "description": "External IP Count limit"}, "external_ip_count_requested": {"type": "integer", "description": "External IP Count requested"}, "external_ip_count_usage": {"type": "integer", "description": "External IP Count usage"}, "faas_cpu_count_limit": {"type": "integer", "description": "mCPU count for functions limit"}, "faas_cpu_count_requested": {"type": "integer", "description": "mCPU count for functions requested"}, "faas_cpu_count_usage": {"type": "integer", "description": "mCPU count for functions usage"}, "faas_function_count_limit": {"type": "integer", "description": "Functions count limit"}, "faas_function_count_requested": {"type": "integer", "description": "Functions count requested"}, "faas_function_count_usage": {"type": "integer", "description": "Functions count usage"}, "faas_namespace_count_limit": {"type": "integer", "description": "Functions namespace count limit"}, "faas_namespace_count_requested": {"type": "integer", "description": "Functions namespace count requested"}, "faas_namespace_count_usage": {"type": "integer", "description": "Functions namespace count usage"}, "faas_ram_size_limit": {"type": "integer", "description": "MB memory count for functions limit"}, "faas_ram_size_requested": {"type": "integer", "description": "MB memory count for functions requested"}, "faas_ram_size_usage": {"type": "integer", "description": "MB memory count for functions usage"}, "firewall_count_limit": {"type": "integer", "description": "Firewalls Count limit"}, "firewall_count_requested": {"type": "integer", "description": "Firewalls Count requested"}, "firewall_count_usage": {"type": "integer", "description": "Firewalls Count usage"}, "floating_count_limit": {"type": "integer", "description": "Floating IP Count limit"}, "floating_count_requested": {"type": "integer", "description": "Floating IP Count requested"}, "floating_count_usage": {"type": "integer", "description": "Floating IP Count usage"}, "gpu_count_limit": {"type": "integer", "description": "GPU Count limit"}, "gpu_count_requested": {"type": "integer", "description": "GPU Count requested"}, "gpu_count_usage": {"type": "integer", "description": "GPU Count usage"}, "gpu_virtual_a100_count_limit": {"type": "integer", "description": "Virtual A100 GPU card count limit"}, "gpu_virtual_a100_count_requested": {"type": "integer", "description": "Virtual A100 GPU card count requested"}, "gpu_virtual_a100_count_usage": {"type": "integer", "description": "Virtual A100 GPU card count usage"}, "gpu_virtual_h100_count_limit": {"type": "integer", "description": "Virtual H100 GPU card count limit"}, "gpu_virtual_h100_count_requested": {"type": "integer", "description": "Virtual H100 GPU card count requested"}, "gpu_virtual_h100_count_usage": {"type": "integer", "description": "Virtual H100 GPU card count usage"}, "gpu_virtual_h200_count_limit": {"type": "integer", "description": "Virtual H200 GPU card count limit"}, "gpu_virtual_h200_count_requested": {"type": "integer", "description": "Virtual
            H200 GPU card count requested"}, "gpu_virtual_h200_count_usage": {"type": "integer", "description": "Virtual H200 GPU card count usage"}, "gpu_virtual_l40s_count_limit": {"type": "integer", "description": "Virtual L40S GPU card count limit"}, "gpu_virtual_l40s_count_requested": {"type": "integer", "description": "Virtual L40S GPU card count requested"}, "gpu_virtual_l40s_count_usage": {"type": "integer", "description": "Virtual L40S GPU card count usage"}, "image_count_limit": {"type": "integer", "description": "Images Count limit"}, "image_count_requested": {"type": "integer", "description": "Images Count requested"}, "image_count_usage": {"type": "integer", "description": "Images Count usage"}, "image_size_limit": {"type": "integer", "description": "Images Size, GiB limit"}, "image_size_requested": {"type": "integer", "description": "Images Size, GiB requested"}, "image_size_usage": {"type": "integer", "description": "Images Size, GiB usage"}, "ipu_count_limit": {"type": "integer", "description": "IPU Count limit"}, "ipu_count_requested": {"type": "integer", "description": "IPU Count requested"}, "ipu_count_usage": {"type": "integer", "description": "IPU Count usage"}, "laas_topic_count_limit": {"type": "integer", "description": "LaaS Topics Count limit"}, "laas_topic_count_requested": {"type": "integer", "description": "LaaS Topics Count requested"}, "laas_topic_count_usage": {"type": "integer", "description": "LaaS Topics Count usage"}, "loadbalancer_count_limit": {"type": "integer", "description": "Load Balancers Count limit"}, "loadbalancer_count_requested": {"type": "integer", "description": "Load Balancers Count requested"}, "loadbalancer_count_usage": {"type": "integer", "description": "Load Balancers Count usage"}, "network_count_limit": {"type": "integer", "description": "Networks Count limit"}, "network_count_requested": {"type": "integer", "description": "Networks Count requested"}, "network_count_usage": {"type": "integer", "description": "Networks Count usage"}, "ram_limit": {"type": "integer", "description": "RAM Size, GiB limit"}, "ram_requested": {"type": "integer", "description": "RAM Size, GiB requested"}, "ram_usage": {"type": "integer", "description": "RAM Size, GiB usage"}, "registry_count_limit": {"type": "integer", "description": "Registries count limit"}, "registry_count_requested": {"type": "integer", "description": "Registries count requested"}, "registry_count_usage": {"type": "integer", "description": "Registries count usage"}, "registry_storage_limit": {"type": "integer", "description": "Registries volume usage, GiB limit"}, "registry_storage_requested": {"type": "integer", "description": "Registries volume usage, GiB requested"}, "registry_storage_usage": {"type": "integer", "description": "Registries volume usage, GiB usage"}, "router_count_limit": {"type": "integer", "description": "Routers Count limit"}, "router_count_requested": {"type": "integer", "description": "Routers Count requested"}, "router_count_usage": {"type": "integer", "description": "Routers Count usage"}, "secret_count_limit": {"type": "integer", "description": "Secret Count limit"}, "secret_count_requested": {"type": "integer", "description": "Secret Count requested"}, "secret_count_usage": {"type": "integer", "description": "Secret Count usage"}, "servergroup_count_limit": {"type": "integer", "description": "Placement Group Count limit"}, "servergroup_count_requested": {"type": "integer", "description": "Placement Group Count requested"}, "servergroup_count_usage": {"type": "integer", "description": "Placement Group Count usage"}, "sfs_count_limit": {"type": "integer", "description": "Shared file system Count limit"}, "sfs_count_requested": {"type": "integer", "description": "Shared file system Count requested"}, "sfs_count_usage": {"type": "integer", "description": "Shared file system Count usage"}, "sfs_size_limit": {"type": "integer", "description": "Shared file system Size, GiB limit"}, "sfs_size_requested": {"type": "integer", "description": "Shared file system Size, GiB requested"}, "sfs_size_usage": {
          "type": "integer", "description": "Shared file system Size, GiB usage"}, "shared_vm_count_limit": {"type": "integer", "description": "Basic VMs Count limit"}, "shared_vm_count_requested": {"type": "integer", "description": "Basic VMs Count requested"}, "shared_vm_count_usage": {"type": "integer", "description": "Basic VMs Count usage"}, "snapshot_schedule_count_limit": {"type": "integer", "description": "Snapshot Schedules Count limit"}, "snapshot_schedule_count_requested": {"type": "integer", "description": "Snapshot Schedules Count requested"}, "snapshot_schedule_count_usage": {"type": "integer", "description": "Snapshot Schedules Count usage"}, "subnet_count_limit": {"type": "integer", "description": "Subnets Count limit"}, "subnet_count_requested": {"type": "integer", "description": "Subnets Count requested"}, "subnet_count_usage": {"type": "integer", "description": "Subnets Count usage"}, "vm_count_limit": {"type": "integer", "description": "Instances Dedicated Count limit"}, "vm_count_requested": {"type": "integer", "description": "Instances Dedicated Count requested"}, "vm_count_usage": {"type": "integer", "description": "Instances Dedicated Count usage"}, "volume_count_limit": {"type": "integer", "description": "Volumes Count limit"}, "volume_count_requested": {"type": "integer", "description": "Volumes Count requested"}, "volume_count_usage": {"type": "integer", "description": "Volumes Count usage"}, "volume_size_limit": {"type": "integer", "description": "Volumes Size, GiB limit"}, "volume_size_requested": {"type": "integer", "description": "Volumes Size, GiB requested"}, "volume_size_usage": {"type": "integer", "description": "Volumes Size, GiB usage"}, "volume_snapshots_count_limit": {"type": "integer", "description": "Snapshots Count limit"}, "volume_snapshots_count_requested": {"type": "integer", "description": "Snapshots Count requested"}, "volume_snapshots_count_usage": {"type": "integer", "description": "Snapshots Count usage"}, "volume_snapshots_size_limit": {"type": "integer", "description": "Snapshots Size, GiB limit"}, "volume_snapshots_size_requested": {"type": "integer", "description": "Snapshots Size, GiB requested"}, "volume_snapshots_size_usage": {"type": "integer", "description": "Snapshots Size, GiB usage"}}, "example": {"baremetal_basic_count_requested": 1, "baremetal_gpu_a100_count_requested": 1, "baremetal_gpu_h100_count_requested": 1, "baremetal_gpu_h200_count_requested": 1, "baremetal_gpu_l40s_count_requested": 1, "baremetal_hf_count_requested": 1, "baremetal_infrastructure_count_requested": 1, "baremetal_network_count_requested": 1, "baremetal_storage_count_requested": 1, "caas_container_count_requested": 1, "caas_cpu_count_requested": 1, "caas_gpu_count_requested": 1, "caas_ram_size_requested": 1, "cluster_count_requested": 1, "cpu_count_requested": 1, "dbaas_postgres_cluster_count_requested": 1, "external_ip_count_requested": 1, "faas_cpu_count_requested": 1, "faas_function_count_requested": 1, "faas_namespace_count_requested": 1, "faas_ram_size_requested": 1, "firewall_count_requested": 1, "floating_count_requested": 1, "gpu_count_requested": 1, "gpu_virtual_a100_count_requested": 1, "gpu_virtual_h100_count_requested": 1, "gpu_virtual_h200_count_requested": 1, "gpu_virtual_l40s_count_requested": 1, "image_count_requested": 1, "image_size_requested": 1, "ipu_count_requested": 1, "laas_topic_count_requested": 1, "loadbalancer_count_requested": 1, "network_count_requested": 1, "ram_requested": 1, "registry_count_requested": 1, "registry_storage_requested": 1, "router_count_requested": 1, "secret_count_requested": 1, "servergroup_count_requested": 1, "sfs_count_requested": 1, "sfs_size_requested": 1, "shared_vm_count_requested": 1, "snapshot_schedule_count_requested": 1, "subnet_count_requested": 1, "vm_count_requested": 1, "volume_count_requested": 1, "volume_size_requested": 1, "volume_snapshots_count_requested": 1, "volume_snapshots_size_requested": 1, "baremetal_basic_count_limit": 0, "baremetal_basic_count_usage": 0, "baremetal_gpu_a100_count_limit": 0, "baremetal_gpu_a100_count_usage": 
          0, "baremetal_gpu_h100_count_limit": 0, "baremetal_gpu_h100_count_usage": 0, "baremetal_gpu_h200_count_limit": 0, "baremetal_gpu_h200_count_usage": 0, "baremetal_gpu_l40s_count_limit": 0, "baremetal_gpu_l40s_count_usage": 0, "baremetal_hf_count_limit": 0, "baremetal_hf_count_usage": 0, "baremetal_infrastructure_count_limit": 0, "baremetal_infrastructure_count_usage": 0, "baremetal_network_count_limit": 0, "baremetal_network_count_usage": 0, "baremetal_storage_count_limit": 0, "baremetal_storage_count_usage": 0, "caas_container_count_limit": 0, "caas_container_count_usage": 0, "caas_cpu_count_limit": 0, "caas_cpu_count_usage": 0, "caas_gpu_count_limit": 0, "caas_gpu_count_usage": 0, "caas_ram_size_limit": 0, "caas_ram_size_usage": 0, "cluster_count_limit": 0, "cluster_count_usage": 0, "cpu_count_limit": 0, "cpu_count_usage": 0, "dbaas_postgres_cluster_count_limit": 0, "dbaas_postgres_cluster_count_usage": 0, "external_ip_count_limit": 0, "external_ip_count_usage": 0, "faas_cpu_count_limit": 0, "faas_cpu_count_usage": 0, "faas_function_count_limit": 0, "faas_function_count_usage": 0, "faas_namespace_count_limit": 0, "faas_namespace_count_usage": 0, "faas_ram_size_limit": 0, "faas_ram_size_usage": 0, "firewall_count_limit": 0, "firewall_count_usage": 0, "floating_count_limit": 0, "floating_count_usage": 0, "gpu_count_limit": 0, "gpu_count_usage": 0, "gpu_virtual_a100_count_limit": 0, "gpu_virtual_a100_count_usage": 0, "gpu_virtual_h100_count_limit": 0, "gpu_virtual_h100_count_usage": 0, "gpu_virtual_h200_count_limit": 0, "gpu_virtual_h200_count_usage": 0, "gpu_virtual_l40s_count_limit": 0, "gpu_virtual_l40s_count_usage": 0, "image_count_limit": 0, "image_count_usage": 0, "image_size_limit": 0, "image_size_usage": 0, "ipu_count_limit": 0, "ipu_count_usage": 0, "laas_topic_count_limit": 0, "laas_topic_count_usage": 0, "loadbalancer_count_limit": 0, "loadbalancer_count_usage": 0, "network_count_limit": 0, "network_count_usage": 0, "ram_limit": 0, "ram_usage": 0, "registry_count_limit": 0, "registry_count_usage": 0, "registry_storage_limit": 0, "registry_storage_usage": 0, "router_count_limit": 0, "router_count_usage": 0, "secret_count_limit": 0, "secret_count_usage": 0, "servergroup_count_limit": 0, "servergroup_count_usage": 0, "sfs_count_limit": 0, "sfs_count_usage": 0, "sfs_size_limit": 0, "sfs_size_usage": 0, "shared_vm_count_limit": 0, "shared_vm_count_usage": 0, "snapshot_schedule_count_limit": 0, "snapshot_schedule_count_usage": 0, "subnet_count_limit": 0, "subnet_count_usage": 0, "vm_count_limit": 0, "vm_count_usage": 0, "volume_count_limit": 0, "volume_count_usage": 0, "volume_size_limit": 0, "volume_size_usage": 0, "volume_snapshots_count_limit": 0, "volume_snapshots_count_usage": 0, "volume_snapshots_size_limit": 0, "volume_snapshots_size_usage": 0}}
    SchemaFilterInstanceSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterInstanceEnum", "description": "Field name to filter by", "examples": ["flavor"]}, "type": {"const": "instance", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["g1-standard-1-2"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterInstanceSerializer", "type": "object"}
    ClusterInstanceVolumesList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/ClusterInstanceVolume"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ClusterInstanceVolumesList", "type": "object"}
    CreateScheduleSerializer: {"description": "List of schedules associated with the policy. If the schedule made '`max_quantity`' snapshots, a new snapshot will be created in time, but the oldest from the schedule`s snapshots will be deleted. If '`retention_time`' was set and the schedule`s snapshots will be delete after the specified period of time. In `resource_name_template` you can use such forms that will then be automatically filled in with values: '{`volume_id`}', '{`schedule_id`}', '{`lifecycle_policy_id`}', '{`datetime_utc`}', '{`local_datetime`}'.", "discriminator": {"mapping": {"cron": "#/components/schemas/CreateCronScheduleSerializer", "interval": "#/components/schemas/CreateIntervalScheduleSerializer"}, "propertyName": "type"}, "title": "CreateScheduleSerializer", "anyOf": ["$ref": "#/components/schemas/CreateCronScheduleSerializer", "$ref": "#/components/schemas/CreateIntervalScheduleSerializer"]}
    RebuildBaremetalSerializer: {"properties": {"image_id": {"description": "Image ID", "examples": ["b5b4d65d-945f-4b98-ab6f-332319c724ef"], "title": "Image Id", "type": "string"}, "user_data": {"description": "String in base64 format. Must not be passed together with 'username' or 'password'. Examples of the `user_data`: https://cloudinit.readthedocs.io/en/latest/topics/examples.html", "examples": ["aGVsbG9fd29ybGQ="], "title": "User Data", "type": "string"}}, "title": "RebuildBaremetalSerializer", "type": "object"}
    UploadBaremetalGpuImageSerializer: {"properties": {"architecture": {"anyOf": ["$ref": "#/components/schemas/ImageArchitectureTypeEnum", "type": "null"], "default": "x86_64", "description": "Image architecture type: aarch64, `x86_64`", "examples": ["x86_64"]}, "cow_format": {"default": false, "description": "When True, image cannot be deleted unless all volumes, created from it, are deleted.", "examples": [true], "title": "Cow Format", "type": "boolean"}, "hw_firmware_type": {"anyOf": ["$ref": "#/components/schemas/ImageHwFirmwareTypeEnum", "type": "null"], "default": null, "description": "Specifies the type of firmware with which to boot the guest.", "examples": ["bios"]}, "name": {"description": "Image name", "examples": ["ubuntu-23.10-x64"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "os_distro": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "OS Distribution, i.e. Debian, CentOS, Ubuntu, CoreOS etc.", "title": "Os Distro"}, "os_type": {"anyOf": ["$ref": "#/components/schemas/ImageOsTypeEnum", "type": "null"], "default": "linux", "description": "The operating system installed on the image. Linux by default", "examples": ["linux"]}, "os_version": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "OS version, i.e. 19.04 (for Ubuntu) or 9.4 for Debian", "examples": ["19.04"], "title": "Os Version"}, "ssh_key": {"$ref": "#/components/schemas/SshKeyEnum", "default": "allow", "description": "Permission to use a ssh key in instances", "examples": ["allow"]}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "url": {"anyOf": [{"format": "uri", "minLength": 1, "type": "string"}, "type": "string"], "description": "Image URL", "examples": ["http://mirror.noris.net/cirros/0.4.0/cirros-0.4.0-x86_64-disk.img"], "title": "Url"}}, "required": ["url", "name"], "title": "UploadBaremetalGpuImageSerializer", "type": "object"}
    VolumeOrSnapshotPricingRequestSerializer: {"examples": [{"size": 1000, "source": "new-volume", "type_name": "standard"}], "properties": {"size": {"anyOf": [{"maximum": 102400, "minimum": 1, "type": "integer"}, "type": "null"], "default": null, "description": "Volume size in GiB", "title": "Size"}, "snapshot_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Snapshot ID", "title": "Snapshot Id"}, "source": {"$ref": "#/components/schemas/CreateVolumeSource", "description": "One of new-volume, image, snapshot"}, "type_name": {"anyOf": ["$ref": "#/components/schemas/VolumeTypeName", "type": "null"], "default": null, "description": "One of high iops ssd, standard, cold, ultra, ssd low-latency"}}, "required": ["source"], "title": "VolumeOrSnapshotPricingRequestSerializer", "type": "object"}
    HighAvailabilityOptions: {"properties": {"replication_mode": {"$ref": "#/components/schemas/ReplicationMode", "description": "Type of replication", "examples": ["sync", "async"]}}, "required": ["replication_mode"], "title": "HighAvailabilityOptions", "type": "object"}
    TaskCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/TaskSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "TaskCollectionSerializer", "type": "object"}
    ResourceLoadBalancerSerializer: {"description": "These properties are common for all individual load balancers\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["lb1-1-2_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the load balancer", "examples": ["lb1-1-2"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the load balancer", "examples": ["load_balancer_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "load_balancer", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the load balancer", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "first_seen", "last_seen", "project_id", "last_name", "uuid", "tags"], "title": "ResourceLoadBalancerSerializer", "type": "object"}
    SnapshotCollectionSerializer: {"properties": {}, "title": "SnapshotCollectionSerializer", "type": "object"}
    NetworkPortFixedIp: {"properties": {"ip_address": {"description": "IP address", "examples": ["127.0.0.1"], "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "subnet_id": {"description": "Subnet UUID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}, "required": ["ip_address", "subnet_id"], "title": "NetworkPortFixedIp", "type": "object"}
    GetIntervalScheduleSerializer: {"properties": {"days": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Number of days to wait", "examples": [0], "title": "Days"}, "hours": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Number of hours to wait", "examples": [2], "title": "Hours"}, "id": {"description": "Schedule ID", "examples": ["1488e2ce-f906-47fb-ba32-c25a3f63df4f"], "title": "Id", "type": "string"}, "max_quantity": {"description": "Number of stored resources.", "examples": [2], "exclusiveMinimum": 0, "maximum": 10000, "title": "Max Quantity", "type": "integer"}, "minutes": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Number of minutes to wait", "examples": [1], "title": "Minutes"}, "owner": {"description": "Schedule owner", "examples": ["lifecycle_policy"], "title": "Owner", "type": "string"}, "owner_id": {"description": "Owner ID", "examples": [1], "title": "Owner Id", "type": "integer"}, "resource_name_template": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Template for resource names", "examples": ["reserve snap of the volume {volume_id}"], "title": "Resource Name Template"}, "retention_time": {"anyOf": ["$ref": "#/components/schemas/RetentionTimeSerializer", "type": "null"], "description": "Time after which the resource will be deleted"}, "type": {"const": "interval", "description": "Schedule type", "examples": ["interval"], "title": "Type", "type": "string"}, "user_id": {"description": "User ID", "examples": [12], "title": "User Id", "type": "integer"}, "weeks": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Number of weeks to wait", "examples": [0], "title": "Weeks"}}, "required": ["id", "owner", "owner_id", "user_id", "max_quantity", "retention_time", "type"], "title": "GetIntervalScheduleSerializer", "type": "object"}
    RemoveScheduleSerializer: {"properties": {"schedule_ids": {"description": "List of schedule IDs.", "examples": [["1488e2ce-f906-47fb-ba32-c25a3f63df4f"]], "items": {"type": "string"}, "title": "Schedule Ids", "type": "array"}}, "required": ["schedule_ids"], "title": "RemoveScheduleSerializer", "type": "object"}
    LifecyclePolicyStatusesEnum: {"enum": ["active", "paused"], "title": "LifecyclePolicyStatusesEnum", "type": "string"}
    L7RuleSchema: {"type": "object", "properties": {"compare_type": {"type": "string", "enum": ["CONTAINS", "ENDS_WITH", "EQUAL_TO", "REGEX", "STARTS_WITH"], "readOnly": true, "description": "The comparison type for the L7 rule"}, "id": {"type": "string", "readOnly": true, "description": "L7Rule ID"}, "invert": {"type": "boolean", "readOnly": true, "description": "When true the logic of the rule is inverted. For example, with invert true, 'equal to' would become 'not equal to'. Default is false."}, "key": {"type": "string", "readOnly": true, "description": "The key to use for the comparison. For example, the name of the cookie to evaluate."}, "operating_status": {"type": "string", "enum": ["DEGRADED", "DRAINING", "ERROR", "NO_MONITOR", "OFFLINE", "ONLINE"], "readOnly": true, "description": "L7 policy operating status"}, "project_id": {"type": "integer", "readOnly": true, "description": "Project ID"}, "provisioning_status": {"type": "string", "enum": ["ACTIVE", "DELETED", "ERROR", "PENDING_CREATE", "PENDING_DELETE", "PENDING_UPDATE"], "readOnly": true}, "region": {"type": "string", "readOnly": true, "description": "Region name"}, "region_id": {"type": "integer", "readOnly": true, "description": "Region ID"}, "tags": {"type": "array", "readOnly": true, "description": "A list of simple strings assigned to the l7 rule", "items": {"type": "string"}}, "task_id": {"type": "string", "readOnly": true, "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked."}, "type": {"type": "string", "enum": ["COOKIE", "FILE_TYPE", "HEADER", "HOST_NAME", "PATH", "SSL_CONN_HAS_CERT", "SSL_DN_FIELD", "SSL_VERIFY_RESULT"], "readOnly": true, "description": "The L7 rule type"}, "value": {"type": "string", "readOnly": true, "description": "The value to use for the comparison. For example, the file type to compare."}}, "description": "L7Rule schema\nAll the rules associated with a given policy are logically ANDed together. A request must match all the policyâ€™s rules to match the policy. If you need to express a logical OR operation between rules, then do this by creating multiple policies with the same action.", "example": {"compare_type": "STARTS_WITH", "created_at": "2020-11-16T13:48:25+0000", "id": "0ca7bebd-7a54-4977-bca7-e4ac1e612ec7", "invert": false, "key": "key", "operating_status": "ONLINE", "project_id": 1, "provisioning_status": "ACTIVE", "region": "Luxembourg", "region_id": 1, "tags": ["test_tag"], "type": "PATH", "updated_at": "2020-11-16T13:48:26+0000", "value": "/images*"}}
    AppDeployment: {"properties": {"api_keys": {"description": "List of API keys for the application", "examples": [["key1", "key2"]], "items": {"type": "string"}, "title": "Api Keys", "type": "array"}, "application_name": {"description": "Identifier of the application template from the catalog", "title": "Application Name", "type": "string"}, "components_configuration": {"additionalProperties": {"$ref": "#/components/schemas/ComponentConfiguration"}, "description": "Mapping of component names to their configuration (e.g., `\"model\": {...}`)", "title": "Components Configuration", "type": "object"}, "name": {"description": "Unique identifier of the deployment", "title": "Name", "type": "string"}, "regions": {"description": "Geographical regions where the deployment is active", "examples": [[1, 2]], "items": {"type": "integer"}, "title": "Regions", "type": "array"}, "status": {"$ref": "#/components/schemas/Status", "description": "Current state of the deployment across regions"}}, "required": ["application_name", "name", "api_keys", "regions", "components_configuration", "status"], "title": "AppDeployment", "type": "object"}
    TotalAiVirtualClusterReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["g3-ai-32-192-1500-l40s-48-1_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "flavor": {"description": "Flavor of the Virtual GPU cluster", "examples": ["g3-ai-32-192-1500-l40s-48-1"], "title": "Flavor", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "ai_virtual_cluster", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor"], "title": "TotalAiVirtualClusterReportItemSerializer", "type": "object"}
    DDosPricingPreviewResponseSerializer: {"examples": [{"current_month_days": 31, "current_month_days_last": 26, "next_month_days": 30, "price": {"feature_name": "Advanced DDoS Protection Bare-metal Servers", "period": "day", "price_currency": "EUR", "price_per_30d": 60, "price_per_day": 2, "price_per_hour": 0.08333333333333333, "unit_name": "PC", "unit_size": 1}}], "properties": {"current_month_days": {"description": "Number of days in the current month", "title": "Current Month Days", "type": "integer"}, "current_month_days_last": {"description": "Number of days left in the current month", "title": "Current Month Days Last", "type": "integer"}, "next_month_days": {"description": "Number of days in the next month", "title": "Next Month Days", "type": "integer"}, "price": {"$ref": "#/components/schemas/DDosPriceDetailsSerializer", "description": "DDoS protection price details"}}, "required": ["price", "current_month_days_last", "current_month_days", "next_month_days"], "title": "DDosPricingPreviewResponseSerializer", "type": "object"}
    NotFoundErrorSchema: {"type": "object", "description": "Resource was not found", "properties": {"exception_class": {"type": "string", "description": "NotFoundError"}, "message": {"type": "string", "description": "Description what was not found"}, "request_id": {"type": "string", "description": "Request ID, if logging is not in debug mode"}}, "example": {"exception_class": "NotFoundError", "message": "keypair not found", "request_id": "4e3e63f3-4f2a-4720-bf18-2a1986531b87"}}
    UserActionsSubscriptionMqCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/UserActionSubscriptionMqSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "UserActionsSubscriptionMqCollectionSerializer", "type": "object"}
    SchemaFilterLogIndexEnum: {"enum": ["last_name", "last_size", "type", "uuid"], "title": "SchemaFilterLogIndexEnum", "type": "string"}
    ListProjectsSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/ProjectSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListProjectsSerializer", "type": "object"}
    ResizeAIClusterGPUSerializerV1: {"properties": {"instances_count": {"description": "Resized (total) number of instances", "minimum": 1, "title": "Instances Count", "type": "integer"}}, "required": ["instances_count"], "title": "ResizeAIClusterGPUSerializerV1", "type": "object"}
    CreateL7PolicySchema: {"type": "object", "properties": {"action": {"type": "string", "enum": ["REDIRECT_PREFIX", "REDIRECT_TO_POOL", "REDIRECT_TO_URL", "REJECT"], "description": "Action"}, "listener_id": {"type": "string", "description": "Listener ID"}, "name": {"type": "string", "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "description": "Human-readable name of the policy"}, "position": {"type": "integer", "description": "The position of this policy on the listener. Positions start at 1."}, "redirect_http_code": {"type": "integer", "description": "Requests matching this policy will be redirected to the specified URL or Prefix URL with the HTTP response code. Valid if action is `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are 301, 302, 303, 307, or 308. Default is 302."}, "redirect_pool_id": {"type": "string", "description": "Requests matching this policy will be redirected to the pool withthis ID. Only valid if action is `REDIRECT_TO_POOL`."}, "redirect_prefix": {"type": "string", "description": "Requests matching this policy will be redirected to this Prefix URL. Only valid if action is `REDIRECT_PREFIX`."}, "redirect_url": {"type": "string", "description": "Requests matching this policy will be redirected to this URL. Only valid if action is `REDIRECT_TO_URL`."}, "tags": {"type": "array", "description": "A list of simple strings assigned to the resource.", "items": {"type": "string"}}}, "required": ["action", "listener_id"], "description": "CreateL7Policy schema", "example": {"action": "REDIRECT_TO_URL", "listener_id": "023f2e34-7806-443b-bfae-16c324569a3d", "name": "redirect-example.com", "position": 1, "redirect_http_code": 301, "redirect_url": "http://www.example.com", "tags": ["test_tag"]}}
    ServerGroupSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/ServerGroupSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[ServerGroupSerializer]", "type": "object"}
    SchemaFilterVolumeEnum: {"enum": ["attached_to_vm", "last_name", "last_size", "type", "uuid", "volume_type"], "title": "SchemaFilterVolumeEnum", "type": "string"}
    TotalEgressTrafficReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["egress_traffic_baremetal_gbs"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "bytes", "description": "Unit of billing value", "examples": ["bytes"], "title": "Billing Value Unit", "type": "string"}, "instance_type": {"$ref": "#/components/schemas/EgressTrafficInstanceType", "description": "Type of the instance", "examples": ["baremetal"]}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "egress_traffic", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "instance_type"], "title": "TotalEgressTrafficReportItemSerializer", "type": "object"}
    AllClientQuotasSerializer: {"properties": {"global_quotas": {"$ref": "#/components/schemas/GlobalQuotasSerializer", "description": "Global entity quotas"}, "regional_quotas": {"description": "Regional entity quotas. Only contains initialized quotas.", "items": {"$ref": "#/components/schemas/RegionalQuotasSerializer"}, "title": "Regional Quotas", "type": "array"}}, "title": "Global and regional quotas of the client.", "type": "object"}
    VirtualClusterSerializer: {"properties": {"created_at": {"description": "Cluster creation date time", "examples": ["2024-12-31T23:59:59Z"], "format": "date-time", "title": "Created At", "type": "string"}, "flavor": {"description": "Cluster flavor name", "examples": ["g3-ai-32-192-1500-l40s-48-1"], "title": "Flavor", "type": "string"}, "id": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Id", "type": "string"}, "name": {"description": "Cluster name", "examples": ["my virtual gpu cluster"], "title": "Name", "type": "string"}, "servers_count": {"description": "Cluster servers count", "examples": [2], "title": "Servers Count", "type": "integer"}, "servers_ids": {"description": "List of cluster nodes", "examples": [["b4522653-fbcd-44a0-a949-541570a52281", "e56192de-ed28-452a-b775-eeeacc795e3b"]], "items": {"format": "uuid4", "type": "string"}, "title": "Servers Ids", "type": "array"}, "servers_settings": {"$ref": "#/components/schemas/VirtualServerSettingsOutputSerializer"}, "status": {"$ref": "#/components/schemas/GPUClusterStatus", "description": "Cluster status", "examples": ["active"]}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "updated_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "description": "Cluster update date time", "examples": ["2025-01-11T23:59:59Z"], "title": "Updated At"}}, "required": ["id", "name", "status", "flavor", "tags", "servers_count", "created_at", "updated_at", "servers_ids", "servers_settings"], "title": "VirtualClusterSerializer", "type": "object"}
    RawMetadataSerializer: {"additionalProperties": true, "description": "Serializer used for accepting user's input.\nAny field is valid for this serializer except for read-only or internal (issued by regular user) keys.", "examples": [{"cost-center": "Atlanta", "data-center": "A"}], "properties": {}, "title": "RawMetadataSerializer", "type": "object"}
    CreateSecretSerializer: {"properties": {"algorithm": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Metadata provided by a user or system for informational purposes.", "examples": ["aes"], "title": "Algorithm"}, "bit_length": {"anyOf": [{"exclusiveMinimum": 0, "type": "integer"}, "type": "null"], "default": null, "description": "Metadata provided by a user or system for informational purposes. Value must be greater than zero.", "examples": [256], "title": "Bit Length"}, "expiration": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Datetime when the secret will expire.", "examples": ["2025-12-28T19:14:44.180394"], "title": "Expiration"}, "mode": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Metadata provided by a user or system for informational purposes.", "examples": ["cbc"], "title": "Mode"}, "name": {"description": "Secret name", "examples": ["AES key"], "title": "Name", "type": "string"}, "payload": {"description": "Secret payload. For HTTPS-terminated load balancing, provide base64 encoded conents of a PKCS12 file. The PKCS12 file is the combined TLS certificate, key, and intermediate certificate chain obtained from an external certificate authority. The file can be created via openssl, e.g.'openssl pkcs12 -export -inkey server.key -in server.crt -certfile ca-chain.crt -passout pass: -out server.p12'The key and certificate should be PEM-encoded, and the intermediate certificate chain should be multiple PEM-encoded certs concatenated together", "examples": ["aGVsbG8sIHRlc3Qgc3RyaW5nCg=="], "format": "password", "title": "Payload", "type": "string", "writeOnly": true}, "payload_content_encoding": {"$ref": "#/components/schemas/PayloadContentEncoding", "description": "The encoding used for the payload to be able to include it in the JSON request. Currently only base64 is supported", "examples": ["base64"]}, "payload_content_type": {"description": "The media type for the content of the payload", "examples": ["application/octet-stream"], "title": "Payload Content Type", "type": "string"}, "secret_type": {"$ref": "#/components/schemas/SecretTypesEnum", "description": "Secret type. symmetric - Used for storing byte arrays such as keys suitable for symmetric encryption; public - Used for storing the public key of an asymmetric keypair; private - Used for storing the private key of an asymmetric keypair; passphrase - Used for storing plain text passphrases; certificate - Used for storing cryptographic certificates such as X.509 certificates; opaque - Used for backwards compatibility with previous versions of the API", "examples": ["certificate"]}}, "required": ["name", "payload", "payload_content_encoding", "payload_content_type", "secret_type"], "title": "CreateSecretSerializer", "type": "object"}
    SessionPersistenceTypeEnum: {"enum": ["APP_COOKIE", "HTTP_COOKIE", "SOURCE_IP"], "title": "SessionPersistenceTypeEnum", "type": "string"}
    BmReservationFlavorSchemaList: {"type": "object", "properties": {"count": {"type": "integer", "description": "Number of objects"}, "results": {"type": "array", "description": "Objects", "items": {"$ref": "#/components/schemas/BmReservationFlavorSchema"}}}, "example": {"count": 1, "results": [{"flavor_id": "g1-gpu-1-2-1", "flavor_name": "g1-gpu-1-2-1", "disabled": false, "hardware_description": {"gpu": "1x NVIDIA 11GB"}, "ram": 2048, "vcpus": 1, "activity_period": "month", "activity_period_length": [12, 36], "available_count": 23}]}}
    ContainerInUpdateSerializerV3: {"properties": {"region_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Region id for the container", "title": "Region Id"}, "scale": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleUpdateSerializerV3", "type": "null"], "description": "Scale for the container", "examples": [{"max": 3, "min": 1}]}}, "required": ["region_id", "scale"], "title": "ContainerInUpdateSerializerV3", "type": "object"}
    CreateRouterInterfaceSubnetSerializer: {"properties": {"subnet_id": {"description": "id of the subnet to attach to.", "examples": ["3d1e9779-b8ad-4c8e-a1a4-0a03671f07f5"], "format": "uuid4", "title": "Subnet Id", "type": "string"}, "type": {"const": "subnet", "default": "subnet", "description": "must be 'subnet'.", "examples": ["subnet"], "title": "Type", "type": "string"}}, "required": ["subnet_id"], "title": "CreateRouterInterfaceSubnetSerializer", "type": "object"}
    AIClusterFlavorWithPriceSerializer: {"properties": {"capacity": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Number of available instances of given configuration", "examples": [10], "title": "Capacity"}, "currency_code": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Currency code. Shown if the `include_prices` query parameter if set to true", "examples": ["USD"], "title": "Currency Code"}, "disabled": {"description": "Disabled flavor flag", "examples": [false], "title": "Disabled", "type": "boolean"}, "flavor_id": {"description": "Flavor ID is the same as the name", "examples": ["bm3-ai-1xlarge-h100-80-8"], "title": "Flavor Id", "type": "string"}, "flavor_name": {"description": "Flavor name", "examples": ["bm3-ai-1xlarge-h100-80-8"], "title": "Flavor Name", "type": "string"}, "hardware_description": {"$ref": "#/components/schemas/FlavorHardwareDescriptionSerializer", "description": "Additional hardware description."}, "price_per_hour": {"anyOf": ["type": "number", "type": "integer", "type": "null"], "default": null, "description": "Price per hour. Shown if the `include_prices` query parameter if set to true", "examples": [1], "title": "Price Per Hour"}, "price_per_month": {"anyOf": ["type": "number", "type": "integer", "type": "null"], "default": null, "description": "Price per month. Shown if the `include_prices` query parameter if set to true", "examples": [720], "title": "Price Per Month"}, "price_status": {"anyOf": ["$ref": "#/components/schemas/PriceDisplayStatus", "type": "null"], "default": null, "description": "Price status for the UI", "examples": ["show"]}, "resource_class": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Flavor resource class for mapping to hardware capacity", "examples": ["bm3-ai-1xlarge-h100-80-8"], "title": "Resource Class"}}, "required": ["flavor_id", "flavor_name", "disabled", "hardware_description"], "title": "AI Flavor Object", "type": "object"}
    LbFlavorPricingCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/LbFlavorPricingSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "LbFlavorPricingCollectionSerializer", "type": "object"}
    DetailedLoadBalancerPricingSerializer: {"description": "Pricing schema with detailed prices per category.", "examples": [{"external_ip": 14.4, "flavor": 576, "floating_ip": 36}], "properties": {"external_ip": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of external/public IP over the specified period of time.", "examples": [14.4], "title": "External Ip"}, "flavor": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of load balancer over the specified period of time.", "examples": [576], "title": "Flavor"}, "floating_ip": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of floating IP over the specified period of time.", "examples": [36], "title": "Floating Ip"}}, "title": "DetailedLoadBalancerPricingSerializer", "type": "object"}
    TotalDBAASPostgreSQLPoolerWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Managed PostgreSQL Connection Pooler - Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_public_network_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_connection_pooler", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalDBAASPostgreSQLPoolerWithCostSerializer", "type": "object"}
    BillingReservationPricingResponseSerializer: {"properties": {"activity_period": {"description": "Description using period for calc slices [`year`, `month`, `day`]", "title": "Activity Period", "type": "string"}, "activity_period_length": {"description": "Length of the full reservation period by `activity_period`", "title": "Activity Period Length", "type": "integer"}, "amount_prices": {"$ref": "#/components/schemas/BillingReservationAmountPricesResponseSerializer"}, "price_status": {"$ref": "#/components/schemas/PriceDisplayStatus"}, "region_id": {"title": "Region Id", "type": "integer"}, "region_name": {"title": "Region Name", "type": "string"}, "resources": {"items": {"$ref": "#/components/schemas/BillingReservationResourcePricesResponseSerializer"}, "title": "Resources", "type": "array"}}, "required": ["region_name", "region_id", "price_status", "activity_period", "activity_period_length", "resources", "amount_prices"], "title": "BillingReservationPricingResponseSerializer", "type": "object"}
    LifecyclePolicyUsageSerializer: {"properties": {"max_cost": {"$ref": "#/components/schemas/ItemPriceResponseSerializer", "description": "Total billed cost of all snapshots that can be created by the schedule. Cost of `max_volume_snapshot_count_usage` snapshots."}, "max_volume_snapshot_count_usage": {"description": "Count of snapshots that can be created if the schedule creates the maximum possible number of snapshots.", "examples": [2], "title": "Max Volume Snapshot Count Usage", "type": "integer"}, "max_volume_snapshot_sequence_length": {"description": "Maximum volume snapshot sequence length.", "examples": [2], "title": "Max Volume Snapshot Sequence Length", "type": "integer"}, "max_volume_snapshot_size_usage": {"description": "The amount of memory in GiB that snapshots will take up if the schedule creates the maximum possible number of them.", "examples": [20], "title": "Max Volume Snapshot Size Usage", "type": "integer"}}, "required": ["max_cost", "max_volume_snapshot_count_usage", "max_volume_snapshot_sequence_length", "max_volume_snapshot_size_usage"], "title": "LifecyclePolicyUsageSerializer", "type": "object"}
    ResourceLoadBalancerWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Load Balancer Type: lb1-1-1 (1vCPU/2GB RAM) Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["lb1-1-2_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the load balancer", "examples": ["lb1-1-2"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the load balancer", "examples": ["load_balancer_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "load_balancer", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the load balancer", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "first_seen", "last_seen", "project_id", "last_name", "uuid", "tags", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceLoadBalancerWithCostSerializer", "type": "object"}
    FunctionListSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/FunctionSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "FunctionListSerializer", "type": "object"}
    TaskState: {"enum": ["ERROR", "FINISHED", "NEW", "RUNNING"], "title": "TaskState", "type": "string"}
    InferenceInstanceProbesSerializerV2: {"additionalProperties": false, "properties": {"liveness_probe": {"anyOf": ["$ref": "#/components/schemas/InferenceInstanceContainerProbeConfigurationSerializerV2", "type": "null"], "description": "Liveness probe configuration"}, "readiness_probe": {"anyOf": ["$ref": "#/components/schemas/InferenceInstanceContainerProbeConfigurationSerializerV2", "type": "null"], "description": "Readiness probe configuration"}, "startup_probe": {"anyOf": ["$ref": "#/components/schemas/InferenceInstanceContainerProbeConfigurationSerializerV2", "type": "null"], "description": "Startup probe configuration"}}, "title": "InferenceInstanceProbesSerializerV2", "type": "object"}
    ResourceExternalIpSerializer: {"description": "These properties are common for all individual external IPs\nin all cost and usage reports results (but not in totals)", "properties": {"attached_to_vm": {"anyOf": [{"format": "uuid", "type": "string"}, "type": "null"], "description": "ID of the VM the IP is attached to", "title": "Attached To Vm"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["externalip_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "ip_address": {"description": "IP address", "examples": ["10.100.178.92"], "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "network_id": {"description": "ID of the network the IP is attached to", "format": "uuid", "title": "Network Id", "type": "string"}, "port_id": {"description": "ID of the port the IP is associated with", "format": "uuid", "title": "Port Id", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "subnet_id": {"description": "ID of the subnet the IP is attached to", "format": "uuid", "title": "Subnet Id", "type": "string"}, "type": {"const": "external_ip", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "port_id", "attached_to_vm", "network_id", "subnet_id", "ip_address"], "title": "ResourceExternalIpSerializer", "type": "object"}
    PostgresClusterOverviewSerializer: {"properties": {"cluster_name": {"maxLength": 50, "minLength": 1, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "title": "PostgreSQL server name", "type": "string"}, "created_at": {"format": "date-time", "title": "Created At", "type": "string"}, "databases": {"items": {"$ref": "#/components/schemas/DatabaseOverview"}, "title": "Databases", "type": "array"}, "flavor": {"$ref": "#/components/schemas/Flavor", "description": "Instance RAM and CPU"}, "high_availability": {"anyOf": ["$ref": "#/components/schemas/HighAvailabilityOptions", "type": "null"], "title": "HA settings"}, "network": {"$ref": "#/components/schemas/PublicNetworkOut", "title": "Network"}, "pg_server_configuration": {"$ref": "#/components/schemas/PostgreSQLServerConfig", "description": "Main PG configuration"}, "status": {"$ref": "#/components/schemas/ClusterStatus", "description": "Current cluster status"}, "storage": {"$ref": "#/components/schemas/Storage", "description": "PG's storage configuration"}, "users": {"items": {"$ref": "#/components/schemas/PgUserOverview"}, "title": "Users", "type": "array"}}, "required": ["cluster_name", "network", "high_availability", "flavor", "storage", "pg_server_configuration", "created_at", "status", "databases", "users"], "title": "PostgresClusterOverviewSerializer", "type": "object"}
    BillingReservationStatusByName: {"enum": ["ACTIVATED", "APPROVED", "COPIED", "CREATED", "EXPIRED", "REJECTED", "RESERVED", "WAITING_FOR_PAYMENT"], "title": "BillingReservationStatusByName", "type": "string"}
    LifecyclePolicySerializer: {"properties": {"action": {"description": "Action associated with the lifecycle policy.", "examples": ["volume_snapshot"], "title": "Action", "type": "string"}, "id": {"description": "Unique identifier for the policy.", "examples": [1], "title": "Id", "type": "integer"}, "name": {"description": "Name of the policy.", "examples": ["schedule_1"], "title": "Name", "type": "string"}, "project_id": {"description": "Project ID associated with the policy.", "examples": [1], "title": "Project Id", "type": "integer"}, "region_id": {"description": "Region ID where the policy is applied.", "examples": [1], "title": "Region Id", "type": "integer"}, "schedules": {"description": "List of schedules within the policy.", "items": {"$ref": "#/components/schemas/ScheduleSerializer"}, "title": "Schedules", "type": "array"}, "status": {"$ref": "#/components/schemas/LifecyclePolicyStatusesEnum", "description": "Status of the lifecycle policy.", "examples": ["active"]}, "user_id": {"description": "User ID of the creator of the policy.", "examples": [11], "title": "User Id", "type": "integer"}, "volumes": {"description": "Data of volumes that should be reserved. Displayed only when the query parameter is specified.", "examples": [[{"volume_id": "3ed9e2ce-f906-47fb-ba32-c25a3f63df4f", "volume_name": "test schedule"}]], "items": {"$ref": "#/components/schemas/VolumeDataForLifecyclePolicySerializer"}, "title": "Volumes", "type": "array"}}, "required": ["action", "id", "name", "project_id", "region_id", "schedules", "status", "user_id", "volumes"], "title": "LifecyclePolicySerializer", "type": "object"}
    K8sClusterCertificateV2Serializer: {"properties": {"certificate": {"description": "Cluster CA certificate", "title": "Certificate", "type": "string"}, "key": {"description": "Cluster CA private key", "title": "Key", "type": "string"}}, "required": ["certificate", "key"], "title": "K8sClusterCertificateV2Serializer", "type": "object"}
    CreateApiKeyResponseSerializer: {"properties": {"created_at": {"description": "Timestamp when the API Key was created.", "examples": ["2023-10-01T12:00:00Z"], "title": "Created At", "type": "string"}, "deployment_names": {"description": "List of inference deployment names to which this API Key has been attached.", "examples": [["inference-1", "inference-2"]], "items": {"type": "string"}, "title": "Deployment Names", "type": "array"}, "description": {"anyOf": ["type": "string", "type": "null"], "description": "Description of the API Key.", "examples": ["This key is used for accessing the inference service."], "title": "Description"}, "expires_at": {"anyOf": ["type": "string", "type": "null"], "description": "Timestamp when the API Key will expire.", "examples": ["2024-10-01T12:00:00Z"], "title": "Expires At"}, "name": {"description": "API Key name.", "examples": ["my-api-key"], "title": "Name", "type": "string"}, "secret": {"description": "The actual API Key secret.", "examples": ["qLyjWDarjtT1zdp7dc"], "title": "Secret", "type": "string"}}, "required": ["name", "description", "secret", "created_at", "expires_at", "deployment_names"], "title": "CreateApiKeyResponseSerializer", "type": "object"}
    SchemaFilterFunctionsCallsEnum: {"enum": ["last_name", "type", "uuid"], "title": "SchemaFilterFunctionsCallsEnum", "type": "string"}
    ResourceBaremetalSerializer: {"description": "These properties are common for all individual bare metal servers\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["bm2-hf-medium_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the bare metal server", "examples": ["bm2-hf-medium"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the bare metal server", "examples": ["baremetal_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "baremetal", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the bare metal server", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "first_seen", "last_seen", "project_id", "last_name", "uuid", "tags"], "title": "ResourceBaremetalSerializer", "type": "object"}
    ReservedFixedIPSerializer: {"properties": {"allowed_address_pairs": {"description": "Group of subnet masks and/or IP addresses that share the current IP as VIP", "examples": [[{"ip_address": "192.168.123.20", "mac_address": "00:16:3e:f2:87:16"}, {"ip_address": "192.168.0.2", "mac_address": "00:16:3e:f2:87:89"}]], "items": {"$ref": "#/components/schemas/AllowedAddressPairsSerializer"}, "title": "Allowed Address Pairs", "type": "array"}, "attachments": {"description": "Reserved fixed IP attachment entities", "examples": [[{"resource_id": "e3c6ee77-48cb-416b-b204-11b492cc776e3", "resource_type": "instance"}, {"resource_id": "e73a4dbd-da04-4b6e-8ef9-07e8742001b7", "resource_type": "ai_cluster"}]], "items": {"$ref": "#/components/schemas/AttachmentSerializer"}, "title": "Attachments", "type": "array"}, "created_at": {"description": "Datetime when the reserved fixed IP was created", "examples": ["2019-06-18T11:56:16+0000"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "Task that created this entity", "examples": ["30378aea-9343-4ff6-be38-9756094e05da"], "title": "Creator Task Id"}, "fixed_ip_address": {"anyOf": [{"format": "ipv4", "type": "string"}, "type": "null"], "default": null, "description": "IPv4 address of the reserved fixed IP", "examples": ["10.100.179.44"], "title": "Fixed Ip Address"}, "fixed_ipv6_address": {"anyOf": [{"format": "ipv6", "type": "string"}, "type": "null"], "default": null, "description": "IPv6 address of the reserved fixed IP", "examples": [null], "title": "Fixed Ipv6 Address"}, "is_external": {"description": "If reserved fixed IP belongs to a public network", "examples": [false], "title": "Is External", "type": "boolean"}, "is_vip": {"description": "If reserved fixed IP is a VIP", "examples": [false], "title": "Is Vip", "type": "boolean"}, "name": {"description": "Reserved fixed IP name", "examples": ["Reserved fixed ip 10.100.179.44"], "title": "Name", "type": "string"}, "network": {"$ref": "#/components/schemas/NetworkSerializer", "description": "Network details"}, "network_id": {"description": "ID of the network the port is attached to", "examples": ["eed97610-708d-43a5-a9a5-caebd2b7b4ee"], "format": "uuid4", "title": "Network Id", "type": "string"}, "port_id": {"description": "ID of the port underlying the reserved fixed IP", "examples": ["817c8a3d-bb67-4b88-a0d1-aec980318ff1"], "format": "uuid4", "title": "Port Id", "type": "string"}, "project_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Project ID", "examples": [1337], "title": "Project Id"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "reservation": {"$ref": "#/components/schemas/ReservationSerializer", "description": "Reserved fixed IP status with resource type and ID it is attached to"}, "status": {"description": "Underlying port status", "examples": ["DOWN"], "title": "Status", "type": "string"}, "subnet_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "ID of the subnet that owns the IP address", "examples": ["747db04a-2aac-4fda-9492-d9b85a798c09"], "title": "Subnet Id"}, "subnet_v6_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "ID of the subnet that owns the IPv6 address", "examples": [null], "title": "Subnet V6 Id"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "updated_at": {"description": "Datetime when the reserved fixed IP was last updated", "examples": ["2019-06-18T11:57:00+0000"], "format": "date-time",
          "title": "Updated At", "type": "string"}}, "required": ["region_id", "region", "port_id", "name", "created_at", "updated_at", "status", "network_id", "network", "is_external", "is_vip", "reservation", "allowed_address_pairs", "attachments"], "title": "ReservedFixedIPSerializer", "type": "object"}
    AddSchedulesSerializer: {"properties": {"schedules": {"description": "List of schedules associated with the policy.", "examples": [[{"day_of_week": "fri, tue", "hour": "0, 20", "max_quantity": 2, "minute": "30", "resource_name_template": "CRON reserve snap of the volume {volume_id}", "retention_time": {"weeks": 2}, "timezone": "UTC", "type": "cron"}, {"days": 0, "hours": 2, "max_quantity": 2, "minutes": 1, "resource_name_template": "INTERVAL reserve snap of the volume {volume_id}", "retention_time": {"days": 1}, "type": "interval", "weeks": 0}]], "items": {"$ref": "#/components/schemas/CreateScheduleSerializer"}, "title": "Schedules", "type": "array"}}, "required": ["schedules"], "title": "AddSchedulesSerializer", "type": "object"}
    LimitsRequestStatus: {"enum": ["done", "in progress", "rejected"], "title": "LimitsRequestStatus", "type": "string"}
    StopVirtualGPUClusterSerializer: {"properties": {"action": {"const": "stop", "description": "Action name", "examples": ["stop"], "title": "Action", "type": "string"}}, "required": ["action"], "title": "StopVirtualGPUClusterSerializer", "type": "object"}
    RegistryBatchUsersCreateSerializer: {"properties": {"users": {"description": "Set of users", "examples": [[{"duration": -1, "name": "user1", "read_only": false}]], "items": {"$ref": "#/components/schemas/RegistryUserCreateSerializer"}, "title": "Users", "type": "array"}}, "required": ["users"], "title": "RegistryBatchUsersCreateSerializer", "type": "object"}
    ListenerSerializer: {"properties": {"id": {"description": "Listener ID", "examples": ["43658ea9-54bd-4807-90b1-925921c9a0d1"], "format": "uuid4", "title": "Id", "type": "string"}}, "required": ["id"], "title": "ListenerSerializer", "type": "object"}
    InferenceFlavorOutSerializerV3: {"properties": {"cpu": {"description": "Inference flavor cpu count.", "examples": [2], "title": "Cpu", "type": "number"}, "description": {"description": "Inference flavor description.", "examples": ["1xL40S / 16 vCPU / 232GiB RAM"], "title": "Description", "type": "string"}, "gpu": {"description": "Inference flavor gpu count.", "examples": [1], "title": "Gpu", "type": "integer"}, "gpu_compute_capability": {"description": "Inference flavor gpu compute capability.", "examples": ["8.6"], "title": "Gpu Compute Capability", "type": "string"}, "gpu_memory": {"description": "Inference flavor gpu memory in Gi.", "examples": [80], "title": "Gpu Memory", "type": "number"}, "gpu_model": {"description": "Inference flavor gpu model.", "examples": ["H100"], "title": "Gpu Model", "type": "string"}, "is_gpu_shared": {"description": "Inference flavor is gpu shared.", "examples": [false], "title": "Is Gpu Shared", "type": "boolean"}, "memory": {"description": "Inference flavor memory in Gi.", "examples": [4], "title": "Memory", "type": "number"}, "name": {"description": "Inference flavor name.", "examples": ["inference-16vcpu-232gib-1xh100-80gb"], "title": "Name", "type": "string"}}, "required": ["name", "cpu", "memory", "gpu", "gpu_model", "gpu_memory", "is_gpu_shared", "gpu_compute_capability", "description"], "title": "InferenceFlavorOutSerializerV3", "type": "object"}
    PublicNetwork: {"properties": {"acl": {"description": "Allowed IPs and subnets for incoming traffic", "examples": [["92.33.34.127"]], "items": {"format": "ipvanyinterface", "type": "string"}, "title": "Acl", "type": "array"}, "network_type": {"const": "public", "description": "Network Type", "examples": ["public"], "title": "Network Type", "type": "string"}}, "required": ["network_type", "acl"], "title": "PublicNetwork", "type": "object"}
    BareMetalOrderByChoices: {"enum": ["created.asc", "created.desc", "name.asc", "name.desc", "status.asc", "status.desc"], "title": "BareMetalOrderByChoices", "type": "string"}
    ResourceDBAASPostgreSQLPoolerWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Managed PostgreSQL Connection Pooler - Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_public_network_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the cluster", "examples": ["cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_connection_pooler", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the cluster", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceDBAASPostgreSQLPoolerWithCostSerializer", "type": "object"}
    ChangeFunctionSerializer: {"properties": {"autoscaling": {"anyOf": ["$ref": "#/components/schemas/FaasAutoscalingSerializer", "type": "null"], "default": null, "description": "Autoscaling configuration for the function. Keys must be '`min_instances`' or '`max_instances`', and values must be integers between 0 and 50.", "examples": [{"max_instances": 5, "min_instances": 1}]}, "code_text": {"anyOf": [{"maxLength": 100000, "minLength": 1, "type": "string"}, "type": "null"], "default": null, "description": "Function code text.", "examples": ["def main():\n    return 'Hello World'"], "title": "Code Text"}, "dependencies": {"anyOf": [{"maxLength": 100000, "type": "string"}, "type": "null"], "default": null, "description": "Dependencies for the function to install.", "examples": ["numpy==1.21.0\npandas==1.3.0"], "title": "Dependencies"}, "description": {"anyOf": [{"maxLength": 255, "minLength": 0, "type": "string"}, "type": "null"], "default": null, "description": "Description of the function.", "examples": ["This is a sample function."], "title": "Description"}, "disabled": {"anyOf": ["type": "boolean", "type": "null"], "default": null, "description": "Set to true if the function is disabled.", "examples": [false], "title": "Disabled"}, "enable_api_key": {"anyOf": ["type": "boolean", "type": "null"], "default": null, "description": "Enable or disable API key authentication. Enable api key is temporarily disabled. As a result, using Functions with authorization is currently not supported.", "examples": [true], "title": "Enable Api Key"}, "envs": {"anyOf": [{"patternProperties": {"^[a-zA-Z_][a-zA-Z0-9_]*$": {"maxLength": 255, "minLength": 0, "type": "string"}}, "propertyNames": {"maxLength": 255, "minLength": 1}, "type": "object"}, "type": "null"], "default": null, "description": "Environment variables for the function. Keys must match a specific regex pattern and be 1-255 characters long, and values must be 0-255 characters long.", "examples": ["ENV_VAR": "value"], "title": "Envs"}, "flavor": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The name of the flavor associated with the function.", "examples": ["128m-128MB"], "title": "Flavor"}, "keys": {"anyOf": [{"items": {"pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "type": "string"}, "type": "array"}, "type": "null"], "default": null, "description": "List of used authentication API keys, matching a specific regex pattern.", "examples": [["key1", "key2"]], "title": "Keys"}, "main_method": {"anyOf": [{"maxLength": 100, "minLength": 1, "type": "string"}, "type": "null"], "default": null, "description": "The main startup method name.", "examples": ["run"], "title": "Main Method"}, "timeout": {"anyOf": [{"maximum": 180, "minimum": 0, "type": "integer"}, "type": "null"], "default": null, "description": "Function timeout in seconds.", "examples": [60], "title": "Timeout", "x-stainless-naming": {"python": {"method_argument": "api_timeout"}}}}, "title": "ChangeFunctionSerializer", "type": "object"}
    CaasApiKeyListSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/CaasApiKeySerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "CaasApiKeyListSerializer", "type": "object"}
    SshKeyEnum: {"enum": ["allow", "deny", "required"], "title": "SshKeyEnum", "type": "string"}
    FlavorConfiguration: {"properties": {"cpu": {"description": "Maximum available cores for instance", "examples": [1, 2], "minimum": 1, "title": "Cpu", "type": "integer"}, "memory_gib": {"description": "Maximum available RAM for instance", "examples": [1, 2], "minimum": 1, "title": "Memory Gib", "type": "integer"}, "pg_conf": {"examples": ["\nlisten_addresses = 'localhost'\nport = 5432\nmax_connections = 100\nshared_buffers = 128MB\nlogging_collector = on"], "title": "PG Conf for flavor", "type": "string"}}, "required": ["cpu", "memory_gib", "pg_conf"], "title": "FlavorConfiguration", "type": "object"}
    InstanceMetricsSerializer: {"description": "Instance metrics item", "properties": {"cpu_util": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "CPU utilization, % (max 100% for multi-core)", "examples": [8], "title": "Cpu Util"}, "disks": {"anyOf": [{"items": {"$ref": "#/components/schemas/DisksMetrics"}, "type": "array"}, "type": "null"], "default": null, "description": "Disks metrics for each of the disks attached", "examples": [[{"disk_Bps_read": 16384, "disk_Bps_write": 86016, "disk_iops_read": 3, "disk_iops_write": 12, "disk_name": "sda"}, {"disk_Bps_read": 163840, "disk_Bps_write": 860160, "disk_iops_read": 30, "disk_iops_write": 120, "disk_name": "sdb"}]], "title": "Disks"}, "memory_util": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "RAM utilization, %", "examples": [33.28411162695459], "title": "Memory Util"}, "network_Bps_egress": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Network out, bytes per second", "examples": [102], "title": "Network Bps Egress"}, "network_Bps_ingress": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Network in, bytes per second", "examples": [102], "title": "Network Bps Ingress"}, "network_pps_egress": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Network out, packets per second", "examples": [0.7], "title": "Network Pps Egress"}, "network_pps_ingress": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Network in, packets per second", "examples": [0.7], "title": "Network Pps Ingress"}, "time": {"description": "Timestamp", "examples": ["2020-07-07T12:57:00Z"], "title": "Time", "type": "string"}}, "required": ["time"], "title": "InstanceMetricsSerializer", "type": "object"}
    ClientProfileTemplateSerializer: {"properties": {"description": {"anyOf": ["type": "string", "type": "null"], "description": "Detailed description explaining the template's purpose and use cases", "examples": ["description"], "title": "Description"}, "fields": {"description": "List of configurable fields that define the template's protection parameters", "items": {"$ref": "#/components/schemas/ClientProfileTemplateFieldSerializer"}, "title": "Fields", "type": "array"}, "id": {"description": "Unique identifier for the DDoS protection template", "examples": [123], "title": "Id", "type": "integer"}, "name": {"description": "Human-readable name of the protection template", "examples": ["ICMP port"], "maxLength": 100, "title": "Name", "type": "string"}}, "required": ["id", "name", "description", "fields"], "title": "ClientProfileTemplateSerializer", "type": "object"}
    TotalImagesReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["image_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "image", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalImagesReportItemSerializer", "type": "object"}
    ProvisioningStatusEnum: {"enum": ["ACTIVE", "DELETED", "ERROR", "PENDING_CREATE", "PENDING_DELETE", "PENDING_UPDATE"], "title": "ProvisioningStatusEnum", "type": "string"}
    L7PolicyListSchema: {"type": "object", "properties": {"count": {"type": "integer", "description": "Number of objects"}, "results": {"type": "array", "description": "Objects", "items": {"$ref": "#/components/schemas/L7PolicySchema"}}}, "example": {"count": 1, "results": [{"action": "REDIRECT_TO_URL", "created_at": "2020-11-16T13:48:20+0000", "id": "9b4b9a23-ccac-4945-bcdd-b0e793c12cd9", "listener_id": "0388b5e5-3393-4aa8-a88a-dbcdcedf9970", "name": "redirect-example.com", "operating_status": "ONLINE", "position": 1, "project_id": 1, "provisioning_status": "ACTIVE", "redirect_http_code": 301, "redirect_pool_id": "00000000-0000-4000-8000-000000000000", "redirect_prefix": "prefix", "redirect_url": "http://www.example.com", "region": "Luxembourg", "region_id": 1, "rules": [{"compare_type": "STARTS_WITH", "created_at": "2020-11-16T13:48:25+0000", "id": "0ca7bebd-7a54-4977-bca7-e4ac1e612ec7", "invert": false, "key": "key", "operating_status": "ONLINE", "project_id": 1, "provisioning_status": "ACTIVE", "region": "Luxembourg", "region_id": 1, "tags": ["test_tag"], "type": "PATH", "updated_at": "2020-11-16T13:48:26+0000", "value": "/images*"}], "tags": ["test_tag"], "updated_at": "2020-11-16T13:48:26+0000"}]}}
    InferenceInstanceContainerProbeConfigurationSerializerV2: {"properties": {"enabled": {"description": "Whether the probe is enabled or not.", "examples": [true, false], "title": "Enabled", "type": "boolean"}, "probe": {"$ref": "#/components/schemas/ContainerProbeSerializerV2", "description": "Probe configuration (exec, `http_get` or `tcp_socket`)"}}, "required": ["enabled"], "title": "InferenceInstanceContainerProbeConfigurationSerializerV2", "type": "object"}
    ExistingInstanceFloatingIpInterfaceSerializer: {"properties": {"existing_floating_id": {"description": "An existing available floating IP id must be specified if the source is set to `existing`", "examples": ["e3c6ee77-48cb-416b-b204-11b492cc776e3"], "format": "uuid4", "title": "Existing Floating Id", "type": "string"}, "source": {"const": "existing", "description": "An existing available floating IP will be attached to the instance. A floating IP is a public IP that makes the instance accessible from the internet, even if it only has a private IP. It works like SNAT, allowing outgoing and incoming traffic.", "examples": ["existing"], "title": "Source", "type": "string"}}, "required": ["source", "existing_floating_id"], "title": "Existing floating IP", "type": "object"}
    ClientProfileTemplateFieldSerializer: {"properties": {"default": {"anyOf": [{"maxLength": 100, "type": "string"}, "type": "null"], "description": "Predefined default value for the field if not specified", "examples": [null], "title": "Default"}, "description": {"anyOf": [{"maxLength": 255, "type": "string"}, "type": "null"], "description": "Detailed description explaining the field's purpose and usage guidelines", "examples": ["ARK server ports. Valid port values are in range 1000-65535"], "title": "Description"}, "field_type": {"anyOf": ["type": "string", "type": "null"], "description": "Data type classification of the field (e.g., string, integer, array)", "examples": [null], "title": "Field Type"}, "id": {"description": "Unique identifier for the DDoS protection field", "examples": [11], "title": "Id", "type": "integer"}, "name": {"description": "Human-readable name of the protection field", "examples": ["ARK Ports"], "maxLength": 30, "title": "Name", "type": "string"}, "required": {"anyOf": ["type": "boolean", "type": "null"], "description": "Indicates whether this field must be provided when creating a protection profile", "examples": [true], "title": "Required"}, "validation_schema": {"description": "JSON schema defining validation rules and constraints for the field value", "examples": [{"items": {"maximum": 65535, "minimum": 1000, "type": "integer"}, "minItems": 1, "type": "array"}], "title": "Validation Schema"}}, "required": ["id", "name", "description", "field_type", "required", "default", "validation_schema"], "title": "ClientProfileTemplateFieldSerializer", "type": "object"}
    UserActionSubscriptionMqResponseSerializer: {"properties": {"connection_string": {"description": "Connection string of the following structure \"scheme://username:password@host:port/`virtual_host`\"", "examples": ["amqps://guest:guest@192.168.123.20:5671/user_action_events"], "title": "Connection String", "type": "string"}, "exchange": {"anyOf": ["type": "string", "type": "null"], "description": "Exchange name", "examples": [null], "title": "Exchange"}, "id": {"description": "Subscription ID", "examples": [33], "title": "Id", "type": "integer"}, "receive_child_client_events": {"description": "Set to true if you would like to receive user action logs of all clients with the `reseller_id` matching the current `client_id`. Defaults to false", "examples": [false], "title": "Receive Child Client Events", "type": "boolean"}, "routing_key": {"anyOf": ["type": "string", "type": "null"], "description": "Routing key", "examples": ["foo"], "title": "Routing Key"}}, "required": ["id", "connection_string", "exchange", "routing_key", "receive_child_client_events"], "title": "UserAction RabbitMQ subscription scheme", "type": "object"}
    AddRouterInterfaceSerializer: {"properties": {"ip_address": {"description": "IP address to assign for router's interface, if not specified, address will be selected automatically", "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "subnet_id": {"description": "Subnet ID on which router interface will be created", "format": "uuid4", "title": "Subnet Id", "type": "string"}}, "required": ["subnet_id"], "title": "AddRouterInterfaceSerializer", "type": "object"}
    CaasApiKeyCreateSerializer: {"properties": {"containers": {"description": "List of containers using key", "examples": [[{"name": "my-container", "namespace": "space"}]], "items": {"$ref": "#/components/schemas/CaasNamespacedName"}, "title": "Containers", "type": "array"}, "description": {"default": "", "description": "Key description", "examples": ["my first key"], "title": "Description", "type": "string"}, "expire": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Key expires at", "examples": ["2023-07-31T00:00:00Z"], "title": "Expire"}, "is_disabled": {"default": false, "description": "Set to true if key is disabled", "examples": [false], "title": "Is Disabled", "type": "boolean"}, "name": {"description": "Key name", "examples": ["my-key"], "pattern": "^[a-z][-a-z0-9]{0,62}[a-z0-9]$", "title": "Name", "type": "string"}}, "required": ["name", "containers"], "title": "CaasApiKeyCreateSerializer", "type": "object"}
    SSHKeyCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/SSHKeySerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "SSHKeyCollectionSerializer", "type": "object"}
    ListGpuBaremetalFlavorSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/GpuBaremetalFlavorSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListGpuBaremetalFlavorSerializer", "type": "object"}
    TotalLoadBalancerReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["lb1-1-2_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "flavor": {"description": "Flavor of the load balancer", "examples": ["lb1-1-2"], "title": "Flavor", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "load_balancer", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor"], "title": "TotalLoadBalancerReportItemSerializer", "type": "object"}
    ContainerScaleUpdateSerializerV3: {"properties": {"cooldown_period": {"description": "Cooldown period between scaling actions in seconds", "examples": [60], "maximum": 3600, "minimum": 1, "title": "Cooldown Period", "type": "integer"}, "max": {"description": "Maximum scale for the container", "examples": [3], "maximum": 300, "title": "Max", "type": "integer"}, "min": {"description": "Minimum scale for the container", "examples": [1], "minimum": 0, "title": "Min", "type": "integer"}, "polling_interval": {"description": "Polling interval for scaling triggers in seconds", "examples": [30], "maximum": 3600, "minimum": 5, "title": "Polling Interval", "type": "integer"}, "triggers": {"$ref": "#/components/schemas/ContainerScaleTriggersSerializer", "description": "Triggers for scaling actions", "examples": ["cpu": {"threshold": 75}]}}, "required": ["min", "max"], "title": "ContainerScaleUpdateSerializerV3", "type": "object"}
    ResourceContainerSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["caas_container_resources_sec"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "GBS", "description": "Unit of billing value", "examples": ["GBS"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the container", "examples": ["container_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "containers", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the container", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid"], "title": "ResourceContainerSerializer", "type": "object"}
    AIImageSerializer: {"properties": {"architecture": {"$ref": "#/components/schemas/ImageArchitectureTypeEnum", "default": "x86_64", "description": "An image architecture type: aarch64, `x86_64`", "examples": ["x86_64"]}, "created_at": {"description": "Datetime when the image was created", "examples": ["2024-05-05T14:51:26.570866Z"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Task that created this entity", "examples": ["b10dd116-07f5-4225-abb7-f42da5cb78fb"], "title": "Creator Task Id"}, "description": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Image description", "examples": ["string"], "title": "Description"}, "disk_format": {"description": "Disk format", "examples": ["raw"], "title": "Disk Format", "type": "string"}, "display_order": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "", "examples": [2010], "title": "Display Order"}, "hw_firmware_type": {"anyOf": ["$ref": "#/components/schemas/ImageHwFirmwareTypeEnum", "type": "null"], "default": null, "description": "Specifies the type of firmware with which to boot the guest.", "examples": ["bios"]}, "hw_machine_type": {"anyOf": ["$ref": "#/components/schemas/HwMachineTypeEnum", "type": "null"], "default": null, "description": "A virtual chipset type.", "examples": ["q35"]}, "id": {"description": "Image ID", "examples": ["44e136a7-15c1-4b5f-a086-20b7b3237d40"], "title": "Id", "type": "string"}, "is_baremetal": {"anyOf": ["type": "boolean", "type": "null"], "default": false, "description": "Set to true if the image will be used by bare metal servers. Defaults to false.", "examples": [false], "title": "Is Baremetal"}, "min_disk": {"description": "Minimal boot volume required", "examples": [3], "title": "Min Disk", "type": "integer"}, "min_ram": {"description": "Minimal VM RAM required", "examples": [0], "title": "Min Ram", "type": "integer"}, "name": {"description": "Image display name", "examples": ["ubuntu-20.10-x64"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "os_distro": {"description": "OS Distribution, i.e. Debian, CentOS, Ubuntu, CoreOS etc.", "examples": ["ubuntu"], "title": "Os Distro", "type": "string"}, "os_type": {"$ref": "#/components/schemas/ImageOsTypeEnum", "description": "The operating system installed on the image.", "examples": ["linux"]}, "os_version": {"description": "OS version, i.e. 19.04 (for Ubuntu) or 9.4 for Debian", "examples": ["20.10"], "title": "Os Version", "type": "string"}, "project_id": {"description": "Project ID", "examples": [1337], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "sdk_version": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Poplar SDK version", "examples": ["3.0.0"], "title": "Sdk Version"}, "size": {"description": "Image size in bytes", "examples": [2361393152], "title": "Size", "type": "integer"}, "ssh_key": {"anyOf": ["$ref": "#/components/schemas/SshKeyEnum", "type": "null"], "default": null, "description": "Whether the image supports SSH key or not", "examples": ["allow"]}, "status": {"description": "Image status, i.e. active", "examples": ["active"], "title": "Status", "type": "string"}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"},
        "task_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "updated_at": {"description": "Datetime when the image was updated", "examples": ["2024-05-05T14:51:26.570866Z"], "format": "date-time", "title": "Updated At", "type": "string"}, "vipu_version": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "vIPU controller version", "examples": ["1.16.0"], "title": "Vipu Version"}, "visibility": {"description": "Image visibility. Globally visible images are public", "examples": ["public"], "title": "Visibility", "type": "string"}}, "required": ["project_id", "region_id", "region", "id", "name", "status", "visibility", "min_disk", "min_ram", "os_distro", "os_version", "created_at", "updated_at", "size", "disk_format", "os_type", "tags"], "title": "Poplar Image schema", "type": "object"}
    InstancePricingPreviewV2ResponseSerializer: {"description": "Billing response v2 preview schema for server instance.", "properties": {"currency_code": {"anyOf": [{"enum": ["AZN", "EUR", "USD"], "type": "string"}, "type": "null"], "description": "Currency code (3-letter code per ISO 4217).", "examples": ["USD", "EUR"], "title": "Currency Code"}, "discount_percent": {"anyOf": ["type": "string", "type": "null"], "description": "Actual discount as a relative value.", "examples": ["10.50", "5.00"], "title": "Discount Percent"}, "per_gb": {"anyOf": ["$ref": "#/components/schemas/DetailedInstancePricingPerGBSerializer", "type": "null"], "default": null, "description": "Pricing details per category charged per GB.", "examples": ["egress_traffic_baremetal": 1.3]}, "per_hour": {"$ref": "#/components/schemas/DetailedInstancePricingSerializer", "description": "Prices per category charged per hour.", "examples": [{"external_ip": 0.02, "flavor": 0.8, "floating_ip": 0.05, "volumes": {"cold": 0.1083, "ssd_hiiops": 0.0278, "standard": 0.0139}}]}, "per_month": {"$ref": "#/components/schemas/DetailedInstancePricingSerializer", "description": "Prices per category charged per month.", "examples": [{"external_ip": 14.4, "flavor": 576, "floating_ip": 36, "volumes": {"cold": 78, "ssd_hiiops": 20, "standard": 10}}]}, "price_status": {"$ref": "#/components/schemas/PriceDisplayStatus", "description": "Price status for the UI.", "examples": ["show", "hide"]}, "price_without_discount_per_month": {"anyOf": ["type": "number", "type": "null"], "description": "Total price VAT inclusive per month without discount.", "title": "Price Without Discount Per Month"}, "tax_percent": {"description": "Tax rate applied to the subtotal, represented as a percentage", "examples": [0, 17, 12], "title": "Tax Percent", "type": "number"}, "total_price_per_hour": {"anyOf": ["type": "number", "type": "null"], "description": "Total price VAT inclusive per hour.", "title": "Total Price Per Hour"}, "total_price_per_month": {"anyOf": ["type": "number", "type": "null"], "description": "Total price VAT inclusive per month.", "title": "Total Price Per Month"}, "vm_count": {"default": 1, "description": "Number of virtual machine instances being created.", "examples": [1, 10], "title": "Vm Count", "type": "integer"}}, "required": ["currency_code", "discount_percent", "per_hour", "per_month", "price_status", "price_without_discount_per_month", "total_price_per_hour", "total_price_per_month", "tax_percent"], "title": "InstancePricingPreviewV2ResponseSerializer", "type": "object"}
    HardRebootVirtualGPUClusterSerializer: {"properties": {"action": {"const": "hard_reboot", "description": "Action name", "examples": ["hard_reboot"], "title": "Action", "type": "string"}}, "required": ["action"], "title": "HardRebootVirtualGPUClusterSerializer", "type": "object"}
    TaskDetailedStateEnum: {"enum": ["CLUSTER_CLEAN_UP", "CLUSTER_RESIZE", "CLUSTER_RESUME", "CLUSTER_SUSPEND", "ERROR", "FINISHED", "IPU_SERVERS", "NETWORK", "POPLAR_SERVERS", "POST_DEPLOY_SETUP", "VIPU_CONTROLLER"], "title": "TaskDetailedStateEnum", "type": "string"}
    CreateUserActionSubscriptionMqSerializer: {"properties": {"connection_string": {"description": "Connection string of the following structure \"scheme://username:password@host:port/`virtual_host`\"", "examples": ["amqps://guest:guest@192.168.123.20:5671/user_action_events"], "title": "Connection String", "type": "string"}, "exchange": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Exchange name", "examples": [null], "title": "Exchange"}, "receive_child_client_events": {"default": false, "description": "Set to true if you would like to receive user action logs of all clients with the `reseller_id` matching the current `client_id`. Defaults to false", "examples": [false], "title": "Receive Child Client Events", "type": "boolean"}, "routing_key": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Routing key", "examples": ["foo"], "title": "Routing Key"}}, "required": ["connection_string"], "title": "Scheme for creating a subscription to user_action on RabbitMQ", "type": "object"}
    SnapshotPricingRequestSerializer: {"examples": ["volume_id": "c23fb11d-4748-489e-a659-e888e121e825"], "properties": {"volume_id": {"description": "Volume ID", "examples": ["c23fb11d-4748-489e-a659-e888e121e825"], "title": "Volume Id", "type": "string"}}, "required": ["volume_id"], "title": "SnapshotPricingRequestSerializer", "type": "object"}
    ImagePricingRequestSerializer: {"examples": ["size": 1000], "properties": {"size": {"description": "Image size in Gb", "examples": [1000], "title": "Size", "type": "integer"}}, "required": ["size"], "title": "ImagePricingRequestSerializer", "type": "object"}
    BareMetalServerCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/BareMetalServerSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "BareMetalServerCollectionSerializer", "type": "object"}
    NetworkType: {"enum": ["vlan", "vxlan"], "title": "NetworkType", "type": "string"}
    CreateFunctionSerializer: {"properties": {"autoscaling": {"$ref": "#/components/schemas/FaasAutoscalingSerializer", "description": "Autoscaling configuration for the function. Keys must be '`min_instances`' or '`max_instances`', and values must be integers between 0 and 50.", "examples": [{"max_instances": 2, "min_instances": 1}]}, "code_text": {"description": "Function code text.", "examples": ["def main():\n    return 'Hello World'"], "maxLength": 100000, "minLength": 1, "title": "Code Text", "type": "string"}, "dependencies": {"default": "", "description": "Dependencies for the function to install.", "examples": ["numpy==1.21.0\npandas==1.3.0"], "maxLength": 100000, "title": "Dependencies", "type": "string"}, "description": {"default": "", "description": "Description of the function.", "examples": ["This is a sample function."], "maxLength": 255, "minLength": 0, "title": "Description", "type": "string"}, "enable_api_key": {"anyOf": ["type": "boolean", "type": "null"], "default": null, "description": "Enable or disable API key authentication. Enable api key is temporarily disabled. As a result, using Functions with authorization is currently not supported.", "examples": [true], "title": "Enable Api Key"}, "envs": {"default": {}, "description": "Environment variables for the function. Keys must match a specific regex pattern and be 1-255 characters long, and values must be 0-255 characters long.", "examples": ["ENV_VAR": "value"], "patternProperties": {"^[a-zA-Z_][a-zA-Z0-9_]*$": {"maxLength": 255, "minLength": 0, "type": "string"}}, "propertyNames": {"maxLength": 255, "minLength": 1}, "title": "Envs", "type": "object"}, "flavor": {"description": "The name of the flavor associated with the function.", "examples": ["64m-64MB"], "title": "Flavor", "type": "string"}, "main_method": {"description": "The main startup method name.", "examples": ["handler"], "maxLength": 100, "minLength": 1, "title": "Main Method", "type": "string"}, "name": {"description": "Function name.", "examples": ["function-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Name", "type": "string"}, "runtime": {"description": "Function runtime.", "examples": ["python3.7.12"], "title": "Runtime", "type": "string"}, "timeout": {"description": "Function timeout in seconds.", "examples": [5], "maximum": 180, "minimum": 0, "title": "Timeout", "type": "integer", "x-stainless-naming": {"python": {"method_argument": "api_timeout"}}}}, "required": ["name", "runtime", "timeout", "flavor", "autoscaling", "code_text", "main_method"], "title": "CreateFunctionSerializer", "type": "object"}
    CreateL7RuleSchema: {"type": "object", "properties": {"compare_type": {"type": "string", "enum": ["CONTAINS", "ENDS_WITH", "EQUAL_TO", "REGEX", "STARTS_WITH"], "description": "The comparison type for the L7 rule"}, "invert": {"type": "boolean", "description": "When true the logic of the rule is inverted. For example, with invert true, 'equal to' would become 'not equal to'. Default is false."}, "key": {"type": "string", "description": "The key to use for the comparison. For example, the name of the cookie to evaluate."}, "tags": {"type": "array", "description": "A list of simple strings assigned to the l7 rule", "items": {"type": "string"}}, "type": {"type": "string", "enum": ["COOKIE", "FILE_TYPE", "HEADER", "HOST_NAME", "PATH", "SSL_CONN_HAS_CERT", "SSL_DN_FIELD", "SSL_VERIFY_RESULT"], "description": "The L7 rule type"}, "value": {"type": "string", "description": "The value to use for the comparison. For example, the file type to compare"}}, "required": ["compare_type", "type", "value"], "description": "CreateL7Rule schema", "example": {"compare_type": "REGEX", "invert": false, "tags": ["test_tag"], "type": "PATH", "value": "/images*"}}
    SchemaFilterAiClusterSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterAiClusterEnum", "description": "Field name to filter by", "examples": ["flavor"]}, "type": {"const": "ai_cluster", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["bm3-ai-1xlarge-h100-80-8"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterAiClusterSerializer", "type": "object"}
    BmReservationFlavorSchema: {"type": "object", "properties": {"activity_period": {"type": "string", "description": "Description using period for calc slices [`year`, `month`, `day`]"}, "activity_period_length": {"type": "array", "description": "List of the full reservation period by `activity_period` length", "items": {"type": "integer"}}, "architecture": {"type": "string", "description": "Flavor architecture type"}, "available_count": {"type": "integer", "description": "Count of available nodes"}, "disabled": {"type": "boolean", "readOnly": true, "description": "Disabled flavor flag"}, "flavor_id": {"type": "string", "description": "Short ID"}, "flavor_name": {"type": "string", "description": "Human readable name"}, "hardware_description": {"description": "Additional hardware description.", "allOf": ["$ref": "#/components/schemas/DeprecatedFlavorHardwareDescriptionSchema"]}, "os_type": {"type": "string", "description": "Flavor operating system"}, "ram": {"type": "integer", "description": "RAM size in MiB"}, "resource_class": {"type": "string", "description": "Flavor resource class for mapping to hardware capacity"}, "vcpus": {"type": "integer", "description": "Virtual CPU count"}}, "description": "Bare metal flavors that are available for reservations", "example": {"flavor_id": "g1-gpu-1-2-1", "flavor_name": "g1-gpu-1-2-1", "disabled": false, "hardware_description": {"gpu": "1x NVIDIA 11GB"}, "ram": 2048, "vcpus": 1, "activity_period": "month", "activity_period_length": [12, 36], "available_count": 23}}
    CreateNamespaceSerializer: {"properties": {"description": {"anyOf": [{"maxLength": 255, "minLength": 0, "type": "string"}, "type": "null"], "default": null, "description": "Namespace description.", "examples": ["This is a sample namespace."], "title": "Description"}, "envs": {"anyOf": [{"patternProperties": {"^[a-zA-Z_][a-zA-Z0-9_]*$": {"maxLength": 255, "minLength": 0, "type": "string"}}, "propertyNames": {"maxLength": 255, "minLength": 1}, "type": "object"}, "type": "null"], "default": null, "description": "Namespace environment variables. Keys must match a specific regex pattern and be 1-255 characters long, and values must be 0-255 characters long.", "examples": ["ENV_VAR": "value"], "title": "Envs"}, "name": {"description": "Namespace name.", "examples": ["namespace-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Name", "type": "string"}}, "required": ["name"], "title": "CreateNamespaceSerializer", "type": "object"}
    FlavorHardwareDescriptionSerializer: {"properties": {"cpu": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Human-readable CPU description", "examples": ["1x Intel Xeon 4C/8T 3.7 GHz"], "title": "Cpu"}, "disk": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Human-readable disk description", "examples": ["2x 250GB SSD"], "title": "Disk"}, "ephemeral": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Human-readable ephemeral disk description", "examples": ["2200GB NVMe (ephemeral)"], "title": "Ephemeral"}, "gpu": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Human-readable GPU description", "examples": ["1x NVIDIA 11GB"], "title": "Gpu"}, "network": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Human-readable NIC description", "examples": ["1x 500Mbps"], "title": "Network"}, "ram": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Human-readable RAM description", "examples": ["32 GB"], "title": "Ram"}}, "title": "FlavorHardwareDescriptionSchema hardware hints for a flavor", "type": "object"}
    RegistryUserSerializer: {"properties": {"created_at": {"description": "User creation date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Created At", "type": "string"}, "duration": {"description": "User account operating time, days", "examples": [14], "title": "Duration", "type": "integer"}, "expires_at": {"description": "User operation end date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Expires At", "type": "string"}, "id": {"description": "User ID", "examples": [1], "title": "Id", "type": "integer"}, "name": {"description": "User name", "examples": ["user1"], "title": "Name", "type": "string"}, "read_only": {"default": false, "description": "Read-only user", "examples": [false], "title": "Read Only", "type": "boolean"}}, "required": ["id", "name", "duration", "created_at", "expires_at"], "title": "RegistryUserSerializer", "type": "object"}
    ResourceSnapshotSerializer: {"description": "These properties are common for all individual snapshots\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["snap_t_standard_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the snapshot", "examples": ["snapshot_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "last_size": {"description": "Size of the snapshot in bytes", "examples": [100], "title": "Last Size", "type": "integer"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"description": "Unit of size", "examples": ["GiB"], "title": "Size Unit", "type": "string"}, "source_volume_uuid": {"description": "UUID of the source volume", "format": "uuid", "title": "Source Volume Uuid", "type": "string"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "snapshot", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the snapshot", "format": "uuid", "title": "Uuid", "type": "string"}, "volume_type": {"description": "Type of the volume", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "volume_type", "first_seen", "last_seen", "project_id", "last_size", "size_unit", "last_name", "source_volume_uuid", "uuid", "tags"], "title": "ResourceSnapshotSerializer", "type": "object"}
    LifecyclePolicyActionEnum: {"enum": ["volume_snapshot"], "title": "LifecyclePolicyActionEnum", "type": "string"}
    RegionState: {"enum": ["ACTIVE", "DELETED", "DELETING", "DELETION_FAILED", "INACTIVE", "MAINTENANCE", "NEW"], "title": "RegionState", "type": "string"}
    InstancePortsSecurityGroupsSchema: {"type": "object", "properties": {"name": {"type": "string", "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "description": "Security group name, applies to all ports"}, "ports_security_group_names": {"type": "array", "description": "Port security groups mapping", "items": {"$ref": "#/components/schemas/PortSecurityGroupNamesSchema"}}}, "description": "Instance ports security groups", "example": {"name": "some_name", "ports_security_group_names": [{"port_id": null, "security_group_names": ["some_name"]}, {"port_id": "ee2402d0-f0cd-4503-9b75-69be1d11c5f1", "security_group_names": ["name1", "name2"]}]}}
    PortIDsForVIPSerializer: {"properties": {"port_ids": {"description": "List of port IDs that will share one VIP", "examples": [["351b0dd7-ca09-431c-be53-935db3785067", "bc688791-f1b0-44eb-97d4-07697294b1e1"]], "items": {"format": "uuid4", "type": "string"}, "title": "Port Ids", "type": "array"}}, "title": "PortIDsForVIPSerializer", "type": "object"}
    CreateSecurityGroupSerializer: {"properties": {"instances": {"description": "List of instances", "examples": [["00000000-0000-4000-8000-000000000000"]], "items": {"type": "string"}, "title": "Instances", "type": "array"}, "security_group": {"$ref": "#/components/schemas/SingleCreateSecurityGroupSerializer", "description": "Security group"}}, "required": ["security_group"], "title": "CreateSecurityGroupSerializer", "type": "object"}
    FaasApiKeyListSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/FaasApiKeySerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "FaasApiKeyListSerializer", "type": "object"}
    CreateFileShareSource: {"enum": ["new-file-share"], "title": "CreateFileShareSource", "type": "string"}
    ContainerPatchSerializer: {"properties": {"commands": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Container's commands", "examples": ["python3 app.py -m test"], "title": "Commands"}, "description": {"anyOf": [{"maxLength": 255, "type": "string"}, "type": "null"], "default": null, "description": "Container description", "examples": ["My first container"], "title": "Description"}, "envs": {"anyOf": ["type": "object", "type": "null"], "default": null, "description": "Container environment variables", "examples": [{"ENVIRONMENT_VARIABLE": "value 2", "ENV_VAR": "value 1"}], "title": "Envs"}, "flavor": {"anyOf": [{"pattern": "^[0-9]{0,12}mCPU-[0-9]{0,12}M[i]?B$", "type": "string"}, "type": "null"], "default": null, "description": "Container flavor", "examples": ["250mCPU-512MiB"], "title": "Flavor"}, "image": {"anyOf": [{"maxLength": 230, "type": "string"}, "type": "null"], "default": null, "description": "Container image", "examples": ["nginx:latest"], "title": "Image"}, "is_api_key_auth": {"anyOf": ["type": "boolean", "type": "null"], "default": null, "description": "Enable/Disable api key authentication. Enable api key is temporarily disabled. As a result, using CaaS with authorization is currently not supported.", "examples": [false], "title": "Is Api Key Auth"}, "is_disabled": {"anyOf": ["type": "boolean", "type": "null"], "default": null, "description": "Set to true if container is disabled", "examples": [false], "title": "Is Disabled"}, "listening_port": {"anyOf": [{"maximum": 65535, "minimum": 1, "type": "integer"}, "type": "null"], "default": null, "description": "Container listening port", "examples": [80], "title": "Listening Port"}, "logging": {"anyOf": ["$ref": "#/components/schemas/LoggingSerializer", "type": "null"], "default": null, "description": "Logging configuration", "examples": [{"destination_region_id": 1, "enabled": true, "retention_policy": {"period": 45}, "topic_name": "my-log-name"}, "enabled": false]}, "pull_secret": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Image pull secret", "examples": ["my-secret"], "title": "Pull Secret"}, "scale": {"anyOf": ["$ref": "#/components/schemas/ScaleSerializer", "type": "null"], "default": null, "description": "Container autoscaling", "examples": [{"max": 2, "min": 1}]}, "timeout": {"anyOf": [{"maximum": 180, "minimum": 0, "type": "integer"}, "type": "null"], "default": null, "description": "Container timeout in seconds", "examples": [5], "title": "Timeout", "x-stainless-naming": {"python": {"method_argument": "api_timeout"}}}}, "title": "ContainerPatchSerializer", "type": "object"}
    RetentionTimeSerializer: {"properties": {"days": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Number of days to wait", "examples": [0], "title": "Days"}, "hours": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Number of hours to wait", "examples": [2], "title": "Hours"}, "minutes": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Number of minutes to wait", "examples": [1], "title": "Minutes"}, "weeks": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Number of weeks to wait", "examples": [0], "title": "Weeks"}}, "title": "RetentionTimeSerializer", "type": "object"}
    UpdateL7RuleSchema: {"type": "object", "properties": {"compare_type": {"type": "string", "enum": ["CONTAINS", "ENDS_WITH", "EQUAL_TO", "REGEX", "STARTS_WITH"], "description": "The comparison type for the L7 rule"}, "invert": {"type": "boolean", "description": "When true the logic of the rule is inverted. For example, with invert true, 'equal to' would become 'not equal to'. Default is false."}, "key": {"type": "string", "description": "The key to use for the comparison. For example, the name of the cookie to evaluate."}, "tags": {"type": "array", "description": "A list of simple strings assigned to the l7 rule", "items": {"type": "string"}}, "type": {"type": "string", "enum": ["COOKIE", "FILE_TYPE", "HEADER", "HOST_NAME", "PATH", "SSL_CONN_HAS_CERT", "SSL_DN_FIELD", "SSL_VERIFY_RESULT"], "description": "The L7 rule type"}, "value": {"type": "string", "description": "The value to use for the comparison. For example, the file type to compare"}}}
    SchemaFilterSnapshotSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterSnapshotEnum", "description": "Field name to filter by", "examples": ["last_size"]}, "type": {"const": "snapshot", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["10"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterSnapshotSerializer", "type": "object"}
    ReservedFixedIPSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/ReservedFixedIPSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[ReservedFixedIPSerializer]", "type": "object"}
    CreateVolumeSerializer: {"description": "Volume can be created from image, snapshot or as a new volume", "discriminator": {"mapping": {"image": "#/components/schemas/CreateVolumeFromImageSerializer", "new-volume": "#/components/schemas/CreateNewVolumeSerializer", "snapshot": "#/components/schemas/CreateVolumeFromSnapshotSerializer"}, "propertyName": "source"}, "title": "CreateVolumeSerializer", "anyOf": ["$ref": "#/components/schemas/CreateVolumeFromImageSerializer", "$ref": "#/components/schemas/CreateVolumeFromSnapshotSerializer", "$ref": "#/components/schemas/CreateNewVolumeSerializer"]}
    AssignmentSerializer: {"properties": {"assignment_id": {"description": "Assignment ID", "examples": [12], "title": "Assignment Id", "type": "integer"}}, "required": ["assignment_id"], "title": "AssignmentSerializer", "type": "object"}
    ActivateDeactivateProfileSerializer: {"properties": {"active": {"description": "Controls whether to enable or disable the DDoS protection profile", "title": "Active", "type": "boolean"}, "bgp": {"description": "Controls whether to enable or disable BGP routing for DDoS protection traffic", "title": "Bgp", "type": "boolean"}}, "required": ["active", "bgp"], "title": "ActivateDeactivateProfileSerializer", "type": "object"}
    LaasHostsSchema: {"type": "object", "description": "LaaS hosts list schema", "properties": {"hosts": {"type": "array", "items": {"type": "string"}, "description": "Hosts list"}}, "example": {"opensearch": {"api": "https://logging-dev.example.com:[443]", "dashboards": "https://logging-dev-ui.example.com"}, "kafka": ["kafka.example.com", "kafka2.example.com", "kafka3.example.com"], "exporter": ["exporter.example.com"]}}
    ResourceFloatingIpSerializer: {"description": "These properties are common for all individual floating IPs\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["floating_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "ip_address": {"description": "IP address", "examples": ["10.100.178.92"], "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "last_name": {"description": "Name of the floating IP", "examples": ["10.100.178.92"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "floatingip", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the floating IP", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "ip_address", "uuid", "tags"], "title": "ResourceFloatingIpSerializer", "type": "object"}
    UpdateSecurityGroupSerializer: {"properties": {"changed_rules": {"description": "List of rules to create or delete", "items": {"$ref": "#/components/schemas/UpdateSecurityGroupRuleSerializer"}, "title": "Changed Rules", "type": "array"}, "name": {"description": "Name", "examples": ["some_name"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "tags": {"anyOf": ["$ref": "#/components/schemas/UpdateTagsSerializer", "type": "null"], "description": "Update key-value tags using JSON Merge Patch semantics (RFC 7386). Provide key-value pairs to add or update tags. Set tag values to `null` to remove tags. Unspecified tags remain unchanged. Read-only tags are always preserved and cannot be modified.\n\n**Examples:**\n\n\\* **Add/update tags:** `{'tags': {'environment': 'production', 'team': 'backend'}}` adds new tags or updates existing ones.\n\n\\* **Delete tags:** `{'tags': {'`old_tag`': null}}` removes specific tags.\n\n\\* **Remove all tags:** `{'tags': null}` removes all user-managed tags (read-only tags are preserved).\n\n\\* **Partial update:** `{'tags': {'environment': 'staging'}}` only updates specified tags.\n\n\\* **Mixed operations:** `{'tags': {'environment': 'production', '`cost_center`': 'engineering', '`deprecated_tag`': null}}` adds/updates 'environment' and '`cost_center`' while removing '`deprecated_tag`', preserving other existing tags.\n\n\\* **Replace all:** first delete existing tags with null values, then add new ones in the same request.", "examples": [{"my-tag": "my-tag-value", "my-tag-to-remove": null}]}}, "title": "UpdateSecurityGroupSerializer", "type": "object"}
    CreatedSSHKeySerializer: {"properties": {"created_at": {"description": "SSH key creation time", "examples": ["2025-06-16T17:05:50Z"], "format": "date-time", "title": "Created At", "type": "string"}, "fingerprint": {"description": "Fingerprint", "examples": ["86:75:ce:e7:e9:1e:f0:79:ec:6f:d8:92:9b:43:fc:4d"], "title": "Fingerprint", "type": "string"}, "id": {"description": "SSH key ID", "examples": ["36a7a97a-0672-4911-8f2b-92cd4e5b0d91"], "format": "uuid4", "title": "Id", "type": "string"}, "name": {"description": "SSH key name", "examples": ["my-ssh-key"], "maxLength": 255, "minLength": 1, "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "private_key": {"anyOf": ["type": "string", "type": "null"], "description": "The private part of an SSH key is the confidential portion of the key pair. It should never be shared or exposed. This key is used to prove your identity when connecting to a server. \n\nIf you omit the `public_key`, the platform will generate a key for you. The `private_key` will be returned **once** in the API response. Be sure to save it securely, as it cannot be retrieved again later. \n\nBest practice: Save the private key to a secure location on your machine (e.g., `~/.ssh/id_ed25519`) and set the file permissions to be readable only by you.", "examples": ["<private_key>"], "title": "Private Key"}, "project_id": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}, "public_key": {"description": "The public part of an SSH key is the shareable portion of an SSH key pair. It can be safely sent to servers or services to grant access. It does not contain sensitive information.", "examples": ["ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIjxL6g1II8NsO8odvBwGKvq2Dx/h/xrvsV9b9LVIYKm my-username@my-hostname"], "title": "Public Key", "type": "string"}, "shared_in_project": {"description": "SSH key will be visible to all users in the project", "examples": [true], "title": "Shared In Project", "type": "boolean"}, "state": {"$ref": "#/components/schemas/KeypairState", "description": "SSH key state", "examples": ["ACTIVE", "DELETING"]}}, "required": ["id", "public_key", "name", "fingerprint", "state", "project_id", "shared_in_project", "created_at", "private_key"], "title": "Created SSH key response object", "type": "object"}
    ResourceFunctionCallsWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Functions - Total Requests, Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["faas_function_calls_piece"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "MLS", "description": "Unit of billing value", "examples": ["MLS"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the function call", "examples": ["function_call_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "functions_calls", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the function call", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceFunctionCallsWithCostSerializer", "type": "object"}
    CheckQuotaBeforeSfsCreationSerializer: {"properties": {"size": {"description": "File Share size in GiB", "examples": [5], "minimum": 1, "title": "Size", "type": "integer"}}, "required": ["size"], "title": "CheckQuotaBeforeSfsCreationSerializer", "type": "object"}
    BareMetalServerSerializer: {"properties": {"addresses": {"additionalProperties": {"items": {"anyOf": ["$ref": "#/components/schemas/BareMetalFloatingAddressSerializer", "$ref": "#/components/schemas/BareMetalFixedAddressSerializer"]}, "type": "array"}, "description": "Map of `network_name` to list of addresses in that network", "title": "Addresses", "type": "object"}, "blackhole_ports": {"description": "IP addresses of the instances that are blackholed by DDoS mitigation system", "items": {"$ref": "#/components/schemas/BlackholePortSerializer"}, "title": "Blackhole Ports", "type": "array"}, "created_at": {"description": "Datetime when bare metal server was created", "examples": ["2023-11-29T10:56:49Z"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": ["type": "string", "type": "null"], "description": "Task that created this entity", "title": "Creator Task Id"}, "ddos_profile": {"anyOf": ["$ref": "#/components/schemas/GetClientProfileSerializer", "type": "null"], "description": "Bare metal advanced DDoS protection profile. It is always `null` if query parameter `with_ddos=true` is not set."}, "fixed_ip_assignments": {"description": "Fixed IP assigned to instance", "items": {"$ref": "#/components/schemas/IpAssignmentsSerializer"}, "title": "Fixed Ip Assignments", "type": "array"}, "flavor": {"$ref": "#/components/schemas/BareMetalFlavorSerializer", "description": "Flavor details"}, "id": {"description": "Bare metal server ID", "examples": ["6c6aa80f-7836-4dc2-a2ae-125e248be476"], "format": "uuid4", "title": "Id", "type": "string"}, "instance_isolation": {"anyOf": ["$ref": "#/components/schemas/IsolationSerializer", "type": "null"], "description": "Instance isolation information"}, "name": {"description": "Bare metal server name", "examples": ["my-server-1"], "title": "Name", "type": "string"}, "project_id": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}, "ssh_key_name": {"anyOf": ["type": "string", "type": "null"], "description": "SSH key assigned to bare metal server", "title": "Ssh Key Name"}, "status": {"$ref": "#/components/schemas/InstanceStatus", "description": "Bare metal server status", "examples": ["ACTIVE"]}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": ["type": "string", "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "task_state": {"anyOf": ["type": "string", "type": "null"], "description": "Task state", "title": "Task State"}, "vm_state": {"$ref": "#/components/schemas/InstanceVMState", "description": "Bare metal server state", "examples": ["active"]}}, "required": ["id", "name", "created_at", "status", "vm_state", "flavor", "tags", "addresses", "ssh_key_name", "creator_task_id", "task_state", "task_id", "blackhole_ports", "fixed_ip_assignments", "instance_isolation", "ddos_profile", "region", "region_id", "project_id"], "title": "Bare metal server", "type": "object"}
    K8sClusterSlurmAddonEnableV2Serializer: {"properties": {"enabled": {"const": true, "description": "The Slurm add-on will be enabled in the cluster.\n\nThis add-on is only supported in clusters running Kubernetes v1.31 and v1.32 with at least 1 GPU cluster pool and VAST NFS support enabled.", "examples": [true], "title": "Enabled", "type": "boolean", "enum": [true]}, "file_share_id": {"description": "ID of a VAST file share to be used as Slurm storage.\n\nThe Slurm add-on will create separate Persistent Volume Claims for different purposes (controller spool, worker spool, jail) on that file share.\n\nThe file share must have `root_squash` disabled, while `path_length` and `allowed_characters` settings must be set to `NPL`.", "examples": ["cbc94d0e-06c6-4d12-9e86-9782ba14fc8c"], "format": "uuid4", "title": "File Share Id", "type": "string"}, "ssh_key_ids": {"description": "IDs of SSH keys to authorize for SSH connection to Slurm login nodes.", "examples": [["25735292-bd97-44b0-a1af-d7eab876261d", "efc01f3a-35b9-4385-89f9-e38439093ee7"]], "items": {"format": "uuid4", "type": "string"}, "minItems": 1, "title": "Ssh Key Ids", "type": "array"}, "worker_count": {"description": "Size of the worker pool, i.e. the number of Slurm worker nodes.\n\nEach Slurm worker node will be backed by a Pod scheduled on one of cluster's GPU nodes.", "examples": [2], "minimum": 1, "title": "Worker Count", "type": "integer"}}, "required": ["enabled", "file_share_id", "ssh_key_ids", "worker_count"], "title": "K8sClusterSlurmAddonEnableV2Serializer", "type": "object"}
    InstanceInterfaceSerializer: {"properties": {"allowed_address_pairs": {"description": "Group of subnet masks and/or IP addresses that share the current IP as VIP", "items": {"$ref": "#/components/schemas/AllowedAddressPairsSerializer"}, "title": "Allowed Address Pairs", "type": "array"}, "floatingip_details": {"description": "Bodies of floating IPs that are NAT-ing IPs of this port", "items": {"$ref": "#/components/schemas/FloatingIPSerializer"}, "title": "Floatingip Details", "type": "array"}, "interface_name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Interface name", "examples": ["my-interface"], "title": "Interface Name"}, "ip_assignments": {"description": "IP addresses assigned to this port", "examples": [[{"ip_address": "192.168.123.20", "subnet_id": "351b0dd7-ca09-431c-be53-935db3785067"}, {"ip_address": "192.168.120.16", "subnet_id": "0a641ef8-62dc-4146-91e5-6ab4b464df6d"}]], "items": {"$ref": "#/components/schemas/PortIpSubnetIdSerializer"}, "title": "Ip Assignments", "type": "array"}, "mac_address": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "MAC address of the virtual port", "examples": ["00:16:3e:f2:87:16"], "title": "Mac Address"}, "network_details": {"$ref": "#/components/schemas/NetworkSubnetworkSerializer", "description": "Body of the network this port is attached to"}, "network_id": {"description": "ID of the network the port is attached to", "examples": ["bc688791-f1b0-44eb-97d4-07697294b1e1"], "format": "uuid4", "title": "Network Id", "type": "string"}, "port_id": {"description": "ID of virtual ethernet port object", "examples": ["1f0ca628-a73b-42c0-bdac-7b10d023e097"], "format": "uuid4", "title": "Port Id", "type": "string"}, "port_security_enabled": {"description": "Port security status", "examples": [true], "title": "Port Security Enabled", "type": "boolean"}}, "required": ["port_id", "ip_assignments", "network_id", "port_security_enabled", "network_details", "floatingip_details", "allowed_address_pairs"], "title": "InstanceInterfaceSerializer", "type": "object"}
    PullSecretListSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/PullSecretSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "PullSecretListSerializer", "type": "object"}
    InstanceStatus: {"enum": ["ACTIVE", "BUILD", "DELETED", "ERROR", "HARD_REBOOT", "MIGRATING", "PASSWORD", "PAUSED", "REBOOT", "REBUILD", "RESCUE", "RESIZE", "REVERT_RESIZE", "SHELVED", "SHELVED_OFFLOADED", "SHUTOFF", "SOFT_DELETED", "SUSPENDED", "UNKNOWN", "VERIFY_RESIZE"], "title": "InstanceStatus", "type": "string"}
    ContainerListSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/ContainerSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ContainerListSerializer", "type": "object"}
    PatchScheduleSerializer: {"properties": {"day": {"description": "Day of the month (1-31, '\\*') or a comma-separated list of days", "examples": ["5"], "title": "Day", "type": "string"}, "day_of_week": {"description": "Weekday or a comma-separated list of weekdays (mon,tue,wed,thu,fri,sat,sun,\\*)", "examples": ["mon,fri"], "title": "Day Of Week", "type": "string"}, "days": {"description": "Number of days to wait", "examples": [0], "title": "Days", "type": "integer"}, "hour": {"description": "Hour (0-23, '\\*') or a comma-separated list of hours", "examples": ["0, 20"], "title": "Hour", "type": "string"}, "hours": {"description": "Number of hours to wait", "examples": [2], "title": "Hours", "type": "integer"}, "max_quantity": {"description": "Number of stored resources.", "examples": [2], "exclusiveMinimum": 0, "maximum": 10000, "title": "Max Quantity", "type": "integer"}, "minute": {"description": "Minute (0-59, '\\*') or a comma-separated list of minutes", "examples": ["30"], "title": "Minute", "type": "string"}, "minutes": {"description": "Number of minutes to wait", "examples": [1], "title": "Minutes", "type": "integer"}, "month": {"description": "Month (1-12, '\\*') or a comma-separated list of months", "examples": ["1,6"], "title": "Month", "type": "string"}, "resource_name_template": {"description": "Template for resource names.", "examples": ["Snapshot of volume {volume_id} created by policy {lifecycle_policy_id}"], "title": "Resource Name Template", "type": "string"}, "retention_time": {"$ref": "#/components/schemas/CreateIntervalTimeSerializer", "description": "Time after which the resource will be deleted"}, "timezone": {"description": "A pytz timezone. Defaults to UTC.", "examples": ["UTC"], "title": "Timezone", "type": "string"}, "type": {"description": "Type of the schedule.", "enum": ["cron", "interval"], "examples": ["cron"], "title": "Type", "type": "string"}, "week": {"description": "ISO week (1-53, '\\*') or a comma-separated list of weeks", "examples": ["1"], "title": "Week", "type": "string"}, "weeks": {"description": "Number of weeks to wait", "examples": [0], "title": "Weeks", "type": "integer"}}, "title": "PatchScheduleSerializer", "type": "object"}
    UserActionOrderByChoices: {"enum": ["asc", "desc"], "title": "UserActionOrderByChoices", "type": "string"}
    SubnetSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/SubnetSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "SubnetSerializerList", "type": "object"}
    L7RuleListSchema: {"type": "object", "properties": {"count": {"type": "integer", "description": "Number of objects"}, "results": {"type": "array", "description": "Objects", "items": {"$ref": "#/components/schemas/L7RuleSchema"}}}, "example": {"count": 1, "results": [{"compare_type": "STARTS_WITH", "created_at": "2020-11-16T13:48:25+0000", "id": "0ca7bebd-7a54-4977-bca7-e4ac1e612ec7", "invert": false, "key": "key", "operating_status": "ONLINE", "project_id": 1, "provisioning_status": "ACTIVE", "region": "Luxembourg", "region_id": 1, "tags": ["test_tag"], "type": "PATH", "updated_at": "2020-11-16T13:48:26+0000", "value": "/images*"}]}}
    LoadbalancerSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/LoadbalancerSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[LoadbalancerSerializer]", "type": "object"}
    NamespaceListSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/NamespaceSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "NamespaceListSerializer", "type": "object"}
    SchemaFilterSnapshotEnum: {"enum": ["last_name", "last_size", "source_volume_uuid", "type", "uuid", "volume_type"], "title": "SchemaFilterSnapshotEnum", "type": "string"}
    NewInstanceFloatingIpInterfaceSerializer: {"properties": {"source": {"const": "new", "description": "A new floating IP will be created and attached to the instance. A floating IP is a public IP that makes the instance accessible from the internet, even if it only has a private IP. It works like SNAT, allowing outgoing and incoming traffic.", "examples": ["new"], "title": "Source", "type": "string"}}, "required": ["source"], "title": "New floating IP", "type": "object"}
    TestMessageMQBodySerializer: {"properties": {"connection_string": {"description": "Connection string of the following structure \"scheme://username:password@host:port/`virtual_host`\"", "examples": ["amqps://guest:guest@192.168.123.20:5671/user_action_events"], "title": "Connection String", "type": "string"}, "exchange": {"description": "Exchange name", "examples": ["exchange"], "title": "Exchange", "type": "string"}, "routing_key": {"description": "Routing key", "examples": ["routing_key"], "title": "Routing Key", "type": "string"}}, "required": ["connection_string"], "title": "Scheme for sending a test message to MQ", "type": "object"}
    AppDeploymentCreateRequest: {"properties": {"api_keys": {"description": "List of API keys for the application", "examples": [["key1", "key2"]], "items": {"type": "string"}, "title": "Api Keys", "type": "array"}, "application_name": {"description": "Identifier of the application from the catalog", "examples": ["demo-app"], "title": "Application Name", "type": "string"}, "components_configuration": {"additionalProperties": {"$ref": "#/components/schemas/CreateComponentConfiguration"}, "description": "Mapping of component names to their configuration (e.g., `\"model\": {...}`)", "examples": ["model": {"exposed": true, "flavor": "inference-16vcpu-232gib-1xh100-80gb", "scale": {"max": 1, "min": 1}}], "title": "Components Configuration", "type": "object"}, "name": {"description": "Desired name for the new deployment", "maxLength": 15, "title": "Name", "type": "string"}, "regions": {"description": "Geographical regions where the deployment should be created", "examples": [[1, 2]], "items": {"type": "integer"}, "title": "Regions", "type": "array"}}, "required": ["application_name", "name", "regions", "components_configuration"], "title": "AppDeploymentCreateRequest", "type": "object"}
    ResourceDBAASPostgreSQLCPUWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Managed PostgreSQL CPU - Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_cpu_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the cluster", "examples": ["cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_cpu", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the cluster", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceDBAASPostgreSQLCPUWithCostSerializer", "type": "object"}
    RegionCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/RegionSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "RegionCollectionSerializer", "type": "object"}
    InferenceApplicationPricingRequestSerializer: {"properties": {"components": {"additionalProperties": {"$ref": "#/components/schemas/ApplicationComponentPricingSerializer"}, "description": "Dictionary of components configuration for pricing calculation.", "minProperties": 1, "title": "Components", "type": "object"}, "regions": {"description": "List of region IDs where the application will be deployed", "examples": [[1, 2, 7]], "items": {"type": "integer"}, "minItems": 1, "title": "Regions", "type": "array"}}, "required": ["regions", "components"], "title": "InferenceApplicationPricingRequestSerializer", "type": "object"}
    CreateReservedFixedIpSerializer: {"discriminator": {"mapping": {"any_subnet": "#/components/schemas/NewReservedFixedIpAnySubnetSerializer", "external": "#/components/schemas/NewReservedFixedIpExternalSerializer", "ip_address": "#/components/schemas/NewReservedFixedIpSpecificIpAddressSerializer", "port": "#/components/schemas/NewReservedFixedIpSpecificPortSerializer", "subnet": "#/components/schemas/NewReservedFixedIpSpecificSubnetSerializer"}, "propertyName": "type"}, "examples": ["type": "external"], "title": "CreateReservedFixedIpSerializer", "anyOf": ["$ref": "#/components/schemas/NewReservedFixedIpExternalSerializer", "$ref": "#/components/schemas/NewReservedFixedIpSpecificSubnetSerializer", "$ref": "#/components/schemas/NewReservedFixedIpAnySubnetSerializer", "$ref": "#/components/schemas/NewReservedFixedIpSpecificIpAddressSerializer", "$ref": "#/components/schemas/NewReservedFixedIpSpecificPortSerializer"]}
    K8sClusterV2SerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/K8sClusterV2Serializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[K8sClusterV2Serializer]", "type": "object"}
    AIClusterCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/AIClusterSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "AIClusterCollectionSerializer", "type": "object"}
    PGConfValidateSerializer: {"properties": {"errors": {"description": "Errors list", "items": {"type": "string"}, "title": "Errors", "type": "array"}, "is_valid": {"description": "Validity of pg.conf file", "examples": [true, false], "title": "Is Valid", "type": "boolean"}}, "required": ["is_valid", "errors"], "title": "PGConfValidateSerializer", "type": "object"}
    LimitsRequestCreateSerializer: {"properties": {"client_id": {"description": "Client ID that requests the limit increase.", "examples": [1], "title": "Client Id", "type": "integer"}, "description": {"description": "Describe the reason, in general terms.", "examples": ["Scale up mysql cluster"], "maxLength": 1000, "title": "Description", "type": "string"}, "requested_limits": {"$ref": "#/components/schemas/ClientMixedQuotasLimitsSerializer", "description": "Limits you want to increase."}}, "required": ["description", "requested_limits"], "title": "Request to create LimitsRequest.", "type": "object"}
    TotalEgressTrafficWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Egress traffic Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["egress_traffic_baremetal_gbs"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "bytes", "description": "Unit of billing value", "examples": ["bytes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "instance_type": {"$ref": "#/components/schemas/EgressTrafficInstanceType", "description": "Type of the instance", "examples": ["baremetal"]}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "egress_traffic", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "instance_type", "billing_feature_name", "cost", "currency", "err"], "title": "TotalEgressTrafficWithCostSerializer", "type": "object"}
    PortSecurityGroupsListSchema: {"type": "object", "properties": {"count": {"type": "integer", "description": "Number of objects"}, "results": {"type": "array", "description": "Objects", "items": {"$ref": "#/components/schemas/PortSecurityGroupsSchema"}}}, "example": {"count": 1, "results": [{"id": "ae74714c-c380-48b4-87f8-758d656cdad6", "name": "name", "security_groups": [{"id": "4536dba1-93b1-492e-b3df-270b6b9f3650", "name": "name1"}, {"id": "cee2ca1f-507a-4a31-b714-f6c1ffb4bdfa", "name": "name2"}]}]}}
    InstanceCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/InstanceSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "InstanceCollectionSerializer", "type": "object"}
    VRRPIP: {"properties": {"ip_address": {"description": "IP address", "examples": ["127.0.0.1"], "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "role": {"$ref": "#/components/schemas/LoadBalancerInstanceRoleEnum", "description": "LoadBalancer instance role to which VRRP IP belong", "examples": ["MASTER", "BACKUP", "STANDALONE"]}, "subnet_id": {"description": "Subnet UUID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}, "required": ["ip_address", "subnet_id", "role"], "title": "VRRPIP", "type": "object"}
    VIPAttachCandidateSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/VIPAttachCandidateSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[VIPAttachCandidateSerializer]", "type": "object"}
    AccessLevelChoices: {"enum": ["ro", "rw"], "title": "AccessLevelChoices", "type": "string"}
    NameSerializer: {"properties": {"name": {"description": "Name.", "examples": ["my-resource"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}}, "required": ["name"], "title": "NameSerializer", "type": "object"}
    TotalFileShareReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["file_share_t_standard_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "file_share_type": {"description": "Type of the file share", "examples": ["standard"], "title": "File Share Type", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "file_share", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "file_share_type"], "title": "TotalFileShareReportItemSerializer", "type": "object"}
    ResourceBasicVmWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Instance Type: g2s-shared-1-2-25 (1vCPU/2GB RAM/25GB SSD) Luxembourg-2 - Overcommit"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["g2s-shared-1-2-25_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the basic VM", "examples": ["g2s-shared-1-2-25"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the basic VM", "examples": ["basic_vm_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "basic_vm", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the basic VM", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "first_seen", "last_seen", "project_id", "last_name", "uuid", "tags", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceBasicVmWithCostSerializer", "type": "object"}
    Status: {"properties": {"component_inferences": {"additionalProperties": {"$ref": "#/components/schemas/AppInference"}, "description": "Map of components and their inferences", "title": "Component Inferences", "type": "object"}, "consolidated_status": {"$ref": "#/components/schemas/ConsolidatedStatusEnum", "description": "High-level summary of the deployment status across all regions"}, "expose_addresses": {"additionalProperties": {"$ref": "#/components/schemas/ExposeAddress"}, "description": "Map of component keys to their global access endpoints", "title": "Expose Addresses", "type": "object"}, "regions": {"description": "Status details for each deployment region", "items": {"$ref": "#/components/schemas/RegionStatus"}, "title": "Regions", "type": "array"}}, "required": ["regions", "consolidated_status", "expose_addresses", "component_inferences"], "title": "Status", "type": "object"}
    InferenceInstanceApiKeyStatus: {"enum": ["PENDING", "READY"], "title": "InferenceInstanceApiKeyStatus", "type": "string"}
    VolumeDataForLifecyclePolicySerializer: {"properties": {"volume_id": {"description": "Unique identifier of the volume.", "examples": ["3ed9e2ce-f906-47fb-ba32-c25a3f63df4f"], "title": "Volume Id", "type": "string"}, "volume_name": {"description": "Name of the volume.", "examples": ["Volume-1"], "title": "Volume Name", "type": "string"}}, "required": ["volume_id", "volume_name"], "title": "VolumeDataForLifecyclePolicySerializer", "type": "object"}
    RegistryCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/RegistrySerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "RegistryCollectionSerializer", "type": "object"}
    CheckQuotaBeforeVirtualGpuClusterCreationSerializer: {"properties": {"flavor": {"description": "Cluster flavor", "examples": ["g3-ai-32-192-1500-l40s-48-1"], "title": "Flavor", "type": "string"}, "servers_count": {"description": "Number of servers in the cluster", "examples": [3], "exclusiveMaximum": 1000, "exclusiveMinimum": 0, "title": "Servers Count", "type": "integer"}, "servers_settings": {"$ref": "#/components/schemas/VirtualGpuServerSettingsQuotaSerializer", "description": "Configuration settings for the servers in the cluster"}}, "required": ["flavor", "servers_count"], "title": "CheckQuotaBeforeVirtualGpuClusterCreationSerializer", "type": "object"}
    CreateGPUClusterInterfaceSerializer: {"discriminator": {"mapping": {"any_subnet": "#/components/schemas/CreateGPUClusterAnySubnetInterfaceSerializer", "external": "#/components/schemas/CreateGPUClusterExternalInterfaceSerializer", "subnet": "#/components/schemas/CreateGPUClusterSubnetInterfaceSerializer"}, "propertyName": "type"}, "title": "CreateGPUClusterInterfaceSerializer", "anyOf": ["$ref": "#/components/schemas/CreateGPUClusterExternalInterfaceSerializer", "$ref": "#/components/schemas/CreateGPUClusterSubnetInterfaceSerializer", "$ref": "#/components/schemas/CreateGPUClusterAnySubnetInterfaceSerializer"]}
    NewReservedFixedIpSpecificPortSerializer: {"properties": {"port_id": {"description": "Port ID to make a reserved fixed IP (for example, `vip_port_id` of the Load Balancer entity).", "examples": ["77f1394f-2a18-4686-a2eb-acea25146374"], "format": "uuid4", "title": "Port Id", "type": "string"}, "type": {"const": "port", "description": "Must be 'port'.", "title": "Type", "type": "string"}}, "required": ["type", "port_id"], "title": "NewReservedFixedIpSpecificPortSerializer", "type": "object"}
    K8sClusterPoolV2Serializer: {"properties": {"auto_healing_enabled": {"description": "Indicates the status of auto healing", "examples": [true], "title": "Auto Healing Enabled", "type": "boolean"}, "boot_volume_size": {"description": "Size of the boot volume", "examples": [50], "title": "Boot Volume Size", "type": "integer"}, "boot_volume_type": {"description": "Type of the boot volume", "examples": ["ssd_hiiops"], "title": "Boot Volume Type", "type": "string"}, "created_at": {"description": "Date of function creation", "examples": ["2023-02-15T11:53:03+03:00"], "title": "Created At", "type": "string"}, "crio_config": {"additionalProperties": {"type": "string"}, "description": "Crio configuration for pool nodes", "examples": ["default-ulimits": "nofile=1024:2048"], "title": "Crio Config", "type": "object"}, "flavor_id": {"description": "ID of the cluster pool flavor", "examples": ["g1-standard-1-2"], "title": "Flavor Id", "type": "string"}, "id": {"description": "UUID of the cluster pool", "examples": ["f01fd9a0-9548-48ba-82dc-a8c8b2d6f2f1"], "title": "Id", "type": "string"}, "is_public_ipv4": {"description": "Indicates if the pool is public", "examples": [true], "title": "Is Public Ipv4", "type": "boolean"}, "kubelet_config": {"additionalProperties": {"type": "string"}, "description": "Kubelet configuration for pool nodes", "examples": ["podMaxPids": "4096"], "title": "Kubelet Config", "type": "object"}, "labels": {"additionalProperties": {"type": "string"}, "description": "Labels applied to the cluster pool", "examples": ["my-label": "foo"], "title": "Labels", "type": "object"}, "max_node_count": {"description": "Maximum node count in the cluster pool", "examples": [10], "title": "Max Node Count", "type": "integer"}, "min_node_count": {"description": "Minimum node count in the cluster pool", "examples": [1], "title": "Min Node Count", "type": "integer"}, "name": {"description": "Name of the cluster pool", "examples": ["test"], "title": "Name", "type": "string"}, "node_count": {"description": "Node count in the cluster pool", "examples": [2], "title": "Node Count", "type": "integer"}, "servergroup_id": {"default": "", "description": "Server group ID", "examples": ["1772de21-f013-4b70-9f8f-a518985b3bc2"], "title": "Servergroup Id", "type": "string"}, "servergroup_name": {"default": "", "description": "Server group name", "examples": ["my-server-group"], "title": "Servergroup Name", "type": "string"}, "servergroup_policy": {"default": "", "description": "Anti-affinity, affinity or soft-anti-affinity server group policy", "examples": ["anti-affinity"], "title": "Servergroup Policy", "type": "string"}, "status": {"description": "Status of the cluster pool", "examples": ["Running"], "title": "Status", "type": "string"}, "taints": {"additionalProperties": {"type": "string"}, "description": "Taints applied to the cluster pool", "examples": ["my-taint": "bar:NoSchedule"], "title": "Taints", "type": "object"}}, "required": ["auto_healing_enabled", "boot_volume_size", "boot_volume_type", "created_at", "crio_config", "flavor_id", "id", "is_public_ipv4", "kubelet_config", "max_node_count", "min_node_count", "name", "node_count", "status", "labels", "taints"], "title": "K8sClusterPoolV2Serializer", "type": "object"}
    K8sClusterOIDCV2Serializer: {"properties": {"client_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Client ID", "examples": ["kubernetes"], "title": "Client Id"}, "groups_claim": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "JWT claim to use as the user's group", "examples": ["groups"], "title": "Groups Claim"}, "groups_prefix": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Prefix prepended to group claims", "examples": ["oidc:"], "title": "Groups Prefix"}, "issuer_url": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Issuer URL", "examples": ["https://accounts.provider.example"], "title": "Issuer Url"}, "required_claims": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": null, "description": "Key-value pairs that describe required claims in the token", "examples": ["claim": "value"], "title": "Required Claims"}, "signing_algs": {"anyOf": [{"items": {"$ref": "#/components/schemas/OIDCSigningAlgorithmEnum"}, "type": "array"}, "type": "null"], "default": null, "description": "Accepted signing algorithms", "examples": [["RS512"]], "title": "Signing Algs"}, "username_claim": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "JWT claim to use as the user name", "examples": ["sub"], "title": "Username Claim"}, "username_prefix": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Prefix prepended to username claims to prevent clashes", "examples": ["oidc:"], "title": "Username Prefix"}}, "title": "K8sClusterOIDCV2Serializer", "type": "object"}
    CheckQuotaBeforeInstanceCreatingSchema: {"type": "object", "properties": {"flavor": {"type": "string"}, "interfaces": {"type": "array", "description": "Subnet IPs and floating IPs", "items": {"anyOf": ["$ref": "#/components/schemas/NewInterfaceExternalSchema", "$ref": "#/components/schemas/NetworkSubnetFipSchema", "$ref": "#/components/schemas/NetworkAnySubnetFipSchema", "$ref": "#/components/schemas/ReservedFixedIpFipSchema"]}}, "name_templates": {"type": "array", "description": "List of instance name templates. Either this or names must be specified.", "items": {"type": ["string", "null"]}}, "names": {"type": "array", "description": "List of instance names. Either this or `name_templates` must be specified.", "items": {"type": "string"}}, "volumes": {"type": "array", "items": {"$ref": "#/components/schemas/LegacyCreateInstanceVolumePricingRequestSchema"}}}, "example": {"flavor": "g1-standard-1-2", "interfaces": [{"floating_ip": {"source": "new"}, "network_id": "ddc28e44-2acb-499b-985b-831f29432e1c", "subnet_id": "2731a56e-a5c9-44be-80c2-02c57c594573", "type": "subnet"}, {"floating_ip": {"existing_floating_id": "57be69f6-6f6a-4f03-a4ad-8eb86c69ec0a", "source": "existing"}, "network_id": "53609647-2619-420a-b046-59905c8e3370", "subnet_id": "e3c6ee77-48cb-416b-b204-11b492cc776e3", "type": "subnet"}, {"network_id": "783b36b4-3ef4-48ac-879d-5b3ea53180d8", "subnet_id": "382a83e5-1b38-49f9-bd83-730353b29ed4", "type": "subnet"}, {"network_id": "783b36b4-3ef4-48ac-879d-5b3ea53180d8", "type": "any_subnet"}, "type": "external"], "names": ["cirroz1", "cirroz2"], "volumes": [{"size": 10, "source": "image", "type_name": "ssd_hiiops"}, {"size": 5, "source": "new-volume", "type_name": "standard"}, {"snapshot_id": "7cca40d7-a843-4e9f-ae08-62b9a394b1ab", "source": "snapshot"}]}}
    AppDeploymentPatchRequest: {"properties": {"api_keys": {"description": "List of API keys for the application", "examples": [["key1", "key2"]], "items": {"type": "string"}, "title": "Api Keys", "type": "array"}, "components_configuration": {"additionalProperties": {"anyOf": ["$ref": "#/components/schemas/ComponentConfigurationPatch", "type": "null"]}, "description": "Mapping of component names to their configuration (e.g., `\"model\": {...}`)", "examples": ["model": {"scale": {"max": 2}}, "model": {"flavor": "inference-16vcpu-232gib-1xh100-80gb"}], "title": "Components Configuration", "type": "object"}, "regions": {"description": "Geographical regions to be updated for the deployment", "examples": [[1, 2]], "items": {"type": "integer"}, "title": "Regions", "type": "array"}}, "title": "AppDeploymentPatchRequest", "type": "object"}
    NetworkListOrderByChoices: {"enum": ["created_at.asc", "created_at.desc", "name.asc", "name.desc"], "title": "NetworkListOrderByChoices", "type": "string"}
    ResourceFileShareWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["File Shares (Standard) - Gb Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["file_share_t_standard_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "file_share_type": {"description": "Type of the file share", "examples": ["standard"], "title": "File Share Type", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the file share", "examples": ["file_share_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "last_size": {"description": "Size of the file share in bytes", "examples": [100], "title": "Last Size", "type": "integer"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"const": "GiB", "description": "Unit of size", "examples": ["GiB"], "title": "Size Unit", "type": "string"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "file_share", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the file share", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "file_share_type", "first_seen", "last_seen", "project_id", "last_size", "size_unit", "last_name", "uuid", "tags", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceFileShareWithCostSerializer", "type": "object"}
    FloatingIpPricingRequestSerializer: {"examples": ["count": 2], "properties": {"count": {"description": "Number of floating IP addresses", "examples": [2], "title": "Count", "type": "integer"}}, "required": ["count"], "title": "FloatingIpPricingRequestSerializer", "type": "object"}
    GetCronScheduleSerializer: {"properties": {"day": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Day of the month (1-31, '\\*') or a comma-separated list of days", "examples": ["5"], "title": "Day"}, "day_of_week": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Weekday or a comma-separated list of weekdays (mon,tue,wed,thu,fri,sat,sun,\\*)", "examples": ["mon,fri"], "title": "Day Of Week"}, "hour": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Hour (0-23, '\\*') or a comma-separated list of hours", "examples": ["0, 20"], "title": "Hour"}, "id": {"description": "Schedule ID", "examples": ["1488e2ce-f906-47fb-ba32-c25a3f63df4f"], "title": "Id", "type": "string"}, "max_quantity": {"description": "Number of stored resources.", "examples": [2], "exclusiveMinimum": 0, "maximum": 10000, "title": "Max Quantity", "type": "integer"}, "minute": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Minute (0-59, '\\*') or a comma-separated list of minutes", "examples": ["30"], "title": "Minute"}, "month": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Month (1-12, '\\*') or a comma-separated list of months", "examples": ["1,6"], "title": "Month"}, "owner": {"description": "Schedule owner", "examples": ["lifecycle_policy"], "title": "Owner", "type": "string"}, "owner_id": {"description": "Owner ID", "examples": [1], "title": "Owner Id", "type": "integer"}, "resource_name_template": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Template for resource names", "examples": ["reserve snap of the volume {volume_id}"], "title": "Resource Name Template"}, "retention_time": {"anyOf": ["$ref": "#/components/schemas/RetentionTimeSerializer", "type": "null"], "description": "Time after which the resource will be deleted"}, "timezone": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "A pytz timezone. Defaults to UTC.", "examples": ["UTC"], "title": "Timezone"}, "type": {"const": "cron", "description": "Schedule type", "examples": ["cron"], "title": "Type", "type": "string"}, "user_id": {"description": "User ID", "examples": [12], "title": "User Id", "type": "integer"}, "week": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "ISO week (1-53, '\\*') or a comma-separated list of weeks", "examples": ["1"], "title": "Week"}}, "required": ["id", "owner", "owner_id", "user_id", "max_quantity", "retention_time", "type"], "title": "GetCronScheduleSerializer", "type": "object"}
    CaasLogsSerializer: {"properties": {"logs": {"description": "Container logs", "items": {"type": "object"}, "title": "Logs", "type": "array"}}, "required": ["logs"], "title": "CaasLogsSerializer", "type": "object"}
    InstanceMetricsTimeUnitEnum: {"enum": ["day", "hour"], "title": "InstanceMetricsTimeUnitEnum", "type": "string"}
    CostReportPriceDisplayStatus: {"enum": ["error", "hide", "show"], "title": "CostReportPriceDisplayStatus", "type": "string"}
    RoleCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/UserRoleSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "RoleCollectionSerializer", "type": "object"}
    ClientProfileSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/ClientProfileSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ClientProfileSerializerList", "type": "object"}
    K8sClusterCheckLimitsPoolV2Serializer: {"properties": {"boot_volume_size": {"anyOf": [{"maximum": 2000, "minimum": 10, "type": "integer"}, "type": "null"], "default": null, "description": "Boot volume size", "examples": [50], "title": "Boot Volume Size"}, "flavor_id": {"description": "Flavor ID", "examples": ["g1-standard-1-2"], "title": "Flavor Id", "type": "string"}, "max_node_count": {"anyOf": [{"maximum": 200, "minimum": 1, "type": "integer"}, "type": "null"], "default": null, "description": "Maximum node count", "examples": [5], "title": "Max Node Count"}, "min_node_count": {"anyOf": [{"maximum": 200, "minimum": 1, "type": "integer"}, "type": "null"], "default": 1, "description": "Minimum node count", "examples": [3], "title": "Min Node Count"}, "name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Name of the cluster pool", "examples": ["test"], "title": "Name"}, "node_count": {"anyOf": [{"maximum": 200, "minimum": 1, "type": "integer"}, "type": "null"], "default": 1, "description": "Maximum node count", "examples": [5], "title": "Node Count"}, "servergroup_policy": {"anyOf": ["$ref": "#/components/schemas/ServerGroupPolicyEnum", "type": "null"], "default": null, "description": "Server group policy: anti-affinity, soft-anti-affinity or affinity", "examples": ["anti-affinity"]}}, "required": ["flavor_id"], "title": "K8sClusterCheckLimitsPoolV2Serializer", "type": "object"}
    UpdateTagsSerializer: {"additionalProperties": {"anyOf": [{"maxLength": 1024, "minLength": 1, "type": "string"}, "type": "null"], "description": "Tag value. The maximum size for a value is 1024 bytes. Set to `null` in order to delete this tag.", "examples": ["my-tag-value"]}, "propertyNames": {"description": "Tag key. The maximum size for a key is 255 bytes.", "examples": ["my-tag"], "maxLength": 255, "minLength": 1}, "title": "UpdateTagsSerializer", "type": "object"}
    PatchNetworkSerializer: {"properties": {"name": {"description": "Name.", "examples": ["some_name"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "tags": {"anyOf": ["$ref": "#/components/schemas/UpdateTagsSerializer", "type": "null"], "description": "Update key-value tags using JSON Merge Patch semantics (RFC 7386). Provide key-value pairs to add or update tags. Set tag values to `null` to remove tags. Unspecified tags remain unchanged. Read-only tags are always preserved and cannot be modified.\n\n**Examples:**\n\n\\* **Add/update tags:** `{'tags': {'environment': 'production', 'team': 'backend'}}` adds new tags or updates existing ones.\n\n\\* **Delete tags:** `{'tags': {'`old_tag`': null}}` removes specific tags.\n\n\\* **Remove all tags:** `{'tags': null}` removes all user-managed tags (read-only tags are preserved).\n\n\\* **Partial update:** `{'tags': {'environment': 'staging'}}` only updates specified tags.\n\n\\* **Mixed operations:** `{'tags': {'environment': 'production', '`cost_center`': 'engineering', '`deprecated_tag`': null}}` adds/updates 'environment' and '`cost_center`' while removing '`deprecated_tag`', preserving other existing tags.\n\n\\* **Replace all:** first delete existing tags with null values, then add new ones in the same request.", "examples": [{"my-tag": "my-tag-value", "my-tag-to-remove": null}]}}, "title": "PatchNetworkSerializer", "type": "object"}
    ResourceInferenceWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Inference at the Edge - GPU L40s (48 GB Memory) Usage Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["inference_gpu_l40s_48_sec"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"description": "Unit of billing value", "examples": ["H"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the inference deployment", "examples": ["inference-16vcpu-232gib-1xl40s-48gb"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the inference deployment", "examples": ["deployment_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "inference", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the inference deployment", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid", "flavor", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceInferenceWithCostSerializer", "type": "object"}
    GlobalQuotasSerializer: {"properties": {"inference_cpu_millicore_count_limit": {"description": "Inference CPU millicore count limit", "examples": [0], "title": "Inference Cpu Millicore Count Limit", "type": "integer"}, "inference_cpu_millicore_count_usage": {"description": "Inference CPU millicore count usage", "examples": [0], "title": "Inference Cpu Millicore Count Usage", "type": "integer"}, "inference_gpu_a100_count_limit": {"description": "Inference GPU A100 Count limit", "examples": [0], "title": "Inference Gpu A100 Count Limit", "type": "integer"}, "inference_gpu_a100_count_usage": {"description": "Inference GPU A100 Count usage", "examples": [0], "title": "Inference Gpu A100 Count Usage", "type": "integer"}, "inference_gpu_h100_count_limit": {"description": "Inference GPU H100 Count limit", "examples": [0], "title": "Inference Gpu H100 Count Limit", "type": "integer"}, "inference_gpu_h100_count_usage": {"description": "Inference GPU H100 Count usage", "examples": [0], "title": "Inference Gpu H100 Count Usage", "type": "integer"}, "inference_gpu_l40s_count_limit": {"description": "Inference GPU L40s Count limit", "examples": [0], "title": "Inference Gpu L40S Count Limit", "type": "integer"}, "inference_gpu_l40s_count_usage": {"description": "Inference GPU L40s Count usage", "examples": [0], "title": "Inference Gpu L40S Count Usage", "type": "integer"}, "inference_instance_count_limit": {"description": "Inference instance count limit", "examples": [0], "title": "Inference Instance Count Limit", "type": "integer"}, "inference_instance_count_usage": {"description": "Inference instance count usage", "examples": [0], "title": "Inference Instance Count Usage", "type": "integer"}, "keypair_count_limit": {"description": "SSH Keys Count limit", "examples": [100], "title": "Keypair Count Limit", "type": "integer"}, "keypair_count_usage": {"description": "SSH Keys Count usage", "examples": [0], "title": "Keypair Count Usage", "type": "integer"}, "project_count_limit": {"description": "Projects Count limit", "examples": [2], "title": "Project Count Limit", "type": "integer"}, "project_count_usage": {"description": "Projects Count usage", "examples": [1], "title": "Project Count Usage", "type": "integer"}}, "title": "GlobalQuotas object", "type": "object"}
    LaasUserSerializer: {"properties": {"password": {"description": "Password to be used in log shipper config to write logs to LaaS", "examples": ["LnHyPmVor6dAufMtR8GC5WNcNg5NjjAIksjIlFNbaEQ"], "title": "Password", "type": "string"}, "username": {"description": "Username to be used in log shipper config to write logs to LaaS", "examples": ["2ehwccnfzytsnt576dkmvs"], "title": "Username", "type": "string"}}, "required": ["username", "password"], "title": "LaasUserSerializer", "type": "object"}
    UpdateFileShareSerializer: {"properties": {"name": {"description": "Name", "examples": ["some_name"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "share_settings": {"$ref": "#/components/schemas/VastFileShareSettingsInputSerializer", "description": "Configuration settings for the share"}, "tags": {"anyOf": ["$ref": "#/components/schemas/UpdateTagsSerializer", "type": "null"], "description": "Update key-value tags using JSON Merge Patch semantics (RFC 7386). Provide key-value pairs to add or update tags. Set tag values to `null` to remove tags. Unspecified tags remain unchanged. Read-only tags are always preserved and cannot be modified.\n\n**Examples:**\n\n\\* **Add/update tags:** `{'tags': {'environment': 'production', 'team': 'backend'}}` adds new tags or updates existing ones.\n\n\\* **Delete tags:** `{'tags': {'`old_tag`': null}}` removes specific tags.\n\n\\* **Remove all tags:** `{'tags': null}` removes all user-managed tags (read-only tags are preserved).\n\n\\* **Partial update:** `{'tags': {'environment': 'staging'}}` only updates specified tags.\n\n\\* **Mixed operations:** `{'tags': {'environment': 'production', '`cost_center`': 'engineering', '`deprecated_tag`': null}}` adds/updates 'environment' and '`cost_center`' while removing '`deprecated_tag`', preserving other existing tags.\n\n\\* **Replace all:** first delete existing tags with null values, then add new ones in the same request.", "examples": [{"my-tag": "my-tag-value", "my-tag-to-remove": null}]}}, "title": "UpdateFileShareSerializer", "type": "object"}
    ListKeypairSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/KeypairSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListKeypairSerializer", "type": "object"}
    StartVirtualGPUClusterSerializer: {"properties": {"action": {"const": "start", "description": "Action name", "examples": ["start"], "title": "Action", "type": "string"}}, "required": ["action"], "title": "StartVirtualGPUClusterSerializer", "type": "object"}
    TotalDBAASPostgreSQLPublicNetworkWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Managed PostgreSQL Public Network - Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_public_network_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_public_network", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalDBAASPostgreSQLPublicNetworkWithCostSerializer", "type": "object"}
    QuotaThresholdSerializer: {"properties": {"last_message": {"anyOf": ["$ref": "#/components/schemas/QuotasThresholdSerializer", "type": "null"], "description": "A message data"}, "last_sending": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "description": "Time of last successful email sending", "examples": [null], "title": "Last Sending"}, "threshold": {"description": "Quota notification threshold in percentage", "examples": [95], "maximum": 100, "minimum": 60, "title": "Threshold", "type": "integer"}}, "required": ["threshold"], "title": "QuotaThresholdSerializer", "type": "object"}
    SecurityGroupSerializer: {"properties": {"created_at": {"description": "Datetime when the security group was created", "examples": ["2019-06-18T11:56:16+0000"], "format": "date-time", "title": "Created At", "type": "string"}, "description": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Security group description", "examples": ["Some description"], "title": "Description"}, "id": {"description": "Security group ID", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Id", "type": "string"}, "name": {"description": "Security group name", "examples": ["my_security_group"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "project_id": {"description": "Project ID", "examples": [1337], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "revision_number": {"description": "The number of revisions", "examples": [1], "title": "Revision Number", "type": "integer"}, "security_group_rules": {"description": "Security group rules", "items": {"$ref": "#/components/schemas/SecurityGroupRuleSerializer"}, "title": "Security Group Rules", "type": "array"}, "tags_v2": {"description": "Tags for a security group", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags V2", "type": "array"}, "updated_at": {"description": "Datetime when the security group was last updated", "examples": ["2019-06-18T11:57:00+0000"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["project_id", "region_id", "region", "id", "name", "created_at", "updated_at", "revision_number", "tags_v2"], "title": "SecurityGroupSerializer", "type": "object"}
    DDosPriceDetailsSerializer: {"properties": {"feature_name": {"description": "Name of the billing feature", "title": "Feature Name", "type": "string"}, "period": {"description": "Period of the price", "title": "Period", "type": "string"}, "price_currency": {"description": "Currency code (3 letter code per ISO 4217)", "enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SOS", "SRD", "SSP", "STD", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VEF", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XTS", "XUA", "XXX", "YER", "ZAR", "ZMW", "ZWL"], "maxLength": 3, "minLength": 3, "title": "Price Currency", "type": "string"}, "price_per_30d": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of the feature charged per 30 days", "title": "Price Per 30D"}, "price_per_day": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of the feature charged per day", "title": "Price Per Day"}, "price_per_hour": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of the feature charged per hour", "title": "Price Per Hour"}, "unit_name": {"description": "Name of the unit", "title": "Unit Name", "type": "string"}, "unit_size": {"description": "Number of units", "title": "Unit Size", "type": "integer"}}, "required": ["feature_name", "period", "unit_name", "unit_size", "price_currency"], "title": "DDosPriceDetailsSerializer", "type": "object"}
    RegistryUserCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/RegistryUserSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "RegistryUserCollectionSerializer", "type": "object"}
    RequestAssignmentSerializer: {"properties": {"client_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Client ID. Required if `project_id` is specified", "examples": [8], "title": "Client Id"}, "project_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Project ID", "examples": [null], "title": "Project Id"}, "role": {"$ref": "#/components/schemas/CustomerAssignableRole", "description": "User role", "examples": ["ClientAdministrator"]}, "user_id": {"description": "User ID", "examples": [777], "title": "User Id", "type": "integer"}}, "required": ["user_id", "role"], "title": "AssignRoleRequestSchema schema", "type": "object"}
    CreateFileShareSerializer: {"title": "CreateFileShareSerializer", "anyOf": ["$ref": "#/components/schemas/CreateStandardFileShareSerializer", "$ref": "#/components/schemas/CreateVastFileShareSerializer"]}
    PatchLbPoolSerializer: {"properties": {"ca_secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Secret ID of CA certificate bundle", "title": "Ca Secret Id"}, "crl_secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Secret ID of CA revocation list file", "title": "Crl Secret Id"}, "healthmonitor": {"anyOf": ["$ref": "#/components/schemas/PatchLbHealthMonitorSerializer", "type": "null"], "description": "New pool health monitor settings"}, "lb_algorithm": {"$ref": "#/components/schemas/LbAlgorithmEnum", "description": "New load balancer pool algorithm of how to distribute requests", "examples": ["ROUND_ROBIN"]}, "members": {"anyOf": [{"items": {"$ref": "#/components/schemas/CreateLbPoolMemberSerializer"}, "type": "array"}, "type": "null"], "description": "New sequence of load balancer pool members. If members are the same (by address + port), they will be kept as is without recreation and downtime.", "examples": [[{"address": "192.168.40.33", "id": "a7e7e8d6-0bf7-4ac9-8170-831b47ee2ba9", "operating_status": "NO_MONITOR", "protocol_port": 80, "subnet_id": "32283b0b-b560-4690-810c-f672cbb2e28d", "weight": 1}]], "title": "Members"}, "name": {"description": "New pool name", "examples": ["new_pool_name"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "protocol": {"$ref": "#/components/schemas/LbPoolProtocolEnum", "description": "New communication protocol", "examples": ["HTTP"]}, "secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Secret ID for TLS client authentication to the member servers", "title": "Secret Id"}, "session_persistence": {"anyOf": ["$ref": "#/components/schemas/MutateLbSessionPersistence", "type": "null"], "description": "New session persistence settings"}, "timeout_client_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Frontend client inactivity timeout in milliseconds", "examples": [50000], "title": "Timeout Client Data"}, "timeout_member_connect": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member connection timeout in milliseconds", "examples": [50000], "title": "Timeout Member Connect"}, "timeout_member_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member inactivity timeout in milliseconds", "examples": [0], "title": "Timeout Member Data"}}, "title": "PatchLbPoolSerializer", "type": "object"}
    NewInterfaceReservedFixedIpSchema: {"type": "object", "properties": {"ddos_profile": {"type": ["null", "object"], "description": "Advanced DDoS protection.", "allOf": ["$ref": "#/components/schemas/DeprecatedCreateDdosProfileSchema"]}, "interface_name": {"type": "string", "maxLength": 37, "description": "Interface name"}, "port_group": {"type": "integer", "minimum": 0, "maximum": 1, "description": "Each group will be added to the separate trunk."}, "port_id": {"type": "string", "description": "Port ID"}, "security_groups": {"type": "array", "description": "List of security group IDs", "items": {"$ref": "#/components/schemas/MandatoryIdSchema"}}, "type": {"type": "string", "default": "reserved_fixed_ip", "description": "Must be '`reserved_fixed_ip`'. Union tag"}}, "required": ["port_id"], "description": "Instance will be attached to the given port.\nFloating IP will be created and attached to that IP", "example": {"port_id": "59905c8e-2619-420a-b046-536096473370", "type": "reserved_fixed_ip", "security_groups": ["id": "4536dba1-93b1-492e-b3df-270b6b9f3650", "id": "cee2ca1f-507a-4a31-b714-f6c1ffb4bdfa"], "ddos_profile": {"profile_template": 29, "fields": []}, "interface_name": "my-rfip-interface"}}
    TotalVolumeReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["volume_t_standard_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "volume", "title": "Type", "type": "string"}, "volume_type": {"description": "Type of the volume", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "volume_type"], "title": "TotalVolumeReportItemSerializer", "type": "object"}
    NewInterfaceAnySubnetSchema: {"type": "object", "properties": {"ddos_profile": {"type": ["null", "object"], "description": "Advanced DDoS protection.", "allOf": ["$ref": "#/components/schemas/DeprecatedCreateDdosProfileSchema"]}, "interface_name": {"type": "string", "maxLength": 37, "description": "Interface name"}, "ip_family": {"type": "string", "enum": ["dual", "ipv4", "ipv6"], "description": "Which subnets should be selected: IPv4, IPv6 or use dual stack."}, "network_id": {"type": "string", "description": "Port will get an IP address in this network subnet"}, "port_group": {"type": "integer", "minimum": 0, "maximum": 1, "description": "Each group will be added to the separate trunk."}, "security_groups": {"type": "array", "description": "List of security group IDs", "items": {"$ref": "#/components/schemas/MandatoryIdSchema"}}, "type": {"type": "string", "default": "any_subnet", "description": "Must be '`any_subnet`'"}}, "required": ["network_id"], "description": "Instance will be attached to the network subnet with the largest count of available ips", "example": {"network_id": "e3c6ee77-48cb-416b-b204-11b492cc776e3", "type": "any_subnet", "security_groups": ["id": "4536dba1-93b1-492e-b3df-270b6b9f3650", "id": "cee2ca1f-507a-4a31-b714-f6c1ffb4bdfa"], "profile_template": 29, "fields": [], "interface_name": "my-any-subnet-interface"}}
    K8sClusterUpdateV2Serializer: {"properties": {"add_ons": {"$ref": "#/components/schemas/K8sClusterAddonsUpdateV2Serializer", "description": "Cluster add-ons configuration", "examples": ["slurm": {"enabled": true, "file_share_id": "cbc94d0e-06c6-4d12-9e86-9782ba14fc8c", "ssh_key_ids": ["25735292-bd97-44b0-a1af-d7eab876261d", "efc01f3a-35b9-4385-89f9-e38439093ee7"], "worker_count": 2}]}, "authentication": {"anyOf": ["$ref": "#/components/schemas/K8sClusterAuthenticationCreateV2Serializer", "type": "null"], "default": null, "description": "Authentication settings", "examples": ["oidc": {"client_id": "kubernetes", "groups_claim": "groups", "groups_prefix": "oidc:", "issuer_url": "https://accounts.provider.example", "required_claims": {"claim": "value"}, "signing_algs": ["RS256", "RS512"], "username_claim": "sub", "username_prefix": "oidc:"}]}, "autoscaler_config": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": null, "description": "Cluster autoscaler configuration.\n\nIt allows you to override the default cluster-autoscaler parameters provided by the platform with your preferred values.\n\nSupported parameters (in alphabetical order):\n- balance-similar-node-groups (boolean: true/false) - Detect similar node groups and balance the number of nodes between them.\n- expander (string: random, most-pods, least-waste, price, priority, grpc) - Type of node group expander to be used in scale up. Specifying multiple values separated by commas will call the expanders in succession until there is only one option remaining.\n- expendable-pods-priority-cutoff (float) - Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.\n- ignore-daemonsets-utilization (boolean: true/false) - Should CA ignore DaemonSet pods when calculating resource utilization for scaling down.\n- max-empty-bulk-delete (integer) - Maximum number of empty nodes that can be deleted at the same time.\n- max-graceful-termination-sec (integer) - Maximum number of seconds CA waits for pod termination when trying to scale down a node.\n- max-node-provision-time (duration: e.g., '15m') - The default maximum time CA waits for node to be provisioned - the value can be overridden per node group.\n- max-total-unready-percentage (float) - Maximum percentage of unready nodes in the cluster. After this is exceeded, CA halts operations.\n- new-pod-scale-up-delay (duration: e.g., '10s') - Pods less than this old will not be considered for scale-up. Can be increased for individual pods through annotation.\n- ok-total-unready-count (integer) - Number of allowed unready nodes, irrespective of max-total-unready-percentage.\n- scale-down-delay-after-add (duration: e.g., '10m') - How long after scale up that scale down evaluation resumes.\n- scale-down-delay-after-delete (duration: e.g., '10s') - How long after node deletion that scale down evaluation resumes.\n- scale-down-delay-after-failure (duration: e.g., '3m') - How long after scale down failure that scale down evaluation resumes.\n- scale-down-enabled (boolean: true/false) - Should CA scale down the cluster.\n- scale-down-unneeded-time (duration: e.g., '10m') - How long a node should be unneeded before it is eligible for scale down.\n- scale-down-unready-time (duration: e.g., '20m') - How long an unready node should be unneeded before it is eligible for scale down.\n- scale-down-utilization-threshold (float) - The maximum value between the sum of cpu requests and sum of memory requests of all pods running on the node divided by node's corresponding allocatable resource, below which a node can be considered for scale down.\n- scan-interval (duration: e.g., '10s') - How often cluster is reevaluated for scale up or down.\n- skip-nodes-with-custom-controller-pods (boolean: true/false) - If true cluster autoscaler will never delete nodes with pods owned by custom controllers.\n- skip-nodes-with-local-storage (boolean: true/false)
            - If true cluster autoscaler will never delete nodes with pods with local storage, e.g. EmptyDir or HostPath.\n- skip-nodes-with-system-pods (boolean: true/false) - If true cluster autoscaler will never delete nodes with pods from kube-system (except for DaemonSet or mirror pods).", "examples": ["scale-down-unneeded-time": "5m"], "title": "Autoscaler Config"}, "cni": {"anyOf": ["$ref": "#/components/schemas/K8sClusterCNICreateV2Serializer", "type": "null"], "default": null, "description": "Cluster CNI settings", "examples": [{"cilium": {"encryption": true, "hubble_relay": true, "hubble_ui": true, "lb_acceleration": true, "lb_mode": "snat", "tunnel": "geneve"}, "provider": "cilium"}]}, "ddos_profile": {"anyOf": ["$ref": "#/components/schemas/K8sClusterDdosProfileUpdateV2Serializer", "type": "null"], "default": null, "description": "Advanced DDoS Protection profile", "examples": [{"enabled": true, "fields": [{"base_field": 10, "field_value": [45046, 45047]}], "profile_template": 29}, "enabled": false]}, "logging": {"anyOf": ["$ref": "#/components/schemas/K8sClusterLoggingUpdateV2Serializer", "type": "null"], "default": null, "description": "Logging configuration", "examples": [{"destination_region_id": 1, "enabled": true, "retention_policy": {"period": 45}, "topic_name": "my-log-name"}, "enabled": false, null]}}, "title": "K8sClusterUpdateV2Serializer", "type": "object"}
    CreateGPUClusterSubnetInterfaceSerializer: {"properties": {"floating_ip": {"$ref": "#/components/schemas/CreateGPUClusterFloatingIPSerializer", "description": "Floating IP config for this subnet attachment"}, "interface_name": {"description": "Interface name. Defaults to `null` and is returned as `null` in the API response if not set.", "maxLength": 37, "title": "Interface Name", "type": "string"}, "network_id": {"description": "The network where the server will be connected.", "format": "uuid4", "title": "Network Id", "type": "string"}, "subnet_id": {"description": "The server will get an IP address from this subnet.", "format": "uuid4", "title": "Subnet Id", "type": "string"}, "type": {"const": "subnet", "description": "The instance will get an IP address from the selected network. If you choose to add a floating IP, the instance will be reachable from the internet. Otherwise, it will only have a private IP within the network.", "title": "Type", "type": "string"}}, "required": ["type", "network_id", "subnet_id"], "title": "CreateGPUClusterSubnetInterfaceSerializer", "type": "object"}
    RouterExternalDefaultGwSerializer: {"properties": {"enable_snat": {"default": true, "description": "Is SNAT enabled. Defaults to true.", "examples": [true], "title": "Enable Snat", "type": "boolean"}, "type": {"const": "default", "default": "default", "description": "must be 'default'.", "examples": ["default"], "title": "Type", "type": "string"}}, "title": "RouterExternalDefaultGwSerializer", "type": "object"}
    CreateGPUClusterAnySubnetInterfaceSerializer: {"properties": {"floating_ip": {"$ref": "#/components/schemas/CreateGPUClusterFloatingIPSerializer", "description": "Allows the server to have a public IP that can be reached from the internet."}, "interface_name": {"description": "Interface name. Defaults to `null` and is returned as `null` in the API response if not set.", "maxLength": 37, "title": "Interface Name", "type": "string"}, "ip_address": {"description": "You can specify a specific IP address from your subnet.", "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "ip_family": {"$ref": "#/components/schemas/InterfaceIPFamily", "default": "ipv4", "description": "Specify `ipv4`, `ipv6`, or `dual` to enable both.", "examples": ["ipv4"]}, "network_id": {"description": "The network where the server will be connected.", "format": "uuid4", "title": "Network Id", "type": "string"}, "type": {"const": "any_subnet", "description": "Server will be attached to a subnet with the largest count of free IPs.", "title": "Type", "type": "string"}}, "required": ["type", "network_id"], "title": "CreateGPUClusterAnySubnetInterfaceSerializer", "type": "object"}
    InferenceInstanceLogSerializerV3: {"properties": {"message": {"description": "Log message.", "examples": ["GET /v1/predictions"], "title": "Message", "type": "string"}, "pod": {"description": "Pod name.", "examples": ["iate-container-8568ff8fc7-z7vx9"], "title": "Pod", "type": "string"}, "region_id": {"description": "Region ID where the container is deployed.", "examples": [7], "title": "Region Id", "type": "integer"}, "time": {"description": "Log message timestamp in ISO 8601 format.", "examples": ["2024-10-14T14:54:04.82851142Z"], "format": "date-time", "title": "Time", "type": "string"}}, "required": ["time", "region_id", "pod", "message"], "title": "InferenceInstanceLogSerializerV3", "type": "object"}
    FaasAutoscalingSerializer: {"properties": {"max_instances": {"description": "The maximum number of instances to run.", "examples": [5], "maximum": 50, "minimum": 1, "title": "Max Instances", "type": "integer"}, "min_instances": {"description": "The minimum number of instances to run.", "examples": [1], "maximum": 50, "minimum": 0, "title": "Min Instances", "type": "integer"}}, "required": ["min_instances", "max_instances"], "title": "FaasAutoscalingSerializer", "type": "object"}
    SchemaFilterAiClusterEnum: {"enum": ["flavor", "last_name", "type", "uuid"], "title": "SchemaFilterAiClusterEnum", "type": "string"}
    BillingReservationPricingRequestSerializer: {"examples": [{"has_windows": false, "period": "MONTHS12", "resources": [{"resource_name": "bm1-hf-medium", "resource_type": "flavor", "resource_value": 2}]}], "properties": {"client_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "title": "Client Id"}, "has_windows": {"default": false, "title": "Has Windows", "type": "boolean"}, "period": {"enum": ["MONTHS12", "MONTHS36"], "title": "Period", "type": "string"}, "resources": {"items": {"$ref": "#/components/schemas/BillingReservationPricingResourceRequestSerializer"}, "title": "Resources", "type": "array"}}, "required": ["period", "resources"], "title": "BillingReservationPricingRequestSerializer", "type": "object"}
    ClientProfileFieldSerializer: {"properties": {"base_field": {"anyOf": ["type": "integer", "type": "null"], "description": "ID of DDoS profile field", "examples": [10], "title": "Base Field"}, "default": {"anyOf": [{"maxLength": 100, "type": "string"}, "type": "null"], "description": "Predefined default value for the field if not specified", "examples": [null], "title": "Default"}, "description": {"anyOf": [{"maxLength": 255, "type": "string"}, "type": "null"], "description": "Detailed description explaining the field's purpose and usage guidelines", "examples": ["ARK server ports. Valid port values are in range 1000-65535"], "title": "Description"}, "field_name": {"anyOf": ["type": "string", "type": "null"], "description": "Name of DDoS profile field", "examples": ["ARK Ports"], "title": "Field Name"}, "field_type": {"anyOf": ["type": "string", "type": "null"], "description": "Data type classification of the field (e.g., string, integer, array)", "examples": [null], "title": "Field Type"}, "field_value": {"description": "Complex value. Only one of 'value' or '`field_value`' must be specified.", "examples": [45046, 45047], "title": "Field Value"}, "id": {"description": "Unique identifier for the DDoS protection field", "examples": [11], "title": "Id", "type": "integer"}, "name": {"description": "Human-readable name of the protection field", "examples": ["ARK Ports"], "maxLength": 30, "title": "Name", "type": "string"}, "required": {"anyOf": ["type": "boolean", "type": "null"], "description": "Indicates whether this field must be provided when creating a protection profile", "examples": [true], "title": "Required"}, "validation_schema": {"description": "JSON schema defining validation rules and constraints for the field value", "examples": [{"items": {"maximum": 65535, "minimum": 1000, "type": "integer"}, "minItems": 1, "type": "array"}], "title": "Validation Schema"}, "value": {"anyOf": ["type": "string", "type": "null"], "description": "Basic type value. Only one of 'value' or '`field_value`' must be specified.", "examples": [null], "title": "Value"}}, "required": ["id", "name", "description", "field_type", "required", "default", "validation_schema", "value", "field_value", "base_field", "field_name"], "title": "ClientProfileFieldSerializer", "type": "object"}
    NewInterfaceFloatingIpSchema: {"type": "object", "properties": {"existing_floating_id": {"type": "string", "description": "If source is 'existing', existing floating IP ID must be specified"}, "source": {"type": "string", "enum": ["existing", "new"], "description": "Will the floating for this subnet's IP be created or reused?"}}, "required": ["source"], "description": "NewInterfaceFloatingIpSerializer schema"}
    TagCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "TagCollectionSerializer", "type": "object"}
    RegistryUserUpdateResponseSerializer: {"properties": {"created_at": {"description": "User creation date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Created At", "type": "string"}, "duration": {"description": "User account operating time, days", "examples": [14], "title": "Duration", "type": "integer"}, "expires_at": {"description": "User operation end date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Expires At", "type": "string"}, "id": {"description": "User ID", "examples": [1], "title": "Id", "type": "integer"}, "name": {"description": "User name", "examples": ["user1"], "title": "Name", "type": "string"}, "read_only": {"default": false, "description": "Read-only user", "examples": [false], "title": "Read Only", "type": "boolean"}, "secret": {"default": "", "description": "User secret", "title": "Secret", "type": "string"}}, "required": ["id", "name", "duration", "created_at", "expires_at"], "title": "RegistryUserUpdateResponseSerializer", "type": "object"}
    RegionSerializerAi: {"properties": {"access_level": {"$ref": "#/components/schemas/RegionAccessType", "description": "The access level of the region in string format.", "examples": ["core"]}, "available_volume_types": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, "type": "null"], "default": null, "description": "List of available volume types, 'standard', '`ssd_hiiops`', 'cold'].", "examples": [["standard", "ssd_hiiops", "cold"]], "title": "Available Volume Types"}, "available_volume_types_set": {"anyOf": [{"items": {"type": "string"}, "type": "array", "uniqueItems": true}, "type": "null"], "default": null, "description": "Set of available volume types, 'standard', '`ssd_hiiops`', 'cold'].", "examples": [["standard", "ssd_hiiops", "cold"]], "title": "Available Volume Types Set"}, "country": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Country", "examples": ["LU"], "title": "Country"}, "created_on": {"description": "A datetime object that is automatically generated when the region is created.", "examples": ["2019-12-31T23:59:59Z"], "format": "date-time", "title": "Created On", "type": "string"}, "ddos_endpoint": {"anyOf": ["$ref": "#/components/schemas/ServiceEndpointSerializer", "type": "null"], "default": null, "deprecated": true, "description": "DDoS endpoint object"}, "ddos_endpoint_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "deprecated": true, "description": "DDoS endpoint ID", "examples": [3], "title": "Ddos Endpoint Id"}, "display_name": {"description": "Unique constraint. Display name", "examples": ["Luxembourg 1"], "title": "Display Name", "type": "string"}, "endpoint_type": {"$ref": "#/components/schemas/RegionEndpointType", "description": "Endpoint type", "examples": ["public"]}, "external_network_id": {"description": "External network ID for Neutron", "examples": ["c843c3e6-ef4d-4b92-8db2-e16ac05c5650"], "title": "External Network Id", "type": "string"}, "has_ai": {"description": "Flag indicating if a region has AI capabilities available", "examples": [true], "title": "Has Ai", "type": "boolean"}, "has_ai_gpu": {"description": "Flag indicating if a region has AI GPUs available", "examples": [true], "title": "Has Ai Gpu", "type": "boolean"}, "has_baremetal": {"description": "Region has bare metal capability", "examples": [false], "title": "Has Baremetal", "type": "boolean"}, "has_basic_vm": {"description": "Region has basic vm capability", "examples": [false], "title": "Has Basic Vm", "type": "boolean"}, "has_ddos": {"description": "Region has Advanced DDoS Protection", "examples": [true, false], "title": "Has Ddos", "type": "boolean"}, "has_k8s": {"description": "Flag indicating if a region is managed kubernetes available", "examples": [true], "title": "Has K8S", "type": "boolean"}, "has_kvm": {"description": "Region has KVM virtualization capability", "examples": [true], "title": "Has Kvm", "type": "boolean"}, "has_sfs": {"description": "Region has SFS capability", "examples": [false], "title": "Has Sfs", "type": "boolean"}, "id": {"description": "Region ID. It automatically is being generated when it is created", "examples": [1], "title": "Id", "type": "integer"}, "keystone": {"$ref": "#/components/schemas/KeystoneSerializerAi", "description": "Keystone object in the JSON format"}, "keystone_id": {"description": "Foreign key for Keystone entity", "examples": [1], "title": "Keystone Id", "type": "integer"}, "keystone_name": {"description": "Region name exactly as stated in keystone", "examples": ["ED-8"], "title": "Keystone Name", "type": "string"}, "metrics_database": {"anyOf": ["$ref": "#/components/schemas/MetricsDatabaseSerializer", "type": "null"], "description": "Metrics database object in JSON format"}, "metrics_database_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Foreign key to Metrics database entity", "examples": [1], "title": "Metrics Database Id"}, "novnc_proxy_url": {"anyOf": ["type": "string", "type": "null"], "description": "NoVNC console proxy URL", "examples": ["http://example.com:6080/"],
          "title": "Novnc Proxy Url"}, "serial_proxy_url": {"anyOf": ["type": "string", "type": "null"], "description": "Serial console proxy URL", "examples": ["wss://example.com:6083/"], "title": "Serial Proxy Url"}, "spice_proxy_url": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Spice console proxy URL", "examples": ["http://example.com:6082/"], "title": "Spice Proxy Url"}, "state": {"$ref": "#/components/schemas/RegionState", "description": "Region state", "examples": ["NEW"]}, "task_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "deprecated": true, "description": "This field is deprecated and can be ignored", "examples": [null], "title": "Task Id"}, "vlan_physical_network": {"description": "Physical network name to create vlan networks", "examples": ["br-ex"], "title": "Vlan Physical Network", "type": "string"}, "zone": {"anyOf": ["$ref": "#/components/schemas/Zone", "type": "null"], "description": "Zone", "examples": ["EMEA"]}}, "required": ["id", "display_name", "keystone_name", "state", "zone", "endpoint_type", "external_network_id", "novnc_proxy_url", "serial_proxy_url", "created_on", "keystone_id", "keystone", "has_kvm", "has_baremetal", "has_basic_vm", "has_sfs", "has_ddos", "vlan_physical_network", "metrics_database", "access_level", "has_k8s", "has_ai", "has_ai_gpu"], "title": "Region object", "type": "object"}
    ResourceFunctionCallsSerializer: {"description": "These properties are common for all individual function calls\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["faas_function_calls_piece"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "MLS", "description": "Unit of billing value", "examples": ["MLS"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the function call", "examples": ["function_call_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "functions_calls", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the function call", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid"], "title": "ResourceFunctionCallsSerializer", "type": "object"}
    BaremetalGpuServerSettingsQuotaSerializer: {"properties": {"interfaces": {"description": "List of interfaces", "items": {"discriminator": {"mapping": {"any_subnet": "#/components/schemas/AnySubnetInterfaceInputSerializer", "external": "#/components/schemas/ExternalInterfaceInputSerializer", "subnet": "#/components/schemas/SubnetInterfaceInputSerializer"}, "propertyName": "type"}, "anyOf": ["$ref": "#/components/schemas/ExternalInterfaceInputSerializer", "$ref": "#/components/schemas/SubnetInterfaceInputSerializer", "$ref": "#/components/schemas/AnySubnetInterfaceInputSerializer"]}, "title": "Interfaces", "type": "array"}}, "title": "BaremetalGpuServerSettingsQuotaSerializer", "type": "object"}
    PatchInferenceInstanceContainerProbeConfigurationInSerializerV2: {"properties": {"enabled": {"description": "Whether the probe is enabled or not.", "examples": [true, false], "title": "Enabled", "type": "boolean"}, "probe": {"$ref": "#/components/schemas/PatchContainerProbeInSerializerV2", "description": "Probe configuration (exec, `http_get` or `tcp_socket`)"}}, "title": "PatchInferenceInstanceContainerProbeConfigurationInSerializerV2", "type": "object"}
    ProtocolsOnPortSerializer: {"properties": {"port": {"description": "Network port number for which protocols are configured", "examples": ["80"], "title": "Port", "type": "string"}, "protocols": {"description": "List of network protocols enabled on the specified port", "examples": [["TCP", "HTTP"]], "items": {"type": "string"}, "title": "Protocols", "type": "array"}}, "required": ["port", "protocols"], "title": "ProtocolsOnPortSerializer", "type": "object"}
    ResourceFunctionsWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Functions - Total Compute (GB-seconds), Luxembourg-1 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["faas_function_resources_sec"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "GBS", "description": "Unit of billing value", "examples": ["GBS"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the function", "examples": ["function_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "functions", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the function", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceFunctionsWithCostSerializer", "type": "object"}
    LbListenerProtocolEnum: {"enum": ["HTTP", "HTTPS", "PROMETHEUS", "TCP", "TERMINATED_HTTPS", "UDP"], "title": "LbListenerProtocolEnum", "type": "string"}
    SnapshotSerializer: {"properties": {"created_at": {"description": "Datetime when the snapshot was created", "examples": ["2019-05-29T05:32:41+0000"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"description": "Task that created this entity", "examples": ["2358e3b1-5c42-4705-8950-6ddcfc19c3bd"], "format": "uuid4", "title": "Creator Task Id", "type": "string"}, "description": {"anyOf": ["type": "string", "type": "null"], "description": "Snapshot description", "examples": ["Snapshot description"], "title": "Description"}, "id": {"description": "Snapshot ID", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "format": "uuid4", "title": "Id", "type": "string"}, "name": {"description": "Snapshot name", "examples": ["my-snapshot"], "title": "Name", "type": "string"}, "project_id": {"description": "Project ID", "examples": [1337], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "size": {"description": "Snapshot size, GiB", "examples": [20], "title": "Size", "type": "integer"}, "status": {"$ref": "#/components/schemas/SnapshotStatusChoices", "description": "Snapshot status", "examples": ["available"]}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "updated_at": {"description": "Datetime when the snapshot was last updated", "examples": ["2019-05-29T05:39:20+0000"], "format": "date-time", "title": "Updated At", "type": "string"}, "volume_id": {"description": "ID of the volume this snapshot was made from", "examples": ["67baa7d1-08ea-4fc5-bef2-6b2465b7d227"], "format": "uuid4", "title": "Volume Id", "type": "string"}}, "required": ["project_id", "region_id", "region", "id", "name", "description", "status", "size", "volume_id", "created_at", "updated_at", "tags", "creator_task_id", "task_id"], "title": "SnapshotSerializer", "type": "object"}
    ClientUsersSerializer: {"properties": {"activated": {"description": "True if the user is active", "examples": [true], "title": "Activated", "type": "boolean"}, "email": {"description": "User email", "examples": ["johnsmith@gmail.com"], "format": "email", "title": "Email", "type": "string"}, "id": {"description": "User ID", "examples": [123], "title": "Id", "type": "integer"}, "is_admin": {"description": "True if the user has admin role", "examples": [true], "title": "Is Admin", "type": "boolean"}, "name": {"description": "User name", "examples": ["John"], "title": "Name", "type": "string"}}, "required": ["id", "name", "email", "activated", "is_admin"], "title": "Client users schema", "type": "object"}
    LoadbalancerMetricsSerializer: {"properties": {"cpu_util": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "CPU utilization, % (max 100% for multi-core)", "examples": [8], "title": "Cpu Util"}, "memory_util": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "RAM utilization, %", "examples": [33.28411162695459], "title": "Memory Util"}, "network_Bps_egress": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Network out, bytes per second", "examples": [102], "title": "Network Bps Egress"}, "network_Bps_ingress": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Network in, bytes per second", "examples": [102], "title": "Network Bps Ingress"}, "network_pps_egress": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Network out, packets per second", "examples": [0.7], "title": "Network Pps Egress"}, "network_pps_ingress": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Network in, packets per second", "examples": [0.7], "title": "Network Pps Ingress"}, "time": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Timestamp", "examples": ["2020-07-07T12:57:00Z"], "title": "Time"}}, "title": "LoadbalancerMetricsSerializer", "type": "object"}
    OperatingStatusEnum: {"enum": ["DEGRADED", "DRAINING", "ERROR", "NO_MONITOR", "OFFLINE", "ONLINE"], "title": "OperatingStatusEnum", "type": "string"}
    PGClusterShortSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/PGClusterShortSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[PGClusterShortSerializer]", "type": "object"}
    TotalExternalIpReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["externalip_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "external_ip", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalExternalIpReportItemSerializer", "type": "object"}
    SubnetSerializer: {"properties": {"available_ips": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Number of available ips in subnet", "examples": [250], "title": "Available Ips"}, "cidr": {"description": "CIDR", "examples": ["192.168.13.0/24"], "format": "ipvanynetwork", "title": "Cidr", "type": "string"}, "created_at": {"description": "Datetime when the subnet was created", "examples": ["2019-06-13T13:58:12+0000"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "Task that created this entity", "examples": ["5cc890da-d031-4a23-ac31-625edfa22812"], "title": "Creator Task Id"}, "dns_nameservers": {"anyOf": [{"items": {"format": "ipvanyaddress", "type": "string"}, "type": "array"}, "type": "null"], "default": null, "description": "List IP addresses of a DNS resolver reachable from the network", "examples": [["8.8.8.8", "8.8.4.4"]], "title": "Dns Nameservers"}, "enable_dhcp": {"description": "True if DHCP should be enabled", "examples": [true], "title": "Enable Dhcp", "type": "boolean"}, "gateway_ip": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "default": null, "description": "Default GW IPv4 address, advertised in DHCP routes of this subnet. If null, no gateway is advertised by this subnet.", "examples": ["192.168.13.1"], "title": "Gateway Ip"}, "has_router": {"default": false, "deprecated": true, "description": "Deprecated. Always returns `false`.", "examples": [false], "title": "Has Router", "type": "boolean"}, "host_routes": {"anyOf": [{"items": {"$ref": "#/components/schemas/RouteOutSerializer"}, "type": "array"}, "type": "null"], "default": null, "description": "List of custom static routes to advertise via DHCP.", "examples": [[]], "title": "Host Routes"}, "id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "Subnet id.", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "title": "Id"}, "ip_version": {"$ref": "#/components/schemas/IPVersion", "description": "IP version", "examples": [4]}, "name": {"description": "Subnet name", "examples": ["subnet_3"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "network_id": {"description": "Network ID", "examples": ["b30d0de7-bca2-4c83-9c57-9e645bd2cc92"], "format": "uuid4", "title": "Network Id", "type": "string"}, "project_id": {"description": "Project ID", "examples": [1337], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "total_ips": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Total number of ips in subnet", "examples": [253], "title": "Total Ips"}, "updated_at": {"description": "Datetime when the subnet was last updated", "examples": ["2019-06-13T13:58:12+0000"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["project_id",
        "region_id", "region", "name", "network_id", "ip_version", "enable_dhcp", "cidr", "tags", "created_at", "updated_at"], "title": "SubnetSerializer", "type": "object"}
    FileShareSerializer: {"properties": {"connection_point": {"anyOf": ["type": "string", "type": "null"], "description": "Connection point. Can be null during File share creation", "examples": ["10.254.0.43:/shares/share-7c14ca01-ea5e-4d85-a6e2-c104fe6b561a"], "title": "Connection Point"}, "created_at": {"description": "Datetime when the file share was created", "examples": ["2023-04-25T11:06:49.226920"], "title": "Created At", "type": "string"}, "creator_task_id": {"description": "Task that created this entity", "examples": ["6ab1ead7-8640-4ae9-9e20-9e0bafcd2eca"], "format": "uuid4", "title": "Creator Task Id", "type": "string"}, "id": {"description": "File share ID", "examples": ["bd8c47ee-e565-4e26-8840-b537e6827b08"], "format": "uuid4", "title": "Id", "type": "string"}, "name": {"description": "File share name", "examples": ["test-sfs"], "title": "Name", "type": "string"}, "network_id": {"description": "Network ID.", "examples": ["e72fd98e-32fa-474d-b0a3-bca11c3064ff"], "format": "uuid4", "title": "Network Id", "type": "string"}, "network_name": {"description": "Network name.", "examples": ["File_share_test-sfs"], "title": "Network Name", "type": "string"}, "project_id": {"description": "Project ID", "examples": [1337], "title": "Project Id", "type": "integer"}, "protocol": {"description": "File share protocol", "examples": ["NFS"], "title": "Protocol", "type": "string"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "share_network_name": {"anyOf": ["type": "string", "type": "null"], "description": "Share network name. May be null if the file share was created with volume type VAST", "examples": ["File_share_test-sfs_network"], "title": "Share Network Name"}, "share_settings": {"$ref": "#/components/schemas/ShareSettingsSerializer", "description": "Share settings specific to the file share type"}, "size": {"description": "File share size in GiB", "examples": [10], "minimum": 1, "title": "Size", "type": "integer"}, "status": {"$ref": "#/components/schemas/FileShareStatusChoices", "description": "File share status", "examples": ["available"]}, "subnet_id": {"description": "Subnet ID.", "examples": ["ac601bb9-4d77-4356-96de-66ab29711815"], "format": "uuid4", "title": "Subnet Id", "type": "string"}, "subnet_name": {"description": "Subnet name.", "examples": ["subnet_test-sfs"], "title": "Subnet Name", "type": "string"}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": ["22b1eau7-8641-4ae9-9n20-9e0b5fcd2gca"], "title": "Task Id"}, "type_name": {"$ref": "#/components/schemas/FileShareTypeName", "description": "File share type name", "examples": ["standard"]}, "volume_type": {"$ref": "#/components/schemas/FileShareShareType", "deprecated": true, "description": "Deprecated. Use `type_name` instead. File share disk type", "examples": ["default_share_type"]}}, "required": ["project_id", "region_id", "region", "connection_point", "created_at", "creator_task_id", "id", "tags", "name", "network_id", "network_name", "protocol", "share_network_name", "size", "status", "subnet_id", "subnet_name", "task_id", "volume_type", "type_name", "share_settings"], "title": "FileShareSerializer",
      "type": "object"}
    PortAndInstanceCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/PortAndInstanceSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "PortAndInstanceCollectionSerializer", "type": "object"}
    MutateClientProfileSerializer: {"properties": {"fields": {"description": "List of field configurations that customize the protection parameters for this profile", "examples": [[{"base_field": 10, "field_value": [45046, 45047]}]], "items": {"$ref": "#/components/schemas/CreateClientProfileFieldSerializer"}, "title": "Fields", "type": "array"}, "ip_address": {"anyOf": [{"format": "ipv4", "type": "string"}, {"format": "ipv6", "type": "string"}], "description": "IP address that will be protected by the DDoS protection profile", "examples": ["11.111.111.1"], "title": "Ip Address"}, "profile_template": {"description": "Unique identifier of the DDoS protection template to use for this profile", "examples": [123], "title": "Profile Template", "type": "integer"}}, "required": ["profile_template", "ip_address"], "title": "MutateClientProfileSerializer", "type": "object"}
    CostReportResourcesRequestSerializer: {"additionalProperties": false, "properties": {"enable_last_day": {"default": false, "description": "Expenses for the last specified day are taken into account. As the default, False.", "examples": [false], "title": "Enable Last Day", "type": "boolean"}, "limit": {"default": 10, "description": "The response resources limit. Defaults to 10.", "examples": [10], "exclusiveMinimum": 0, "title": "Limit", "type": "integer"}, "offset": {"default": 0, "description": "The response resources offset.", "examples": [0], "minimum": 0, "title": "Offset", "type": "integer"}, "projects": {"description": "List of project IDs", "examples": [[16, 17, 18, 19, 20]], "items": {"type": "integer"}, "title": "Projects", "type": "array"}, "regions": {"description": "List of region IDs.", "examples": [[1, 2, 3]], "items": {"type": "integer"}, "title": "Regions", "type": "array"}, "response_format": {"$ref": "#/components/schemas/CostReportResourcesResponseFormat", "default": "json", "description": "Format of the response (csv or json).", "examples": ["csv_records", "json"]}, "rounding": {"default": true, "description": "Round cost values to 5 decimal places. When false, returns full precision.", "title": "Rounding", "type": "boolean"}, "schema_filter": {"description": "Extended filter for field filtering.", "discriminator": {"mapping": {"ai_cluster": "#/components/schemas/SchemaFilterAiClusterSerializer", "ai_virtual_cluster": "#/components/schemas/SchemaFilterAiVirtualClusterSerializer", "backup": "#/components/schemas/SchemaFilterBackupSerializer", "baremetal": "#/components/schemas/SchemaFilterBaremetalSerializer", "basic_vm": "#/components/schemas/SchemaFilterBasicVmSerializer", "containers": "#/components/schemas/SchemaFilterContainersSerializer", "dbaas_postgresql_connection_pooler": "#/components/schemas/SchemaFilterDBAASPostgreSQLPoolerSerializer", "dbaas_postgresql_cpu": "#/components/schemas/SchemaFilterDBAASPostgreSQLCPUSerializer", "dbaas_postgresql_memory": "#/components/schemas/SchemaFilterDBAASPostgreSQLMemorySerializer", "dbaas_postgresql_public_network": "#/components/schemas/SchemaFilterDBAASPostgreSQLPublicNetworkSerializer", "dbaas_postgresql_volume": "#/components/schemas/SchemaFilterDBAASPostgreSQLVolumeSerializer", "egress_traffic": "#/components/schemas/SchemaFilterEgressTrafficSerializer", "external_ip": "#/components/schemas/SchemaFilterExternalIpSerializer", "file_share": "#/components/schemas/SchemaFilterFileShareSerializer", "floatingip": "#/components/schemas/SchemaFilterFloatingIpSerializer", "functions": "#/components/schemas/SchemaFilterFunctionsSerializer", "functions_calls": "#/components/schemas/SchemaFilterFunctionsCallsSerializer", "functions_traffic": "#/components/schemas/SchemaFilterFunctionsTrafficSerializer", "image": "#/components/schemas/SchemaFilterImageSerializer", "inference": "#/components/schemas/SchemaFilterInferenceSerializer", "instance": "#/components/schemas/SchemaFilterInstanceSerializer", "load_balancer": "#/components/schemas/SchemaFilterLoadBalancerSerializer", "log_index": "#/components/schemas/SchemaFilterLogIndexSerializer", "snapshot": "#/components/schemas/SchemaFilterSnapshotSerializer", "volume": "#/components/schemas/SchemaFilterVolumeSerializer"}, "propertyName": "type"}, "examples": [{"field": "flavor", "type": "instance", "values": ["g1-standard-1-2"]}], "title": "Schema Filter", "anyOf": ["$ref": "#/components/schemas/SchemaFilterSnapshotSerializer", "$ref": "#/components/schemas/SchemaFilterInstanceSerializer", "$ref": "#/components/schemas/SchemaFilterAiClusterSerializer", "$ref": "#/components/schemas/SchemaFilterAiVirtualClusterSerializer", "$ref": "#/components/schemas/SchemaFilterBasicVmSerializer", "$ref": "#/components/schemas/SchemaFilterBaremetalSerializer", "$ref": "#/components/schemas/SchemaFilterVolumeSerializer", "$ref": "#/components/schemas/SchemaFilterFileShareSerializer", "$ref": "#/components/schemas/SchemaFilterImageSerializer", "$ref": "#/components/schemas/SchemaFilterFloatingIpSerializer", "$ref": "#/components/schemas/SchemaFilterEgressTrafficSerializer",
            "$ref": "#/components/schemas/SchemaFilterLoadBalancerSerializer", "$ref": "#/components/schemas/SchemaFilterExternalIpSerializer", "$ref": "#/components/schemas/SchemaFilterBackupSerializer", "$ref": "#/components/schemas/SchemaFilterLogIndexSerializer", "$ref": "#/components/schemas/SchemaFilterFunctionsSerializer", "$ref": "#/components/schemas/SchemaFilterFunctionsCallsSerializer", "$ref": "#/components/schemas/SchemaFilterFunctionsTrafficSerializer", "$ref": "#/components/schemas/SchemaFilterContainersSerializer", "$ref": "#/components/schemas/SchemaFilterInferenceSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLVolumeSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLPublicNetworkSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLCPUSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLMemorySerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLPoolerSerializer"]}, "sorting": {"default": ["project": "asc"], "description": "List of sorting filters (JSON objects) fields: project. directions: asc, desc.", "items": {"$ref": "#/components/schemas/CostReportResourcesSortingRequestSerializer"}, "title": "Sorting", "type": "array"}, "tags": {"$ref": "#/components/schemas/TagsFilterSerializer", "description": "Filter by tags", "examples": [{"condition_type": "OR", "conditions": [{"key": "os_version", "strict": true, "value": "22.04"}, {"key": "os_version", "strict": true, "value": "23.04"}]}]}, "time_from": {"description": "The start date of the report period (ISO 8601). The report starts from the beginning of this day.", "examples": ["2023-01-01T00:00:00Z"], "format": "date-time", "title": "Time From", "type": "string"}, "time_to": {"description": "The end date of the report period (ISO 8601). The report ends just before the beginning of this day.", "examples": ["2023-02-01T00:00:00Z"], "format": "date-time", "title": "Time To", "type": "string"}, "types": {"description": "List of resource types to be filtered in the report.", "examples": [["egress_traffic", "instance"]], "items": {"$ref": "#/components/schemas/PrebillingResourceTypes"}, "title": "Types", "type": "array"}}, "required": ["time_from", "time_to"], "title": "CostReportResourcesRequestSerializer", "type": "object"}
    RouterSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/RouterSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[RouterSerializer]", "type": "object"}
    NameSerializerPydantic: {"properties": {"name": {"description": "Name.", "examples": ["some_name"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}}, "required": ["name"], "title": "NameSerializerPydantic", "type": "object"}
    ReservationSerializer: {"properties": {"resource_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "ID of the instance or load balancer the IP is attached to", "examples": ["83ed4ea6-bcae-4100-9e4d-36e541ff919b"], "title": "Resource Id"}, "resource_type": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Resource type of the resource the IP is attached to", "examples": ["instance"], "title": "Resource Type"}, "status": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "IP reservation status", "examples": ["attached"], "title": "Status"}}, "title": "ReservationSerializer", "type": "object"}
    FunctionsOrderByChoices: {"enum": ["created_at.asc", "created_at.desc", "name.asc", "name.desc"], "title": "FunctionsOrderByChoices", "type": "string"}
    ResourceFloatingIpWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Floating IP address Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["floating_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "ip_address": {"description": "IP address", "examples": ["10.100.178.92"], "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "last_name": {"description": "Name of the floating IP", "examples": ["10.100.178.92"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "floatingip", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the floating IP", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "ip_address", "uuid", "tags", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceFloatingIpWithCostSerializer", "type": "object"}
    CreateAllowPortAddressPairsSerializer: {"properties": {"allowed_address_pairs": {"default": [], "description": "A set of zero or more allowed port address pair and/or subnet masks", "examples": [[{"ip_address": "192.168.123.20", "mac_address": "00:16:3e:f2:87:16"}, {"ip_address": "192.168.0.0/17", "mac_address": "00:16:3e:f2:87:89"}]], "items": {"$ref": "#/components/schemas/AllowedAddressPairsSerializer"}, "maxItems": 10, "title": "Allowed Address Pairs", "type": "array"}, "instance_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "The ID of the instance that uses this port", "examples": ["bc688791-f1b0-44eb-97d4-07697294b1e1"], "title": "Instance Id"}, "network_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "The ID of the attached network", "examples": ["351b0dd7-ca09-431c-be53-935db3785067"], "title": "Network Id"}, "port_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "The ID of the port", "examples": ["1f0ca628-a73b-42c0-bdac-7b10d023e097"], "title": "Port Id"}}, "title": "CreateAllowPortAddressPairsSerializer", "type": "object"}
    LaasKafkaTopicSerializer: {"properties": {"index_pattern": {"anyOf": ["$ref": "#/components/schemas/IndexPatternSerializer", "type": "null"], "default": null, "description": "Index Pattern data", "examples": ["id": "exampletopicindexpatternid"]}, "name": {"description": "Kafka topic name to be used in log shipper config to write logs to LaaS", "examples": ["mytopic"], "maxLength": 223, "minLength": 1, "pattern": "^[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])*)*$", "title": "Name", "type": "string"}, "retention_policy": {"anyOf": ["$ref": "#/components/schemas/LaasIndexRetentionPolicyPydanticSerializer", "type": "null"], "default": null, "examples": ["period": 45]}, "size_in_bytes": {"default": 0, "description": "Size of the topic in bytes", "minimum": 0, "title": "Size In Bytes", "type": "integer"}}, "required": ["name"], "title": "LaasKafkaTopicSerializer", "type": "object"}
    LoggingOutSerializer: {"properties": {"destination_region_id": {"anyOf": ["type": "integer", "type": "null"], "description": "ID of the region in which the logs will be stored", "examples": [1], "title": "Destination Region Id"}, "enabled": {"description": "Indicates if log streaming is enabled or disabled", "examples": [true, false], "title": "Enabled", "type": "boolean"}, "retention_policy": {"anyOf": ["$ref": "#/components/schemas/LaasIndexRetentionPolicyPydanticSerializer", "type": "null"], "default": null, "description": "Logs retention policy", "examples": ["period": 45]}, "topic_name": {"anyOf": ["type": "string", "type": "null"], "description": "The topic name to stream logs to", "examples": ["my-log-name"], "title": "Topic Name"}}, "required": ["enabled", "destination_region_id", "topic_name"], "title": "LoggingOutSerializer", "type": "object"}
    PGConfValidationRequestSerializer: {"properties": {"pg_conf": {"description": "PostgreSQL configuration", "examples": ["\nlisten_addresses = 'localhost'\nport = 5432\nmax_connections = 100\nshared_buffers = 128MB\nlogging_collector = on"], "title": "Pg Conf", "type": "string"}, "version": {"description": "PostgreSQL version", "examples": ["15"], "title": "Version", "type": "string"}}, "required": ["pg_conf", "version"], "title": "PGConfValidationRequestSerializer", "type": "object"}
    CaasNamespacedName: {"properties": {"name": {"description": "Container name", "examples": ["my-container"], "pattern": "^[a-z][-a-z0-9]{0,62}[a-z0-9]$", "title": "Name", "type": "string"}, "namespace": {"description": "Namespace name", "examples": ["space"], "title": "Namespace", "type": "string"}}, "required": ["name", "namespace"], "title": "CaasNamespacedName", "type": "object"}
    FileShareTypeName: {"enum": ["standard", "vast"], "title": "FileShareTypeName", "type": "string"}
    ReservationCostReportTotalsResponseSerializer: {"properties": {"count": {"description": "Total count of the totals", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "price_status": {"$ref": "#/components/schemas/CostReportPriceDisplayStatus", "description": "Price status for the UI, type: string"}, "results": {"items": {"discriminator": {"mapping": {"ai_cluster": "#/components/schemas/TotalAiClusterWithCostSerializer", "ai_virtual_cluster": "#/components/schemas/TotalAiVirtualClusterWithCostSerializer", "backup": "#/components/schemas/TotalBackupWithCostSerializer", "baremetal": "#/components/schemas/TotalBaremetalWithCostSerializer", "basic_vm": "#/components/schemas/TotalBasicVmWithCostSerializer", "containers": "#/components/schemas/TotalContainerWithCostSerializer", "dbaas_postgresql_connection_pooler": "#/components/schemas/TotalDBAASPostgreSQLPoolerWithCostSerializer", "dbaas_postgresql_cpu": "#/components/schemas/TotalDBAASPostgreSQLCPUWithCostSerializer", "dbaas_postgresql_memory": "#/components/schemas/TotalDBAASPostgreSQLMemoryWithCostSerializer", "dbaas_postgresql_public_network": "#/components/schemas/TotalDBAASPostgreSQLPublicNetworkWithCostSerializer", "dbaas_postgresql_volume": "#/components/schemas/TotalDBAASPostgreSQLVolumeWithCostSerializer", "egress_traffic": "#/components/schemas/TotalEgressTrafficWithCostSerializer", "external_ip": "#/components/schemas/TotalExternalIpWithCostSerializer", "file_share": "#/components/schemas/TotalFileShareWithCostSerializer", "floatingip": "#/components/schemas/TotalFloatingIpWithCostSerializer", "functions": "#/components/schemas/TotalFunctionsWithCostSerializer", "functions_calls": "#/components/schemas/TotalFunctionCallsWithCostSerializer", "functions_traffic": "#/components/schemas/TotalFunctionEgressTrafficWithCostSerializer", "image": "#/components/schemas/TotalImagesWithCostSerializer", "inference": "#/components/schemas/TotalInferenceWithCostSerializer", "instance": "#/components/schemas/TotalInstanceWithCostSerializer", "load_balancer": "#/components/schemas/TotalLoadBalancerWithCostSerializer", "log_index": "#/components/schemas/TotalLogIndexWithCostSerializer", "snapshot": "#/components/schemas/TotalSnapshotWithCostSerializer", "volume": "#/components/schemas/TotalVolumeWithCostSerializer"}, "propertyName": "type"}, "anyOf": ["$ref": "#/components/schemas/TotalAiClusterWithCostSerializer", "$ref": "#/components/schemas/TotalAiVirtualClusterWithCostSerializer", "$ref": "#/components/schemas/TotalBaremetalWithCostSerializer", "$ref": "#/components/schemas/TotalBasicVmWithCostSerializer", "$ref": "#/components/schemas/TotalBackupWithCostSerializer", "$ref": "#/components/schemas/TotalContainerWithCostSerializer", "$ref": "#/components/schemas/TotalEgressTrafficWithCostSerializer", "$ref": "#/components/schemas/TotalExternalIpWithCostSerializer", "$ref": "#/components/schemas/TotalFileShareWithCostSerializer", "$ref": "#/components/schemas/TotalFloatingIpWithCostSerializer", "$ref": "#/components/schemas/TotalFunctionsWithCostSerializer", "$ref": "#/components/schemas/TotalFunctionCallsWithCostSerializer", "$ref": "#/components/schemas/TotalFunctionEgressTrafficWithCostSerializer", "$ref": "#/components/schemas/TotalImagesWithCostSerializer", "$ref": "#/components/schemas/TotalInferenceWithCostSerializer", "$ref": "#/components/schemas/TotalInstanceWithCostSerializer", "$ref": "#/components/schemas/TotalLoadBalancerWithCostSerializer", "$ref": "#/components/schemas/TotalLogIndexWithCostSerializer", "$ref": "#/components/schemas/TotalSnapshotWithCostSerializer", "$ref": "#/components/schemas/TotalVolumeWithCostSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLPoolerWithCostSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLMemoryWithCostSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLPublicNetworkWithCostSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLCPUWithCostSerializer", "$ref": "#/components/schemas/TotalDBAASPostgreSQLVolumeWithCostSerializer"]}, "title": "Results", "type": "array"}},
      "required": ["count", "results", "price_status"], "title": "ReservationCostReportTotalsResponseSerializer", "type": "object"}
    InferenceSecretInUpdateSerializer: {"properties": {"data": {"$ref": "#/components/schemas/AwsIamData", "description": "Secret data.", "examples": [{"aws_access_key_id": "fake-key-id", "aws_secret_access_key": "fake-secret"}]}, "type": {"description": "Secret type.", "examples": ["aws-iam"], "pattern": "^aws-iam$", "title": "Type", "type": "string"}}, "required": ["type", "data"], "title": "InferenceSecretInUpdateSerializer", "type": "object"}
    MandatoryIdSerializerPydantic: {"properties": {"id": {"description": "Resource ID", "examples": ["ae74714c-c380-48b4-87f8-758d656cdad6"], "format": "uuid4", "title": "Id", "type": "string"}}, "required": ["id"], "title": "MandatoryIdSchema schema", "type": "object"}
    TotalLogIndexReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["log_index_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "log_index", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalLogIndexReportItemSerializer", "type": "object"}
    QuotaNotificationThresholdSerializer: {"properties": {"client_id": {"description": "Client id", "examples": [2], "title": "Client Id", "type": "integer"}, "last_message": {"anyOf": ["$ref": "#/components/schemas/QuotasThresholdSerializer", "type": "null"], "description": "A message data"}, "last_sending": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "description": "Time of last successful email sending", "examples": [null], "title": "Last Sending"}, "threshold": {"description": "Quota notification threshold in percentage", "examples": [95], "maximum": 100, "minimum": 60, "title": "Threshold", "type": "integer"}}, "required": ["threshold", "client_id", "last_sending", "last_message"], "title": "QuotaNotificationThresholdSerializer", "type": "object"}
    AccessRuleCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/AccessRuleSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "AccessRuleCollectionSerializer", "type": "object"}
    SSHKeyOrderByChoices: {"enum": ["created_at.asc", "created_at.desc", "name.asc", "name.desc"], "title": "SSHKeyOrderByChoices", "type": "string"}
    IPRangesSerializer: {"properties": {"ranges": {"description": "IP ranges list", "examples": [["203.0.113.0/24"]], "items": {"anyOf": [{"format": "ipv4interface", "type": "string"}, {"format": "ipv6interface", "type": "string"}]}, "title": "Ranges", "type": "array"}}, "required": ["ranges"], "title": "IPRangesSerializer", "type": "object"}
    SubnetIdSerializer: {"properties": {"subnet_id": {"description": "Target IP is identified by it's subnet", "format": "uuid4", "title": "Subnet Id", "type": "string"}}, "required": ["subnet_id"], "title": "SubnetIdSerializer", "type": "object"}
    K8sClusterCiliumTunnel: {"enum": ["", "geneve", "vxlan"], "title": "K8sClusterCiliumTunnel", "type": "string"}
    ResourceDBAASPostgreSQLCPUSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_cpu_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the cluster", "examples": ["cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_cpu", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the cluster", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid"], "title": "ResourceDBAASPostgreSQLCPUSerializer", "type": "object"}
    RegistryArtifactSerializer: {"properties": {"digest": {"description": "Artifact digest", "examples": ["sha256:5414002a0c147f8e41da0d0764b5074480012852d5d9a0ef8bd2fec904e62b7c"], "title": "Digest", "type": "string"}, "id": {"description": "Repository ID", "examples": [1], "title": "Id", "type": "integer"}, "pulled_at": {"description": "Artifact last pull date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Pulled At", "type": "string"}, "pushed_at": {"description": "Artifact push date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Pushed At", "type": "string"}, "registry_id": {"description": "Artifact registry ID", "examples": [1], "title": "Registry Id", "type": "integer"}, "repository_id": {"description": "Artifact repository ID", "examples": [1], "title": "Repository Id", "type": "integer"}, "size": {"description": "Artifact size, bytes", "examples": [1], "title": "Size", "type": "integer"}, "tags": {"description": "Artifact tags", "examples": [[{"artifact_id": 1, "id": 1, "name": "v0.0.1", "pulled_at": "2024-06-18T09:36:53.335000Z", "pushed_at": "2024-06-18T09:36:53.335000Z", "repository_id": 5}, {"artifact_id": 1, "id": 2, "name": "latest", "pulled_at": "2024-06-18T09:36:53.335000Z", "pushed_at": "2024-06-18T09:36:53.335000Z", "repository_id": 5}]], "items": {"$ref": "#/components/schemas/RegistryTagSerializer"}, "title": "Tags", "type": "array"}}, "required": ["id", "registry_id", "repository_id", "digest", "size", "pushed_at", "pulled_at", "tags"], "title": "RegistryArtifactSerializer", "type": "object"}
    UserActionSerializer: {"properties": {"acknowledged": {"description": "User action log was successfully received by its subscriber in case there is one", "examples": [true], "title": "Acknowledged", "type": "boolean"}, "action_data": {"anyOf": ["type": "object", "type": "null"], "description": "Additional information about the action", "title": "Action Data"}, "action_type": {"$ref": "#/components/schemas/cloud_ActionType", "description": "Action type", "examples": ["create"]}, "api_group": {"$ref": "#/components/schemas/ApiGroup", "description": "API group", "examples": ["project"]}, "client_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Client ID of the user.", "examples": [10], "title": "Client Id"}, "email": {"anyOf": [{"format": "email", "type": "string"}, "type": "null"], "description": "User email address", "examples": ["user@example.com"], "title": "Email"}, "id": {"description": "User action ID", "examples": ["123"], "title": "Id", "type": "string"}, "is_complete": {"description": "User action was filled with all necessary information. If false, then something went wrong during user action creation or update", "examples": [true], "title": "Is Complete", "type": "boolean"}, "issued_by_user_id": {"anyOf": ["type": "integer", "type": "null"], "description": "User ID who issued the token that made the request", "examples": [222324], "title": "Issued By User Id"}, "project_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Project ID", "examples": [1], "title": "Project Id"}, "region_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Region ID", "examples": [4], "title": "Region Id"}, "resources": {"description": "Resources", "items": {"$ref": "#/components/schemas/UserActionResourceSerializer"}, "title": "Resources", "type": "array"}, "task_id": {"anyOf": ["type": "string", "type": "null"], "description": "Task ID", "examples": ["1bdcc138-e716-41ff-ad8d-3477a7ac6d14"], "title": "Task Id"}, "timestamp": {"description": "Datetime. Action timestamp", "examples": ["2019-11-14T10:30:32+00:00"], "format": "date-time", "title": "Timestamp", "type": "string"}, "token_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Token ID", "examples": [192021], "title": "Token Id"}, "total_price": {"anyOf": ["$ref": "#/components/schemas/UserActionResourcePriceSerializer", "type": "null"], "description": "Total resource price VAT inclusive"}, "user_id": {"description": "User ID", "examples": [789], "title": "User Id", "type": "integer"}}, "required": ["id", "timestamp", "client_id", "user_id", "email", "project_id", "region_id", "api_group", "action_type", "action_data", "task_id", "acknowledged", "is_complete", "total_price", "token_id", "issued_by_user_id", "resources"], "title": "UserAction schema", "type": "object"}
    FailoverLoadBalancer: {"properties": {"force": {"default": false, "description": "Validate current load balancer status before failover or not.", "examples": [true, false], "title": "Force", "type": "boolean"}}, "title": "FailoverLoadBalancer", "type": "object"}
    InstanceInterfaceTrunkSerializer: {"properties": {"allowed_address_pairs": {"description": "Group of subnet masks and/or IP addresses that share the current IP as VIP", "items": {"$ref": "#/components/schemas/AllowedAddressPairsSerializer"}, "title": "Allowed Address Pairs", "type": "array"}, "floatingip_details": {"description": "Bodies of floating IPs that are NAT-ing IPs of this port", "items": {"$ref": "#/components/schemas/FloatingIPSerializer"}, "title": "Floatingip Details", "type": "array"}, "interface_name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Interface name", "examples": ["my-interface"], "title": "Interface Name"}, "ip_assignments": {"description": "IP addresses assigned to this port", "examples": [[{"ip_address": "192.168.123.20", "subnet_id": "351b0dd7-ca09-431c-be53-935db3785067"}, {"ip_address": "192.168.120.16", "subnet_id": "0a641ef8-62dc-4146-91e5-6ab4b464df6d"}]], "items": {"$ref": "#/components/schemas/PortIpSubnetIdSerializer"}, "title": "Ip Assignments", "type": "array"}, "mac_address": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "MAC address of the virtual port", "examples": ["00:16:3e:f2:87:16"], "title": "Mac Address"}, "network_details": {"$ref": "#/components/schemas/NetworkSubnetworkSerializer", "description": "Body of the network this port is attached to"}, "network_id": {"description": "ID of the network the port is attached to", "examples": ["bc688791-f1b0-44eb-97d4-07697294b1e1"], "format": "uuid4", "title": "Network Id", "type": "string"}, "port_id": {"description": "ID of virtual ethernet port object", "examples": ["1f0ca628-a73b-42c0-bdac-7b10d023e097"], "format": "uuid4", "title": "Port Id", "type": "string"}, "port_security_enabled": {"description": "Port security status", "examples": [true], "title": "Port Security Enabled", "type": "boolean"}, "sub_ports": {"description": "body of ports that are included into trunk port", "items": {"$ref": "#/components/schemas/InstanceInterfaceSubportSerializer"}, "title": "Sub Ports", "type": "array"}}, "required": ["port_id", "ip_assignments", "network_id", "port_security_enabled", "network_details", "floatingip_details", "allowed_address_pairs", "sub_ports"], "title": "InstanceInterfaceTrunkSerializer", "type": "object"}
    RegistryCreateSerializer: {"properties": {"name": {"description": "A name for the container registry. \n\nShould be in lowercase, consisting only of numbers, letters and -, \n\nwith maximum length of 24 characters", "examples": ["reg-home1"], "pattern": "^[a-z][-a-z0-9]{0,22}[a-z0-9]$", "title": "Name", "type": "string"}, "storage_limit": {"default": 5, "description": "Registry storage limit, GiB", "examples": [5], "maximum": 1000, "minimum": 1, "title": "Storage Limit", "type": "integer"}}, "required": ["name"], "title": "RegistryCreateSerializer", "type": "object"}
    PortSecurityGroupsSchema: {"type": "object", "properties": {"id": {"type": "string", "description": "Port ID"}, "name": {"type": "string", "description": "Port name"}, "security_groups": {"type": "array", "description": "Security groups applied to port", "items": {"$ref": "#/components/schemas/IdNameSchema"}}}, "description": "Port object", "example": {"id": "ae74714c-c380-48b4-87f8-758d656cdad6", "name": "name", "security_groups": [{"id": "4536dba1-93b1-492e-b3df-270b6b9f3650", "name": "name1"}, {"id": "cee2ca1f-507a-4a31-b714-f6c1ffb4bdfa", "name": "name2"}]}}
    RegionCapacityOutSerializerV3: {"properties": {"capacity": {"description": "List of capacities by flavor.", "examples": [[{"capacity": 42, "flavor_name": "inference-16vcpu-232gib-1xh100-80gb"}]], "items": {"$ref": "#/components/schemas/CapacityDetailsSerializer"}, "title": "Capacity", "type": "array"}, "region_id": {"description": "Region ID.", "examples": [4], "title": "Region Id", "type": "integer"}}, "required": ["region_id", "capacity"], "title": "RegionCapacityOutSerializerV3", "type": "object"}
    TotalContainerReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["caas_container_resources_sec"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "GBS", "description": "Unit of billing value", "examples": ["GBS"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "containers", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalContainerReportItemSerializer", "type": "object"}
    LoggingInSerializer: {"properties": {"destination_region_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "ID of the region in which the logs will be stored", "examples": [1], "title": "Destination Region Id"}, "enabled": {"default": false, "description": "Enable or disable log streaming", "examples": [true, false], "title": "Enabled", "type": "boolean"}, "retention_policy": {"anyOf": ["$ref": "#/components/schemas/LaasIndexRetentionPolicyPydanticSerializer", "type": "null"], "default": null, "description": "Logs retention policy", "examples": ["period": 45]}, "topic_name": {"anyOf": [{"maxLength": 223, "minLength": 1, "pattern": "^[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])*)*$", "type": "string"}, "type": "null"], "default": null, "description": "The topic name to stream logs to", "examples": ["my-log-name"], "title": "Topic Name"}}, "title": "LoggingInSerializer", "type": "object"}
    NewInterfaceReservedFixedIpFipSerializerPydantic: {"examples": [{"floating_ip": {"source": "new"}, "interface_name": "my-interface", "port_id": "59905c8e-2619-420a-b046-536096473370", "type": "reserved_fixed_ip"}], "properties": {"floating_ip": {"description": "Allows the instance to have a public IP that can be reached from the internet.", "discriminator": {"mapping": {"existing": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer", "new": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer"}, "propertyName": "source"}, "title": "Floating Ip", "anyOf": ["$ref": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer", "$ref": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer"]}, "interface_name": {"description": "Interface name. Defaults to `null` and is returned as `null` in the API response if not set.", "maxLength": 37, "title": "Interface Name", "type": "string"}, "port_id": {"description": "Network ID the subnet belongs to. Port will be plugged in this network.", "title": "Port Id", "type": "string"}, "security_groups": {"description": "Specifies security group UUIDs to be applied to the instance network interface.", "items": {"$ref": "#/components/schemas/MandatoryIdSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "type": {"const": "reserved_fixed_ip", "description": "An existing available reserved fixed IP will be attached to the instance. If the reserved IP is not public and you choose to add a floating IP, the instance will be accessible from the internet.", "title": "Type", "type": "string"}}, "required": ["type", "port_id"], "title": "NewInterfaceReservedFixedIpFipSerializerPydantic", "type": "object"}
    KeypairState: {"enum": ["ACTIVE", "DELETING"], "title": "KeypairState", "type": "string"}
    SchemaFilterInstanceEnum: {"enum": ["flavor", "last_name", "type", "uuid"], "title": "SchemaFilterInstanceEnum", "type": "string"}
    CreateClientProfileSerializer: {"properties": {"bm_instance_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "deprecated": true, "description": "Deprecated. Use `resource_id` field.", "examples": [null, "ff3bdce6-ad26-40d2-ae5a-854c53050969"], "title": "Bm Instance Id"}, "fields": {"description": "List of field configurations that customize the protection parameters for this profile", "examples": [[{"base_field": 10, "field_value": [45046, 45047]}]], "items": {"$ref": "#/components/schemas/CreateClientProfileFieldSerializer"}, "title": "Fields", "type": "array"}, "ip_address": {"anyOf": [{"format": "ipv4", "type": "string"}, {"format": "ipv6", "type": "string"}], "description": "IP address that will be protected by the DDoS protection profile", "examples": ["11.111.111.1"], "title": "Ip Address"}, "profile_template": {"description": "Unique identifier of the DDoS protection template to use for this profile", "examples": [123], "title": "Profile Template", "type": "integer"}, "resource_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Unique identifier of the cloud resource (bare metal, load balancer, or instance) to be protected", "examples": [null, "ff3bdce6-ad26-40d2-ae5a-854c53050969"], "title": "Resource Id"}, "resource_type": {"default": "instance", "description": "Type of cloud resource that will be protected by the DDoS profile", "enum": ["instance", "loadbalancer"], "examples": ["instance"], "title": "Resource Type", "type": "string"}}, "required": ["profile_template", "ip_address"], "title": "CreateClientProfileSerializer", "type": "object"}
    UserActionsSubscriptionCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/UserActionSubscriptionSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "UserActionsSubscriptionCollectionSerializer", "type": "object"}
    TaskIDsSerializer: {"properties": {"tasks": {"description": "List of task IDs representing asynchronous operations. Use these IDs to monitor operation progress:\n\\* `GET /v1/tasks/{`task_id`}` - Check individual task status and details\nPoll task status until completion (`FINISHED`/`ERROR`) before proceeding with dependent operations.", "examples": [["d478ae29-dedc-4869-82f0-96104425f565"]], "items": {"type": "string"}, "title": "Tasks", "type": "array"}}, "required": ["tasks"], "title": "TaskIDsSerializer", "type": "object"}
    MLCatalogModelCardSerializerV3: {"properties": {"category": {"anyOf": ["type": "string", "type": "null"], "description": "Category of the model.", "examples": ["Text Classification"], "title": "Category"}, "default_flavor_name": {"anyOf": ["type": "string", "type": "null"], "description": "Default flavor for the model.", "examples": ["inference-16vcpu-232gib-1xh100-80gb"], "title": "Default Flavor Name"}, "description": {"description": "Description of the model.", "examples": ["My first model"], "title": "Description", "type": "string"}, "developer": {"anyOf": ["type": "string", "type": "null"], "description": "Developer of the model.", "examples": ["Stability AI"], "title": "Developer"}, "documentation_page": {"anyOf": ["type": "string", "type": "null"], "description": "Path to the documentation page.", "examples": ["/docs"], "title": "Documentation Page"}, "eula_url": {"anyOf": ["type": "string", "type": "null"], "description": "URL to the EULA text.", "examples": ["https://example.com/eula"], "title": "Eula Url"}, "example_curl_request": {"anyOf": ["type": "string", "type": "null"], "description": "Example curl request to the model.", "examples": ["curl -X POST http://localhost:8080/predict -d '{\"data\": \"sample\"}'"], "title": "Example Curl Request"}, "has_eula": {"description": "Whether the model has an EULA.", "examples": [true], "title": "Has Eula", "type": "boolean"}, "id": {"description": "Model ID.", "examples": ["3fa85f64-5717-4562-b3fc-2c963f66afa6"], "format": "uuid", "title": "Id", "type": "string"}, "image_registry_id": {"anyOf": ["type": "string", "type": "null"], "description": "Image registry of the model.", "examples": ["123e4567-e89b-12d3-a456-426614174999"], "title": "Image Registry Id"}, "image_url": {"description": "Image URL of the model.", "examples": ["registry.hub.docker.com/my_model:latest"], "title": "Image Url", "type": "string"}, "inference_backend": {"anyOf": ["type": "string", "type": "null"], "description": "Describing underlying inference engine.", "examples": ["torch", "tensorflow"], "title": "Inference Backend"}, "inference_frontend": {"anyOf": ["type": "string", "type": "null"], "description": "Describing model frontend type.", "examples": ["gradio", "vllm", "triton"], "title": "Inference Frontend"}, "model_id": {"anyOf": ["type": "string", "type": "null"], "description": "Model name to perform inference call.", "examples": ["mistralai/Pixtral-12B-2409"], "title": "Model Id"}, "name": {"description": "Name of the model.", "examples": ["model1"], "title": "Name", "type": "string"}, "openai_compatibility": {"anyOf": ["type": "string", "type": "null"], "description": "OpenAI compatibility level.", "examples": ["full", "partial", "none"], "title": "Openai Compatibility"}, "port": {"description": "Port on which the model runs.", "examples": [8080], "title": "Port", "type": "integer"}, "version": {"anyOf": ["type": "string", "type": "null"], "description": "Version of the model.", "examples": ["v0.1"], "title": "Version"}}, "required": ["id", "name", "description", "image_registry_id", "image_url", "port", "default_flavor_name", "example_curl_request", "version", "developer", "category", "has_eula", "eula_url", "model_id", "inference_frontend", "inference_backend", "openai_compatibility", "documentation_page"], "title": "MLCatalogModelCardSerializerV3", "type": "object"}
    AIClusterNetworkSerializer: {"properties": {"network_id": {"description": "Network ID", "examples": ["024a29e9-b4b7-4c91-9a46-505be123d9f8"], "format": "uuid4", "title": "Network Id", "type": "string"}, "port_id": {"description": "Network ID the subnet belongs to. Port will be plugged in this network", "examples": ["2c5eae5b-f76a-4c23-98ff-c77bc0a8bab5"], "format": "uuid4", "title": "Port Id", "type": "string"}, "subnet_id": {"description": "Port is assigned to IP address from the subnet", "examples": ["91200a6c-07e0-42aa-98da-32d1f6545ae7"], "format": "uuid4", "title": "Subnet Id", "type": "string"}, "type": {"description": "Network type", "title": "Type", "type": "string"}}, "required": ["type", "network_id", "subnet_id", "port_id"], "title": "AIClusterNetworkSerializer", "type": "object"}
    BareMetalFlavorExtendedCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/BareMetalFlavorExtendedSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "BareMetalFlavorExtendedCollectionSerializer", "type": "object"}
    IsolationSerializer: {"properties": {"reason": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The reason of instance isolation if it is isolated from external internet.", "examples": ["Suspicious activities"], "title": "Reason"}}, "title": "IsolationSerializer", "type": "object"}
    AllowedAddressPairsSerializer: {"properties": {"ip_address": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, {"format": "ipvanynetwork", "type": "string"}], "description": "Subnet mask or IP address of the port specified in `allowed_address_pairs`", "title": "Ip Address"}, "mac_address": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "MAC address of the port specified in `allowed_address_pairs`", "title": "Mac Address"}}, "required": ["ip_address"], "title": "AllowedAddressPairsSerializer", "type": "object"}
    UserListItem: {"properties": {"encrypted_password": {"description": "Encrypted password to auth via Basic Authentication", "examples": ["$5$isRr.HJ1IrQP38.m$oViu3DJOpUG2ZsjCBtbITV3mqpxxbZfyWJojLPNSPO5"], "maxLength": 128, "title": "Encrypted Password", "type": "string"}, "username": {"description": "Username to auth via Basic Authentication", "examples": ["admin"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Username", "type": "string"}}, "required": ["username", "encrypted_password"], "title": "UserListItem", "type": "object"}
    ProjectOrderByChoices: {"enum": ["created_at.asc", "created_at.desc", "name.asc", "name.desc"], "title": "ProjectOrderByChoices", "type": "string"}
    RegionOrderByChoices: {"enum": ["created_at.asc", "created_at.desc", "display_name.asc", "display_name.desc"], "title": "RegionOrderByChoices", "type": "string"}
    ContainerInSerializerV3: {"properties": {"region_id": {"description": "Region id for the container", "examples": [1337], "title": "Region Id", "type": "integer"}, "scale": {"$ref": "#/components/schemas/ContainerScaleSerializerV3", "description": "Scale for the container", "examples": [{"max": 3, "min": 1}]}}, "required": ["region_id", "scale"], "title": "ContainerInSerializerV3", "type": "object"}
    CreateBareMetalServerSerializer: {"examples": [{"flavor": "bm2-hf-medium", "image_id": "b5b4d65d-945f-4b98-ab6f-332319c724ef", "interfaces": ["type": "external"], "name": "my-bare-metal", "ssh_key_name": "my-ssh-key"}], "properties": {"app_config": {"anyOf": ["type": "object", "type": "null"], "description": "Parameters for the application template if creating the instance from an `apptemplate`.", "title": "App Config"}, "apptemplate_id": {"description": "Apptemplate ID. Either `image_id` or `apptemplate_id` is required.", "title": "Apptemplate Id", "type": "string"}, "ddos_profile": {"$ref": "#/components/schemas/BaseCreateClientProfileSerializer", "description": "Enable advanced DDoS protection for the server"}, "flavor": {"description": "The flavor of the instance.", "examples": ["bm2-hf-medium"], "title": "Flavor", "type": "string"}, "image_id": {"description": "Image ID. Either `image_id` or `apptemplate_id` is required.", "format": "uuid4", "title": "Image Id", "type": "string"}, "interfaces": {"description": "A list of network interfaces for the server. You can create one or more interfaces - private, public, or both.", "items": {"$ref": "#/components/schemas/CreateBareMetalInterfaceSerializers"}, "minItems": 1, "title": "Interfaces", "type": "array"}, "name": {"description": "Server name.", "examples": ["my-bare-metal"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "name_template": {"description": "If you want server names to be automatically generated based on IP addresses, you can provide a name template instead of specifying the name manually. The template should include a placeholder that will be replaced during provisioning. Supported placeholders are: `{`ip_octets`}` (last 3 octets of the IP), `{`two_ip_octets`}`, and `{`one_ip_octet`}`.", "pattern": "^[a-zA-Z0-9{][a-zA-Z 0-9._\\-}{]{1,61}[a-zA-Z0-9._}]$", "title": "Name Template", "type": "string"}, "password": {"description": "For Linux instances, 'username' and 'password' are used to create a new user. When only 'password' is provided, it is set as the password for the default user of the image. For Windows instances, 'username' cannot be specified. Use the 'password' field to set the password for the 'Admin' user on Windows. Use the '`user_data`' field to provide a script to create new users on Windows. The password of the Admin user cannot be updated via '`user_data`'.", "title": "Password", "type": "string"}, "ssh_key_name": {"anyOf": ["type": "string", "type": "null"], "description": "Specifies the name of the SSH keypair, created via the\n[/v1/`ssh_keys` endpoint](/docs/api-reference/cloud/ssh-keys/add-or-generate-ssh-key).", "examples": ["my-ssh-key"], "title": "Ssh Key Name"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "user_data": {"description": "String in base64 format. For Linux instances, '`user_data`' is ignored when 'password' field is provided. For Windows instances, Admin user password is set by 'password' field and cannot be updated via '`user_data`'. Examples of the `user_data`: https://cloudinit.readthedocs.io/en/latest/topics/examples.html", "title": "User Data", "type": "string"}, "username": {"description": "For Linux instances, 'username' and 'password' are used to create a new user. For Windows instances, 'username' cannot be specified. Use 'password' field to set the password for the 'Admin' user on Windows.", "title": "Username", "type": "string"}}, "required": ["interfaces", "flavor"], "title": "CreateBareMetalServerSerializer", "type": "object"}
    LogsSerializer: {"properties": {"logs": {"description": "Function logs.", "examples": [[{"Message": " 2022/03/02 15:04:03 192.168.171.79:41386 \"GET / HTTP/1.1\" 200 python-requests/2.25.1", "Pod": "function-78-5f5ddf5454-n6s94", "Time": "2022-03-02T15:04:03.208677349Z"}, {"Message": " 2022/03/02 15:04:05 192.168.171.79:41386 \"GET / HTTP/1.1\" 200 python-requests/2.25.1", "Pod": "function-78-5f5ddf5454-n6s94", "Time": "2022-03-02T15:04:05.208677349Z"}]], "items": {"additionalProperties": {"type": "string"}, "type": "object"}, "title": "Logs", "type": "array"}}, "required": ["logs"], "title": "LogsSerializer", "type": "object"}
    GpuVirtualFlavorSerializer: {"anyOf": ["$ref": "#/components/schemas/GpuVirtualFlavorSerializerWithoutPrice", "$ref": "#/components/schemas/GpuVirtualFlavorSerializerWithPrices"], "title": "GpuVirtualFlavorSerializer"}
    TotalInferenceWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Inference at the Edge - GPU L40s (48 GB Memory) Usage Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["inference_gpu_l40s_48_sec"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"description": "Unit of billing value", "examples": ["H"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "inference", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalInferenceWithCostSerializer", "type": "object"}
    BillingReservationItemResponseSerializer: {"properties": {"active_from": {"description": "Reservation active from date", "format": "date", "title": "Active From", "type": "string"}, "active_to": {"description": "Reservation active to date", "format": "date", "title": "Active To", "type": "string"}, "activity_period": {"description": "Name of the billing period, e.g month", "title": "Activity Period", "type": "string"}, "activity_period_length": {"description": "Length of the full reservation period by `activity_period`", "title": "Activity Period Length", "type": "integer"}, "amount_prices": {"$ref": "#/components/schemas/BillingReservationAmountPricesResponseSerializer", "description": "Reservation amount prices"}, "billing_plan_id": {"description": "Billing plan id", "title": "Billing Plan Id", "type": "integer"}, "created_at": {"description": "Reservation creation date", "format": "date-time", "title": "Created At", "type": "string"}, "error": {"anyOf": ["type": "string", "type": "null"], "description": "Error message if any occured during reservation", "title": "Error"}, "eta": {"anyOf": [{"format": "date", "type": "string"}, "type": "null"], "description": "ETA delivery if bare metal out of stock. Value None means that bare metal in stock.", "title": "Eta"}, "id": {"description": "Reservation id", "title": "Id", "type": "integer"}, "is_expiration_message_visible": {"description": "Hide or show expiration message to customer.", "examples": [true], "title": "Is Expiration Message Visible", "type": "boolean"}, "name": {"description": "Reservation name", "title": "Name", "type": "string"}, "next_statuses": {"description": "List of possible next reservation statuses", "items": {"type": "string"}, "title": "Next Statuses", "type": "array"}, "region_id": {"description": "Region id", "title": "Region Id", "type": "integer"}, "region_name": {"description": "Region name", "title": "Region Name", "type": "string"}, "remind_expiration_message": {"anyOf": [{"format": "date", "type": "string"}, "type": "null"], "description": "The date when show expiration date to customer", "examples": ["2024-01-01"], "title": "Remind Expiration Message"}, "resources": {"description": "List of reservation resources", "items": {"$ref": "#/components/schemas/BillingReservationResourceSerializer"}, "title": "Resources", "type": "array"}, "status": {"description": "Reservation status", "examples": ["ACTIVATED"], "title": "Status", "type": "string"}, "user_status": {"description": "User status", "examples": ["ACTIVATED"], "title": "User Status", "type": "string"}}, "required": ["id", "name", "region_id", "region_name", "billing_plan_id", "created_at", "active_from", "active_to", "eta", "error", "status", "user_status", "next_statuses", "is_expiration_message_visible", "remind_expiration_message", "amount_prices", "activity_period_length", "activity_period", "resources"], "title": "BillingReservationItemResponseSerializer", "type": "object"}
    UsageReportSortingRequestSerializer: {"properties": {"billing_value": {"$ref": "#/components/schemas/SortingDirections"}, "first_seen": {"$ref": "#/components/schemas/SortingDirections"}, "last_name": {"$ref": "#/components/schemas/SortingDirections"}, "last_seen": {"$ref": "#/components/schemas/SortingDirections"}, "project": {"$ref": "#/components/schemas/SortingDirections"}, "region": {"$ref": "#/components/schemas/SortingDirections"}, "type": {"$ref": "#/components/schemas/SortingDirections"}}, "title": "UsageReportSortingRequestSerializer", "type": "object"}
    FloatingIPDetailedCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/FloatingIPDetailedSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "FloatingIPDetailedCollectionSerializer", "type": "object"}
    IngressOptsSerializer: {"properties": {"disable_response_buffering": {"default": false, "description": "Disable response buffering if true. A client usually has a much slower connection and can not consume the response data as fast as it is produced by an upstream application. Ingress tries to buffer the whole response in order to release the upstream application as soon as possible.By default, the response buffering is enabled.", "examples": [true, false], "title": "Disable Response Buffering", "type": "boolean"}}, "title": "IngressOptsSerializer", "type": "object"}
    RegistryUserCreateResponseSerializer: {"properties": {"created_at": {"description": "User creation date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Created At", "type": "string"}, "duration": {"description": "User account operating time, days", "examples": [14], "title": "Duration", "type": "integer"}, "expires_at": {"description": "User operation end date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Expires At", "type": "string"}, "id": {"description": "User ID", "examples": [1], "title": "Id", "type": "integer"}, "name": {"description": "User name", "examples": ["user1"], "title": "Name", "type": "string"}, "read_only": {"default": false, "description": "Read-only user", "examples": [false], "title": "Read Only", "type": "boolean"}, "secret": {"default": "", "description": "User secret", "title": "Secret", "type": "string"}}, "required": ["id", "name", "duration", "created_at", "expires_at"], "title": "RegistryUserCreateResponseSerializer", "type": "object"}
    RuntimesSerializer: {"properties": {"runtimes": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "description": "FaaS runtimes.", "examples": [{"go": ["go1.16.6"], "python": ["python2.7.18", "python3.7.12"]}], "title": "Runtimes", "type": "object"}}, "required": ["runtimes"], "title": "RuntimesSerializer", "type": "object"}
    RetypableVolumeTypeChoices: {"enum": ["ssd_hiiops", "standard"], "title": "RetypableVolumeTypeChoices", "type": "string"}
    AIClusterStatusEnum: {"enum": ["ACTIVE", "ERROR", "PENDING", "SUSPENDED"], "title": "AIClusterStatusEnum", "type": "string"}
    UserActionSubscriptionSerializer: {"properties": {"auth_header_name": {"description": "Authorization header name", "examples": ["Authorization"], "title": "Auth Header Name", "type": "string"}, "auth_header_value": {"description": "Authorization header value", "examples": ["Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNTc0OTU0MDY0LCJqdGkiOiJiYXIiLCJ1c2VyX2lkIjoxLCJ1c2VyX3R5cGUiOiJjb21tb24iLCJ1c2VyX2dyb3VwcyI6WyJVc2VycyJdLCJjbGllbnRfaWQiOjEsImVtYWlsIjoidGVzdEB0ZXN0LnRlc3QiLCJ1c2VybmFtZSI6InRlc3RAdGVzdC50ZXN0IiwiaXNfYWRtaW4iOmZhbHNlLCJjbGllbnRfbmFtZSI6Ik5hbWUiLCJleGNoYW5nZWFibGUiOnRydWUsImZha2VfdXNlcl9pZCI6MSwicmp0aSI6ImZvbyJ9.YTH_s67j7xyWlFLy093RxReT5PmitnawLr25Jh7Ix14"], "title": "Auth Header Value", "type": "string"}, "id": {"description": "Subscription ID", "examples": [17], "title": "Id", "type": "integer"}, "url": {"description": "URL to send user action logs for the specified client", "examples": ["https://your-url.com/receive-user-action-messages"], "title": "Url", "type": "string"}}, "required": ["id", "url", "auth_header_name", "auth_header_value"], "title": "UserAction subscription scheme on webhook", "type": "object"}
    ResourceContainerWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Container as a Service - Total Compute (GB-seconds), Luxembourg-2 - Overcommit"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["caas_container_resources_sec"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "GBS", "description": "Unit of billing value", "examples": ["GBS"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the container", "examples": ["container_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "containers", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the container", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceContainerWithCostSerializer", "type": "object"}
    ResourceSnapshotWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Snapshots for Standard Volumes - Gb Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["snap_t_standard_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the snapshot", "examples": ["snapshot_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "last_size": {"description": "Size of the snapshot in bytes", "examples": [100], "title": "Last Size", "type": "integer"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"description": "Unit of size", "examples": ["GiB"], "title": "Size Unit", "type": "string"}, "source_volume_uuid": {"description": "UUID of the source volume", "format": "uuid", "title": "Source Volume Uuid", "type": "string"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "snapshot", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the snapshot", "format": "uuid", "title": "Uuid", "type": "string"}, "volume_type": {"description": "Type of the volume", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "volume_type", "first_seen", "last_seen", "project_id", "last_size", "size_unit", "last_name", "source_volume_uuid", "uuid", "tags", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceSnapshotWithCostSerializer", "type": "object"}
    MetricsDatabaseSerializer: {"properties": {"host": {"description": "Metrics database host", "examples": ["10.100.167.20"], "title": "Host", "type": "string"}, "id": {"description": "ID of the metrics database", "examples": [1], "title": "Id", "type": "integer"}, "password": {"description": "Metrics database password", "examples": ["******"], "format": "password", "title": "Password", "type": "string", "writeOnly": true}, "port": {"description": "Metrics database port", "examples": [9097], "title": "Port", "type": "integer"}, "username": {"description": "Metrics database username", "examples": ["metrics_username"], "title": "Username", "type": "string"}}, "required": ["id", "host", "port", "username", "password"], "title": "Metrics database schema", "type": "object"}
    K8sClusterPoolCreateV2Serializer: {"properties": {"auto_healing_enabled": {"anyOf": ["type": "boolean", "type": "null"], "default": false, "description": "Enable auto healing", "examples": [true, false], "title": "Auto Healing Enabled"}, "boot_volume_size": {"anyOf": [{"maximum": 2000, "minimum": 10, "type": "integer"}, "type": "null"], "default": null, "description": "Boot volume size", "examples": [50], "title": "Boot Volume Size"}, "boot_volume_type": {"anyOf": ["$ref": "#/components/schemas/VolumeTypeName", "type": "null"], "default": null, "description": "Boot volume type", "examples": ["ssd_hiiops"]}, "crio_config": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": null, "description": "Cri-o configuration for pool nodes", "examples": ["default-ulimits": "nofile=1024:2048"], "title": "Crio Config"}, "flavor_id": {"description": "Flavor ID", "examples": ["g1-standard-1-2"], "title": "Flavor Id", "type": "string"}, "is_public_ipv4": {"anyOf": ["type": "boolean", "type": "null"], "default": false, "description": "Enable public v4 address", "examples": [true, false], "title": "Is Public Ipv4"}, "kubelet_config": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": null, "description": "Kubelet configuration for pool nodes", "examples": ["podMaxPids": "4096"], "title": "Kubelet Config"}, "labels": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": {}, "description": "Labels applied to the cluster pool", "examples": ["my-label": "foo"], "title": "Labels"}, "max_node_count": {"anyOf": [{"maximum": 200, "minimum": 1, "type": "integer"}, "type": "null"], "default": null, "description": "Maximum node count", "examples": [5], "title": "Max Node Count"}, "min_node_count": {"description": "Minimum node count", "examples": [3], "maximum": 200, "minimum": 1, "title": "Min Node Count", "type": "integer"}, "name": {"description": "Pool's name", "examples": ["my-pool"], "maxLength": 20, "minLength": 1, "pattern": "^[a-z][a-z0-9\\-]{0,18}[a-z0-9]$", "title": "Name", "type": "string"}, "servergroup_policy": {"anyOf": ["$ref": "#/components/schemas/ServerGroupPolicyEnum", "type": "null"], "default": null, "description": "Server group policy: anti-affinity, soft-anti-affinity or affinity"}, "taints": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": {}, "description": "Taints applied to the cluster pool", "examples": ["my-taint": "bar:NoSchedule"], "title": "Taints"}}, "required": ["flavor_id", "min_node_count", "name"], "title": "K8sClusterPoolCreateV2Serializer", "type": "object"}
    CaasFlavorSerializer: {"properties": {"cpu": {"description": "Number of millicpu", "examples": [128], "title": "Cpu", "type": "integer"}, "name": {"description": "Flavor name", "examples": ["128mCPU-128MiB"], "title": "Name", "type": "string"}, "ram": {"description": "Megabytes of RAM", "examples": [128], "title": "Ram", "type": "integer"}}, "required": ["name", "cpu", "ram"], "title": "CaasFlavorSerializer", "type": "object"}
    UpdateTagsGPUClusterSerializer: {"properties": {"action": {"const": "update_tags", "description": "Action name", "examples": ["update_tags"], "title": "Action", "type": "string"}, "tags": {"anyOf": ["$ref": "#/components/schemas/UpdateTagsSerializer", "type": "null"], "description": "Update key-value tags using JSON Merge Patch semantics (RFC 7386). Provide key-value pairs to add or update tags. Set tag values to `null` to remove tags. Unspecified tags remain unchanged. Read-only tags are always preserved and cannot be modified.\n\n**Examples:**\n\n\\* **Add/update tags:** `{'tags': {'environment': 'production', 'team': 'backend'}}` adds new tags or updates existing ones.\n\n\\* **Delete tags:** `{'tags': {'`old_tag`': null}}` removes specific tags.\n\n\\* **Remove all tags:** `{'tags': null}` removes all user-managed tags (read-only tags are preserved).\n\n\\* **Partial update:** `{'tags': {'environment': 'staging'}}` only updates specified tags.\n\n\\* **Mixed operations:** `{'tags': {'environment': 'production', '`cost_center`': 'engineering', '`deprecated_tag`': null}}` adds/updates 'environment' and '`cost_center`' while removing '`deprecated_tag`', preserving other existing tags.\n\n\\* **Replace all:** first delete existing tags with null values, then add new ones in the same request.", "examples": [{"my-tag": "my-tag-value", "my-tag-to-remove": null}]}}, "required": ["action", "tags"], "title": "UpdateTagsGPUClusterSerializer", "type": "object"}
    ReplicationMode: {"enum": ["async", "sync"], "title": "ReplicationMode", "type": "string"}
    ExposeAddress: {"properties": {"address": {"description": "Global access endpoint for the component", "title": "Address", "type": "string"}}, "required": ["address"], "title": "ExposeAddress", "type": "object"}
    IndexPatternSerializer: {"properties": {"id": {"description": "Pattern ID", "examples": ["exampletopicindexpatternid"], "title": "Id", "type": "string"}}, "required": ["id"], "title": "IndexPatternSerializer", "type": "object"}
    SchemaFilterFileShareSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterFileShareEnum", "description": "Field name to filter by", "examples": ["last_size"]}, "type": {"const": "file_share", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["10"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterFileShareSerializer", "type": "object"}
    CapacityDetailsSerializer: {"properties": {"capacity": {"description": "Available capacity.", "examples": [42], "minimum": 0, "title": "Capacity", "type": "integer"}, "flavor_name": {"description": "Flavor name.", "examples": ["inference-16vcpu-232gib-1xh100-80gb"], "title": "Flavor Name", "type": "string"}}, "required": ["flavor_name", "capacity"], "title": "CapacityDetailsSerializer", "type": "object"}
    SchemaFilterImageSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterImageEnum", "description": "Field name to filter by", "examples": ["last_size"]}, "type": {"const": "image", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["10"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterImageSerializer", "type": "object"}
    VirtualServerSettingsOutputSerializer: {"properties": {"interfaces": {"items": {"discriminator": {"mapping": {"any_subnet": "#/components/schemas/AnySubnetInterfaceOutputSerializer", "external": "#/components/schemas/ExternalInterfaceOutputSerializer", "subnet": "#/components/schemas/SubnetInterfaceOutputSerializer"}, "propertyName": "type"}, "anyOf": ["$ref": "#/components/schemas/ExternalInterfaceOutputSerializer", "$ref": "#/components/schemas/SubnetInterfaceOutputSerializer", "$ref": "#/components/schemas/AnySubnetInterfaceOutputSerializer"]}, "title": "Interfaces", "type": "array"}, "security_groups": {"description": "Security groups names", "examples": [["name": "default"]], "items": {"$ref": "#/components/schemas/NameSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "ssh_key_name": {"anyOf": ["type": "string", "type": "null"], "description": "SSH key name", "examples": ["my-ssh-key"], "title": "Ssh Key Name"}, "user_data": {"anyOf": ["type": "string", "type": "null"], "description": "Optional custom user data (Base64-encoded) Mutually exclusive with 'password'.", "examples": ["eyJ0ZXN0IjogImRhdGEifQ=="], "title": "User Data"}, "volumes": {"description": "List of volumes", "items": {"$ref": "#/components/schemas/VolumeOutputSerializer"}, "title": "Volumes", "type": "array"}}, "required": ["user_data", "ssh_key_name", "interfaces", "security_groups", "volumes"], "title": "VirtualServerSettingsOutputSerializer", "type": "object"}
    TotalDBAASPostgreSQLPoolerReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_public_network_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_connection_pooler", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalDBAASPostgreSQLPoolerReportItemSerializer", "type": "object"}
    InstanceFloatingAddressSerializer: {"description": "Schema for `floating` addresses.", "properties": {"addr": {"description": "Address", "examples": ["10.0.0.17"], "title": "Addr", "type": "string"}, "type": {"const": "floating", "description": "Type of the address", "title": "Type", "type": "string"}}, "required": ["addr", "type"], "title": "Floating IP Address", "type": "object"}
    NetworkAnySubnetFipSchema: {"type": "object", "properties": {"floating_ip": {"description": "Floating IP config for this subnet attachment", "allOf": ["$ref": "#/components/schemas/NewInterfaceFloatingIpSchema"]}, "interface_name": {"type": "string", "maxLength": 37, "description": "Interface name"}, "ip_address": {"type": "string", "description": "Fixed IP address"}, "ip_family": {"type": "string", "enum": ["dual", "ipv4", "ipv6"], "description": "Which subnets should be selected: IPv4, IPv6 or use dual stack."}, "network_id": {"type": "string", "description": "Network ID the subnet belongs to. Port will be plugged in this network"}, "port_group": {"type": "integer", "minimum": 0, "maximum": 1, "description": "Each group will be added to the separate trunk."}, "type": {"type": "string", "default": "any_subnet", "description": "'`any_subnet`'. Instance will be attached to a subnet with the largest count of free ips. Floating IP will be created and attached to that IP"}}, "required": ["network_id"], "description": "Instance will be attached to a subnet with the largest count of free ips.\nFloating IP will be created and attached to that IP", "example": {"floating_ip": {"existing_floating_id": "57be69f6-6f6a-4f03-a4ad-8eb86c69ec0a", "source": "existing"}, "ip_address": "192.168.6.9", "network_id": "59905c8e-2619-420a-b046-536096473370", "type": "any_subnet", "interface_name": "my-any-subnet-interface"}}
    CreateLbHealthMonitorSerializer: {"properties": {"delay": {"description": "The time, in seconds, between sending probes to members", "examples": [10], "maximum": 2147483647, "minimum": 1, "title": "Delay", "type": "integer"}, "expected_codes": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Expected HTTP response codes. Can be a single code or a range of codes. Can only be used together with `HTTP` or `HTTPS` health monitor type. For example, 200,202,300-302,401,403,404,500-504. If not specified, the default is 200.", "examples": ["200,301,302"], "title": "Expected Codes"}, "http_method": {"anyOf": ["$ref": "#/components/schemas/HttpMethodEnum", "type": "null"], "default": null, "description": "HTTP method. Can only be used together with `HTTP` or `HTTPS` health monitor type.", "examples": ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE"]}, "max_retries": {"description": "Number of successes before the member is switched to ONLINE state", "examples": [2], "maximum": 10, "minimum": 1, "title": "Max Retries", "type": "integer"}, "max_retries_down": {"description": "Number of failures before the member is switched to ERROR state.", "examples": [2], "maximum": 10, "minimum": 1, "title": "Max Retries Down", "type": "integer"}, "timeout": {"description": "The maximum time to connect. Must be less than the delay value", "examples": [5], "maximum": 2147483, "title": "Timeout", "type": "integer", "x-stainless-naming": {"python": {"method_argument": "api_timeout"}}}, "type": {"$ref": "#/components/schemas/HealthMonitorTypeEnum", "description": "Health monitor type. Once health monitor is created, cannot be changed.", "examples": ["HTTP", "HTTPS", "PING", "TCP", "K8S"]}, "url_path": {"anyOf": [{"minLength": 1, "type": "string"}, "type": "null"], "default": null, "description": "URL Path. Defaults to '/'. Can only be used together with `HTTP` or `HTTPS` health monitor type.", "examples": ["/"], "title": "Url Path"}}, "required": ["delay", "max_retries", "timeout", "type"], "title": "CreateLbHealthMonitorSerializer", "type": "object"}
    BaremetalClusterSerializer: {"properties": {"created_at": {"description": "Cluster creation date time", "examples": ["2024-12-31T23:59:59Z"], "format": "date-time", "title": "Created At", "type": "string"}, "flavor": {"description": "Cluster flavor name", "examples": ["g3-ai-32-192-1500-l40s-48-1"], "title": "Flavor", "type": "string"}, "id": {"description": "Cluster unique identifier", "examples": ["1aaaab48-10d0-46d9-80cc-85209284ceb4"], "format": "uuid4", "title": "Id", "type": "string"}, "managed_by": {"$ref": "#/components/schemas/ClusterManagedBy", "description": "User type managing the resource", "examples": ["user"]}, "name": {"description": "Cluster name", "examples": ["my virtual gpu cluster"], "title": "Name", "type": "string"}, "servers_count": {"description": "Cluster servers count", "examples": [2], "title": "Servers Count", "type": "integer"}, "servers_ids": {"description": "List of cluster nodes", "examples": [["b4522653-fbcd-44a0-a949-541570a52281", "e56192de-ed28-452a-b775-eeeacc795e3b"]], "items": {"format": "uuid4", "type": "string"}, "title": "Servers Ids", "type": "array"}, "servers_settings": {"$ref": "#/components/schemas/BaremetalServerSettingsOutputSerializer"}, "status": {"$ref": "#/components/schemas/GPUClusterStatus", "description": "Cluster status", "examples": ["active"]}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "updated_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "description": "Cluster update date time", "examples": ["2025-01-11T23:59:59Z"], "title": "Updated At"}}, "required": ["id", "name", "status", "flavor", "tags", "servers_count", "created_at", "updated_at", "servers_ids", "servers_settings", "managed_by"], "title": "BaremetalClusterSerializer", "type": "object"}
    K8sClusterV2Status: {"enum": ["Deleting", "Provisioned", "Provisioning"], "title": "K8sClusterV2Status", "type": "string"}
    K8sClusterDdosProfileCreateV2Serializer: {"properties": {"enabled": {"description": "Enable advanced DDoS protection", "examples": [true], "title": "Enabled", "type": "boolean"}, "fields": {"default": [], "description": "DDoS profile parameters", "examples": [[{"base_field": 10, "field_value": [45046, 45047]}]], "items": {"$ref": "#/components/schemas/K8sClusterDdosProfileFieldV2Serializer"}, "title": "Fields", "type": "array"}, "profile_template": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "DDoS profile template ID", "examples": [29], "title": "Profile Template"}, "profile_template_name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "DDoS profile template name", "title": "Profile Template Name"}}, "required": ["enabled"], "title": "K8sClusterDdosProfileCreateV2Serializer", "type": "object"}
    K8sClusterCiliumLBMode: {"enum": ["dsr", "hybrid", "snat"], "title": "K8sClusterCiliumLBMode", "type": "string"}
    TotalLoadBalancerWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Load Balancer Type: lb1-1-1 (1vCPU/2GB RAM) Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["lb1-1-2_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "flavor": {"description": "Flavor of the load balancer", "examples": ["lb1-1-2"], "title": "Flavor", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "load_balancer", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "billing_feature_name", "cost", "currency", "err"], "title": "TotalLoadBalancerWithCostSerializer", "type": "object"}
    SchemaFilterLoadBalancerSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterLoadBalancerEnum", "description": "Field name to filter by", "examples": ["flavor"]}, "type": {"const": "load_balancer", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["lb1-1-2"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterLoadBalancerSerializer", "type": "object"}
    ReservationCostReportTotalsRequestSerializer: {"additionalProperties": false, "properties": {"regions": {"description": "List of region IDs.", "examples": [[1, 2, 3]], "items": {"type": "integer"}, "title": "Regions", "type": "array"}, "response_format": {"$ref": "#/components/schemas/ReservationCostReportResponseFormat", "default": "json", "description": "Format of the response (`csv_totals` or json).", "examples": ["csv_totals", "json"]}, "rounding": {"default": true, "description": "Round cost values to 5 decimal places. When false, returns full precision.", "title": "Rounding", "type": "boolean"}, "schema_filter": {"description": "Extended filter for field filtering.", "discriminator": {"mapping": {"ai_cluster": "#/components/schemas/SchemaFilterAiClusterSerializer", "ai_virtual_cluster": "#/components/schemas/SchemaFilterAiVirtualClusterSerializer", "backup": "#/components/schemas/SchemaFilterBackupSerializer", "baremetal": "#/components/schemas/SchemaFilterBaremetalSerializer", "basic_vm": "#/components/schemas/SchemaFilterBasicVmSerializer", "containers": "#/components/schemas/SchemaFilterContainersSerializer", "dbaas_postgresql_connection_pooler": "#/components/schemas/SchemaFilterDBAASPostgreSQLPoolerSerializer", "dbaas_postgresql_cpu": "#/components/schemas/SchemaFilterDBAASPostgreSQLCPUSerializer", "dbaas_postgresql_memory": "#/components/schemas/SchemaFilterDBAASPostgreSQLMemorySerializer", "dbaas_postgresql_public_network": "#/components/schemas/SchemaFilterDBAASPostgreSQLPublicNetworkSerializer", "dbaas_postgresql_volume": "#/components/schemas/SchemaFilterDBAASPostgreSQLVolumeSerializer", "egress_traffic": "#/components/schemas/SchemaFilterEgressTrafficSerializer", "external_ip": "#/components/schemas/SchemaFilterExternalIpSerializer", "file_share": "#/components/schemas/SchemaFilterFileShareSerializer", "floatingip": "#/components/schemas/SchemaFilterFloatingIpSerializer", "functions": "#/components/schemas/SchemaFilterFunctionsSerializer", "functions_calls": "#/components/schemas/SchemaFilterFunctionsCallsSerializer", "functions_traffic": "#/components/schemas/SchemaFilterFunctionsTrafficSerializer", "image": "#/components/schemas/SchemaFilterImageSerializer", "inference": "#/components/schemas/SchemaFilterInferenceSerializer", "instance": "#/components/schemas/SchemaFilterInstanceSerializer", "load_balancer": "#/components/schemas/SchemaFilterLoadBalancerSerializer", "log_index": "#/components/schemas/SchemaFilterLogIndexSerializer", "snapshot": "#/components/schemas/SchemaFilterSnapshotSerializer", "volume": "#/components/schemas/SchemaFilterVolumeSerializer"}, "propertyName": "type"}, "examples": [{"field": "flavor", "type": "instance", "values": ["g1-standard-1-2"]}], "title": "Schema Filter", "anyOf": ["$ref": "#/components/schemas/SchemaFilterSnapshotSerializer", "$ref": "#/components/schemas/SchemaFilterInstanceSerializer", "$ref": "#/components/schemas/SchemaFilterAiClusterSerializer", "$ref": "#/components/schemas/SchemaFilterAiVirtualClusterSerializer", "$ref": "#/components/schemas/SchemaFilterBasicVmSerializer", "$ref": "#/components/schemas/SchemaFilterBaremetalSerializer", "$ref": "#/components/schemas/SchemaFilterVolumeSerializer", "$ref": "#/components/schemas/SchemaFilterFileShareSerializer", "$ref": "#/components/schemas/SchemaFilterImageSerializer", "$ref": "#/components/schemas/SchemaFilterFloatingIpSerializer", "$ref": "#/components/schemas/SchemaFilterEgressTrafficSerializer", "$ref": "#/components/schemas/SchemaFilterLoadBalancerSerializer", "$ref": "#/components/schemas/SchemaFilterExternalIpSerializer", "$ref": "#/components/schemas/SchemaFilterBackupSerializer", "$ref": "#/components/schemas/SchemaFilterLogIndexSerializer", "$ref": "#/components/schemas/SchemaFilterFunctionsSerializer", "$ref": "#/components/schemas/SchemaFilterFunctionsCallsSerializer", "$ref": "#/components/schemas/SchemaFilterFunctionsTrafficSerializer", "$ref": "#/components/schemas/SchemaFilterContainersSerializer", "$ref": "#/components/schemas/SchemaFilterInferenceSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLVolumeSerializer",
            "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLPublicNetworkSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLCPUSerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLMemorySerializer", "$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLPoolerSerializer"]}, "tags": {"$ref": "#/components/schemas/TagsFilterSerializer", "description": "Filter by tags", "examples": [{"condition_type": "OR", "conditions": [{"key": "os_version", "strict": true, "value": "22.04"}, {"key": "os_version", "strict": true, "value": "23.04"}]}]}, "time_from": {"deprecated": true, "description": "Deprecated. Use `year_month` instead. Beginning of the period: YYYY-mm", "format": "date-time", "title": "Time From", "type": "string"}, "time_to": {"deprecated": true, "description": "Deprecated. Use `year_month` instead. End of the period: YYYY-mm", "format": "date-time", "title": "Time To", "type": "string"}, "types": {"description": "List of resource types to be filtered in the report.", "examples": [["egress_traffic", "instance"]], "items": {"$ref": "#/components/schemas/PrebillingResourceTypes"}, "title": "Types", "type": "array"}, "year_month": {"description": "Year and month in the format YYYY-MM", "examples": ["2024-08"], "title": "Year Month", "type": "string"}}, "title": "ReservationCostReportTotalsRequestSerializer", "type": "object"}
    InferenceBoxSecretsSerializer: {"properties": {"data": {"$ref": "#/components/schemas/AwsIamData", "description": "Secret data.", "examples": [{"aws_access_key_id": "fake-key-id", "aws_secret_access_key": "fake-secret"}]}, "name": {"description": "Secret name.", "examples": ["aws-dev"], "minLength": 4, "title": "Name", "type": "string"}, "type": {"description": "Secret type.", "examples": ["aws-iam"], "title": "Type", "type": "string"}}, "required": ["name", "type", "data"], "title": "InferenceBoxSecretsSerializer", "type": "object"}
    TotalFileShareWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["File Shares (Standard) - Gb Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["file_share_t_standard_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "file_share_type": {"description": "Type of the file share", "examples": ["standard"], "title": "File Share Type", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "file_share", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "file_share_type", "billing_feature_name", "cost", "currency", "err"], "title": "TotalFileShareWithCostSerializer", "type": "object"}
    CreateInstanceSerializerV2: {"examples": [{"flavor": "g2-standard-32-64", "interfaces": ["type": "external"], "name": "my-instance", "ssh_key_name": "my-ssh-key", "volumes": [{"boot_index": 0, "image_id": "e460e48c-6836-447e-bc9c-16fc4225d318", "size": 50, "source": "image"}]}], "properties": {"allow_app_ports": {"description": "Set to `true` if creating the instance from an `apptemplate`. This allows application ports in the security group for instances created from a marketplace application template.", "title": "Allow App Ports", "type": "boolean"}, "configuration": {"anyOf": ["type": "object", "type": "null"], "description": "Parameters for the application template if creating the instance from an `apptemplate`.", "title": "Configuration"}, "flavor": {"description": "The flavor of the instance.", "examples": ["g2-standard-32-64"], "title": "Flavor", "type": "string"}, "interfaces": {"description": "A list of network interfaces for the instance. You can create one or more interfaces - private, public, or both.", "items": {"$ref": "#/components/schemas/NewVmInterfaceSerializersPydantic"}, "minItems": 1, "title": "Interfaces", "type": "array"}, "name": {"description": "Instance name.", "examples": ["my-instance"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "name_template": {"description": "If you want the instance name to be automatically generated based on IP addresses, you can provide a name template instead of specifying the name manually. The template should include a placeholder that will be replaced during provisioning. Supported placeholders are: `{`ip_octets`}` (last 3 octets of the IP), `{`two_ip_octets`}`, and `{`one_ip_octet`}`.", "pattern": "^[a-zA-Z0-9{][a-zA-Z 0-9._\\-}{]{1,61}[a-zA-Z0-9._}]$", "title": "Name Template", "type": "string"}, "password": {"description": "For Linux instances, 'username' and 'password' are used to create a new user. When only 'password' is provided, it is set as the password for the default user of the image. For Windows instances, 'username' cannot be specified. Use the 'password' field to set the password for the 'Admin' user on Windows. Use the '`user_data`' field to provide a script to create new users on Windows. The password of the Admin user cannot be updated via '`user_data`'.", "title": "Password", "type": "string"}, "security_groups": {"description": "Specifies security group UUIDs to be applied to all instance network interfaces.", "items": {"$ref": "#/components/schemas/MandatoryIdSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "servergroup_id": {"description": "Placement group ID for instance placement policy.\n\nSupported group types:\n- `anti-affinity`: Ensures instances are placed on different hosts for high availability.\n- `affinity`: Places instances on the same host for low-latency communication.\n- `soft-anti-affinity`: Tries to place instances on different hosts but allows sharing if needed.", "format": "uuid4", "title": "Servergroup Id", "type": "string"}, "ssh_key_name": {"anyOf": ["type": "string", "type": "null"], "description": "Specifies the name of the SSH keypair, created via the\n[/v1/`ssh_keys` endpoint](/docs/api-reference/cloud/ssh-keys/add-or-generate-ssh-key).", "examples": ["my-ssh-key"], "title": "Ssh Key Name"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "user_data": {"description": "String in base64 format. For Linux instances, '`user_data`' is ignored when 'password' field is provided. For Windows instances, Admin user password is set by 'password' field and cannot be updated via '`user_data`'. Examples of the `user_data`: https://cloudinit.readthedocs.io/en/latest/topics/examples.html",
          "title": "User Data", "type": "string"}, "username": {"description": "For Linux instances, 'username' and 'password' are used to create a new user. For Windows instances, 'username' cannot be specified. Use 'password' field to set the password for the 'Admin' user on Windows.", "title": "Username", "type": "string"}, "volumes": {"description": "List of volumes that will be attached to the instance.", "items": {"$ref": "#/components/schemas/CreateInstanceVolumeSerializer"}, "minItems": 1, "title": "Volumes", "type": "array"}}, "required": ["interfaces", "flavor", "volumes"], "title": "CreateInstanceSerializerV2", "type": "object"}
    PriceDisplayStatus: {"enum": ["error", "hide", "show"], "title": "PriceDisplayStatus", "type": "string"}
    StorageClass: {"properties": {"name": {"description": "Storage type", "examples": ["ssd-hiiops"], "title": "Name", "type": "string"}}, "required": ["name"], "title": "StorageClass", "type": "object"}
    InferenceLogsOrderByChoices: {"enum": ["time.asc", "time.desc"], "title": "InferenceLogsOrderByChoices", "type": "string"}
    CheckQuotaBeforeContainerCreation: {"properties": {"flavor": {"description": "Container flavor", "examples": ["250mCPU-512MiB"], "pattern": "^[0-9]{0,12}mCPU-[0-9]{0,12}M[i]?B$", "title": "Flavor", "type": "string"}, "max_replicas": {"description": "Maximum number of instances", "maximum": 25, "minimum": 1, "title": "Max Replicas", "type": "integer"}}, "required": ["flavor", "max_replicas"], "title": "CheckQuotaBeforeContainerCreation", "type": "object"}
    ResourceBasicVmSerializer: {"description": "These properties are common for all individual basic VMs\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["g2s-shared-1-2-25_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the basic VM", "examples": ["g2s-shared-1-2-25"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the basic VM", "examples": ["basic_vm_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "basic_vm", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the basic VM", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "first_seen", "last_seen", "project_id", "last_name", "uuid", "tags"], "title": "ResourceBasicVmSerializer", "type": "object"}
    FunctionPriceRequestSerializer: {"properties": {"autoscaling": {"$ref": "#/components/schemas/FaasAutoscalingSerializer", "description": "Autoscaling configuration for the function. Keys must be '`min_instances`' or '`max_instances`', and values must be integers between 0 and 50.", "examples": [{"max_instances": 2, "min_instances": 1}]}, "flavor": {"description": "The name of the flavor associated with the function.", "examples": ["64m-64MB"], "title": "Flavor", "type": "string"}}, "required": ["autoscaling", "flavor"], "title": "FunctionPriceRequestSerializer", "type": "object"}
    InstanceFlavorSerializer: {"description": "Instances flavor schema embedded into instance schema", "properties": {"architecture": {"description": "CPU architecture", "examples": ["x86_64"], "title": "Architecture", "type": "string"}, "flavor_id": {"description": "Flavor ID is the same as name", "examples": ["g2-standard-32-64"], "title": "Flavor Id", "type": "string"}, "flavor_name": {"description": "Flavor name", "examples": ["g2-standard-32-64"], "title": "Flavor Name", "type": "string"}, "hardware_description": {"$ref": "#/components/schemas/InstanceFlavorHardwareDescriptionSerializer", "description": "Additional hardware description"}, "os_type": {"description": "Flavor operating system", "examples": ["linux"], "title": "Os Type", "type": "string"}, "ram": {"description": "RAM size in MiB", "examples": [2048], "title": "Ram", "type": "integer"}, "vcpus": {"description": "Virtual CPU count. For bare metal flavors, it's a physical CPU count", "examples": [1], "title": "Vcpus", "type": "integer"}}, "required": ["flavor_id", "flavor_name", "vcpus", "ram", "hardware_description", "os_type", "architecture"], "title": "Instance flavor", "type": "object"}
    BareMetalFloatingAddressSerializer: {"properties": {"addr": {"description": "Address", "examples": ["10.0.0.17"], "title": "Addr", "type": "string"}, "type": {"const": "floating", "description": "Type of the address", "examples": ["floating"], "title": "Type", "type": "string"}}, "required": ["type", "addr"], "title": "Floating IP Address", "type": "object"}
    CreateClientProfileFieldSerializer: {"properties": {"base_field": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Unique identifier of the DDoS protection field being configured", "examples": [123], "title": "Base Field"}, "field_name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Human-readable name of the DDoS protection field being configured", "examples": [null, "name"], "title": "Field Name"}, "field_value": {"field_value": {"additionalProperties": {}, "nullable": true, "examples": [[12, 54, 43], "key": "value", "value"]}}, "value": {"anyOf": [{"maxLength": 500, "type": "string"}, "type": "null"], "default": null, "deprecated": true, "description": "Basic type value. Only one of 'value' or '`field_value`' must be specified.", "examples": [null, "value"], "title": "Value"}}, "title": "CreateClientProfileFieldSerializer", "type": "object"}
    SchemaFilterLoadBalancerEnum: {"enum": ["flavor", "last_name", "type", "uuid"], "title": "SchemaFilterLoadBalancerEnum", "type": "string"}
    Database: {"properties": {"name": {"description": "Database name", "examples": ["mydatabase"], "pattern": "^[a-z]*$", "title": "Name", "type": "string"}, "owner": {"description": "Database owner from users list", "examples": ["myuser"], "title": "Owner", "type": "string"}}, "required": ["name", "owner"], "title": "Database", "type": "object"}
    VolumeTypeName: {"enum": ["cold", "ssd_hiiops", "ssd_local", "ssd_lowlatency", "standard", "ultra"], "title": "VolumeTypeName", "type": "string"}
    ResourceDBAASPostgreSQLPublicNetworkWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Managed PostgreSQL Public Network - Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_public_network_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the cluster", "examples": ["cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_public_network", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the cluster", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceDBAASPostgreSQLPublicNetworkWithCostSerializer", "type": "object"}
    PortIdWithIpSchema: {"type": "object", "properties": {"ip_address": {"type": "string", "description": "IP address"}, "port_id": {"type": "string", "description": "ID of the port"}}, "required": ["ip_address", "port_id"], "description": "PortIdWithIpSchema schema", "example": {"ip_address": "192.168.123.20", "port_id": "351b0dd7-ca09-431c-be53-935db3785067"}}
    TotalContainerWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Container as a Service - Total Compute (GB-seconds), Luxembourg-2 - Overcommit"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["caas_container_resources_sec"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "GBS", "description": "Unit of billing value", "examples": ["GBS"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "containers", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalContainerWithCostSerializer", "type": "object"}
    ResourceBackupSerializer: {"description": "These properties are common for all individual backups\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["backup_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the backup", "examples": ["backup_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "last_size": {"description": "Size of the backup in bytes", "examples": [46137344], "title": "Last Size", "type": "integer"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "schedule_id": {"description": "ID of the backup schedule", "format": "uuid", "title": "Schedule Id", "type": "string"}, "source_volume_uuid": {"description": "UUID of the source volume", "format": "uuid", "title": "Source Volume Uuid", "type": "string"}, "type": {"const": "backup", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the backup", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "last_size", "first_seen", "last_seen", "project_id", "last_name", "uuid", "source_volume_uuid", "schedule_id"], "title": "ResourceBackupSerializer", "type": "object"}
    InferenceBoxSecretsInSerializer: {"properties": {"data": {"$ref": "#/components/schemas/AwsIamData", "description": "Secret data.", "examples": [{"aws_access_key_id": "fake-key-id", "aws_secret_access_key": "fake-secret"}]}, "name": {"description": "Secret name.", "examples": ["aws-dev"], "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$", "title": "Name", "type": "string"}, "type": {"description": "Secret type. Currently only `aws-iam` is supported.", "examples": ["aws-iam"], "pattern": "^aws-iam$", "title": "Type", "type": "string"}}, "required": ["name", "type", "data"], "title": "InferenceBoxSecretsInSerializer", "type": "object"}
    SchemaFilterBaremetalSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterInstanceEnum", "description": "Field name to filter by", "examples": ["flavor"]}, "type": {"const": "baremetal", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["bm2-hf-medium"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterBaremetalSerializer", "type": "object"}
    CreateVolumeSource: {"enum": ["image", "new-volume", "snapshot"], "title": "CreateVolumeSource", "type": "string"}
    InferenceDeploymentPriceRequestV2Serializer: {"properties": {"containers": {"description": "List of containers for the inference instance.", "items": {"$ref": "#/components/schemas/InferenceContainerPricingV2Serializer"}, "minItems": 1, "title": "Containers", "type": "array"}, "flavor_name": {"description": "Flavor name for the inference instance.", "title": "Flavor Name", "type": "string"}}, "required": ["flavor_name", "containers"], "title": "InferenceDeploymentPriceRequestV2Serializer", "type": "object"}
    FileShareCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/FileShareSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "FileShareCollectionSerializer", "type": "object"}
    CreateIntervalScheduleSerializer: {"properties": {"days": {"description": "Number of days to wait", "examples": [0], "title": "Days", "type": "integer"}, "hours": {"description": "Number of hours to wait", "examples": [2], "title": "Hours", "type": "integer"}, "max_quantity": {"default": 2, "description": "Number of stored resources.", "examples": [2], "exclusiveMinimum": 0, "maximum": 10000, "title": "Max Quantity", "type": "integer"}, "minutes": {"description": "Number of minutes to wait", "examples": [1], "title": "Minutes", "type": "integer"}, "resource_name_template": {"default": "Snapshot of volume {volume_id} created by policy {lifecycle_policy_id}", "description": "Template for resource names.", "examples": ["Snapshot of volume {volume_id} created by policy {lifecycle_policy_id}"], "title": "Resource Name Template", "type": "string"}, "retention_time": {"$ref": "#/components/schemas/CreateIntervalTimeSerializer", "description": "Time after which the resource will be deleted"}, "type": {"const": "interval", "description": "Schedule type", "examples": ["interval"], "title": "Type", "type": "string"}, "weeks": {"description": "Number of weeks to wait", "examples": [0], "title": "Weeks", "type": "integer"}}, "required": ["type"], "title": "CreateIntervalScheduleSerializer", "type": "object"}
    TotalBasicVmWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Instance Type: g2s-shared-1-2-25 (1vCPU/2GB RAM/25GB SSD) Luxembourg-2 - Overcommit"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["g2s-shared-1-2-25_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "flavor": {"description": "Flavor of the basic VM", "examples": ["g2s-shared-1-2-25"], "title": "Flavor", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "basic_vm", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "billing_feature_name", "cost", "currency", "err"], "title": "TotalBasicVmWithCostSerializer", "type": "object"}
    ResourceImagesSerializer: {"description": "These properties are common for all individual images\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["image_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the image", "examples": ["image_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "last_size": {"description": "Size of the image in bytes", "examples": [100000000], "title": "Last Size", "type": "integer"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"const": "bytes", "description": "Unit of size", "examples": ["bytes"], "title": "Size Unit", "type": "string"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "image", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the image", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_size", "size_unit", "last_name", "uuid", "tags"], "title": "ResourceImagesSerializer", "type": "object"}
    RebuildClusterSerializer: {"properties": {"image_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "AI GPU image ID", "examples": ["f01fd9a0-9548-48ba-82dc-a8c8b2d6f2f1"], "title": "Image Id"}, "nodes": {"description": "List of nodes uuids to be rebuild", "items": {"type": "string"}, "title": "Nodes", "type": "array"}, "user_data": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "String in base64 format.Examples of the `user_data`: https://cloudinit.readthedocs.io/en/latest/topics/examples.html", "title": "User Data"}}, "required": ["nodes"], "title": "RebuildClusterSerializer", "type": "object"}
    LbPoolCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/LbPoolSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "LbPoolCollectionSerializer", "type": "object"}
    PrebillingResourceTypes: {"description": "Resource types for prebilling report", "enum": ["ai_cluster", "ai_virtual_cluster", "backup", "baremetal", "basic_vm", "containers", "dbaas_postgresql_connection_pooler", "dbaas_postgresql_cpu", "dbaas_postgresql_memory", "dbaas_postgresql_public_network", "dbaas_postgresql_volume", "egress_traffic", "external_ip", "file_share", "floatingip", "functions", "functions_calls", "functions_traffic", "image", "inference", "instance", "load_balancer", "log_index", "snapshot", "volume"], "title": "PrebillingResourceTypes", "type": "string"}
    Zone: {"enum": ["AMERICAS", "APAC", "EMEA", "RUSSIA_AND_CIS"], "title": "Zone", "type": "string"}
    TaskOrderByChoices: {"enum": ["asc", "desc"], "title": "TaskOrderByChoices", "type": "string"}
    NewInterfaceExternalExtendSchemaWithDdos: {"type": "object", "properties": {"ddos_profile": {"type": ["null", "object"], "description": "Advanced DDoS protection.", "allOf": ["$ref": "#/components/schemas/DeprecatedCreateDdosProfileSchema"]}, "interface_name": {"type": "string", "maxLength": 37, "description": "Interface name"}, "ip_family": {"type": "string", "enum": ["dual", "ipv4", "ipv6"], "description": "Which subnets should be selected: IPv4, IPv6 or use dual stack."}, "port_group": {"type": "integer", "minimum": 0, "maximum": 1, "description": "Each group will be added to the separate trunk."}, "security_groups": {"type": "array", "description": "List of security group IDs", "items": {"$ref": "#/components/schemas/MandatoryIdSchema"}}, "type": {"type": "string", "default": "external", "description": "Must be 'external'. Union tag"}}, "description": "Instance will be attached to default external network", "example": {"type": "external", "ip_family": "dual", "security_groups": ["id": "4536dba1-93b1-492e-b3df-270b6b9f3650", "id": "cee2ca1f-507a-4a31-b714-f6c1ffb4bdfa"], "ddos_profile": {"profile_template": 29, "fields": []}}}
    AccessStatusSerializer: {"properties": {"http_code": {"description": "HTTP status code of the response from the Advanced DDoS protection service.", "examples": [200], "title": "Http Code", "type": "integer"}, "is_accessible": {"description": "Is the current region covered by the Advanced DDoS protection features.", "examples": [true], "title": "Is Accessible", "type": "boolean"}, "message": {"description": "Message from the Advanced DDoS protection service.", "examples": ["Advanced DDoS protection is accessible."], "title": "Message", "type": "string"}}, "required": ["is_accessible", "http_code", "message"], "title": "AccessStatusSerializer", "type": "object"}
    K8sClusterAddonsUpdateV2Serializer: {"properties": {"slurm": {"$ref": "#/components/schemas/K8sClusterSlurmAddonV2Serializers", "description": "Slurm add-on configuration"}}, "title": "K8sClusterAddonsUpdateV2Serializer", "type": "object"}
    ResourceDBAASPostgreSQLMemorySerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_memory_gbmin"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the cluster", "examples": ["cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_memory", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the cluster", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid"], "title": "ResourceDBAASPostgreSQLMemorySerializer", "type": "object"}
    TaskSerializer: {"properties": {"acknowledged_at": {"anyOf": ["type": "string", "type": "null"], "description": "If task was acknowledged, this field stores acknowledge timestamp", "title": "Acknowledged At"}, "acknowledged_by": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "If task was acknowledged, this field stores `user_id` of the person", "examples": [123], "title": "Acknowledged By"}, "client_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "The client ID", "examples": [123], "title": "Client Id"}, "created_on": {"anyOf": ["type": "string", "type": "null"], "description": "Created timestamp", "examples": ["2019-06-25T08:42:42Z"], "title": "Created On"}, "created_resources": {"anyOf": ["$ref": "#/components/schemas/CreatedResources", "type": "null"], "default": null, "description": "If the task creates resources, this field will contain their IDs"}, "data": {"anyOf": [{}, "type": "null"], "default": null, "description": "Task parameters", "examples": [{"block_device_config": [{"boot_index": 0, "image_id": "f01fd9a0-9548-48ba-82dc-a8c8b2d6f2f1", "name": "volume for vm1", "size": 1, "source": "image", "type_name": "standard"}], "flavor_name": "g1s-shared-1-0.5", "keypair_name": null, "name": "cirroz1", "network_config": null, "reservation_id": "01d4925e-f5db-414a-9808-74e08aa4a741", "security_groups": null}], "title": "Data"}, "detailed_state": {"anyOf": ["$ref": "#/components/schemas/TaskDetailedStateEnum", "type": "null"], "default": null, "description": "Task detailed state that is more specific to task type"}, "error": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The error value", "title": "Error"}, "finished_on": {"anyOf": ["type": "string", "type": "null"], "description": "Finished timestamp", "title": "Finished On"}, "id": {"description": "The task ID", "examples": ["26986bc0-748a-4448-b836-0a2aa465eb06"], "title": "Id", "type": "string"}, "job_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Job ID", "title": "Job Id"}, "lifecycle_policy_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Lifecycle policy ID", "title": "Lifecycle Policy Id"}, "project_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "The project ID", "examples": [123], "title": "Project Id"}, "region_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "The region ID", "examples": [123], "title": "Region Id"}, "request_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The request ID", "title": "Request Id"}, "schedule_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Schedule ID", "title": "Schedule Id"}, "state": {"$ref": "#/components/schemas/TaskState", "description": "The task state", "examples": ["RUNNING"]}, "task_type": {"description": "The task type", "examples": ["create_vm"], "title": "Task Type", "type": "string"}, "updated_on": {"anyOf": ["type": "string", "type": "null"], "description": "Last updated timestamp", "title": "Updated On"}, "user_client_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Client, specified in user's JWT", "examples": [123], "title": "User Client Id"}, "user_id": {"description": "The user ID that initiated the task", "examples": [123], "title": "User Id", "type": "integer"}}, "required": ["id", "user_id", "task_type", "state", "created_on"], "title": "TaskSerializer", "type": "object"}
    InferenceInstanceOutSerializerV3: {"properties": {"address": {"anyOf": [{"format": "uri", "minLength": 1, "type": "string"}, "type": "null"], "description": "Address of the inference instance", "examples": ["https://example.com"], "title": "Address"}, "api_keys": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, "type": "null"], "default": null, "description": "List of API keys for the inference instance", "examples": [["key1", "key2"]], "title": "Api Keys"}, "auth_enabled": {"deprecated": true, "description": "`true` if instance uses API key authentication. `\"Authorization\": \"Bearer ****\\*\"` or `\"X-Api-Key\": \"****\\*\"` header is required for the requests to the instance if enabled.", "examples": [false], "title": "Auth Enabled", "type": "boolean"}, "command": {"anyOf": ["type": "string", "type": "null"], "description": "Command to be executed when running a container from an image.", "title": "Command"}, "containers": {"description": "List of containers for the inference instance", "items": {"$ref": "#/components/schemas/ContainerOutSerializerV3"}, "title": "Containers", "type": "array"}, "created_at": {"anyOf": ["type": "string", "type": "null"], "description": "Inference instance creation date in ISO 8601 format.", "examples": ["2023-08-22T11:21:00Z"], "title": "Created At"}, "credentials_name": {"description": "Registry credentials name", "examples": ["dockerhub"], "title": "Credentials Name", "type": "string"}, "description": {"description": "Inference instance description.", "examples": ["My first instance"], "title": "Description", "type": "string"}, "envs": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "description": "Environment variables for the inference instance", "examples": [{"DEBUG_MODE": "False", "KEY": "12345"}], "title": "Envs"}, "flavor_name": {"description": "Flavor name for the inference instance", "examples": ["inference-16vcpu-232gib-1xh100-80gb"], "title": "Flavor Name", "type": "string"}, "image": {"description": "Docker image for the inference instance. This field should contain the image name and tag in the format 'name:tag', e.g., 'nginx:latest'. It defaults to Docker Hub as the image registry, but any accessible Docker image URL can be specified.", "examples": ["nginx:latest"], "title": "Image", "type": "string"}, "ingress_opts": {"anyOf": ["$ref": "#/components/schemas/IngressOptsOutSerializer", "type": "null"], "description": "Ingress options for the inference instance", "examples": ["disable_response_buffering": true]}, "listening_port": {"description": "Listening port for the inference instance.", "examples": [8080], "title": "Listening Port", "type": "integer"}, "logging": {"anyOf": ["$ref": "#/components/schemas/LoggingOutSerializer", "type": "null"], "description": "Logging configuration for the inference instance", "examples": [{"destination_region_id": 1, "enabled": true, "retention_policy": {"period": 45}, "topic_name": "my-log-name"}]}, "name": {"description": "Inference instance name.", "examples": ["my-instance"], "title": "Name", "type": "string"}, "object_references": {"description": "Indicates to which parent object this inference belongs to.", "items": {"$ref": "#/components/schemas/InferenceObjectReferenceSerializer"}, "title": "Object References", "type": "array"}, "probes": {"anyOf": ["$ref": "#/components/schemas/InferenceInstanceProbesOutSerializerV2", "type": "null"], "description": "Probes configured for all containers of the inference instance."}, "project_id": {"description": "Project ID. If not provided, your default project ID will be used.", "examples": [1], "title": "Project Id", "type": "integer"}, "status": {"$ref": "#/components/schemas/InferenceInstanceStatusV3", "description": "Inference instance status.\n\nValue can be one of the following:\n- `DEPLOYING` - The instance is being deployed. Containers are not yet created.\n- `PARTIALLYDEPLOYED` - All containers have been created, but some may not be ready yet. Instances stuck in this state typically indicate either image being pulled, or a failure
            of some kind. In the latter case, the `error_message` field of the respective container object in the `containers` collection explains the failure reason.\n- `ACTIVE` - The instance is running and ready to accept requests.\n- `DISABLED` - The instance is disabled and not accepting any requests.\n- `PENDING` - The instance is running but scaled to zero. It will be automatically scaled up when a request is made.\n- `DELETING` - The instance is being deleted.", "examples": ["ACTIVE"]}, "timeout": {"anyOf": [{"minimum": 0, "type": "integer"}, "type": "null"], "description": "Specifies the duration in seconds without any requests after which the containers will be downscaled to their minimum scale value as defined by `scale.min`. If set, this helps in optimizing resource usage by reducing the number of container instances during periods of inactivity.", "examples": [120], "title": "Timeout", "x-stainless-naming": {"python": {"method_argument": "api_timeout"}}}}, "required": ["project_id", "name", "description", "image", "listening_port", "created_at", "status", "auth_enabled", "address", "containers", "timeout", "envs", "flavor_name", "command", "credentials_name", "logging", "probes", "ingress_opts", "object_references"], "title": "InferenceInstanceOutSerializerV3", "type": "object"}
    ShareKeypairSerializer: {"properties": {"shared_in_project": {"description": "Data for share(True)/unshare(False) Keypair between all users in project", "examples": [true, false], "title": "Shared In Project", "type": "boolean"}}, "required": ["shared_in_project"], "title": "Request body schema for share or unshare keypair", "type": "object"}
    FileShareShareType: {"enum": ["default_share_type", "vast_share_type"], "title": "FileShareShareType", "type": "string"}
    InstanceVMState: {"enum": ["active", "building", "deleted", "error", "paused", "rescued", "resized", "shelved", "shelved_offloaded", "soft-deleted", "stopped", "suspended"], "title": "InstanceVMState", "type": "string"}
    ImageDownloadSerializer: {"properties": {"architecture": {"$ref": "#/components/schemas/ImageArchitectureTypeEnum", "default": "x86_64", "description": "Image CPU architecture type: `aarch64`, `x86_64`", "examples": ["x86_64"]}, "cow_format": {"default": false, "description": "When True, image cannot be deleted unless all volumes, created from it, are deleted.", "examples": [false], "title": "Cow Format", "type": "boolean"}, "hw_firmware_type": {"anyOf": ["$ref": "#/components/schemas/ImageHwFirmwareTypeEnum", "type": "null"], "default": null, "description": "Specifies the type of firmware with which to boot the guest.", "examples": ["bios"]}, "hw_machine_type": {"anyOf": ["$ref": "#/components/schemas/HwMachineTypeEnum", "type": "null"], "default": null, "description": "A virtual chipset type.", "examples": ["q35"]}, "is_baremetal": {"default": false, "description": "Set to true if the image will be used by bare metal servers. Defaults to false.", "examples": [false], "title": "Is Baremetal", "type": "boolean"}, "name": {"description": "Image name", "examples": ["my-image"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "os_distro": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "OS Distribution, i.e. Debian, CentOS, Ubuntu, CoreOS etc.", "examples": ["ubuntu"], "title": "Os Distro"}, "os_type": {"$ref": "#/components/schemas/ImageOsTypeEnum", "default": "linux", "description": "The operating system installed on the image.", "examples": ["linux"]}, "os_version": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "OS version, i.e. 22.04 (for Ubuntu) or 9.4 for Debian", "examples": ["22.04"], "title": "Os Version"}, "ssh_key": {"$ref": "#/components/schemas/SshKeyEnum", "default": "allow", "description": "Whether the image supports SSH key or not", "examples": ["allow"]}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "url": {"description": "URL", "examples": ["http://mirror.noris.net/cirros/0.4.0/cirros-0.4.0-x86_64-disk.img"], "format": "uri", "minLength": 1, "title": "Url", "type": "string"}}, "required": ["url", "name"], "title": "ImageDownloadSerializer", "type": "object"}
    K8sClusterLoggingUpdateV2Serializer: {"properties": {"destination_region_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Destination region id to which the logs will be written", "examples": [1], "title": "Destination Region Id"}, "enabled": {"default": false, "description": "Enable/disable forwarding logs to LaaS", "examples": [true, false], "title": "Enabled", "type": "boolean"}, "retention_policy": {"anyOf": ["$ref": "#/components/schemas/LaasIndexRetentionPolicyPydanticSerializer", "type": "null"], "default": null, "description": "The logs retention policy", "examples": ["period": 45]}, "topic_name": {"anyOf": [{"maxLength": 223, "minLength": 1, "pattern": "^[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])*)*$", "type": "string"}, "type": "null"], "default": null, "description": "The topic name to which the logs will be written", "examples": ["my-log-name"], "title": "Topic Name"}}, "title": "K8sClusterLoggingUpdateV2Serializer", "type": "object"}
    InferenceInstanceStatusV3: {"enum": ["ACTIVE", "DELETING", "DEPLOYING", "DISABLED", "PARTIALLYDEPLOYED", "PENDING"], "title": "InferenceInstanceStatusV3", "type": "string"}
    ChangeSecurityGroupRuleSerializer: {"properties": {"description": {"description": "Rule description", "examples": ["Some description"], "maxLength": 255, "title": "Description", "type": "string"}, "direction": {"description": "Ingress or egress, which is the direction in which the security group rule is applied", "enum": ["egress", "ingress"], "examples": ["ingress"], "title": "Direction", "type": "string"}, "ethertype": {"anyOf": [{"enum": ["IPv4", "IPv6"], "type": "string"}, "type": "null"], "description": "Must be IPv4 or IPv6, and addresses represented in CIDR must match the ingress or egress rules.", "examples": ["IPv4"], "title": "Ethertype"}, "port_range_max": {"anyOf": [{"maximum": 65535, "minimum": 0, "type": "integer"}, "type": "null"], "description": "The maximum port number in the range that is matched by the security group rule", "examples": [80], "title": "Port Range Max"}, "port_range_min": {"anyOf": [{"maximum": 65535, "minimum": 0, "type": "integer"}, "type": "null"], "description": "The minimum port number in the range that is matched by the security group rule", "examples": [80], "title": "Port Range Min"}, "protocol": {"$ref": "#/components/schemas/SecurityGroupProtocolEnum", "description": "Protocol", "examples": ["tcp"]}, "remote_group_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "The remote group UUID to associate with this security group rule", "examples": ["00000000-0000-4000-8000-000000000000"], "title": "Remote Group Id"}, "remote_ip_prefix": {"anyOf": [{"format": "ipvanynetwork", "type": "string"}, "type": "null"], "description": "The remote IP prefix that is matched by this security group rule", "examples": ["10.0.0.0/8"], "title": "Remote Ip Prefix"}, "security_group_id": {"description": "Parent security group of this rule", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid4", "title": "Security Group Id", "type": "string"}}, "required": ["security_group_id", "direction"], "title": "ChangeSecurityGroupRuleSerializer", "type": "object"}
    KeystoneSerializerAi: {"properties": {"created_on": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Datetime object. It automatically is being generated when it is created", "title": "Created On"}, "id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "An automatically generated Region ID when it is created.", "examples": [1], "title": "Id"}, "keystone_federated_domain_id": {"description": "ID of Keystone federated domain that was created during initialization", "examples": ["2b2798cc-eb87-475e-8eab-1e711e5dbe46"], "title": "Keystone Federated Domain Id", "type": "string"}, "password": {"anyOf": [{"format": "password", "type": "string", "writeOnly": true}, "type": "null"], "description": "'null' if the keystone doesn't have the password stored, and '******' (some password) otherwise", "examples": ["******"], "title": "Password"}, "state": {"$ref": "#/components/schemas/KeystoneState", "description": "Keystone state", "examples": ["NEW"]}, "url": {"description": "Unique constraint. Keystone endpoint to use when interacting with Openstack API", "examples": ["https://10.100.167.20:5000/v3"], "title": "Url", "type": "string"}, "username": {"description": "Username for admin access", "examples": ["admin"], "title": "Username", "type": "string"}}, "required": ["url", "state", "keystone_federated_domain_id", "username", "password"], "title": "Keystone object", "type": "object"}
    MLCatalogOrderByChoices: {"enum": ["name.asc", "name.desc"], "title": "MLCatalogOrderByChoices", "type": "string"}
    TagsFilterSerializer: {"description": "Represents a filter consisting of multiple tag filtering conditions.", "properties": {"condition_type": {"$ref": "#/components/schemas/TagsFilterConditionTypes", "default": "OR", "description": "Specifies whether conditions are combined using OR (default) or AND logic."}, "conditions": {"description": "A list of tag filtering conditions defining how tags should match.", "items": {"$ref": "#/components/schemas/TagsFilterConditionSerializer"}, "maxItems": 10, "minItems": 1, "title": "Conditions", "type": "array"}}, "required": ["conditions"], "title": "TagsFilterSerializer", "type": "object"}
    ScaleTriggersSerializer: {"properties": {"cpu": {"anyOf": ["$ref": "#/components/schemas/CpuTriggerSerializer", "type": "null"], "default": null, "description": "CPU trigger configuration"}, "http": {"anyOf": ["$ref": "#/components/schemas/HttpTriggerSerializer", "type": "null"], "default": null, "description": "HTTP trigger configuration"}, "memory": {"anyOf": ["$ref": "#/components/schemas/MemoryTriggerSerializer", "type": "null"], "default": null, "description": "Memory trigger configuration"}}, "title": "ScaleTriggersSerializer", "type": "object"}
    ShareSettingsSerializer: {"discriminator": {"mapping": {"standard": "#/components/schemas/StandardShareSettingsOutputSerializer", "vast": "#/components/schemas/VastShareSettingsOutputSerializer"}, "propertyName": "type_name"}, "title": "ShareSettingsSerializer", "anyOf": ["$ref": "#/components/schemas/StandardShareSettingsOutputSerializer", "$ref": "#/components/schemas/VastShareSettingsOutputSerializer"]}
    AppTemplateConfigSerializer: {"properties": {"description": {"description": "Description", "examples": ["tf2_hostname.description"], "title": "Description", "type": "string"}, "label": {"description": "Label", "examples": ["tf2_hostname.label"], "title": "Label", "type": "string"}, "name": {"description": "Name", "examples": ["tf2_hostname"], "title": "Name", "type": "string"}, "required": {"description": "Required", "examples": [true], "title": "Required", "type": "boolean"}, "type": {"description": "Type", "examples": ["string"], "title": "Type", "type": "string"}}, "required": ["description", "label", "name", "required", "type"], "title": "AppTemplateConfigSerializer", "type": "object"}
    K8sClusterCSICreateV2Serializer: {"properties": {"nfs": {"$ref": "#/components/schemas/K8sClusterNFSCreateV2Serializer", "description": "NFS CSI driver settings", "examples": ["vast_enabled": true]}}, "title": "K8sClusterCSICreateV2Serializer", "type": "object"}
    UpdateSnapshotSerializer: {"properties": {"name": {"description": "Display name for the snapshot (3-63 chars). Used in customer portal and API. Does not affect snapshot data.", "examples": ["my-backup-snapshot"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "tags": {"anyOf": ["$ref": "#/components/schemas/UpdateTagsSerializer", "type": "null"], "description": "Update key-value tags using JSON Merge Patch semantics (RFC 7386). Provide key-value pairs to add or update tags. Set tag values to `null` to remove tags. Unspecified tags remain unchanged. Read-only tags are always preserved and cannot be modified.\n\n**Examples:**\n\n\\* **Add/update tags:** `{'tags': {'environment': 'production', 'team': 'backend'}}` adds new tags or updates existing ones.\n\n\\* **Delete tags:** `{'tags': {'`old_tag`': null}}` removes specific tags.\n\n\\* **Remove all tags:** `{'tags': null}` removes all user-managed tags (read-only tags are preserved).\n\n\\* **Partial update:** `{'tags': {'environment': 'staging'}}` only updates specified tags.\n\n\\* **Mixed operations:** `{'tags': {'environment': 'production', '`cost_center`': 'engineering', '`deprecated_tag`': null}}` adds/updates 'environment' and '`cost_center`' while removing '`deprecated_tag`', preserving other existing tags.\n\n\\* **Replace all:** first delete existing tags with null values, then add new ones in the same request.", "examples": [{"my-tag": "my-tag-value", "my-tag-to-remove": null}]}}, "title": "UpdateSnapshotSerializer", "type": "object"}
    CreatedApiKeySerializer: {"properties": {"created_at": {"description": "Key starts to work", "examples": ["2023-08-22T11:21:00Z"], "title": "Created At", "type": "string"}, "description": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Optional key description", "examples": ["key-description"], "title": "Description"}, "expire": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Key expires at", "examples": ["2023-08-22T11:21:00Z"], "title": "Expire"}, "functions": {"description": "List of functions using key", "items": {"$ref": "#/components/schemas/NamespacedName"}, "title": "Functions", "type": "array"}, "name": {"description": "Key name", "examples": ["key-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Name", "type": "string"}, "secret": {"description": "Secret api key", "examples": ["secret-key"], "title": "Secret", "type": "string"}, "status": {"description": "Key status", "examples": ["Expired"], "title": "Status", "type": "string"}}, "required": ["functions", "name", "created_at", "status", "secret"], "title": "CreatedApiKeySerializer", "type": "object"}
    InferenceInstanceOutSerializerV3List: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/InferenceInstanceOutSerializerV3"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "InferenceInstanceOutSerializerV3List", "type": "object"}
    BillingReservationCollectionResponseSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/BillingReservationItemResponseSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "BillingReservationCollectionResponseSerializer", "type": "object"}
    TotalBaremetalReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["bm2-hf-medium_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "flavor": {"description": "Flavor of the bare metal server", "examples": ["bm2-hf-medium"], "title": "Flavor", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "baremetal", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor"], "title": "TotalBaremetalReportItemSerializer", "type": "object"}
    LimitsRequestCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/LimitsRequestSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "LimitsRequestCollectionSerializer", "type": "object"}
    LoadBalancerStatusSerializer: {"properties": {"id": {"description": "UUID of the entity", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid", "title": "Id", "type": "string"}, "listeners": {"description": "Listeners of the Load Balancer", "items": {"$ref": "#/components/schemas/ListenerStatusSerializer"}, "title": "Listeners", "type": "array"}, "name": {"description": "Name of the load balancer", "examples": ["My Load Balancer"], "title": "Name", "type": "string"}, "operating_status": {"$ref": "#/components/schemas/OperatingStatusEnum", "description": "Operating status of the entity", "examples": ["ONLINE", "DRAINING", "OFFLINE", "DEGRADED", "ERROR", "NO_MONITOR"]}, "provisioning_status": {"$ref": "#/components/schemas/ProvisioningStatusEnum", "description": "Provisioning status of the entity", "examples": ["ACTIVE", "DELETED", "ERROR", "PENDING_CREATE", "PENDING_UPDATE", "PENDING_DELETE"]}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}}, "required": ["id", "operating_status", "provisioning_status", "name", "listeners"], "title": "LoadBalancerStatusSerializer", "type": "object"}
    PortSecurityGroupNamesSchema: {"type": "object", "properties": {"port_id": {"type": ["string", "null"], "description": "Port ID. If None, security groups will be applied to all ports"}, "security_group_names": {"type": "array", "description": "List of security group names", "items": {"type": "string", "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$"}}}, "required": ["port_id", "security_group_names"], "description": "Port security group names", "example": {"port_id": "ee2402d0-f0cd-4503-9b75-69be1d11c5f1", "security_group_names": ["name1", "name2"]}}
    TotalLogIndexWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Logging as a Service - Gb Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["log_index_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "log_index", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalLogIndexWithCostSerializer", "type": "object"}
    RegistryUserCreateSerializer: {"properties": {"duration": {"description": "User account operating time, days", "examples": [14], "maximum": 365, "minimum": -1, "title": "Duration", "type": "integer"}, "name": {"description": "A name for the registry user. \n\nShould be in lowercase, consisting only of numbers and letters, \n\nwith maximum length of 16 characters", "examples": ["user1"], "pattern": "^[a-z0-9]{0,16}$", "title": "Name", "type": "string"}, "read_only": {"default": false, "description": "Read-only user", "examples": [false], "title": "Read Only", "type": "boolean"}, "secret": {"default": "", "description": "User secret", "title": "Secret", "type": "string"}}, "required": ["name", "duration"], "title": "RegistryUserCreateSerializer", "type": "object"}
    TotalFunctionEgressTrafficWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Functions - Total Egress Traffic (GB), Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["faas_function_egress_traffic_gbs"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "GB", "description": "Unit of billing value", "examples": ["GB"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "functions_traffic", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalFunctionEgressTrafficWithCostSerializer", "type": "object"}
    AllowPortAddressPairsSerializer: {"properties": {"allowed_address_pairs": {"default": [], "description": "A set of zero or more allowed port address pair and/or subnet masks", "examples": [[{"ip_address": "192.168.123.20", "mac_address": "00:16:3e:f2:87:16"}, {"ip_address": "192.168.0.0/17", "mac_address": "00:16:3e:f2:87:89"}]], "items": {"$ref": "#/components/schemas/AllowedAddressPairsSerializer"}, "maxItems": 10, "title": "Allowed Address Pairs", "type": "array"}, "instance_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "The ID of the instance that uses this port", "examples": ["bc688791-f1b0-44eb-97d4-07697294b1e1"], "title": "Instance Id"}, "network_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "The ID of the attached network", "examples": ["351b0dd7-ca09-431c-be53-935db3785067"], "title": "Network Id"}, "port_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "The ID of the port", "examples": ["1f0ca628-a73b-42c0-bdac-7b10d023e097"], "title": "Port Id"}}, "title": "AllowPortAddressPairsSerializer", "type": "object"}
    K8sClusterConfigV2Serializer: {"properties": {"config": {"description": "Cluster kubeconfig", "title": "Config", "type": "string"}, "created_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Kubeconfig creation date", "examples": ["2024-02-15T11:53:03Z"], "title": "Created At"}, "expires_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Kubeconfig expiration date", "examples": ["2026-02-15T11:53:03Z"], "title": "Expires At"}}, "required": ["config"], "title": "K8sClusterConfigV2Serializer", "type": "object"}
    SchemaFilterDBAASPostgreSQLPoolerSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLEnum", "description": "Field name to filter by", "examples": ["uuid"]}, "type": {"const": "dbaas_postgresql_connection_pooler", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["066e202a-fc9a-43f2-a74d-be34afbee5c9"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterDBAASPostgreSQLPoolerSerializer", "type": "object"}
    ServerGroupSerializer: {"properties": {"instances": {"description": "The list of instances in this server group.", "examples": [[{"instance_id": "6d14f194-6c1e-49b3-9fc7-50dc8401eb74", "instance_name": "my-instance-1"}, {"instance_id": "142988bb-291e-4862-bffb-b1cf20036c27", "instance_name": "my-instance-2"}]], "items": {"$ref": "#/components/schemas/InstanceBriefSerializer"}, "title": "Instances", "type": "array"}, "name": {"description": "The name of the server group.", "examples": ["my-server-group"], "title": "Name", "type": "string"}, "policy": {"description": "The server group policy. Options are: anti-affinity, affinity, or soft-anti-affinity.", "examples": ["anti-affinity"], "title": "Policy", "type": "string"}, "project_id": {"description": "Project ID", "examples": [1337], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "servergroup_id": {"description": "The ID of the server group.", "examples": ["47003067-550a-6f17-93b6-81ee16ba061e"], "title": "Servergroup Id", "type": "string"}}, "required": ["project_id", "region_id", "region", "servergroup_id", "policy", "name", "instances"], "title": "Server group schema", "type": "object"}
    CheckFlavorVolumeSchema: {"type": "object", "properties": {"apptemplate_id": {"type": "string", "description": "App template ID. Mandatory if volume is created from marketplace template"}, "boot_index": {"type": "integer", "description": "0 should be set for primary boot device Unique positive values for other bootable devices.Negative - boot prohibited"}, "image_id": {"type": "string", "description": "Image ID. Mandatory if volume is created from image"}, "name": {"type": ["string", "null"]}, "size": {"type": "integer", "minimum": 1, "description": "Volume size. Must be specified when source is 'new-volume' or 'image'. If specified for source 'snapshot' or 'existing-volume', value must be equal to respective snapshot or volume size"}, "snapshot_id": {"type": "string", "description": "Volume snapshot ID. Mandatory if volume is created from a snapshot"}, "source": {"type": "string", "enum": ["apptemplate", "existing-volume", "image", "new-volume", "snapshot"], "description": "Volume source"}, "type_name": {"type": "string", "enum": ["cold", "ssd_hiiops", "ssd_local", "ssd_lowlatency", "standard", "ultra"], "description": "One of 'standard', '`ssd_hiiops`', '`ssd_local`', '`ssd_lowlatency`', 'cold', 'ultra'"}, "volume_id": {"type": "string", "description": "Volume ID. Mandatory if volume is pre-existing volume"}}, "required": ["source"]}
    AvailableInstanceNamesSchema: {"type": "object", "properties": {"allowed_bm_name_templates": {"type": "array", "description": "Clients will only be able to use these strings as bare metal server \"`bm_name_templates`\".", "items": {"type": "string"}}, "allowed_bm_name_win_templates": {"type": "array", "description": "Clients will only be able to use these strings as bare metal server \"`bm_name_templates`\".", "items": {"type": "string"}}, "allowed_name_templates": {"type": "array", "description": "If \"`name_templates_limited`\" is True, this is the list of allowed instance name templates.", "items": {"type": "string"}}, "allowed_name_win_templates": {"type": "array", "description": "If \"`name_templates_limited`\" is True, this is the list of allowed windows instance name templates.", "items": {"type": "string"}}, "custom_name_allowed": {"type": "boolean", "description": "If true, instances can be created using \"names\" field."}, "name_templates_limited": {"type": "boolean", "description": "If true, only specific strings are allowed in \"`name_templates`\" fields."}}, "required": ["custom_name_allowed", "name_templates_limited"], "description": "Instance naming restrictions.", "example": {"allowed_bm_name_templates": ["ed-b9-{ip_octets}"], "allowed_name_templates": ["ed-c4-{ip_octets}"], "custom_name_allowed": false, "name_templates_limited": true, "allowed_name_win_templates": ["ed-b9-{one_ip_octet}"], "allowed_bm_name_win_templates": ["ed-c4-{two_ip_octets}"]}}
    SchemaFilterFunctionsTrafficSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterFunctionsTrafficEnum", "description": "Field name to filter by", "examples": ["uuid"]}, "type": {"const": "functions_traffic", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["066e202a-fc9a-43f2-a74d-be34afbee5c9"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterFunctionsTrafficSerializer", "type": "object"}
    SchemaFilterDBAASPostgreSQLVolumeSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterDBAASPostgreSQLVolumesEnum", "description": "Field name to filter by", "examples": ["uuid"]}, "type": {"const": "dbaas_postgresql_volume", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["066e202a-fc9a-43f2-a74d-be34afbee5c9"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterDBAASPostgreSQLVolumeSerializer", "type": "object"}
    VirtualServerSettingsInputSerializer: {"properties": {"credentials": {"$ref": "#/components/schemas/ServerCredentialsSerializer", "description": "Optional server access credentials"}, "interfaces": {"description": "Subnet IPs and floating IPs", "items": {"discriminator": {"mapping": {"any_subnet": "#/components/schemas/AnySubnetInterfaceInputSerializer", "external": "#/components/schemas/ExternalInterfaceInputSerializer", "subnet": "#/components/schemas/SubnetInterfaceInputSerializer"}, "propertyName": "type"}, "anyOf": ["$ref": "#/components/schemas/ExternalInterfaceInputSerializer", "$ref": "#/components/schemas/SubnetInterfaceInputSerializer", "$ref": "#/components/schemas/AnySubnetInterfaceInputSerializer"]}, "title": "Interfaces", "type": "array"}, "security_groups": {"description": "List of security groups UUIDs", "examples": [["id": "b4849ffa-89f2-45a1-951f-0ae5b7809d98"]], "items": {"$ref": "#/components/schemas/MandatoryIdSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "user_data": {"description": "Optional custom user data (Base64-encoded)", "examples": ["eyJ0ZXN0IjogImRhdGEifQ=="], "title": "User Data", "type": "string"}, "volumes": {"description": "List of volumes", "items": {"discriminator": {"mapping": {"image": "#/components/schemas/ImageVolumeInputSerializer", "new": "#/components/schemas/NewVolumeInputSerializer"}, "propertyName": "source"}, "anyOf": ["$ref": "#/components/schemas/NewVolumeInputSerializer", "$ref": "#/components/schemas/ImageVolumeInputSerializer"]}, "title": "Volumes", "type": "array"}}, "required": ["interfaces", "volumes"], "title": "VirtualServerSettingsInputSerializer", "type": "object"}
    InstanceActionSerializerPydantic: {"anyOf": ["$ref": "#/components/schemas/StartActionInstanceSerializer", "$ref": "#/components/schemas/BasicActionInstanceSerializer"], "title": "InstanceActionSerializerPydantic"}
    ResourceAiClusterWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["AI Infrastructure: bm3-ai-1xlarge-h100-80-8 (2 x Intel Xeon 8480+, 2TB RAM, 8x3.84 TB NVMe, 8x Nvidia H100, IB 3.2 Tbit/s, 2x100Gbit/s Ethernet)  Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["bm3-ai-1xlarge-h100-80-8_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the Baremetal GPU cluster", "examples": ["bm3-ai-1xlarge-h100-80-8"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the AI cluster", "examples": ["ai_cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "ai_cluster", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the Baremetal GPU cluster", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "first_seen", "last_seen", "project_id", "last_name", "uuid", "tags", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceAiClusterWithCostSerializer", "type": "object"}
    RegistryRepositoryCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/RegistryRepositorySerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "RegistryRepositoryCollectionSerializer", "type": "object"}
    ConnectedDevicesVIPSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/ConnectedDevicesVIPSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[ConnectedDevicesVIPSerializer]", "type": "object"}
    CreateProjectSerializer: {"properties": {"client_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "ID associated with the client.", "examples": [3], "title": "Client Id"}, "description": {"anyOf": [{"maxLength": 255, "type": "string"}, "type": "null"], "default": null, "description": "Description of the project.", "examples": ["Project description"], "title": "Description"}, "name": {"description": "Unique project name for a client. Each client always has one \"default\" project.", "examples": ["New Project"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "state": {"anyOf": ["type": "string", "type": "null"], "default": "ACTIVE", "description": "State of the project.", "examples": ["ACTIVE"], "title": "State"}}, "required": ["name"], "title": "CreateProjectSerializer", "type": "object"}
    TotalFloatingIpReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["floating_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "floatingip", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id"], "title": "TotalFloatingIpReportItemSerializer", "type": "object"}
    FaasCreateApiKeySerializer: {"properties": {"description": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Optional key description", "examples": ["key-description"], "title": "Description"}, "expire": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Key expires at", "examples": ["2023-08-22T11:21:00Z"], "title": "Expire"}, "functions": {"description": "List of functions using key", "items": {"$ref": "#/components/schemas/NamespacedName"}, "title": "Functions", "type": "array"}, "name": {"description": "Key name", "examples": ["key-name"], "pattern": "^[a-z][-a-z0-9]{0,24}[a-z0-9]$", "title": "Name", "type": "string"}}, "required": ["name", "functions"], "title": "FaasCreateApiKeySerializer", "type": "object"}
    NetworkSubnetworkSerializer: {"properties": {"created_at": {"description": "Datetime when the network was created", "examples": ["2019-06-18T11:56:16+0000"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Task that created this entity", "examples": ["fd50fdd1-0482-4c9b-b847-fc9924665af6"], "title": "Creator Task Id"}, "default": {"anyOf": ["type": "boolean", "type": "null"], "description": "True if network has `is_default` attribute", "examples": [true], "title": "Default"}, "external": {"description": "True if the network `router:external` attribute", "examples": [true], "title": "External", "type": "boolean"}, "id": {"description": "Network ID", "examples": ["eed97610-708d-43a5-a9a5-caebd2b7b4ee"], "format": "uuid4", "title": "Id", "type": "string"}, "mtu": {"description": "MTU (maximum transmission unit). Default value is 1450", "examples": [1500], "title": "Mtu", "type": "integer"}, "name": {"description": "Network name", "examples": ["public"], "title": "Name", "type": "string"}, "port_security_enabled": {"description": "Indicates `port_security_enabled` status of all newly created in the network ports.", "examples": [true, false], "title": "Port Security Enabled", "type": "boolean"}, "project_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Project ID", "examples": [1337], "title": "Project Id"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "segmentation_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Id of network segment", "examples": [9], "title": "Segmentation Id"}, "shared": {"description": "True when the network is shared with your project by external owner", "examples": [false], "title": "Shared", "type": "boolean"}, "subnets": {"description": "List of subnets associated with the network", "examples": [[{"available_ips": 65432, "cidr": "10.0.0.0/16", "created_at": "2019-07-18T12:07:00+0000", "description": "example description", "enable_dhcp": true, "id": "80bfcb8e-1709-4bb2-99d4-3fa1332571de", "ip_version": 4, "name": "test 2", "network_id": "162091db-33cc-45d5-a375-964509af4813", "project_id": 1, "region": "Luxembourg 1", "region_id": 1, "tags": [{"key": "key1", "read_only": false, "value": "value1"}], "total_ips": 65536, "updated_at": "2019-07-22T10:55:45+0000"}, {"available_ips": 232, "cidr": "192.168.192.0/24", "created_at": "2019-07-22T15:15:05+0000", "description": "{\"`task_id`\": \"cc9a5445-189e-48de-a01f-5e10641a6915\"}", "enable_dhcp": true, "id": "94196a6a-c2ce-4f0d-8dc7-d9e0e722aea0", "ip_version": 4, "name": "string", "network_id": "162091db-33cc-45d5-a375-964509af4813", "project_id": 1, "region": "Luxembourg 1", "region_id": 1, "tags": [{"key": "key1", "read_only": false, "value": "value1"}], "total_ips": 256, "updated_at": "2019-07-22T15:15:05+0000"}]], "items": {"$ref": "#/components/schemas/SubnetSerializer"}, "title": "Subnets", "type": "array"}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "type": {"description": "Network type (vlan, vxlan)", "examples": [
            "vlan"], "title": "Type", "type": "string"}, "updated_at": {"description": "Datetime when the network was last updated", "examples": ["2019-06-18T11:57:00+0000"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["project_id", "region_id", "region", "id", "name", "mtu", "created_at", "updated_at", "type", "segmentation_id", "external", "default", "shared", "subnets", "creator_task_id", "task_id", "tags", "port_security_enabled"], "title": "NetworkSubnetworkSerializer", "type": "object"}
    VirtualGpuClusterInterfaceCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/VirtualGpuClusterInterfaceSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "VirtualGpuClusterInterfaceCollectionSerializer", "type": "object"}
    BaremetalClusterListSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/BaremetalClusterSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "BaremetalClusterListSerializer", "type": "object"}
    CreateKeypairV2Serializer: {"properties": {"project_id": {"description": "Project ID", "examples": [1], "title": "Project Id", "type": "integer"}, "public_key": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Public part of the key. To generate public and private keys in the platform, do not specify the parameter in the request body.", "examples": ["ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFHrnwGVBZs6q6vmTBzQFfzdRLQW8N6Rd0ogGe3h8tm83ZJLTTsF+1H4JcOvwI5ETkHMaFIWd2U15nHU5M7plE6UPRKfzy4rq6yI6cE4tojd3A9attMpbEEX7EbGKrbrb4AsjzxHKAVaREAb31ZplJkUlsiees25hTQXBcWQnOESlc9RCxZ/QQgNUUgqm7QGg7CNkL8Mpq9V4YaOhcFGWj0jXP1CL3g6Xe3xJo1CmUbkIOGUyAmrSfLEiy2O91iOUhbmYQyXksznNrT9O6uLkijf6syLZOdyAuUd/Z86eYXej4/YsvIA5eIFU4B6y9zOXEO2A81txPYMRAytYt7+e7 alice@alice"], "title": "Public Key"}, "shared_in_project": {"anyOf": ["type": "boolean", "type": "null"], "default": true, "description": "Keypair is shared for all users in the project. Default True", "examples": [true, false], "title": "Shared In Project"}, "sshkey_name": {"description": "Keypair name", "examples": ["alice"], "maxLength": 255, "minLength": 1, "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Sshkey Name", "type": "string"}}, "required": ["sshkey_name", "project_id"], "title": "Create Keypair schema (with project_id)", "type": "object"}
    SchemaFilterInferenceSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterInferenceEnum", "description": "Field name to filter by", "examples": ["uuid"]}, "type": {"const": "inference", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["066e202a-fc9a-43f2-a74d-be34afbee5c9"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterInferenceSerializer", "type": "object"}
    HwMachineTypeEnum: {"enum": ["pc", "q35"], "title": "HwMachineTypeEnum", "type": "string"}
    PgUser: {"properties": {"name": {"description": "User name", "examples": ["myuser"], "pattern": "^[a-z]*$", "title": "Name", "type": "string"}, "role_attributes": {"description": "User's attributes", "examples": [["INHERIT"]], "items": {"enum": ["BYPASSRLS", "CREATEDB", "CREATEROLE", "INHERIT", "LOGIN", "NOLOGIN"], "type": "string"}, "title": "Role Attributes", "type": "array", "uniqueItems": true}}, "required": ["name", "role_attributes"], "title": "PgUser", "type": "object"}
    VolumeType: {"enum": ["cold", "ssd_hiiops", "ssd_local", "ssd_lowlatency", "standard", "ultra"], "title": "VolumeType", "type": "string"}
    SchemaFilterAiVirtualClusterSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterAiVirtualClusterEnum", "description": "Field name to filter by", "examples": ["flavor"]}, "type": {"const": "ai_virtual_cluster", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["g3-ai-32-192-1500-l40s-48-1"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterAiVirtualClusterSerializer", "type": "object"}
    InstanceFlavorExtendedCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/InstanceFlavorExtendedSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "InstanceFlavorExtendedCollectionSerializer", "type": "object"}
    K8sClusterAddonsV2Serializer: {"properties": {"slurm": {"$ref": "#/components/schemas/K8sClusterSlurmAddonV2Serializer", "description": "Slurm add-on configuration"}}, "required": ["slurm"], "title": "K8sClusterAddonsV2Serializer", "type": "object"}
    NetworkSubnetworkCollectionSerializer: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/NetworkSubnetworkSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "NetworkSubnetworkCollectionSerializer", "type": "object"}
    CreateSubnetSerializer: {"properties": {"cidr": {"description": "CIDR", "examples": ["192.168.10.0/24"], "format": "ipvanynetwork", "title": "Cidr", "type": "string"}, "connect_to_network_router": {"default": true, "description": "True if the network's router should get a gateway in this subnet. Must be explicitly 'false' when `gateway_ip` is null.", "examples": [true], "title": "Connect To Network Router", "type": "boolean"}, "dns_nameservers": {"anyOf": [{"items": {"format": "ipvanyaddress", "type": "string"}, "type": "array"}, "type": "null"], "default": null, "description": "List IP addresses of DNS servers to advertise via DHCP.", "examples": [["8.8.4.4", "1.1.1.1"]], "title": "Dns Nameservers", "x-stainless-terraform-configurability": "computed_optional"}, "enable_dhcp": {"default": true, "description": "True if DHCP should be enabled", "examples": [true], "title": "Enable Dhcp", "type": "boolean"}, "gateway_ip": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "description": "Default GW IPv4 address to advertise in DHCP routes in this subnet. Omit this field to let the cloud backend allocate it automatically. Set to null if no gateway must be advertised by this subnet's DHCP (useful when attaching instances to multiple subnets in order to prevent default route conflicts).", "examples": ["192.168.10.1"], "title": "Gateway Ip", "x-stainless-terraform-configurability": "computed_optional"}, "host_routes": {"anyOf": [{"items": {"$ref": "#/components/schemas/RouteInSerializer"}, "type": "array"}, "type": "null"], "default": null, "description": "List of custom static routes to advertise via DHCP.", "examples": [[{"destination": "10.0.3.0/24", "nexthop": "10.0.0.13"}]], "title": "Host Routes", "x-stainless-terraform-configurability": "computed_optional"}, "ip_version": {"$ref": "#/components/schemas/IPVersion", "description": "IP version", "examples": [4], "x-stainless-terraform-configurability": "computed_optional"}, "name": {"description": "Subnet name", "examples": ["my subnet"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "network_id": {"description": "Network ID", "examples": ["ee2402d0-f0cd-4503-9b75-69be1d11c5f1"], "format": "uuid4", "title": "Network Id", "type": "string"}, "router_id_to_connect": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "default": null, "description": "ID of the router to connect to. Requires `connect_to_network_router` set to true. If not specified, attempts to find a router created during network creation.", "examples": ["00000000-0000-4000-8000-000000000000"], "title": "Router Id To Connect"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}}, "required": ["name", "network_id", "cidr"], "title": "CreateSubnetSerializer", "type": "object"}
    InferenceRegistryCredentialInUpdateSerializer: {"properties": {"password": {"description": "Registry password.", "examples": ["password"], "title": "Password", "type": "string"}, "registry_url": {"description": "Registry URL.", "examples": ["registry.example.com"], "title": "Registry Url", "type": "string"}, "username": {"description": "Registry username.", "examples": ["username"], "title": "Username", "type": "string"}}, "required": ["username", "password", "registry_url"], "title": "InferenceRegistryCredentialInUpdateSerializer", "type": "object"}
    Flavor: {"properties": {"cpu": {"description": "Maximum available cores for instance", "examples": [1, 2], "minimum": 1, "title": "Cpu", "type": "integer"}, "memory_gib": {"description": "Maximum available RAM for instance", "examples": [1, 2], "minimum": 1, "title": "Memory Gib", "type": "integer"}}, "required": ["cpu", "memory_gib"], "title": "Flavor", "type": "object"}
    ExternalGatewaySerializer: {"properties": {"enable_snat": {"description": "Is SNAT enabled.", "examples": [true], "title": "Enable Snat", "type": "boolean"}, "external_fixed_ips": {"description": "List of external IPs that emit SNAT-ed traffic.", "examples": [[{"ip_address": "172.24.4.6", "subnet_id": "b930d7f6-ceb7-40a0-8b81-a425dd994ccf"}]], "items": {"$ref": "#/components/schemas/PortIpSubnetIdSerializer"}, "title": "External Fixed Ips", "type": "array"}, "network_id": {"description": "Id of the external network.", "examples": ["ae34051f-aa6c-4c75-abf5-50dc9ac99ef3"], "format": "uuid4", "title": "Network Id", "type": "string"}}, "required": ["network_id", "enable_snat", "external_fixed_ips"], "title": "ExternalGatewaySerializer", "type": "object"}
    VolumeSerializer: {"properties": {"attachments": {"anyOf": [{"items": {"$ref": "#/components/schemas/VolumeAttachmentSerializer"}, "type": "array"}, "type": "null"], "default": null, "description": "List of attachments associated with the volume.", "title": "Attachments"}, "bootable": {"description": "Indicates whether the volume is bootable.", "examples": [false], "title": "Bootable", "type": "boolean"}, "created_at": {"description": "The date and time when the volume was created.", "examples": ["2019-05-29T05:32:41+0000"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The ID of the task that created this volume.", "examples": ["d74c2bb9-cea7-4b23-a009-2f13518ae66d"], "title": "Creator Task Id"}, "id": {"description": "The unique identifier of the volume.", "examples": ["726ecfcc-7fd0-4e30-a86e-7892524aa483"], "title": "Id", "type": "string"}, "is_root_volume": {"description": "Indicates whether this is a root volume.", "examples": [false], "title": "Is Root Volume", "type": "boolean"}, "limiter_stats": {"anyOf": ["$ref": "#/components/schemas/VolumeLimiterStatsSerializer", "type": "null"], "default": null, "description": "Quality of Service (QoS) parameters for this volume."}, "name": {"description": "The name of the volume.", "examples": ["volume-1"], "title": "Name", "type": "string"}, "project_id": {"description": "Project ID.", "examples": [1], "title": "Project Id", "type": "integer"}, "region": {"description": "The region where the volume is located.", "examples": ["Luxembourg"], "title": "Region", "type": "string"}, "region_id": {"description": "The identifier of the region.", "examples": [1], "title": "Region Id", "type": "integer"}, "size": {"description": "The size of the volume in gibibytes (GiB).", "examples": [50], "title": "Size", "type": "integer"}, "snapshot_ids": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, "type": "null"], "default": null, "description": "List of snapshot IDs associated with this volume.", "title": "Snapshot Ids"}, "status": {"$ref": "#/components/schemas/VolumeStatus", "description": "The current status of the volume.", "examples": ["available"]}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "title": "Task Id"}, "updated_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "The date and time when the volume was last updated.", "examples": ["2019-05-29T05:39:20+0000"], "title": "Updated At"}, "volume_image_metadata": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, "type": "null"], "default": null, "description": "Image metadata for volumes created from an image.", "examples": [{"checksum": "ba3cd24377dde5dfdd58728894004abb", "container_format": "bare", "disk_format": "raw", "image_id": "723037e2-ec6d-47eb-92de-6276c8907839", "image_name": "cirros-gcloud", "min_disk": "1", "min_ram": "0", "size": "46137344"}], "title": "Volume Image Metadata"}, "volume_type": {"description": "The type of volume storage.", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["bootable", "created_at", "id", "is_root_volume", "tags", "name", "project_id", "region", "region_id", "size", "status",
        "volume_type"], "title": "VolumeSerializer", "type": "object"}
    DeprecatedCreateDdosProfileSchema: {"type": "object", "properties": {"fields": {"type": "array", "default": [], "writeOnly": true, "description": "Protection parameters.", "items": {"$ref": "#/components/schemas/DeprecatedCreateClientProfileFieldSchema"}}, "profile_template": {"type": "integer", "writeOnly": true, "description": "DDoS profile template ID."}, "profile_template_name": {"type": "string", "writeOnly": true, "description": "DDoS profile template name."}}, "required": ["profile_template"], "example": {"profile_template": 29, "fields": []}}
    ResourceVolumeSerializer: {"description": "These properties are common for all individual volumes\nin all cost and usage reports results (but not in totals)", "properties": {"attached_to_vm": {"anyOf": [{"format": "uuid", "type": "string"}, "type": "null"], "default": null, "description": "ID of the VM the volume is attached to", "title": "Attached To Vm"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["volume_t_standard_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the volume", "examples": ["volume_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "last_size": {"description": "Size of the volume in bytes", "examples": [100], "title": "Last Size", "type": "integer"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"description": "Unit of size", "examples": ["GiB"], "title": "Size Unit", "type": "string"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "volume", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the volume", "format": "uuid", "title": "Uuid", "type": "string"}, "volume_type": {"description": "Type of the volume", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "volume_type", "first_seen", "last_seen", "project_id", "last_size", "size_unit", "last_name", "uuid", "tags"], "title": "ResourceVolumeSerializer", "type": "object"}
    ApiKeyCreateRequestSerializer: {"properties": {"description": {"description": "Description of the API Key.", "examples": ["This key is used for accessing the inference service."], "maxLength": 300, "title": "Description", "type": "string"}, "expires_at": {"description": "Expiration date of the API Key in ISO 8601 format.", "examples": ["2024-10-01T12:00:00Z"], "title": "Expires At", "type": "string"}, "name": {"description": "Name of the API Key.", "examples": ["my-api-key"], "maxLength": 63, "minLength": 4, "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$", "title": "Name", "type": "string"}}, "required": ["name"], "title": "ApiKeyCreateRequestSerializer", "type": "object"}
    K8sClusterDdosProfileV2Serializer: {"properties": {"enabled": {"description": "Enable advanced DDoS protection", "examples": [true], "title": "Enabled", "type": "boolean"}, "fields": {"anyOf": [{"items": {"$ref": "#/components/schemas/K8sClusterDdosProfileFieldV2Serializer"}, "type": "array"}, "type": "null"], "default": null, "description": "DDoS profile parameters", "examples": [[{"base_field": 10, "field_value": [45046, 45047]}]], "title": "Fields"}, "profile_template": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "DDoS profile template ID", "examples": [29], "title": "Profile Template"}, "profile_template_name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "DDoS profile template name", "title": "Profile Template Name"}}, "required": ["enabled"], "title": "K8sClusterDdosProfileV2Serializer", "type": "object"}
    NewReservedFixedIpExternalSerializer: {"properties": {"ip_family": {"anyOf": ["$ref": "#/components/schemas/InterfaceIPFamily", "type": "null"], "description": "Which subnets should be selected: IPv4, IPv6 or use dual stack.", "examples": ["ipv4"]}, "is_vip": {"description": "If reserved fixed IP is a VIP", "examples": [false], "title": "Is Vip", "type": "boolean"}, "type": {"const": "external", "description": "Must be 'external'", "title": "Type", "type": "string"}}, "required": ["type"], "title": "NewReservedFixedIpExternalSerializer", "type": "object"}
    VirtualGpuRequiredQuotaSerializer: {"properties": {"external_ip_count_limit": {"description": "External IP Count limit", "examples": [10], "title": "External Ip Count Limit", "type": "integer"}, "external_ip_count_requested": {"description": "External IP Count requested", "examples": [1], "title": "External Ip Count Requested", "type": "integer"}, "external_ip_count_usage": {"description": "External IP Count usage", "examples": [1], "title": "External Ip Count Usage", "type": "integer"}, "floating_count_limit": {"description": "Floating IP Count usage", "examples": [1], "title": "Floating Count Limit", "type": "integer"}, "floating_count_requested": {"description": "Floating IP Count requested", "examples": [1], "title": "Floating Count Requested", "type": "integer"}, "floating_count_usage": {"description": "External IP Count requested", "examples": [1], "title": "Floating Count Usage", "type": "integer"}, "gpu_virtual_a100_count_limit": {"description": "Virtual A100 GPU card count limit", "examples": [10], "title": "Gpu Virtual A100 Count Limit", "type": "integer"}, "gpu_virtual_a100_count_requested": {"description": "Virtual A100 GPU card count requested", "examples": [1], "title": "Gpu Virtual A100 Count Requested", "type": "integer"}, "gpu_virtual_a100_count_usage": {"description": "Virtual A100 GPU card count usage", "examples": [1], "title": "Gpu Virtual A100 Count Usage", "type": "integer"}, "gpu_virtual_h100_count_limit": {"description": "Virtual H100 GPU card count limit", "examples": [10], "title": "Gpu Virtual H100 Count Limit", "type": "integer"}, "gpu_virtual_h100_count_requested": {"description": "Virtual H100 GPU card count requested", "examples": [1], "title": "Gpu Virtual H100 Count Requested", "type": "integer"}, "gpu_virtual_h100_count_usage": {"description": "Virtual H100 GPU card count usage", "examples": [1], "title": "Gpu Virtual H100 Count Usage", "type": "integer"}, "gpu_virtual_h200_count_limit": {"description": "Virtual H200 GPU card count limit", "examples": [10], "title": "Gpu Virtual H200 Count Limit", "type": "integer"}, "gpu_virtual_h200_count_requested": {"description": "Virtual H200 GPU card count requested", "examples": [1], "title": "Gpu Virtual H200 Count Requested", "type": "integer"}, "gpu_virtual_h200_count_usage": {"description": "Virtual H200 GPU card count usage", "examples": [1], "title": "Gpu Virtual H200 Count Usage", "type": "integer"}, "gpu_virtual_l40s_count_limit": {"description": "Virtual L40S GPU card count limit", "examples": [10], "title": "Gpu Virtual L40S Count Limit", "type": "integer"}, "gpu_virtual_l40s_count_requested": {"description": "Virtual L40S GPU card count requested", "examples": [1], "title": "Gpu Virtual L40S Count Requested", "type": "integer"}, "gpu_virtual_l40s_count_usage": {"description": "Virtual L40S GPU card count usage", "examples": [1], "title": "Gpu Virtual L40S Count Usage", "type": "integer"}, "volume_count_limit": {"description": "Volumes Count limit", "examples": [10], "title": "Volume Count Limit", "type": "integer"}, "volume_count_requested": {"description": "Volumes Count requested", "examples": [1], "title": "Volume Count Requested", "type": "integer"}, "volume_count_usage": {"description": "Volumes Count usage", "examples": [1], "title": "Volume Count Usage", "type": "integer"}, "volume_size_limit": {"description": "Volumes Size, GiB limit", "examples": [10], "title": "Volume Size Limit", "type": "integer"}, "volume_size_requested": {"description": "Volumes Size, GiB requested", "examples": [1], "title": "Volume Size Requested", "type": "integer"}, "volume_size_usage": {"description": "Volumes Size, GiB usage", "examples": [1], "title": "Volume Size Usage", "type": "integer"}}, "title": "VirtualGpuRequiredQuotaSerializer", "type": "object"}
    VolumePricingWithDiscountPerPeriodSerializer: {"properties": {"volumes": {"description": "Prices of volumes per type over the specified period of time.", "items": {"anyOf": ["$ref": "#/components/schemas/VolumePriceWithDiscountSerializer", "type": "null"]}, "title": "Volumes", "type": "array"}}, "required": ["volumes"], "title": "VolumePricingWithDiscountPerPeriodSerializer", "type": "object"}
    VolumeSource: {"enum": ["apptemplate", "existing-volume", "image", "new-volume", "snapshot"], "title": "VolumeSource", "type": "string"}
    UserActionResourcePriceSerializer: {"properties": {"currency_code": {"anyOf": ["type": "string", "type": "null"], "description": "Currency code (3 letter code per ISO 4217)", "examples": ["USD"], "title": "Currency Code"}, "price_per_hour": {"anyOf": ["type": "number", "type": "null"], "description": "Total price VAT inclusive per hour", "examples": [0.01], "title": "Price Per Hour"}, "price_per_month": {"anyOf": ["type": "number", "type": "null"], "description": "Total price VAT inclusive per month (30 days)", "examples": [7.2], "title": "Price Per Month"}, "price_status": {"$ref": "#/components/schemas/PriceDisplayStatus", "description": "Price status for the UI", "examples": ["show"]}}, "required": ["currency_code", "price_per_hour", "price_per_month", "price_status"], "title": "UserActionResourcePrice schema", "type": "object"}
    CreateSecretSerializerV2: {"properties": {"expiration": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "Datetime when the secret will expire. Defaults to None", "title": "Expiration"}, "name": {"description": "Secret name", "examples": ["Load balancer certificate #1"], "title": "Name", "type": "string"}, "payload": {"$ref": "#/components/schemas/CreateSecretPayloadSerializer", "description": "Secret payload."}}, "required": ["name", "payload"], "title": "CreateSecretSerializerV2", "type": "object"}
    RouterExternalManualGwSerializer: {"properties": {"enable_snat": {"default": true, "description": "Is SNAT enabled. Defaults to true.", "examples": [true], "title": "Enable Snat", "type": "boolean"}, "network_id": {"description": "id of the external network.", "examples": ["3d1e9779-b8ad-4c8e-a1a4-0a03671f07f7"], "format": "uuid4", "title": "Network Id", "type": "string"}, "type": {"const": "manual", "default": "manual", "description": "must be 'manual'.", "examples": ["manual"], "title": "Type", "type": "string"}}, "required": ["network_id"], "title": "RouterExternalManualGwSerializer", "type": "object"}
    LoadBalancerStatusSerializerList: {"properties": {"count": {"description": "Number of objects", "examples": [1], "minimum": 0, "title": "Count", "type": "integer"}, "results": {"description": "Objects", "items": {"$ref": "#/components/schemas/LoadBalancerStatusSerializer"}, "title": "Results", "type": "array"}}, "required": ["count", "results"], "title": "ListResultSchema[LoadBalancerStatusSerializer]", "type": "object"}
    CpuTriggerSerializer: {"properties": {"threshold": {"description": "CPU usage percentage", "maximum": 99, "minimum": 1, "title": "Threshold", "type": "integer"}}, "required": ["threshold"], "title": "CpuTriggerSerializer", "type": "object"}
    AvailableBaremetalFlavorsBodySerializer: {"properties": {"apptemplate_id": {"description": "Apptemplate ID. Either `image_id` or `apptemplate_id` is required", "examples": ["tf2server"], "title": "Apptemplate Id", "type": "string"}, "image_id": {"description": "Image ID. Either `image_id` or `apptemplate_id` is required", "examples": ["b5b4d65d-945f-4b98-ab6f-332319c724ef"], "title": "Image Id", "type": "string"}}, "title": "AvailableBaremetalFlavorsBodySerializer", "type": "object"}
    LaasIndexRetentionPolicySchema: {"type": "object", "properties": {"period": {"type": ["integer", "null"], "minimum": 1, "maximum": 1825, "description": "Duration of days for which logs must be kept."}}}
    ResourceBaremetalWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Instance Type: bm2-hf-medium (1x Intel Xeon E-2388G, 64GB, 2x480 SSD, 2x1Gbit NIC) Luxembourg-2 - Overcommit"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["bm2-hf-medium_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the bare metal server", "examples": ["bm2-hf-medium"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the bare metal server", "examples": ["baremetal_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "baremetal", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the bare metal server", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "first_seen", "last_seen", "project_id", "last_name", "uuid", "tags", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceBaremetalWithCostSerializer", "type": "object"}
    GpuVirtualFlavorSerializerWithPrices: {"properties": {"architecture": {"anyOf": ["type": "string", "type": "null"], "description": "Flavor architecture type", "examples": ["x86_64"], "title": "Architecture"}, "capacity": {"description": "Number of available instances of given flavor", "examples": [1], "title": "Capacity", "type": "integer"}, "disabled": {"description": "If the flavor is disabled, new resources cannot be created using this flavor.", "examples": [false], "title": "Disabled", "type": "boolean"}, "hardware_description": {"$ref": "#/components/schemas/GpuVirtualFlavorHardwareDescriptionSerializer", "description": "Additional virtual hardware description"}, "hardware_properties": {"$ref": "#/components/schemas/GpuFlavorHardwareProperties", "description": "Additional virtual hardware properties"}, "name": {"description": "Flavor name", "examples": ["g1-gpu-1-2-1"], "title": "Name", "type": "string"}, "price": {"$ref": "#/components/schemas/FlavorPrice", "description": "Flavor price."}, "supported_features": {"$ref": "#/components/schemas/FlavorFeaturesSerializer", "description": "Set of enabled features based on the flavor's type and configuration"}}, "required": ["name", "price", "architecture", "disabled", "capacity", "hardware_description", "hardware_properties", "supported_features"], "title": "Virtual GPU flavors chema with price", "type": "object"}
    RegionalQuotasSerializer: {"properties": {"baremetal_basic_count_limit": {"description": "Basic bare metal servers count limit", "examples": [0], "title": "Baremetal Basic Count Limit", "type": "integer"}, "baremetal_basic_count_usage": {"description": "Basic bare metal servers count usage", "examples": [0], "title": "Baremetal Basic Count Usage", "type": "integer"}, "baremetal_gpu_a100_count_limit": {"description": "Bare metal A100 GPU server count limit", "examples": [0], "title": "Baremetal Gpu A100 Count Limit", "type": "integer"}, "baremetal_gpu_a100_count_usage": {"description": "Bare metal A100 GPU server count usage", "examples": [0], "title": "Baremetal Gpu A100 Count Usage", "type": "integer"}, "baremetal_gpu_count_limit": {"deprecated": true, "description": "Total number of AI GPU bare metal servers. This field is deprecated and is now always calculated automatically as the sum of `baremetal_gpu_a100_count_limit`, `baremetal_gpu_h100_count_limit`, `baremetal_gpu_h200_count_limit`, and `baremetal_gpu_l40s_count_limit`.", "examples": [0], "title": "Baremetal Gpu Count Limit", "type": "integer"}, "baremetal_gpu_count_usage": {"deprecated": true, "description": "Baremetal Gpu Count Usage. This field is deprecated and is now always calculated automatically as the sum of `baremetal_gpu_a100_count_usage`, `baremetal_gpu_h100_count_usage`, `baremetal_gpu_h200_count_usage`, and `baremetal_gpu_l40s_count_usage`.", "examples": [0], "title": "Baremetal Gpu Count Usage", "type": "integer"}, "baremetal_gpu_h100_count_limit": {"description": "Bare metal H100 GPU server count limit", "examples": [0], "title": "Baremetal Gpu H100 Count Limit", "type": "integer"}, "baremetal_gpu_h100_count_usage": {"description": "Bare metal H100 GPU server count usage", "examples": [0], "title": "Baremetal Gpu H100 Count Usage", "type": "integer"}, "baremetal_gpu_h200_count_limit": {"description": "Bare metal H200 GPU server count limit", "examples": [0], "title": "Baremetal Gpu H200 Count Limit", "type": "integer"}, "baremetal_gpu_h200_count_usage": {"description": "Bare metal H200 GPU server count usage", "examples": [0], "title": "Baremetal Gpu H200 Count Usage", "type": "integer"}, "baremetal_gpu_l40s_count_limit": {"description": "Bare metal L40S GPU server count limit", "examples": [0], "title": "Baremetal Gpu L40S Count Limit", "type": "integer"}, "baremetal_gpu_l40s_count_usage": {"description": "Bare metal L40S GPU server count usage", "examples": [0], "title": "Baremetal Gpu L40S Count Usage", "type": "integer"}, "baremetal_hf_count_limit": {"description": "High-frequency bare metal servers count limit", "examples": [0], "title": "Baremetal Hf Count Limit", "type": "integer"}, "baremetal_hf_count_usage": {"description": "High-frequency bare metal servers count usage", "examples": [0], "title": "Baremetal Hf Count Usage", "type": "integer"}, "baremetal_infrastructure_count_limit": {"description": "Infrastructure bare metal servers count limit", "examples": [0], "title": "Baremetal Infrastructure Count Limit", "type": "integer"}, "baremetal_infrastructure_count_usage": {"description": "Infrastructure bare metal servers count usage", "examples": [0], "title": "Baremetal Infrastructure Count Usage", "type": "integer"}, "baremetal_network_count_limit": {"description": "Bare metal Network Count limit", "examples": [0], "title": "Baremetal Network Count Limit", "type": "integer"}, "baremetal_network_count_usage": {"description": "Bare metal Network Count usage", "examples": [0], "title": "Baremetal Network Count Usage", "type": "integer"}, "baremetal_storage_count_limit": {"description": "Storage bare metal servers count limit", "examples": [0], "title": "Baremetal Storage Count Limit", "type": "integer"}, "baremetal_storage_count_usage": {"description": "Storage bare metal servers count usage", "examples": [0], "title": "Baremetal Storage Count Usage", "type": "integer"}, "caas_container_count_limit": {"description": "Containers count limit", "examples": [0], "title": "Caas Container Count Limit", "type": "integer"}, "caas_container_count_usage": {
          "description": "Containers count usage", "examples": [0], "title": "Caas Container Count Usage", "type": "integer"}, "caas_cpu_count_limit": {"description": "mCPU count for containers limit", "examples": [0], "title": "Caas Cpu Count Limit", "type": "integer"}, "caas_cpu_count_usage": {"description": "mCPU count for containers usage", "examples": [0], "title": "Caas Cpu Count Usage", "type": "integer"}, "caas_gpu_count_limit": {"description": "Containers gpu count limit", "examples": [0], "title": "Caas Gpu Count Limit", "type": "integer"}, "caas_gpu_count_usage": {"description": "Containers gpu count usage", "examples": [0], "title": "Caas Gpu Count Usage", "type": "integer"}, "caas_ram_size_limit": {"description": "MB memory count for containers limit", "examples": [0], "title": "Caas Ram Size Limit", "type": "integer"}, "caas_ram_size_usage": {"description": "MB memory count for containers usage", "examples": [0], "title": "Caas Ram Size Usage", "type": "integer"}, "cluster_count_limit": {"description": "K8s clusters count limit", "examples": [0], "title": "Cluster Count Limit", "type": "integer"}, "cluster_count_usage": {"description": "K8s clusters count usage", "examples": [0], "title": "Cluster Count Usage", "type": "integer"}, "cpu_count_limit": {"description": "vCPU Count limit", "examples": [0], "title": "Cpu Count Limit", "type": "integer"}, "cpu_count_usage": {"description": "vCPU Count usage", "examples": [0], "title": "Cpu Count Usage", "type": "integer"}, "dbaas_postgres_cluster_count_limit": {"description": "DBaaS cluster count limit", "examples": [0], "title": "Dbaas Postgres Cluster Count Limit", "type": "integer"}, "dbaas_postgres_cluster_count_usage": {"description": "DBaaS cluster count usage", "examples": [0], "title": "Dbaas Postgres Cluster Count Usage", "type": "integer"}, "external_ip_count_limit": {"description": "External IP Count limit", "examples": [0], "title": "External Ip Count Limit", "type": "integer"}, "external_ip_count_usage": {"description": "External IP Count usage", "examples": [0], "title": "External Ip Count Usage", "type": "integer"}, "faas_cpu_count_limit": {"description": "mCPU count for functions limit", "examples": [0], "title": "Faas Cpu Count Limit", "type": "integer"}, "faas_cpu_count_usage": {"description": "mCPU count for functions usage", "examples": [0], "title": "Faas Cpu Count Usage", "type": "integer"}, "faas_function_count_limit": {"description": "Functions count limit", "examples": [0], "title": "Faas Function Count Limit", "type": "integer"}, "faas_function_count_usage": {"description": "Functions count usage", "examples": [0], "title": "Faas Function Count Usage", "type": "integer"}, "faas_namespace_count_limit": {"description": "Functions namespace count limit", "examples": [0], "title": "Faas Namespace Count Limit", "type": "integer"}, "faas_namespace_count_usage": {"description": "Functions namespace count usage", "examples": [0], "title": "Faas Namespace Count Usage", "type": "integer"}, "faas_ram_size_limit": {"description": "MB memory count for functions limit", "examples": [0], "title": "Faas Ram Size Limit", "type": "integer"}, "faas_ram_size_usage": {"description": "MB memory count for functions usage", "examples": [0], "title": "Faas Ram Size Usage", "type": "integer"}, "firewall_count_limit": {"description": "Firewalls Count limit", "examples": [0], "title": "Firewall Count Limit", "type": "integer"}, "firewall_count_usage": {"description": "Firewalls Count usage", "examples": [0], "title": "Firewall Count Usage", "type": "integer"}, "floating_count_limit": {"description": "Floating IP Count limit", "examples": [0], "title": "Floating Count Limit", "type": "integer"}, "floating_count_usage": {"description": "Floating IP Count usage", "examples": [0], "title": "Floating Count Usage", "type": "integer"}, "gpu_count_limit": {"description": "GPU Count limit", "examples": [0], "title": "Gpu Count Limit", "type": "integer"}, "gpu_count_usage": {"description": "GPU Count usage", "examples": [0], "title": "Gpu Count Usage", "type": "integer"}, "gpu_virtual_a100_count_limit": {
          "description": "Virtual A100 GPU card count limit", "examples": [0], "title": "Gpu Virtual A100 Count Limit", "type": "integer"}, "gpu_virtual_a100_count_usage": {"description": "Virtual A100 GPU card count usage", "examples": [0], "title": "Gpu Virtual A100 Count Usage", "type": "integer"}, "gpu_virtual_h100_count_limit": {"description": "Virtual H100 GPU card count limit", "examples": [0], "title": "Gpu Virtual H100 Count Limit", "type": "integer"}, "gpu_virtual_h100_count_usage": {"description": "Virtual H100 GPU card count usage", "examples": [0], "title": "Gpu Virtual H100 Count Usage", "type": "integer"}, "gpu_virtual_h200_count_limit": {"description": "Virtual H200 GPU card count limit", "examples": [0], "title": "Gpu Virtual H200 Count Limit", "type": "integer"}, "gpu_virtual_h200_count_usage": {"description": "Virtual H200 GPU card count usage", "examples": [0], "title": "Gpu Virtual H200 Count Usage", "type": "integer"}, "gpu_virtual_l40s_count_limit": {"description": "Virtual L40S GPU card count limit", "examples": [0], "title": "Gpu Virtual L40S Count Limit", "type": "integer"}, "gpu_virtual_l40s_count_usage": {"description": "Virtual L40S GPU card count usage", "examples": [0], "title": "Gpu Virtual L40S Count Usage", "type": "integer"}, "image_count_limit": {"description": "Images Count limit", "examples": [0], "title": "Image Count Limit", "type": "integer"}, "image_count_usage": {"description": "Images Count usage", "examples": [0], "title": "Image Count Usage", "type": "integer"}, "image_size_limit": {"description": "Images Size, GiB limit", "examples": [0], "title": "Image Size Limit", "type": "integer"}, "image_size_usage": {"description": "Images Size, GiB usage", "examples": [0], "title": "Image Size Usage", "type": "integer"}, "ipu_count_limit": {"description": "IPU Count limit", "examples": [0], "title": "Ipu Count Limit", "type": "integer"}, "ipu_count_usage": {"description": "IPU Count usage", "examples": [0], "title": "Ipu Count Usage", "type": "integer"}, "laas_topic_count_limit": {"description": "LaaS Topics Count limit", "examples": [0], "title": "Laas Topic Count Limit", "type": "integer"}, "laas_topic_count_usage": {"description": "LaaS Topics Count usage", "examples": [0], "title": "Laas Topic Count Usage", "type": "integer"}, "loadbalancer_count_limit": {"description": "Load Balancers Count limit", "examples": [0], "title": "Loadbalancer Count Limit", "type": "integer"}, "loadbalancer_count_usage": {"description": "Load Balancers Count usage", "examples": [0], "title": "Loadbalancer Count Usage", "type": "integer"}, "network_count_limit": {"description": "Networks Count limit", "examples": [0], "title": "Network Count Limit", "type": "integer"}, "network_count_usage": {"description": "Networks Count usage", "examples": [0], "title": "Network Count Usage", "type": "integer"}, "ram_limit": {"description": "RAM Size, GiB limit", "examples": [0], "title": "Ram Limit", "type": "integer"}, "ram_usage": {"description": "RAM Size, GiB usage", "examples": [0], "title": "Ram Usage", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}, "registry_count_limit": {"description": "Registries count limit", "examples": [0], "title": "Registry Count Limit", "type": "integer"}, "registry_count_usage": {"description": "Registries count usage", "examples": [0], "title": "Registry Count Usage", "type": "integer"}, "registry_storage_limit": {"description": "Registries volume usage, GiB limit", "examples": [0], "title": "Registry Storage Limit", "type": "integer"}, "registry_storage_usage": {"description": "Registries volume usage, GiB usage", "examples": [0], "title": "Registry Storage Usage", "type": "integer"}, "router_count_limit": {"description": "Routers Count limit", "examples": [0], "title": "Router Count Limit", "type": "integer"}, "router_count_usage": {"description": "Routers Count usage", "examples": [0], "title": "Router Count Usage", "type": "integer"}, "secret_count_limit": {"description": "Secret Count limit", "examples": [
            0], "title": "Secret Count Limit", "type": "integer"}, "secret_count_usage": {"description": "Secret Count usage", "examples": [0], "title": "Secret Count Usage", "type": "integer"}, "servergroup_count_limit": {"description": "Placement Group Count limit", "examples": [0], "title": "Servergroup Count Limit", "type": "integer"}, "servergroup_count_usage": {"description": "Placement Group Count usage", "examples": [0], "title": "Servergroup Count Usage", "type": "integer"}, "sfs_count_limit": {"description": "Shared file system Count limit", "examples": [0], "title": "Sfs Count Limit", "type": "integer"}, "sfs_count_usage": {"description": "Shared file system Count usage", "examples": [0], "title": "Sfs Count Usage", "type": "integer"}, "sfs_size_limit": {"description": "Shared file system Size, GiB limit", "examples": [0], "title": "Sfs Size Limit", "type": "integer"}, "sfs_size_usage": {"description": "Shared file system Size, GiB usage", "examples": [0], "title": "Sfs Size Usage", "type": "integer"}, "shared_vm_count_limit": {"description": "Basic VMs Count limit", "examples": [0], "title": "Shared Vm Count Limit", "type": "integer"}, "shared_vm_count_usage": {"description": "Basic VMs Count usage", "examples": [0], "title": "Shared Vm Count Usage", "type": "integer"}, "snapshot_schedule_count_limit": {"description": "Snapshot Schedules Count limit", "examples": [0], "title": "Snapshot Schedule Count Limit", "type": "integer"}, "snapshot_schedule_count_usage": {"description": "Snapshot Schedules Count usage", "examples": [0], "title": "Snapshot Schedule Count Usage", "type": "integer"}, "subnet_count_limit": {"description": "Subnets Count limit", "examples": [0], "title": "Subnet Count Limit", "type": "integer"}, "subnet_count_usage": {"description": "Subnets Count usage", "examples": [0], "title": "Subnet Count Usage", "type": "integer"}, "vm_count_limit": {"description": "Instances Dedicated Count limit", "examples": [0], "title": "Vm Count Limit", "type": "integer"}, "vm_count_usage": {"description": "Instances Dedicated Count usage", "examples": [0], "title": "Vm Count Usage", "type": "integer"}, "volume_count_limit": {"description": "Volumes Count limit", "examples": [0], "title": "Volume Count Limit", "type": "integer"}, "volume_count_usage": {"description": "Volumes Count usage", "examples": [0], "title": "Volume Count Usage", "type": "integer"}, "volume_size_limit": {"description": "Volumes Size, GiB limit", "examples": [0], "title": "Volume Size Limit", "type": "integer"}, "volume_size_usage": {"description": "Volumes Size, GiB usage", "examples": [0], "title": "Volume Size Usage", "type": "integer"}, "volume_snapshots_count_limit": {"description": "Snapshots Count limit", "examples": [0], "title": "Volume Snapshots Count Limit", "type": "integer"}, "volume_snapshots_count_usage": {"description": "Snapshots Count usage", "examples": [0], "title": "Volume Snapshots Count Usage", "type": "integer"}, "volume_snapshots_size_limit": {"description": "Snapshots Size, GiB limit", "examples": [0], "title": "Volume Snapshots Size Limit", "type": "integer"}, "volume_snapshots_size_usage": {"description": "Snapshots Size, GiB usage", "examples": [0], "title": "Volume Snapshots Size Usage", "type": "integer"}}, "title": "RegionalQuotas object", "type": "object"}
    AnySubnetInterfaceInputSerializer: {"properties": {"floating_ip": {"$ref": "#/components/schemas/NewFloatingIpInterfaceSerializer", "description": "Floating IP config for this subnet attachment"}, "ip_family": {"default": "ipv4", "description": "Which subnets should be selected: IPv4, IPv6, or use dual stack", "enum": ["dual", "ipv4", "ipv6"], "examples": ["ipv4"], "title": "Ip Family", "type": "string"}, "name": {"description": "Interface name", "maxLength": 37, "title": "Name", "type": "string"}, "network_id": {"description": "Network ID the subnet belongs to. Port will be plugged in this network", "examples": ["59905c8e-2619-420a-b046-536096473370"], "title": "Network Id", "type": "string"}, "type": {"const": "any_subnet", "title": "Type", "type": "string"}}, "required": ["network_id", "type"], "title": "AnySubnetInterfaceInputSerializer", "type": "object"}
    ApplicationComponentPricingSerializer: {"properties": {"containers": {"description": "List of containers for the component.", "items": {"$ref": "#/components/schemas/ApplicationContainerPricingSerializer"}, "minItems": 1, "title": "Containers", "type": "array"}}, "required": ["containers"], "title": "ApplicationComponentPricingSerializer", "type": "object"}
    HttpErrorResponseSchema: {"description": "Http error response", "properties": {"code": {"title": "Code", "type": "integer"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "HttpErrorResponseSchema", "type": "object"}
    ResourceFunctionEgressTrafficWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Functions - Total Egress Traffic (GB), Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["faas_function_egress_traffic_gbs"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "GB", "description": "Unit of billing value", "examples": ["GB"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the function egress traffic", "examples": ["function_egress_traffic_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "functions_traffic", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the function egress traffic", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceFunctionEgressTrafficWithCostSerializer", "type": "object"}
    CreateVastFileShareSerializer: {"additionalProperties": false, "properties": {"name": {"description": "File share name", "examples": ["test-share-file-system"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "protocol": {"const": "NFS", "description": "File share protocol", "examples": ["NFS"], "title": "Protocol", "type": "string"}, "share_settings": {"$ref": "#/components/schemas/VastFileShareSettingsInputSerializer", "description": "Configuration settings for the share"}, "size": {"description": "File share size in GiB", "examples": [5], "minimum": 1, "title": "Size", "type": "integer"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "type_name": {"const": "vast", "default": "vast", "description": "Vast file share type", "title": "Type Name", "type": "string"}, "volume_type": {"const": "vast_share_type", "default": "vast_share_type", "deprecated": true, "description": "Deprecated. Use `type_name` instead.", "title": "Volume Type", "type": "string"}}, "required": ["name", "protocol", "size"], "title": "CreateVastFileShareSerializer", "type": "object"}
    BareMetalFlavorExtendedSerializer: {"description": "Bare metal flavor schema", "properties": {"architecture": {"description": "Flavor architecture type", "examples": ["x86_64"], "title": "Architecture", "type": "string"}, "capacity": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Number of available instances of given configuration", "examples": [1], "title": "Capacity"}, "currency_code": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Currency code. Shown if the `include_prices` query parameter if set to true", "examples": ["USD"], "title": "Currency Code"}, "disabled": {"description": "Disabled flavor flag", "examples": [false], "title": "Disabled", "type": "boolean"}, "flavor_id": {"description": "Flavor ID is the same as name", "examples": ["g2-standard-32-64"], "title": "Flavor Id", "type": "string"}, "flavor_name": {"description": "Flavor name", "examples": ["g2-standard-32-64"], "title": "Flavor Name", "type": "string"}, "hardware_description": {"additionalProperties": {"type": "string"}, "default": {}, "description": "Additional hardware description", "title": "Hardware Description", "type": "object"}, "os_type": {"description": "Flavor operating system", "examples": ["linux"], "title": "Os Type", "type": "string"}, "price_per_hour": {"anyOf": ["type": "number", "type": "integer", "type": "null"], "default": null, "description": "Price per hour. Shown if the `include_prices` query parameter if set to true", "examples": [1], "title": "Price Per Hour"}, "price_per_month": {"anyOf": ["type": "number", "type": "integer", "type": "null"], "default": null, "description": "Price per month. Shown if the `include_prices` query parameter if set to true", "examples": [720], "title": "Price Per Month"}, "price_status": {"anyOf": ["$ref": "#/components/schemas/PriceDisplayStatus", "type": "null"], "default": null, "description": "Price status for the UI", "examples": ["show"]}, "ram": {"description": "RAM size in MiB", "examples": [2048], "title": "Ram", "type": "integer"}, "reserved_in_stock": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Count of reserved but not used nodes. If a client don't have reservations for the flavor, it's None.", "examples": [1], "title": "Reserved In Stock"}, "resource_class": {"anyOf": ["type": "string", "type": "null"], "description": "Flavor resource class for mapping to hardware capacity", "examples": ["bm1-ai-small"], "title": "Resource Class"}, "vcpus": {"description": "Virtual CPU count. For bare metal flavors, it's a physical CPU count", "examples": [1], "title": "Vcpus", "type": "integer"}}, "required": ["flavor_id", "flavor_name", "vcpus", "ram", "disabled", "os_type", "architecture", "resource_class"], "title": "Bare metal flavor schema", "type": "object"}
    K8sClusterLoggingCreateV2Serializer: {"properties": {"destination_region_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Destination region id to which the logs will be written", "examples": [1], "title": "Destination Region Id"}, "enabled": {"default": false, "description": "Enable/disable forwarding logs to LaaS", "examples": [true, false], "title": "Enabled", "type": "boolean"}, "retention_policy": {"anyOf": ["$ref": "#/components/schemas/LaasIndexRetentionPolicyPydanticSerializer", "type": "null"], "default": null, "description": "The logs retention policy", "examples": ["period": 45]}, "topic_name": {"anyOf": [{"maxLength": 223, "minLength": 1, "pattern": "^[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])*)*$", "type": "string"}, "type": "null"], "default": null, "description": "The topic name to which the logs will be written", "examples": ["my-log-name"], "title": "Topic Name"}}, "title": "K8sClusterLoggingCreateV2Serializer", "type": "object"}
    AIAppCatalogComponent: {"properties": {"description": {"description": "Summary of the component's functionality", "examples": ["Llama 3.2 1B is a multilingual large language model developed by Meta."], "title": "Description", "type": "string"}, "display_name": {"description": "Human-readable name of the component", "examples": ["meta-llama/Llama-3.2-3B-Instruct"], "title": "Display Name", "type": "string"}, "exposable": {"description": "Indicates whether this component can expose a public-facing endpoint (e.g., for inference or API access).", "examples": [true], "title": "Exposable", "type": "boolean"}, "license_url": {"description": "URL to the component's license information", "examples": ["https://example.com/license"], "title": "License Url", "type": "string"}, "parameters": {"additionalProperties": {"$ref": "#/components/schemas/AIAppCatalogParameter"}, "description": "Configurable parameters for the component", "title": "Parameters", "type": "object"}, "readme": {"description": "Detailed documentation or usage instructions", "examples": ["Detailed documentation"], "title": "Readme", "type": "string"}, "required": {"description": "Specifies if the component is required for the application", "examples": [true], "title": "Required", "type": "boolean"}, "suitable_flavors": {"description": "List of compatible flavors or configurations", "items": {"$ref": "#/components/schemas/AIAppShortFlavor"}, "title": "Suitable Flavors", "type": "array"}}, "required": ["display_name", "license_url", "description", "readme", "suitable_flavors", "parameters", "required", "exposable"], "title": "AIAppCatalogComponent", "type": "object"}
    TotalAiClusterWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["AI Infrastructure: bm3-ai-1xlarge-h100-80-8 (2 x Intel Xeon 8480+, 2TB RAM, 8x3.84 TB NVMe, 8x Nvidia H100, IB 3.2 Tbit/s, 2x100Gbit/s Ethernet)  Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["bm3-ai-1xlarge-h100-80-8_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "flavor": {"description": "Flavor of the Baremetal GPU cluster", "examples": ["bm3-ai-1xlarge-h100-80-8"], "title": "Flavor", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "ai_cluster", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "billing_feature_name", "cost", "currency", "err"], "title": "TotalAiClusterWithCostSerializer", "type": "object"}
    AllClientQuotasLimitsSerializer: {"properties": {"global_limits": {"$ref": "#/components/schemas/CreateGlobalQuotasLimitsSerializer", "description": "Global entity quota limits"}, "regional_limits": {"description": "Regions and their quota limits", "items": {"$ref": "#/components/schemas/RegionalQuotasLimitsSerializer"}, "title": "Regional Limits", "type": "array"}}, "title": "Global and regional quota limits of the client.", "type": "object"}
    UserActionResourceSerializer: {"properties": {"resource_body": {"anyOf": ["type": "object", "type": "null"], "default": null, "description": "Free-form object, resource body.", "examples": ["key": "value"], "title": "Resource Body"}, "resource_id": {"description": "Resource ID", "examples": ["1234"], "title": "Resource Id", "type": "string"}, "resource_type": {"$ref": "#/components/schemas/ResourceType", "description": "Resource type", "examples": ["project"]}, "search_field": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Often used property for filtering actions. It can be a name, IP address, or other property, depending on the `resource_type`", "examples": ["name", "192.168.0.1"], "title": "Search Field"}}, "required": ["resource_id", "resource_type"], "title": "UserActionResource schema", "type": "object"}
    LoadbalancerLoggingSerializer: {"properties": {"destination_region_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Destination region id to which the logs will be written", "examples": [1], "title": "Destination Region Id"}, "enabled": {"default": false, "description": "Enable/disable forwarding logs to LaaS", "examples": [true, false], "title": "Enabled", "type": "boolean"}, "retention_policy": {"anyOf": ["$ref": "#/components/schemas/LaasIndexRetentionPolicyPydanticSerializer", "type": "null"], "default": null, "description": "The logs retention policy", "examples": ["period": 45]}, "topic_name": {"anyOf": [{"maxLength": 223, "minLength": 1, "pattern": "^[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])*)*$", "type": "string"}, "type": "null"], "default": null, "description": "The topic name to which the logs will be written", "examples": ["my-log-name"], "title": "Topic Name"}}, "title": "LoadbalancerLoggingSerializer", "type": "object"}
    SchemaFilterDBAASPostgreSQLVolumesEnum: {"enum": ["last_name", "type", "uuid", "volume_type"], "title": "SchemaFilterDBAASPostgreSQLVolumesEnum", "type": "string"}
    RegionEndpointType: {"enum": ["admin", "internal", "public"], "title": "RegionEndpointType", "type": "string"}
    SecretTypesEnum: {"enum": ["certificate", "opaque", "passphrase", "private", "public", "symmetric"], "title": "SecretTypesEnum", "type": "string"}
    RouteOutSerializer: {"properties": {"destination": {"description": "CIDR of destination IPv4 subnet.", "examples": ["10.0.3.0/24"], "format": "ipvanynetwork", "title": "Destination", "type": "string"}, "nexthop": {"description": "IPv4 address to forward traffic to if it's destination IP matches 'destination' CIDR.", "examples": ["10.0.0.13"], "format": "ipvanyaddress", "title": "Nexthop", "type": "string"}}, "required": ["destination", "nexthop"], "title": "RouteOutSerializer", "type": "object"}
    CreatedResources: {"properties": {"ai_clusters": {"description": "IDs of created AI clusters", "items": {"type": "string"}, "title": "Ai Clusters", "type": "array"}, "api_keys": {"description": "IDs of created API keys", "items": {"type": "string"}, "title": "Api Keys", "type": "array"}, "caas_containers": {"description": "IDs of created CaaS containers", "items": {"type": "string"}, "title": "Caas Containers", "type": "array"}, "ddos_profiles": {"description": "IDs of created ddos protection profiles", "items": {"type": "integer"}, "title": "Ddos Profiles", "type": "array"}, "faas_functions": {"description": "IDs of created FaaS functions", "items": {"type": "string"}, "title": "Faas Functions", "type": "array"}, "faas_namespaces": {"description": "IDs of created FaaS namespaces", "items": {"type": "string"}, "title": "Faas Namespaces", "type": "array"}, "file_shares": {"description": "IDs of created file shares", "items": {"type": "string"}, "title": "File Shares", "type": "array"}, "floatingips": {"description": "IDs of created floating IPs", "items": {"type": "string"}, "title": "Floatingips", "type": "array"}, "healthmonitors": {"description": "IDs of created health monitors", "items": {"type": "string"}, "title": "Healthmonitors", "type": "array"}, "images": {"description": "IDs of created images", "items": {"type": "string"}, "title": "Images", "type": "array"}, "inference_instances": {"description": "IDs of created inference instances", "items": {"type": "string"}, "title": "Inference Instances", "type": "array"}, "instances": {"description": "IDs of created instances", "items": {"type": "string"}, "title": "Instances", "type": "array"}, "k8s_clusters": {"description": "IDs of created Kubernetes clusters", "items": {"type": "string"}, "title": "K8S Clusters", "type": "array"}, "k8s_pools": {"description": "IDs of created Kubernetes pools", "items": {"type": "string"}, "title": "K8S Pools", "type": "array"}, "l7polices": {"description": "IDs of created L7 policies", "items": {"type": "string"}, "title": "L7Polices", "type": "array"}, "l7rules": {"description": "IDs of created L7 rules", "items": {"type": "string"}, "title": "L7Rules", "type": "array"}, "laas_topic": {"description": "IDs of created LaaS topics", "items": {"type": "string"}, "title": "Laas Topic", "type": "array"}, "listeners": {"description": "IDs of created load balancer listeners", "items": {"type": "string"}, "title": "Listeners", "type": "array"}, "loadbalancers": {"description": "IDs of created load balancers", "items": {"type": "string"}, "title": "Loadbalancers", "type": "array"}, "members": {"description": "IDs of created pool members", "items": {"type": "string"}, "title": "Members", "type": "array"}, "networks": {"description": "IDs of created networks", "items": {"type": "string"}, "title": "Networks", "type": "array"}, "pools": {"description": "IDs of created load balancer pools", "items": {"type": "string"}, "title": "Pools", "type": "array"}, "ports": {"description": "IDs of created ports", "items": {"type": "string"}, "title": "Ports", "type": "array"}, "postgresql_clusters": {"description": "IDs of created postgres clusters", "items": {"type": "string"}, "title": "Postgresql Clusters", "type": "array"}, "projects": {"description": "IDs of created projects", "items": {"type": "integer"}, "title": "Projects", "type": "array"}, "registry_registries": {"description": "IDs of created registry registries", "items": {"type": "string"}, "title": "Registry Registries", "type": "array"}, "registry_users": {"description": "IDs of created registry users", "items": {"type": "string"}, "title": "Registry Users", "type": "array"}, "routers": {"description": "IDs of created routers", "items": {"type": "string"}, "title": "Routers", "type": "array"}, "secrets": {"description": "IDs of created secrets", "items": {"type": "string"}, "title": "Secrets", "type": "array"}, "servergroups": {"description": "IDs of created server groups", "items": {"type": "string"}, "title": "Servergroups", "type": "array"}, "snapshots": {"description": "IDs of created volume
            snapshots", "items": {"type": "string"}, "title": "Snapshots", "type": "array"}, "subnets": {"description": "IDs of created subnets", "items": {"type": "string"}, "title": "Subnets", "type": "array"}, "volumes": {"description": "IDs of created volumes", "items": {"type": "string"}, "title": "Volumes", "type": "array"}}, "title": "CreatedResources", "type": "object"}
    TotalDBAASPostgreSQLVolumeReportItemSerializer: {"properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_public_network_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_volume", "title": "Type", "type": "string"}, "volume_type": {"description": "Type of the volume", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "volume_type"], "title": "TotalDBAASPostgreSQLVolumeReportItemSerializer", "type": "object"}
    SchemaFilterInferenceEnum: {"enum": ["flavor", "last_name", "type", "uuid"], "title": "SchemaFilterInferenceEnum", "type": "string"}
    SchemaFilterFileShareEnum: {"enum": ["file_share_type", "last_name", "last_size", "type", "uuid"], "title": "SchemaFilterFileShareEnum", "type": "string"}
    ResourceFileShareSerializer: {"description": "These properties are common for all individual file shares\nin all cost and usage reports results (but not in totals)", "properties": {"billing_metric_name": {"description": "Name of the billing metric", "examples": ["file_share_t_standard_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "file_share_type": {"description": "Type of the file share", "examples": ["standard"], "title": "File Share Type", "type": "string"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the file share", "examples": ["file_share_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "last_size": {"description": "Size of the file share in bytes", "examples": [100], "title": "Last Size", "type": "integer"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"const": "GiB", "description": "Unit of size", "examples": ["GiB"], "title": "Size Unit", "type": "string"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "file_share", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the file share", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "file_share_type", "first_seen", "last_seen", "project_id", "last_size", "size_unit", "last_name", "uuid", "tags"], "title": "ResourceFileShareSerializer", "type": "object"}
    CreateNewVolumeSerializer: {"properties": {"attachment_tag": {"description": "Block device attachment tag (not exposed in the user tags). Only used in conjunction with `instance_id_to_attach_to`", "examples": ["device-tag"], "pattern": "^[^,/]{1,60}$", "title": "Attachment Tag", "type": "string"}, "instance_id_to_attach_to": {"description": "`instance_id` to attach newly-created volume to", "examples": ["88f3e0bd-ca86-4cf7-be8b-dd2988e23c2d"], "title": "Instance Id To Attach To", "type": "string"}, "lifecycle_policy_ids": {"description": "List of lifecycle policy IDs (snapshot creation schedules) to associate with the volume", "examples": [[1, 2]], "items": {"type": "integer"}, "title": "Lifecycle Policy Ids", "type": "array"}, "name": {"description": "Volume name", "examples": ["volume-1"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "size": {"description": "Volume size in GiB", "examples": [10], "minimum": 1, "title": "Size", "type": "integer"}, "source": {"const": "new-volume", "description": "Volume source type", "examples": ["new-volume"], "title": "Source", "type": "string"}, "tags": {"$ref": "#/components/schemas/UpdateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "type_name": {"$ref": "#/components/schemas/VolumeTypeName", "description": "Volume type. Defaults to `standard`. If not specified for source `snapshot`, volume type will be derived from the snapshot volume.", "examples": ["standard"]}}, "required": ["name", "source", "size"], "title": "CreateNewVolumeSerializer", "type": "object"}
    SchemaFilterEgressTrafficSerializer: {"additionalProperties": false, "properties": {"field": {"$ref": "#/components/schemas/SchemaFilterEgressTrafficEnum", "description": "Field name to filter by", "examples": ["vm_id"]}, "type": {"const": "egress_traffic", "title": "Type", "type": "string"}, "values": {"description": "List of field values to filter", "examples": [["066e202a-fc9a-43f2-a74d-be34afbee5c9"]], "items": {"type": "string"}, "title": "Values", "type": "array"}}, "required": ["type", "field", "values"], "title": "SchemaFilterEgressTrafficSerializer", "type": "object"}
    ResourceVolumeWithCostSerializer: {"properties": {"attached_to_vm": {"anyOf": [{"format": "uuid", "type": "string"}, "type": "null"], "default": null, "description": "ID of the VM the volume is attached to", "title": "Attached To Vm"}, "billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Block Storage (Standard) - Gb Luxembourg-1 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["volume_t_standard_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the volume", "examples": ["volume_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "last_size": {"description": "Size of the volume in bytes", "examples": [100], "title": "Last Size", "type": "integer"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"description": "Unit of size", "examples": ["GiB"], "title": "Size Unit", "type": "string"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "volume", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the volume", "format": "uuid", "title": "Uuid", "type": "string"}, "volume_type": {"description": "Type of the volume", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "volume_type", "first_seen", "last_seen", "project_id", "last_size", "size_unit", "last_name", "uuid", "tags", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceVolumeWithCostSerializer", "type": "object"}
    TotalBaremetalWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Instance Type: bm2-hf-medium (1x Intel Xeon E-2388G, 64GB, 2x480 SSD, 2x1Gbit NIC) Luxembourg-2 - Overcommit"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["bm2-hf-medium_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "flavor": {"description": "Flavor of the bare metal server", "examples": ["bm2-hf-medium"], "title": "Flavor", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "baremetal", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "billing_feature_name", "cost", "currency", "err"], "title": "TotalBaremetalWithCostSerializer", "type": "object"}
    ImageOsTypeEnum: {"enum": ["linux", "windows"], "title": "ImageOsTypeEnum", "type": "string"}
    BareMetalFlavorHardwareDescriptionSerializer: {"properties": {"cpu": {"description": "Human-readable CPU description", "examples": ["1x Intel Xeon 4C/8T 3.7 GHz"], "title": "Cpu", "type": "string"}, "disk": {"description": "Human-readable disk description", "examples": ["2x 250GiB SSD"], "title": "Disk", "type": "string"}, "license": {"description": "If the flavor is licensed, this field contains the license type", "examples": ["Windows License"], "title": "License", "type": "string"}, "network": {"description": "Human-readable NIC description", "examples": ["1x 500Mbps"], "title": "Network", "type": "string"}, "ram": {"description": "Human-readable RAM description", "examples": ["32 GiB"], "title": "Ram", "type": "string"}}, "required": ["cpu", "ram", "disk", "license", "network"], "title": "Detailed flavor hardware description of bare metal server flavor", "type": "object"}
    NewReservedFixedIpAnySubnetSerializer: {"properties": {"ip_family": {"anyOf": ["$ref": "#/components/schemas/InterfaceIPFamily", "type": "null"], "description": "Which subnets should be selected: IPv4, IPv6 or use dual stack.", "examples": ["ipv4"]}, "is_vip": {"description": "If reserved fixed IP is a VIP", "examples": [false], "title": "Is Vip", "type": "boolean"}, "network_id": {"description": "Reserved fixed IP will be allocated in a subnet of this network", "examples": ["e3c6ee77-48cb-416b-b204-11b492cc776e3"], "format": "uuid4", "title": "Network Id", "type": "string"}, "type": {"const": "any_subnet", "description": "Must be '`any_subnet`'.", "title": "Type", "type": "string"}}, "required": ["type", "network_id"], "title": "NewReservedFixedIpAnySubnetSerializer", "type": "object"}
    CreateComponentConfiguration: {"properties": {"exposed": {"description": "Whether the component should be exposed via a public endpoint (e.g., for external inference/API access).", "title": "Exposed", "type": "boolean"}, "flavor": {"description": "Specifies the compute configuration (e.g., CPU/GPU size) to be used for the component.", "title": "Flavor", "type": "string"}, "parameter_overrides": {"additionalProperties": {"$ref": "#/components/schemas/ParameterOverride"}, "description": "Map of parameter overrides for customization", "title": "Parameter Overrides", "type": "object"}, "scale": {"$ref": "#/components/schemas/Scale", "description": "Scaling parameters of the component"}}, "required": ["flavor", "exposed", "scale"], "title": "CreateComponentConfiguration", "type": "object"}
    TotalDBAASPostgreSQLVolumeWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Managed PostgreSQL Storage (SSD Low Latency) - Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_public_network_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_volume", "title": "Type", "type": "string"}, "volume_type": {"description": "Type of the volume", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "volume_type", "billing_feature_name", "cost", "currency", "err"], "title": "TotalDBAASPostgreSQLVolumeWithCostSerializer", "type": "object"}
    ClusterStatus: {"enum": ["DELETING", "FAILED", "PREPARING", "READY", "UNHEALTHY", "UNKNOWN", "UPDATING"], "title": "ClusterStatus", "type": "string"}
    LaasIndexRetentionPolicyPydanticSerializer: {"properties": {"period": {"anyOf": [{"exclusiveMinimum": 0, "maximum": 1825, "type": "integer"}, "type": "null"], "description": "Duration of days for which logs must be kept.", "examples": [45], "title": "Period"}}, "required": ["period"], "title": "LaasIndexRetentionPolicyPydanticSerializer", "type": "object"}
    Storage: {"properties": {"size_gib": {"description": "Total available storage for database", "examples": [100], "maximum": 100, "minimum": 1, "title": "Size Gib", "type": "integer"}, "type": {"description": "Storage type", "examples": ["ssd-hiiops"], "title": "Type", "type": "string"}}, "required": ["size_gib", "type"], "title": "Storage", "type": "object"}
    PublicNetworkOut: {"properties": {"acl": {"description": "Allowed IPs and subnets for incoming traffic", "examples": [["92.33.34.127"]], "items": {"format": "ipvanyinterface", "type": "string"}, "title": "Acl", "type": "array"}, "connection_string": {"description": "Connection string to main database", "examples": ["postgresql://username:password@address.gcore.dev:5432/dbname"], "title": "Connection String", "type": "string"}, "host": {"description": "database hostname", "examples": ["address.gcore.dev"], "title": "Host", "type": "string"}, "network_type": {"const": "public", "description": "Network Type", "examples": ["public"], "title": "Network Type", "type": "string"}}, "required": ["network_type", "acl", "connection_string", "host"], "title": "PublicNetworkOut", "type": "object"}
    InstanceVolumeSerializer: {"properties": {"delete_on_termination": {"description": "Whether the volume is deleted together with the VM", "title": "Delete On Termination", "type": "boolean"}, "id": {"description": "Volume ID", "title": "Id", "type": "string"}}, "required": ["id", "delete_on_termination"], "title": "InstanceVolumeSerializer", "type": "object"}
    ComponentConfiguration: {"properties": {"exposed": {"description": "Indicates if the component will obtain a public address", "title": "Exposed", "type": "boolean"}, "flavor": {"description": "Chosen flavor or variant of the component", "title": "Flavor", "type": "string"}, "parameter_overrides": {"additionalProperties": {"$ref": "#/components/schemas/ParameterOverride"}, "description": "Map of parameter overrides for customization", "title": "Parameter Overrides", "type": "object"}, "scale": {"$ref": "#/components/schemas/Scale", "description": "Scaling parameters of the component"}}, "required": ["flavor", "parameter_overrides", "exposed", "scale"], "title": "ComponentConfiguration", "type": "object"}
    HttpTriggerSerializer: {"properties": {"rate": {"description": "HTTP requests rate", "maximum": 1000, "minimum": 1, "title": "Rate", "type": "integer"}, "window": {"description": "Time window in seconds", "maximum": 3600, "minimum": 1, "title": "Window", "type": "integer"}}, "required": ["rate", "window"], "title": "HttpTriggerSerializer", "type": "object"}
    HealthMonitorTypeEnum: {"enum": ["HTTP", "HTTPS", "K8S", "PING", "TCP", "TLS-HELLO", "UDP-CONNECT"], "title": "HealthMonitorTypeEnum", "type": "string"}
    ClientMixedQuotasLimitsSerializer: {"properties": {"global_limits": {"$ref": "#/components/schemas/CreateGlobalQuotasLimitsSerializer", "description": "Global entity quota limits"}, "regional_limits": {"description": "Regions and their quota limits", "items": {"$ref": "#/components/schemas/RegionalQuotasLimitsSerializer"}, "title": "Regional Limits", "type": "array"}}, "title": "ClientMixedQuotasLimitsSerializer", "type": "object"}
    LbHealthMonitorSerializer: {"properties": {"admin_state_up": {"description": "Administrative state of the resource. When set to true, the resource is enabled and operational. When set to false, the resource is disabled and will not process traffic. When null is passed, the value is skipped and defaults to true.", "examples": [false], "title": "Admin State Up", "type": "boolean"}, "delay": {"description": "The time, in seconds, between sending probes to members", "examples": [10], "maximum": 2147483647, "minimum": 1, "title": "Delay", "type": "integer"}, "expected_codes": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Expected HTTP response codes. Can be a single code or a range of codes. Can only be used together with `HTTP` or `HTTPS` health monitor type. For example, 200,202,300-302,401,403,404,500-504. If not specified, the default is 200.", "examples": ["200,301,302"], "title": "Expected Codes"}, "http_method": {"anyOf": ["$ref": "#/components/schemas/HttpMethodEnum", "type": "null"], "default": null, "description": "HTTP method", "examples": ["GET"]}, "id": {"description": "Health monitor ID", "examples": ["2eb5823b-9cdc-45cd-97c0-c95cc2278422"], "format": "uuid4", "title": "Id", "type": "string"}, "max_retries": {"description": "Number of successes before the member is switched to ONLINE state", "examples": [2], "maximum": 10, "minimum": 1, "title": "Max Retries", "type": "integer"}, "max_retries_down": {"description": "Number of failures before the member is switched to ERROR state", "examples": [3], "maximum": 10, "minimum": 1, "title": "Max Retries Down", "type": "integer"}, "operating_status": {"$ref": "#/components/schemas/OperatingStatusEnum", "description": "Health Monitor operating status", "examples": ["ONLINE", "DRAINING", "OFFLINE", "DEGRADED", "ERROR", "NO_MONITOR"]}, "provisioning_status": {"$ref": "#/components/schemas/ProvisioningStatusEnum", "description": "Health monitor lifecycle status", "examples": ["ACTIVE"]}, "timeout": {"description": "The maximum time to connect. Must be less than the delay value", "examples": [5], "maximum": 2147483, "title": "Timeout", "type": "integer", "x-stainless-naming": {"python": {"method_argument": "api_timeout"}}}, "type": {"$ref": "#/components/schemas/HealthMonitorTypeEnum", "description": "Health monitor type. Once health monitor is created, cannot be changed.", "examples": ["HTTP"]}, "url_path": {"anyOf": [{"minLength": 1, "type": "string"}, "type": "null"], "default": null, "description": "URL Path. Defaults to '/'", "examples": ["/"], "title": "Url Path"}}, "required": ["delay", "max_retries", "timeout", "id", "type", "max_retries_down", "operating_status", "provisioning_status", "admin_state_up"], "title": "LbHealthMonitorSerializer", "type": "object"}
    OIDCSigningAlgorithmEnum: {"enum": ["ES256", "ES384", "ES512", "PS256", "PS384", "PS512", "RS256", "RS384", "RS512"], "title": "OIDCSigningAlgorithmEnum", "type": "string"}
    AwsIamData: {"properties": {"aws_access_key_id": {"description": "AWS IAM key ID.", "examples": ["fake-key-id"], "title": "Aws Access Key Id", "type": "string"}, "aws_secret_access_key": {"description": "AWS IAM secret key.", "examples": ["fake-secret"], "title": "Aws Secret Access Key", "type": "string"}}, "required": ["aws_access_key_id", "aws_secret_access_key"], "title": "AwsIamData", "type": "object"}
    RouteInSerializer: {"properties": {"destination": {"description": "CIDR of destination IPv4 subnet.", "examples": ["10.0.3.0/24"], "format": "ipvanynetwork", "title": "Destination", "type": "string"}, "nexthop": {"description": "IPv4 address to forward traffic to if it's destination IP matches 'destination' CIDR.", "examples": ["10.0.0.13"], "format": "ipvanyaddress", "title": "Nexthop", "type": "string"}}, "required": ["destination", "nexthop"], "title": "RouteInSerializer", "type": "object"}
    CreateIntervalTimeSerializer: {"properties": {"days": {"description": "Number of days to wait", "examples": [0], "title": "Days", "type": "integer"}, "hours": {"description": "Number of hours to wait", "examples": [2], "title": "Hours", "type": "integer"}, "minutes": {"description": "Number of minutes to wait", "examples": [1], "title": "Minutes", "type": "integer"}, "weeks": {"description": "Number of weeks to wait", "examples": [0], "title": "Weeks", "type": "integer"}}, "title": "CreateIntervalTimeSerializer", "type": "object"}
    TotalVolumeWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Block Storage (Standard) - Gb Luxembourg-1 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["volume_t_standard_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "volume", "title": "Type", "type": "string"}, "volume_type": {"description": "Type of the volume", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "volume_type", "billing_feature_name", "cost", "currency", "err"], "title": "TotalVolumeWithCostSerializer", "type": "object"}
    Coordinate: {"properties": {"latitude": {"maximum": 90, "minimum": -90, "title": "Latitude", "type": "number"}, "longitude": {"maximum": 180, "minimum": -180, "title": "Longitude", "type": "number"}}, "required": ["latitude", "longitude"], "title": "Coordinate", "type": "object"}
    NewReservedFixedIpSpecificSubnetSerializer: {"properties": {"is_vip": {"description": "If reserved fixed IP is a VIP", "examples": [false], "title": "Is Vip", "type": "boolean"}, "subnet_id": {"description": "Reserved fixed IP will be allocated in this subnet", "examples": ["e3c6ee77-48cb-416b-b204-11b492cc776e3"], "format": "uuid4", "title": "Subnet Id", "type": "string"}, "type": {"const": "subnet", "description": "Must be 'subnet'.", "title": "Type", "type": "string"}}, "required": ["type", "subnet_id"], "title": "NewReservedFixedIpSpecificSubnetSerializer", "type": "object"}
    K8sClusterVersionV2Serializer: {"properties": {"version": {"description": "List of supported Kubernetes cluster versions", "examples": ["v1.28.1"], "title": "Version", "type": "string"}}, "required": ["version"], "title": "K8sClusterVersionV2Serializer", "type": "object"}
    BillingReservationPricingResourceRequestSerializer: {"examples": [{"resource_name": "bm1-hf-medium", "resource_type": "flavor", "resource_value": 2}], "properties": {"resource_name": {"description": "Name from billing features for specific resource", "title": "Resource Name", "type": "string"}, "resource_type": {"$ref": "#/components/schemas/BillingReservationType", "description": "Resource type"}, "resource_value": {"description": "Resource value", "maximum": 100, "minimum": 1, "title": "Resource Value", "type": "integer"}}, "required": ["resource_name", "resource_type", "resource_value"], "title": "BillingReservationPricingResourceRequestSerializer", "type": "object"}
    RemoteConsoleData: {"properties": {"protocol": {"title": "Protocol", "type": "string"}, "type": {"title": "Type", "type": "string"}, "url": {"format": "uri", "minLength": 1, "title": "Url", "type": "string"}}, "required": ["protocol", "type", "url"], "title": "RemoteConsoleData", "type": "object"}
    FaasFlavorSerializer: {"properties": {"cpu": {"description": "The number of millicpus allocated to the flavor.", "examples": [128], "maximum": 2000, "minimum": 1, "title": "Cpu", "type": "integer"}, "name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The generated name of the flavor.", "examples": ["128m-128MB"], "title": "Name"}, "ram": {"description": "The amount of RAM (in megabytes) allocated to the flavor.", "examples": [128], "maximum": 2000, "minimum": 1, "title": "Ram", "type": "integer"}}, "required": ["cpu", "ram"], "title": "FaaS Flavor", "type": "object"}
    ContainerProbeSerializerV2: {"properties": {"exec": {"anyOf": ["$ref": "#/components/schemas/ContainerProbeExecConfigSerializerV2", "type": "null"], "default": null, "description": "Exec probe configuration"}, "failure_threshold": {"default": 3, "description": "The number of consecutive probe failures that mark the container as unhealthy.", "examples": [3], "minimum": 1, "title": "Failure Threshold", "type": "integer"}, "http_get": {"anyOf": ["$ref": "#/components/schemas/ContainerProbeHttpGetConfigSerializerV2", "type": "null"], "default": null, "description": "HTTP GET probe configuration"}, "initial_delay_seconds": {"default": 0, "description": "The initial delay before starting the first probe.", "examples": [0, 10], "minimum": 0, "title": "Initial Delay Seconds", "type": "integer"}, "period_seconds": {"default": 10, "description": "How often (in seconds) to perform the probe.", "examples": [5, 10], "minimum": 1, "title": "Period Seconds", "type": "integer"}, "success_threshold": {"default": 1, "description": "The number of consecutive successful probes that mark the container as healthy.", "examples": [1], "minimum": 1, "title": "Success Threshold", "type": "integer"}, "tcp_socket": {"anyOf": ["$ref": "#/components/schemas/ContainerProbeTcpSocketConfigSerializerV2", "type": "null"], "default": null, "description": "TCP socket probe configuration"}, "timeout_seconds": {"default": 3, "description": "The timeout for each probe.", "examples": [1, 5], "minimum": 1, "title": "Timeout Seconds", "type": "integer"}}, "title": "ContainerProbeSerializerV2", "type": "object"}
    K8sClusterCheckLimitsLoggingV2Serializer: {"properties": {"destination_region_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Destination region id to which the logs will be written", "examples": [1], "title": "Destination Region Id"}, "enabled": {"default": false, "description": "Enable/disable forwarding logs to LaaS", "examples": [true, false], "title": "Enabled", "type": "boolean"}, "retention_policy": {"anyOf": ["$ref": "#/components/schemas/LaasIndexRetentionPolicyPydanticSerializer", "type": "null"], "default": null, "description": "The logs retention policy", "examples": ["period": 45]}, "topic_name": {"anyOf": [{"maxLength": 223, "minLength": 1, "pattern": "^[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])*)*$", "type": "string"}, "type": "null"], "default": null, "description": "The topic name to which the logs will be written", "examples": ["my-log-name"], "title": "Topic Name"}}, "title": "K8sClusterCheckLimitsLoggingV2Serializer", "type": "object"}
    AppTemplateConfigWithDefaultSerializer: {"properties": {"default": {"type": "string", "description": "Default value", "examples": ["Server name"], "title": "Default"}, "description": {"description": "Description", "examples": ["tf2_hostname.description"], "title": "Description", "type": "string"}, "label": {"description": "Label", "examples": ["tf2_hostname.label"], "title": "Label", "type": "string"}, "name": {"description": "Name", "examples": ["tf2_hostname"], "title": "Name", "type": "string"}, "required": {"description": "Required", "examples": [true], "title": "Required", "type": "boolean"}, "type": {"description": "Type", "examples": ["string"], "title": "Type", "type": "string"}}, "required": ["description", "label", "name", "required", "type", "default"], "title": "AppTemplateConfigWithDefaultSerializer", "type": "object"}
    MemoryTriggerSerializer: {"properties": {"threshold": {"description": "Memory usage percentage", "maximum": 99, "minimum": 1, "title": "Threshold", "type": "integer"}}, "required": ["threshold"], "title": "MemoryTriggerSerializer", "type": "object"}
    PayloadContentEncoding: {"enum": ["base64"], "title": "PayloadContentEncoding", "type": "string"}
    DisksMetrics: {"description": "Disk metrics item", "properties": {"disk_Bps_read": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Disk read, Bytes per second", "examples": [16384], "title": "Disk Bps Read"}, "disk_Bps_write": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Disk write, Bytes per second", "examples": [86016], "title": "Disk Bps Write"}, "disk_iops_read": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Disk read, iops", "examples": [3], "title": "Disk Iops Read"}, "disk_iops_write": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Disk write, iops", "examples": [12], "title": "Disk Iops Write"}, "disk_name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Disk attached slot name", "title": "Disk Name"}}, "title": "DisksMetrics", "type": "object"}
    ClusterInstanceServer: {"properties": {"created_at": {"description": "Server creation date and time", "examples": ["2025-03-17T13:22:23Z"], "format": "date-time", "title": "Created At", "type": "string"}, "flavor": {"description": "Unique flavor identifier", "examples": ["g3-ai-64-384-3000-l40s-48-2"], "title": "Flavor", "type": "string"}, "id": {"description": "Server unique identifier", "examples": ["b6e58490-58d3-451c-bb77-4178157c98b2"], "format": "uuid4", "title": "Id", "type": "string"}, "image_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Server's image UUID", "examples": ["ded40aad-505c-463b-aa59-8f5f455d1b6f"], "title": "Image Id"}, "ip_addresses": {"description": "List of IP addresses", "examples": [["192.168.1.1"]], "items": {"type": "string"}, "title": "Ip Addresses", "type": "array"}, "name": {"description": "Server's name generated using cluster's name", "examples": ["my-server-e2241889"], "title": "Name", "type": "string"}, "security_groups": {"description": "Security groups names", "items": {"$ref": "#/components/schemas/NameSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "ssh_key_name": {"anyOf": ["type": "string", "type": "null"], "description": "SSH key pair assigned to the server", "examples": ["ded40aad-505c-463b-aa59-8f5f455d1b6f"], "title": "Ssh Key Name"}, "status": {"$ref": "#/components/schemas/InstanceStatus", "description": "Current server status", "examples": ["ACTIVE"]}, "tags": {"description": "User defined tags", "examples": [[{"key": "task_id", "read_only": true, "value": "d74c2bb9-cea7-4b23-a009-2f13518ae66d"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Identifier of the task currently modifying the GPU cluster", "examples": ["ded40aad-505c-463b-aa59-8f5f455d1b6f"], "title": "Task Id"}, "updated_at": {"description": "Server update date and time", "examples": ["2025-03-17T13:22:23Z"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["id", "image_id", "task_id", "flavor", "ssh_key_name", "name", "status", "ip_addresses", "tags", "created_at", "updated_at", "security_groups"], "title": "ClusterInstanceServer", "type": "object"}
    K8sClusterNFSCreateV2Serializer: {"properties": {"vast_enabled": {"default": false, "description": "Enable or disable VAST NFS integration. The default value is `false`. When set to `true`, a dedicated StorageClass will be created in the cluster for each VAST NFS file share defined in the cloud. All file shares created prior to cluster creation will be available immediately, while those created afterward may take a few minutes for to appear.", "examples": [true], "title": "Vast Enabled", "type": "boolean"}}, "title": "K8sClusterNFSCreateV2Serializer", "type": "object"}
    AttachmentSerializer: {"properties": {"resource_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Resource ID", "examples": ["83ed4ea6-bcae-4100-9e4d-36e541ff919b"], "title": "Resource Id"}, "resource_type": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Resource type", "examples": ["instance"], "title": "Resource Type"}}, "title": "AttachmentSerializer", "type": "object"}
    BlackholePortAlarmState: {"enum": ["ACK_REQ", "ALARM", "ARCHIVED", "CLEAR", "CLEARING", "CLEARING_FAIL", "END_GRACE", "END_WAIT", "MANUAL_CLEAR", "MANUAL_CLEARING", "MANUAL_CLEARING_FAIL", "MANUAL_MITIGATING", "MANUAL_STARTING", "MANUAL_STARTING_FAIL", "MITIGATING", "STARTING", "STARTING_FAIL", "START_WAIT", "ack_req", "alarm", "archived", "clear", "clearing", "clearing_fail", "end_grace", "end_wait", "manual_clear", "manual_clearing", "manual_clearing_fail", "manual_mitigating", "manual_starting", "manual_starting_fail", "mitigating", "start_wait", "starting", "starting_fail"], "title": "BlackholePortAlarmState", "type": "string"}
    CreateCronScheduleSerializer: {"properties": {"day": {"description": "Day of the month (1-31, '\\*') or a comma-separated list of days", "examples": ["5"], "title": "Day", "type": "string"}, "day_of_week": {"description": "Weekday or a comma-separated list of weekdays (mon,tue,wed,thu,fri,sat,sun,\\*)", "examples": ["mon,fri"], "title": "Day Of Week", "type": "string"}, "hour": {"description": "Hour (0-23, '\\*') or a comma-separated list of hours", "examples": ["0, 20"], "title": "Hour", "type": "string"}, "max_quantity": {"default": 2, "description": "Number of stored resources.", "examples": [2], "exclusiveMinimum": 0, "maximum": 10000, "title": "Max Quantity", "type": "integer"}, "minute": {"description": "Minute (0-59, '\\*') or a comma-separated list of minutes", "examples": ["30"], "title": "Minute", "type": "string"}, "month": {"description": "Month (1-12, '\\*') or a comma-separated list of months", "examples": ["1,6"], "title": "Month", "type": "string"}, "resource_name_template": {"default": "Snapshot of volume {volume_id} created by policy {lifecycle_policy_id}", "description": "Template for resource names.", "examples": ["Snapshot of volume {volume_id} created by policy {lifecycle_policy_id}"], "title": "Resource Name Template", "type": "string"}, "retention_time": {"$ref": "#/components/schemas/CreateIntervalTimeSerializer", "description": "Time after which the resource will be deleted"}, "timezone": {"description": "A pytz timezone. Defaults to UTC.", "examples": ["UTC"], "title": "Timezone", "type": "string"}, "type": {"const": "cron", "description": "Schedule type", "examples": ["cron"], "title": "Type", "type": "string"}, "week": {"description": "ISO week (1-53, '\\*') or a comma-separated list of weeks", "examples": ["1"], "title": "Week", "type": "string"}}, "required": ["type"], "title": "CreateCronScheduleSerializer", "type": "object"}
    NetworkSubnetFipSchema: {"type": "object", "properties": {"floating_ip": {"description": "Floating IP config for this subnet attachment", "allOf": ["$ref": "#/components/schemas/NewInterfaceFloatingIpSchema"]}, "interface_name": {"type": "string", "maxLength": 37, "description": "Interface name"}, "network_id": {"type": "string", "description": "Network ID the subnet belongs to. Port will be plugged in this network"}, "port_group": {"type": "integer", "minimum": 0, "maximum": 1, "description": "Each group will be added to the separate trunk."}, "subnet_id": {"type": "string", "description": "Port is assinged an IP address from this subnet"}, "type": {"type": "string", "default": "subnet", "description": "'subnet'. Instance will be attached to specified subnet, and floating IP can be created and attached to this IP"}}, "required": ["network_id", "subnet_id"], "description": "Instance will be attached to specified subnet, and floating IP can be created and attached to this IP", "example": {"floating_ip": {"existing_floating_id": "57be69f6-6f6a-4f03-a4ad-8eb86c69ec0a", "source": "existing"}, "network_id": "59905c8e-2619-420a-b046-536096473370", "subnet_id": "e3c6ee77-48cb-416b-b204-11b492cc776e3", "type": "subnet"}}
    K8sClusterCNI: {"enum": ["calico", "cilium"], "title": "K8sClusterCNI", "type": "string"}
    TotalDBAASPostgreSQLCPUWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Managed PostgreSQL CPU - Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_cpu_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_cpu", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalDBAASPostgreSQLCPUWithCostSerializer", "type": "object"}
    FlavorFeaturesSerializer: {"properties": {"security_groups": {"title": "Security Groups", "type": "boolean"}}, "required": ["security_groups"], "title": "FlavorFeaturesSerializer", "type": "object"}
    UserActionSubscriptionMqSerializer: {"properties": {"connection_string": {"description": "Connection string of the following structure \"scheme://username:password@host:port/`virtual_host`\"", "examples": ["amqps://guest:guest@192.168.123.20:5671/user_action_events"], "title": "Connection String", "type": "string"}, "exchange": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Exchange name", "examples": [null], "title": "Exchange"}, "id": {"description": "Subscription ID", "examples": [33], "title": "Id", "type": "integer"}, "receive_child_client_events": {"default": false, "description": "Set to true if you would like to receive user action logs of all clients with the `reseller_id` matching the current `client_id`. Defaults to false", "examples": [false], "title": "Receive Child Client Events", "type": "boolean"}, "routing_key": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Routing key", "examples": ["foo"], "title": "Routing Key"}}, "required": ["id", "connection_string"], "title": "UserAction subscription scheme on RabbitMQ", "type": "object"}
    ResourceEgressTrafficWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Egress traffic Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["egress_traffic_baremetal_gbs"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "bytes", "description": "Unit of billing value", "examples": ["bytes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "instance_name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Name of the instance", "examples": ["instance_name"], "title": "Instance Name"}, "instance_type": {"$ref": "#/components/schemas/EgressTrafficInstanceType", "description": "Type of the instance", "examples": ["baremetal"]}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "port_id": {"description": "ID of the port the traffic is associated with", "format": "uuid", "title": "Port Id", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"description": "Unit of size", "examples": ["bytes"], "title": "Size Unit", "type": "string"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "egress_traffic", "title": "Type", "type": "string"}, "vm_id": {"description": "ID of the bare metal server the traffic is associated with", "format": "uuid", "title": "Vm Id", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "instance_type", "first_seen", "last_seen", "project_id", "vm_id", "size_unit", "port_id", "tags", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceEgressTrafficWithCostSerializer", "type": "object"}
    LoggingSerializer: {"properties": {"destination_region_id": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Destination region id to which the logs will be written", "examples": [1], "title": "Destination Region Id"}, "enabled": {"default": false, "description": "Enable/disable forwarding logs to LaaS", "examples": [true, false], "title": "Enabled", "type": "boolean"}, "retention_policy": {"anyOf": ["$ref": "#/components/schemas/LaasIndexRetentionPolicyPydanticSerializer", "type": "null"], "default": null, "description": "The logs retention policy", "examples": ["period": 45]}, "topic_name": {"anyOf": [{"maxLength": 223, "minLength": 1, "pattern": "^[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])*)*$", "type": "string"}, "type": "null"], "default": null, "description": "The topic name to which the logs will be written", "examples": ["my-log-name"], "title": "Topic Name"}}, "title": "LoggingSerializer", "type": "object"}
    K8sClusterCSIV2Serializer: {"properties": {"nfs": {"$ref": "#/components/schemas/K8sClusterNFSV2Serializer", "description": "NFS settings", "examples": ["vast_enabled": true]}}, "required": ["nfs"], "title": "K8sClusterCSIV2Serializer", "type": "object"}
    CreateVolumeFromSnapshotSerializer: {"properties": {"attachment_tag": {"description": "Block device attachment tag (not exposed in the user tags). Only used in conjunction with `instance_id_to_attach_to`", "examples": ["device-tag"], "pattern": "^[^,/]{1,60}$", "title": "Attachment Tag", "type": "string"}, "instance_id_to_attach_to": {"description": "`instance_id` to attach newly-created volume to", "examples": ["88f3e0bd-ca86-4cf7-be8b-dd2988e23c2d"], "title": "Instance Id To Attach To", "type": "string"}, "lifecycle_policy_ids": {"description": "List of lifecycle policy IDs (snapshot creation schedules) to associate with the volume", "examples": [[1, 2]], "items": {"type": "integer"}, "title": "Lifecycle Policy Ids", "type": "array"}, "name": {"description": "Volume name", "examples": ["volume-1"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "size": {"description": "Volume size in GiB. If specified, value must be equal to respective snapshot size", "examples": [10], "minimum": 1, "title": "Size", "type": "integer"}, "snapshot_id": {"description": "Snapshot ID", "examples": ["88f3e0bd-ca86-4cf7-be8b-dd2988e23c2d"], "format": "uuid4", "title": "Snapshot Id", "type": "string"}, "source": {"const": "snapshot", "description": "Volume source type", "examples": ["snapshot"], "title": "Source", "type": "string"}, "tags": {"$ref": "#/components/schemas/UpdateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "type_name": {"$ref": "#/components/schemas/VolumeTypeName", "description": "Volume type. Defaults to `standard`. If not specified for source `snapshot`, volume type will be derived from the snapshot volume.", "examples": ["standard"]}}, "required": ["name", "source", "snapshot_id"], "title": "CreateVolumeFromSnapshotSerializer", "type": "object"}
    BaremetalClusterInstanceServer: {"properties": {"created_at": {"description": "Server creation date and time", "examples": ["2025-03-17T13:22:23Z"], "format": "date-time", "title": "Created At", "type": "string"}, "flavor": {"description": "Unique flavor identifier", "examples": ["g3-ai-64-384-3000-l40s-48-2"], "title": "Flavor", "type": "string"}, "id": {"description": "Server unique identifier", "examples": ["b6e58490-58d3-451c-bb77-4178157c98b2"], "format": "uuid4", "title": "Id", "type": "string"}, "image_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Server's image UUID", "examples": ["ded40aad-505c-463b-aa59-8f5f455d1b6f"], "title": "Image Id"}, "ip_addresses": {"description": "List of IP addresses", "examples": [["192.168.1.1"]], "items": {"type": "string"}, "title": "Ip Addresses", "type": "array"}, "name": {"description": "Server's name generated using cluster's name", "examples": ["my-server-e2241889"], "title": "Name", "type": "string"}, "security_groups": {"description": "Security groups names", "items": {"$ref": "#/components/schemas/NameSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "ssh_key_name": {"anyOf": ["type": "string", "type": "null"], "description": "SSH key pair assigned to the server", "examples": ["ded40aad-505c-463b-aa59-8f5f455d1b6f"], "title": "Ssh Key Name"}, "status": {"$ref": "#/components/schemas/InstanceStatus", "description": "Current server status", "examples": ["ACTIVE"]}, "tags": {"description": "User defined tags", "examples": [[{"key": "task_id", "read_only": true, "value": "d74c2bb9-cea7-4b23-a009-2f13518ae66d"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Identifier of the task currently modifying the GPU cluster", "examples": ["ded40aad-505c-463b-aa59-8f5f455d1b6f"], "title": "Task Id"}, "updated_at": {"description": "Server update date and time", "examples": ["2025-03-17T13:22:23Z"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["id", "image_id", "task_id", "flavor", "ssh_key_name", "name", "status", "ip_addresses", "tags", "created_at", "updated_at", "security_groups"], "title": "BaremetalClusterInstanceServer", "type": "object"}
    SchemaFilterContainersEnum: {"enum": ["last_name", "type", "uuid"], "title": "SchemaFilterContainersEnum", "type": "string"}
    TotalFloatingIpWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Floating IP address Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["floating_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "floatingip", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalFloatingIpWithCostSerializer", "type": "object"}
    ReservedFixedIpFipSchema: {"type": "object", "properties": {"floating_ip": {"description": "Floating IP config for this subnet attachment", "allOf": ["$ref": "#/components/schemas/NewInterfaceFloatingIpSchema"]}, "interface_name": {"type": "string", "maxLength": 37, "description": "Interface name"}, "port_group": {"type": "integer", "minimum": 0, "maximum": 1, "description": "Each group will be added to the separate trunk."}, "port_id": {"type": "string", "description": "Network ID the subnet belongs to. Port will be plugged in this network"}, "type": {"type": "string", "default": "reserved_fixed_ip", "description": "'`reserved_fixed_ip`'. Instance will be attached to the given port. Floating IP will be created and attached to that IP"}}, "required": ["port_id"], "description": "Instance will be attached to the given port.\nFloating IP will be created and attached to that IP", "example": {"floating_ip": {"source": "new"}, "port_id": "59905c8e-2619-420a-b046-536096473370", "type": "reserved_fixed_ip", "interface_name": "my-rfip-interface"}}
    CreateGlobalQuotasLimitsSerializer: {"additionalProperties": false, "properties": {"inference_cpu_millicore_count_limit": {"description": "Inference CPU millicore count limit", "examples": [0], "title": "Inference Cpu Millicore Count Limit", "type": "integer"}, "inference_gpu_a100_count_limit": {"description": "Inference GPU A100 Count limit", "examples": [0], "title": "Inference Gpu A100 Count Limit", "type": "integer"}, "inference_gpu_h100_count_limit": {"description": "Inference GPU H100 Count limit", "examples": [0], "title": "Inference Gpu H100 Count Limit", "type": "integer"}, "inference_gpu_l40s_count_limit": {"description": "Inference GPU L40s Count limit", "examples": [0], "title": "Inference Gpu L40S Count Limit", "type": "integer"}, "inference_instance_count_limit": {"description": "Inference instance count limit", "examples": [0], "title": "Inference Instance Count Limit", "type": "integer"}, "keypair_count_limit": {"description": "SSH Keys Count limit", "examples": [100], "title": "Keypair Count Limit", "type": "integer"}, "project_count_limit": {"description": "Projects Count limit", "examples": [2], "title": "Project Count Limit", "type": "integer"}}, "title": "Scheme for create GlobalQuotaLimits", "type": "object"}
    BaremetalServerSettingsInputSerializer: {"properties": {"credentials": {"$ref": "#/components/schemas/ServerCredentialsSerializer", "description": "Optional server access credentials"}, "interfaces": {"description": "Subnet IPs and floating IPs", "items": {"discriminator": {"mapping": {"any_subnet": "#/components/schemas/AnySubnetInterfaceInputSerializer", "external": "#/components/schemas/ExternalInterfaceInputSerializer", "subnet": "#/components/schemas/SubnetInterfaceInputSerializer"}, "propertyName": "type"}, "anyOf": ["$ref": "#/components/schemas/ExternalInterfaceInputSerializer", "$ref": "#/components/schemas/SubnetInterfaceInputSerializer", "$ref": "#/components/schemas/AnySubnetInterfaceInputSerializer"]}, "title": "Interfaces", "type": "array"}, "security_groups": {"description": "List of security groups UUIDs", "examples": [["id": "b4849ffa-89f2-45a1-951f-0ae5b7809d98"]], "items": {"$ref": "#/components/schemas/MandatoryIdSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "user_data": {"description": "Optional custom user data (Base64-encoded)", "examples": ["eyJ0ZXN0IjogImRhdGEifQ=="], "title": "User Data", "type": "string"}}, "required": ["interfaces"], "title": "BaremetalServerSettingsInputSerializer", "type": "object"}
    ExternalInterfaceInputSerializer: {"properties": {"ip_family": {"default": "ipv4", "description": "Which subnets should be selected: IPv4, IPv6, or use dual stack.", "enum": ["dual", "ipv4", "ipv6"], "examples": ["ipv4"], "title": "Ip Family", "type": "string"}, "name": {"description": "Interface name", "examples": ["eth0"], "maxLength": 37, "title": "Name", "type": "string"}, "type": {"const": "external", "title": "Type", "type": "string"}}, "required": ["type"], "title": "ExternalInterfaceInputSerializer", "type": "object"}
    ServerGroupPolicyEnum: {"enum": ["affinity", "anti-affinity", "soft-anti-affinity"], "title": "ServerGroupPolicyEnum", "type": "string"}
    RegistryTagSerializer: {"properties": {"artifact_id": {"description": "Artifact ID", "examples": [1], "title": "Artifact Id", "type": "integer"}, "id": {"description": "Tag ID", "examples": [1], "title": "Id", "type": "integer"}, "name": {"description": "Tag name", "examples": ["0.0.1"], "title": "Name", "type": "string"}, "pulled_at": {"description": "Tag last pull date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Pulled At", "type": "string"}, "pushed_at": {"description": "Tag push date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Pushed At", "type": "string"}, "repository_id": {"description": "Repository ID", "examples": [1], "title": "Repository Id", "type": "integer"}}, "required": ["id", "artifact_id", "repository_id", "name", "pushed_at", "pulled_at"], "title": "RegistryTagSerializer", "type": "object"}
    SchemaFilterImageEnum: {"enum": ["last_name", "last_size", "type", "uuid"], "title": "SchemaFilterImageEnum", "type": "string"}
    SchemaFilterExternalIpEnum: {"enum": ["attached_to_vm", "ip_address", "network_id", "port_id", "subnet_id", "type"], "title": "SchemaFilterExternalIpEnum", "type": "string"}
    K8sClusterCiliumRoutingMode: {"enum": ["native", "tunnel"], "title": "K8sClusterCiliumRoutingMode", "type": "string"}
    ImageVolumeInputSerializer: {"properties": {"boot_index": {"description": "Boot index of the volume", "examples": [1], "minimum": 0, "title": "Boot Index", "type": "integer"}, "delete_on_termination": {"default": false, "description": "Flag indicating whether the volume is deleted on instance termination", "examples": [true], "title": "Delete On Termination", "type": "boolean"}, "image_id": {"description": "Image ID for the volume", "examples": ["3793c250-0b3b-4678-bab3-e11afbc29657"], "format": "uuid4", "title": "Image Id", "type": "string"}, "name": {"description": "Volume name", "examples": ["my-data-disk"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "size": {"description": "Volume size in GiB", "examples": [100], "exclusiveMaximum": 102400, "exclusiveMinimum": 0, "title": "Size", "type": "integer"}, "source": {"const": "image", "title": "Source", "type": "string"}, "tags": {"additionalProperties": {"type": "string"}, "description": "Tags associated with the volume", "examples": ["key1": "value1"], "title": "Tags", "type": "object"}, "type": {"$ref": "#/components/schemas/AllVolumeTypeEnum", "description": "Volume type"}}, "required": ["size", "type", "name", "boot_index", "source", "image_id"], "title": "ImageVolumeInputSerializer", "type": "object"}
    LbSessionPersistence: {"properties": {"cookie_name": {"anyOf": [{"pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "type": "string"}, "type": "null"], "default": null, "description": "Should be set if app cookie or http cookie is used", "examples": ["cookie_name"], "title": "Cookie Name"}, "persistence_granularity": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Subnet mask if `source_ip` is used. For UDP ports only", "title": "Persistence Granularity"}, "persistence_timeout": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Session persistence timeout. For UDP ports only", "title": "Persistence Timeout"}, "type": {"$ref": "#/components/schemas/SessionPersistenceTypeEnum", "description": "Session persistence type", "examples": ["APP_COOKIE"]}}, "required": ["type"], "title": "LbSessionPersistence", "type": "object"}
    K8sClusterDdosProfileFieldV2Serializer: {"properties": {"base_field": {"description": "", "examples": [10], "title": "Base Field", "type": "integer"}, "field_value": {"anyOf": [{}, "type": "null"], "default": null, "description": "Complex value. Only one of 'value' or '`field_value`' must be specified", "examples": [[45046, 45047]], "title": "Field Value"}, "value": {"anyOf": [{"maxLength": 500, "type": "string"}, "type": "null"], "default": null, "description": "Basic value. Only one of 'value' or '`field_value`' must be specified", "examples": [null], "title": "Value"}}, "required": ["base_field"], "title": "K8sClusterDdosProfileFieldV2Serializer", "type": "object"}
    StorageSize: {"properties": {"size_gib": {"description": "Total available storage for database", "examples": [100], "maximum": 100, "minimum": 1, "title": "Size Gib", "type": "integer"}}, "required": ["size_gib"], "title": "StorageSize", "type": "object"}
    PortIpSubnetIdSerializer: {"properties": {"ip_address": {"description": "IP address", "examples": ["192.168.123.20"], "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "subnet_id": {"description": "ID of the subnet that allocated the IP", "examples": ["351b0dd7-ca09-431c-be53-935db3785067"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}, "required": ["subnet_id", "ip_address"], "title": "PortIpSubnetIdSerializer", "type": "object"}
    ResourceBackupWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Backup to S3 - Gb Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["backup_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the backup", "examples": ["backup_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "last_size": {"description": "Size of the backup in bytes", "examples": [46137344], "title": "Last Size", "type": "integer"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "schedule_id": {"description": "ID of the backup schedule", "format": "uuid", "title": "Schedule Id", "type": "string"}, "source_volume_uuid": {"description": "UUID of the source volume", "format": "uuid", "title": "Source Volume Uuid", "type": "string"}, "type": {"const": "backup", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the backup", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "last_size", "first_seen", "last_seen", "project_id", "last_name", "uuid", "source_volume_uuid", "schedule_id", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceBackupWithCostSerializer", "type": "object"}
    RegionStatus: {"properties": {"components": {"additionalProperties": {"$ref": "#/components/schemas/RegionComponentStatus"}, "description": "Mapping of component names to their status in the region", "examples": ["model": {"error": "", "status": "Active"}], "title": "Components", "type": "object"}, "region_id": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}, "status": {"description": "Current state of the deployment in a specific region", "title": "Status", "type": "string"}}, "required": ["region_id", "status", "components"], "title": "RegionStatus", "type": "object"}
    DetailedLbPoolMemberSerializer: {"properties": {"address": {"description": "Member IP address", "examples": ["192.168.40.33"], "format": "ipvanyaddress", "title": "Address", "type": "string"}, "admin_state_up": {"description": "Administrative state of the resource. When set to true, the resource is enabled and operational. When set to false, the resource is disabled and will not process traffic. When null is passed, the value is skipped and defaults to true.", "examples": [false], "title": "Admin State Up", "type": "boolean"}, "backup": {"description": "Set to true if the member is a backup member, to which traffic will be sent exclusively when all non-backup members will be unreachable. It allows to realize ACTIVE-BACKUP load balancing without thinking about VRRP and VIP configuration. Default is false", "examples": [true, false], "title": "Backup", "type": "boolean"}, "id": {"description": "Member ID must be provided if an existing member is being updated", "examples": ["a7e7e8d6-0bf7-4ac9-8170-831b47ee2ba9"], "format": "uuid4", "title": "Id", "type": "string"}, "monitor_address": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "default": null, "description": "An alternate IP address used for health monitoring of a backend member. Default is null which monitors the member address.", "examples": [null], "title": "Monitor Address"}, "monitor_port": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "An alternate protocol port used for health monitoring of a backend member. Default is null which monitors the member `protocol_port`.", "examples": [null], "title": "Monitor Port"}, "operating_status": {"$ref": "#/components/schemas/OperatingStatusEnum", "description": "Member operating status of the entity", "examples": ["ONLINE", "DRAINING", "OFFLINE", "DEGRADED", "ERROR", "NO_MONITOR"]}, "protocol_port": {"description": "Member IP port", "examples": [80], "title": "Protocol Port", "type": "integer"}, "provisioning_status": {"$ref": "#/components/schemas/ProvisioningStatusEnum", "description": "Pool member lifecycle status", "examples": ["ACTIVE"]}, "subnet_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "`subnet_id` in which `address` is present.", "examples": ["32283b0b-b560-4690-810c-f672cbb2e28d"], "title": "Subnet Id"}, "weight": {"description": "Member weight. Valid values are 0 < `weight` <= 256, defaults to 1. Controls traffic distribution based on the pool's load balancing algorithm:\n\\* `ROUND_ROBIN`: Distributes connections to each member in turn according to weights. Higher weight = more turns in the cycle. Example: weights 3 vs 1 = ~75% vs ~25% of requests.\n\\* `LEAST_CONNECTIONS`: Sends new connections to the member with fewest active connections, performing round-robin within groups of the same normalized load. Higher weight = allowed to hold more simultaneous connections before being considered 'more loaded'. Example: weights 2 vs 1 means 20 vs 10 active connections is treated as balanced.\n\\* `SOURCE_IP`: Routes clients consistently to the same member by hashing client source IP; hash result is modulo total weight of running members. Higher weight = more hash buckets, so more client IPs map to that member. Example: weights 2 vs 1 = roughly two-thirds of distinct client IPs map to the higher-weight member.", "examples": [1], "exclusiveMinimum": 0, "maximum": 256, "title": "Weight", "type": "integer"}}, "required": ["protocol_port", "address", "id", "operating_status", "provisioning_status", "admin_state_up", "weight", "subnet_id", "backup"], "title": "DetailedLbPoolMemberSerializer", "type": "object"}
    CreateBareMetalInterfaceSerializers: {"discriminator": {"mapping": {"any_subnet": "#/components/schemas/CreateBareMetalAnySubnetInterfaceSerializer", "external": "#/components/schemas/CreateBareMetalExternalInterfaceSerializer", "reserved_fixed_ip": "#/components/schemas/CreateBareMetalReservedFixedIpInterfaceSerializer", "subnet": "#/components/schemas/CreateBareMetalSubnetInterfaceSerializer"}, "propertyName": "type"}, "title": "CreateBareMetalInterfaceSerializers", "anyOf": ["$ref": "#/components/schemas/CreateBareMetalExternalInterfaceSerializer", "$ref": "#/components/schemas/CreateBareMetalSubnetInterfaceSerializer", "$ref": "#/components/schemas/CreateBareMetalAnySubnetInterfaceSerializer", "$ref": "#/components/schemas/CreateBareMetalReservedFixedIpInterfaceSerializer"]}
    ResourceDBAASPostgreSQLMemoryWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Managed PostgreSQL Memory - Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_memory_gbmin"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the cluster", "examples": ["cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_memory", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the cluster", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_name", "uuid", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceDBAASPostgreSQLMemoryWithCostSerializer", "type": "object"}
    VirtualGpuServerSettingsQuotaSerializer: {"properties": {"interfaces": {"description": "List of interfaces", "items": {"discriminator": {"mapping": {"any_subnet": "#/components/schemas/AnySubnetInterfaceInputSerializer", "external": "#/components/schemas/ExternalInterfaceInputSerializer", "subnet": "#/components/schemas/SubnetInterfaceInputSerializer"}, "propertyName": "type"}, "anyOf": ["$ref": "#/components/schemas/ExternalInterfaceInputSerializer", "$ref": "#/components/schemas/SubnetInterfaceInputSerializer", "$ref": "#/components/schemas/AnySubnetInterfaceInputSerializer"]}, "title": "Interfaces", "type": "array"}, "volumes": {"description": "List of volumes", "items": {"discriminator": {"mapping": {"image": "#/components/schemas/CreateVirtualGpuClusterImageVolumeCheckLimitsSerializer", "new": "#/components/schemas/CreateVirtualGpuClusterNewVolumeCheckLimitsSerializer"}, "propertyName": "source"}, "anyOf": ["$ref": "#/components/schemas/CreateVirtualGpuClusterNewVolumeCheckLimitsSerializer", "$ref": "#/components/schemas/CreateVirtualGpuClusterImageVolumeCheckLimitsSerializer"]}, "title": "Volumes", "type": "array"}}, "title": "VirtualGpuServerSettingsQuotaSerializer", "type": "object"}
    PatchContainerProbeInSerializerV2: {"properties": {"exec": {"anyOf": ["$ref": "#/components/schemas/PatchContainerProbeExecConfigSerializerV2", "type": "null"], "description": "Exec probe configuration"}, "failure_threshold": {"description": "The number of consecutive probe failures that mark the container as unhealthy.", "examples": [3], "minimum": 1, "title": "Failure Threshold", "type": "integer"}, "http_get": {"anyOf": ["$ref": "#/components/schemas/PatchContainerProbeHttpGetConfigSerializerV2", "type": "null"], "description": "HTTP GET probe configuration"}, "initial_delay_seconds": {"description": "The initial delay before starting the first probe.", "examples": [0, 10], "minimum": 0, "title": "Initial Delay Seconds", "type": "integer"}, "period_seconds": {"description": "How often (in seconds) to perform the probe.", "examples": [5, 10], "minimum": 1, "title": "Period Seconds", "type": "integer"}, "success_threshold": {"description": "The number of consecutive successful probes that mark the container as healthy.", "examples": [1], "minimum": 1, "title": "Success Threshold", "type": "integer"}, "tcp_socket": {"anyOf": ["$ref": "#/components/schemas/PatchContainerProbeTcpSocketConfigSerializerV2", "type": "null"], "description": "TCP socket probe configuration"}, "timeout_seconds": {"description": "The timeout for each probe.", "examples": [1, 5], "minimum": 1, "title": "Timeout Seconds", "type": "integer"}}, "title": "PatchContainerProbeInSerializerV2", "type": "object"}
    ApplicationContainerPricingSerializer: {"properties": {"flavor_name": {"description": "Flavor name for this specific container", "examples": ["inference-16vcpu-232gib-1xh100-80gb"], "title": "Flavor Name", "type": "string"}, "scale": {"$ref": "#/components/schemas/ApplicationContainerScalePricingSerializer", "description": "Scale for the container"}}, "required": ["scale", "flavor_name"], "title": "ApplicationContainerPricingSerializer", "type": "object"}
    PoolerConfigurationSchema: {"properties": {"mode": {"$ref": "#/components/schemas/PoolerModes", "examples": ["transaction"]}, "type": {"const": "pgbouncer", "default": "pgbouncer", "examples": ["pgbouncer"], "title": "Type", "type": "string"}}, "required": ["mode"], "title": "PoolerConfigurationSchema", "type": "object"}
    PortAndInstanceSerializer: {"properties": {"id": {"description": "Port ID", "examples": ["8e009163-d526-4351-9266-93d9fd8fa8ef"], "format": "uuid4", "title": "Id", "type": "string"}, "instance_id": {"description": "Instance ID", "examples": ["bfc7824b-31b6-4a28-a0c4-7df137139215"], "format": "uuid4", "title": "Instance Id", "type": "string"}, "instance_name": {"description": "Instance name", "examples": ["instance_1"], "title": "Instance Name", "type": "string"}}, "required": ["id", "instance_id", "instance_name"], "title": "PortAndInstanceSerializer", "type": "object"}
    ResourceImagesWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Images - Gb Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["image_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the image", "examples": ["image_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "last_size": {"description": "Size of the image in bytes", "examples": [100000000], "title": "Last Size", "type": "integer"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"const": "bytes", "description": "Unit of size", "examples": ["bytes"], "title": "Size Unit", "type": "string"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "image", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the image", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_size", "size_unit", "last_name", "uuid", "tags", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceImagesWithCostSerializer", "type": "object"}
    TotalInstanceWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Instance Type: g1-standard-1-2 (1vCPU/2GB RAM) Luxembourg-2 - Overcommit"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["g1-standard-1-2_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "flavor": {"description": "Flavor of the instance", "examples": ["g1-standard-1-2"], "title": "Flavor", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "instance", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "billing_feature_name", "cost", "currency", "err"], "title": "TotalInstanceWithCostSerializer", "type": "object"}
    ComponentConfigurationPatch: {"properties": {"exposed": {"description": "Whether the component should be exposed via a public endpoint (e.g., for external inference/API access).", "title": "Exposed", "type": "boolean"}, "flavor": {"description": "Specifies the compute configuration (e.g., CPU/GPU size) to be used for the component.", "title": "Flavor", "type": "string"}, "parameter_overrides": {"additionalProperties": {"anyOf": ["$ref": "#/components/schemas/ParameterOverride", "type": "null"]}, "description": "Map of parameter overrides for customization", "title": "Parameter Overrides", "type": "object"}, "scale": {"$ref": "#/components/schemas/ScalePatch", "description": "Scaling parameters of the component"}}, "title": "ComponentConfigurationPatch", "type": "object"}
    VastFileShareSettingsInputSerializer: {"additionalProperties": false, "properties": {"allowed_characters": {"description": "Determines which characters are allowed in file names. Choose between:\n- Lowest Common Denominator (LCD), allows only characters allowed by all VAST Cluster-supported protocols\n- Native Protocol Limit (NPL), imposes no limitation beyond that of the client protocol.", "enum": ["LCD", "NPL"], "examples": ["LCD"], "title": "Allowed Characters", "type": "string"}, "path_length": {"description": "Affects the maximum limit of file path component name length. Choose between:\n- Lowest Common Denominator (LCD), imposes the lowest common denominator file length limit of all VAST Cluster-supported protocols. With this (default) option, the limitation on the length of a single component of the path is 255 characters\n- Native Protocol Limit (NPL), imposes no limitation beyond that of the client protocol.", "enum": ["LCD", "NPL"], "examples": ["LCD"], "title": "Path Length", "type": "string"}, "root_squash": {"default": true, "description": "Enables or disables root squash for NFS clients.\n- If `true` (default), root squash is enabled: the root user is mapped to nobody for all file and folder management operations on the export.\n- If `false`, root squash is disabled: the NFS client `root` user retains root privileges. Use this option if you trust the root user not to perform operations that will corrupt data.", "examples": [true], "title": "Root Squash", "type": "boolean"}}, "title": "VastFileShareSettingsInputSerializer", "type": "object"}
    ExternalInterfaceOutputSerializer: {"properties": {"ip_family": {"description": "Which subnets should be selected: IPv4, IPv6, or use dual stack.", "enum": ["dual", "ipv4", "ipv6"], "examples": ["ipv4"], "title": "Ip Family", "type": "string"}, "name": {"anyOf": ["type": "string", "type": "null"], "description": "Interface name", "examples": ["eth0"], "title": "Name"}, "type": {"const": "external", "title": "Type", "type": "string"}}, "required": ["type", "ip_family", "name"], "title": "ExternalInterfaceOutputSerializer", "type": "object"}
    Scale: {"properties": {"max": {"description": "Maximum number of replicas the container can be scaled up to", "title": "Max", "type": "integer"}, "min": {"description": "Minimum number of replicas the component can be scaled down to", "title": "Min", "type": "integer"}}, "required": ["min", "max"], "title": "Scale", "type": "object"}
    ResourceDBAASPostgreSQLVolumeWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Managed PostgreSQL Storage (SSD Low Latency) - Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_public_network_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the cluster", "examples": ["cluster_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"description": "Unit of size", "examples": ["GiB"], "title": "Size Unit", "type": "string"}, "type": {"const": "dbaas_postgresql_volume", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the cluster", "format": "uuid", "title": "Uuid", "type": "string"}, "volume_type": {"description": "Type of the volume", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "volume_type", "first_seen", "last_seen", "project_id", "last_name", "uuid", "size_unit", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceDBAASPostgreSQLVolumeWithCostSerializer", "type": "object"}
    BaremetalServerSettingsOutputSerializer: {"properties": {"interfaces": {"items": {"discriminator": {"mapping": {"any_subnet": "#/components/schemas/AnySubnetInterfaceOutputSerializer", "external": "#/components/schemas/ExternalInterfaceOutputSerializer", "subnet": "#/components/schemas/SubnetInterfaceOutputSerializer"}, "propertyName": "type"}, "anyOf": ["$ref": "#/components/schemas/ExternalInterfaceOutputSerializer", "$ref": "#/components/schemas/SubnetInterfaceOutputSerializer", "$ref": "#/components/schemas/AnySubnetInterfaceOutputSerializer"]}, "title": "Interfaces", "type": "array"}, "security_groups": {"description": "Security groups names", "examples": [["name": "default"]], "items": {"$ref": "#/components/schemas/NameSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "ssh_key_name": {"anyOf": ["type": "string", "type": "null"], "description": "SSH key name", "examples": ["my-ssh-key"], "title": "Ssh Key Name"}, "user_data": {"anyOf": ["type": "string", "type": "null"], "description": "Optional custom user data (Base64-encoded) Mutually exclusive with 'password'.", "examples": ["eyJ0ZXN0IjogImRhdGEifQ=="], "title": "User Data"}}, "required": ["user_data", "ssh_key_name", "interfaces", "security_groups"], "title": "BaremetalServerSettingsOutputSerializer", "type": "object"}
    LbFlavorPricingSerializer: {"properties": {"currency_code": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Currency code. Shown if the `include_prices` query parameter if set to true", "examples": ["USD"], "title": "Currency Code"}, "flavor_id": {"description": "Flavor ID is the same as name", "examples": ["g2-standard-32-64"], "title": "Flavor Id", "type": "string"}, "flavor_name": {"description": "Flavor name", "examples": ["g2-standard-32-64"], "title": "Flavor Name", "type": "string"}, "hardware_description": {"anyOf": ["$ref": "#/components/schemas/FlavorHardwareDescriptionSerializer", "type": "object"], "description": "Additional hardware description.", "examples": ["gpu": "1x NVIDIA 11GB"], "title": "Hardware Description"}, "price_per_hour": {"anyOf": ["type": "number", "type": "integer", "type": "null"], "default": null, "description": "Price per hour. Shown if the `include_prices` query parameter if set to true", "examples": [1], "title": "Price Per Hour"}, "price_per_month": {"anyOf": ["type": "number", "type": "integer", "type": "null"], "default": null, "description": "Price per month. Shown if the `include_prices` query parameter if set to true", "examples": [720], "title": "Price Per Month"}, "price_status": {"anyOf": ["$ref": "#/components/schemas/PriceDisplayStatus", "type": "null"], "default": null, "description": "Price status for the UI", "examples": ["show"]}, "ram": {"description": "RAM size in MiB", "examples": [2048], "title": "Ram", "type": "integer"}, "vcpus": {"description": "Virtual CPU count. For bare metal flavors, it's a physical CPU count", "examples": [1], "title": "Vcpus", "type": "integer"}}, "required": ["flavor_id", "flavor_name", "vcpus", "ram", "hardware_description"], "title": "Optional price schema", "type": "object"}
    TotalBackupWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Backup to S3 - Gb Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["backup_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "last_size": {"description": "Size of the backup in bytes", "examples": [46137344], "title": "Last Size", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "backup", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "last_size", "billing_feature_name", "cost", "currency", "err"], "title": "TotalBackupWithCostSerializer", "type": "object"}
    RegionalQuotasLimitsSerializer: {"additionalProperties": false, "properties": {"baremetal_basic_count_limit": {"description": "Basic bare metal servers count limit", "examples": [0], "title": "Baremetal Basic Count Limit", "type": "integer"}, "baremetal_gpu_a100_count_limit": {"description": "Bare metal A100 GPU server count limit", "examples": [0], "title": "Baremetal Gpu A100 Count Limit", "type": "integer"}, "baremetal_gpu_count_limit": {"deprecated": true, "description": "Total number of AI GPU bare metal servers. This field is deprecated and is now always calculated automatically as the sum of `baremetal_gpu_a100_count_limit`, `baremetal_gpu_h100_count_limit`, `baremetal_gpu_h200_count_limit`, and `baremetal_gpu_l40s_count_limit`.", "examples": [0], "title": "Baremetal Gpu Count Limit", "type": "integer"}, "baremetal_gpu_h100_count_limit": {"description": "Bare metal H100 GPU server count limit", "examples": [0], "title": "Baremetal Gpu H100 Count Limit", "type": "integer"}, "baremetal_gpu_h200_count_limit": {"description": "Bare metal H200 GPU server count limit", "examples": [0], "title": "Baremetal Gpu H200 Count Limit", "type": "integer"}, "baremetal_gpu_l40s_count_limit": {"description": "Bare metal L40S GPU server count limit", "examples": [0], "title": "Baremetal Gpu L40S Count Limit", "type": "integer"}, "baremetal_hf_count_limit": {"description": "High-frequency bare metal servers count limit", "examples": [0], "title": "Baremetal Hf Count Limit", "type": "integer"}, "baremetal_infrastructure_count_limit": {"description": "Infrastructure bare metal servers count limit", "examples": [0], "title": "Baremetal Infrastructure Count Limit", "type": "integer"}, "baremetal_network_count_limit": {"description": "Bare metal Network Count limit", "examples": [0], "title": "Baremetal Network Count Limit", "type": "integer"}, "baremetal_storage_count_limit": {"description": "Storage bare metal servers count limit", "examples": [0], "title": "Baremetal Storage Count Limit", "type": "integer"}, "caas_container_count_limit": {"description": "Containers count limit", "examples": [0], "title": "Caas Container Count Limit", "type": "integer"}, "caas_cpu_count_limit": {"description": "mCPU count for containers limit", "examples": [0], "title": "Caas Cpu Count Limit", "type": "integer"}, "caas_gpu_count_limit": {"description": "Containers gpu count limit", "examples": [0], "title": "Caas Gpu Count Limit", "type": "integer"}, "caas_ram_size_limit": {"description": "MB memory count for containers limit", "examples": [0], "title": "Caas Ram Size Limit", "type": "integer"}, "cluster_count_limit": {"description": "K8s clusters count limit", "examples": [0], "title": "Cluster Count Limit", "type": "integer"}, "cpu_count_limit": {"description": "vCPU Count limit", "examples": [0], "title": "Cpu Count Limit", "type": "integer"}, "dbaas_postgres_cluster_count_limit": {"description": "DBaaS cluster count limit", "examples": [0], "title": "Dbaas Postgres Cluster Count Limit", "type": "integer"}, "external_ip_count_limit": {"description": "External IP Count limit", "examples": [0], "title": "External Ip Count Limit", "type": "integer"}, "faas_cpu_count_limit": {"description": "mCPU count for functions limit", "examples": [0], "title": "Faas Cpu Count Limit", "type": "integer"}, "faas_function_count_limit": {"description": "Functions count limit", "examples": [0], "title": "Faas Function Count Limit", "type": "integer"}, "faas_namespace_count_limit": {"description": "Functions namespace count limit", "examples": [0], "title": "Faas Namespace Count Limit", "type": "integer"}, "faas_ram_size_limit": {"description": "MB memory count for functions limit", "examples": [0], "title": "Faas Ram Size Limit", "type": "integer"}, "firewall_count_limit": {"description": "Firewalls Count limit", "examples": [0], "title": "Firewall Count Limit", "type": "integer"}, "floating_count_limit": {"description": "Floating IP Count limit", "examples": [0], "title": "Floating Count Limit", "type": "integer"}, "gpu_count_limit": {"description": "GPU Count limit",
          "examples": [0], "title": "Gpu Count Limit", "type": "integer"}, "gpu_virtual_a100_count_limit": {"description": "Virtual A100 GPU card count limit", "examples": [0], "title": "Gpu Virtual A100 Count Limit", "type": "integer"}, "gpu_virtual_h100_count_limit": {"description": "Virtual H100 GPU card count limit", "examples": [0], "title": "Gpu Virtual H100 Count Limit", "type": "integer"}, "gpu_virtual_h200_count_limit": {"description": "Virtual H200 GPU card count limit", "examples": [0], "title": "Gpu Virtual H200 Count Limit", "type": "integer"}, "gpu_virtual_l40s_count_limit": {"description": "Virtual L40S GPU card count limit", "examples": [0], "title": "Gpu Virtual L40S Count Limit", "type": "integer"}, "image_count_limit": {"description": "Images Count limit", "examples": [0], "title": "Image Count Limit", "type": "integer"}, "image_size_limit": {"description": "Images Size, GiB limit", "examples": [0], "title": "Image Size Limit", "type": "integer"}, "ipu_count_limit": {"description": "IPU Count limit", "examples": [0], "title": "Ipu Count Limit", "type": "integer"}, "laas_topic_count_limit": {"description": "LaaS Topics Count limit", "examples": [0], "title": "Laas Topic Count Limit", "type": "integer"}, "loadbalancer_count_limit": {"description": "Load Balancers Count limit", "examples": [0], "title": "Loadbalancer Count Limit", "type": "integer"}, "network_count_limit": {"description": "Networks Count limit", "examples": [0], "title": "Network Count Limit", "type": "integer"}, "ram_limit": {"description": "RAM Size, GiB limit", "examples": [0], "title": "Ram Limit", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [1], "title": "Region Id", "type": "integer"}, "registry_count_limit": {"description": "Registries count limit", "examples": [0], "title": "Registry Count Limit", "type": "integer"}, "registry_storage_limit": {"description": "Registries volume usage, GiB limit", "examples": [0], "title": "Registry Storage Limit", "type": "integer"}, "router_count_limit": {"description": "Routers Count limit", "examples": [0], "title": "Router Count Limit", "type": "integer"}, "secret_count_limit": {"description": "Secret Count limit", "examples": [0], "title": "Secret Count Limit", "type": "integer"}, "servergroup_count_limit": {"description": "Placement Group Count limit", "examples": [0], "title": "Servergroup Count Limit", "type": "integer"}, "sfs_count_limit": {"description": "Shared file system Count limit", "examples": [0], "title": "Sfs Count Limit", "type": "integer"}, "sfs_size_limit": {"description": "Shared file system Size, GiB limit", "examples": [0], "title": "Sfs Size Limit", "type": "integer"}, "shared_vm_count_limit": {"description": "Basic VMs Count limit", "examples": [0], "title": "Shared Vm Count Limit", "type": "integer"}, "snapshot_schedule_count_limit": {"description": "Snapshot Schedules Count limit", "examples": [0], "title": "Snapshot Schedule Count Limit", "type": "integer"}, "subnet_count_limit": {"description": "Subnets Count limit", "examples": [0], "title": "Subnet Count Limit", "type": "integer"}, "vm_count_limit": {"description": "Instances Dedicated Count limit", "examples": [0], "title": "Vm Count Limit", "type": "integer"}, "volume_count_limit": {"description": "Volumes Count limit", "examples": [0], "title": "Volume Count Limit", "type": "integer"}, "volume_size_limit": {"description": "Volumes Size, GiB limit", "examples": [0], "title": "Volume Size Limit", "type": "integer"}, "volume_snapshots_count_limit": {"description": "Snapshots Count limit", "examples": [0], "title": "Volume Snapshots Count Limit", "type": "integer"}, "volume_snapshots_size_limit": {"description": "Snapshots Size, GiB limit", "examples": [0], "title": "Volume Snapshots Size Limit", "type": "integer"}}, "title": "RegionalQuotasLimitsSerializer", "type": "object"}
    ClusterInstanceVolume: {"properties": {"bootable": {"description": "True if this is bootable volume", "examples": [false], "title": "Bootable", "type": "boolean"}, "created_at": {"description": "Volume creation date and time", "examples": ["2025-03-17T13:22:23Z"], "format": "date-time", "title": "Created At", "type": "string"}, "id": {"description": "Volume unique identifier", "examples": ["b6e58490-58d3-451c-bb77-4178157c98b2"], "format": "uuid4", "title": "Id", "type": "string"}, "name": {"description": "User defined name", "examples": ["my-volume"], "title": "Name", "type": "string"}, "root_fs": {"description": "True if this volume contains root file system", "examples": [false], "title": "Root Fs", "type": "boolean"}, "server_id": {"description": "Server UUID", "examples": ["ded40aad-505c-463b-aa59-8f5f455d1b6f"], "format": "uuid4", "title": "Server Id", "type": "string"}, "size": {"description": "Volume size in GiB", "examples": [100], "title": "Size", "type": "integer"}, "status": {"$ref": "#/components/schemas/VolumeStatus", "description": "Current volume status", "examples": ["in-use"]}, "tags": {"description": "User defined tags", "examples": [[{"key": "task_id", "read_only": true, "value": "d74c2bb9-cea7-4b23-a009-2f13518ae66d"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "type": {"description": "Volume type", "examples": ["standard"], "title": "Type", "type": "string"}}, "required": ["id", "server_id", "name", "type", "status", "size", "bootable", "root_fs", "tags", "created_at"], "title": "ClusterInstanceVolume", "type": "object"}
    PostgreSQLServerConfig: {"properties": {"pg_conf": {"description": "pg.conf settings", "examples": ["\nlisten_addresses = 'localhost'\nport = 5432\nmax_connections = 100\nshared_buffers = 128MB\nlogging_collector = on"], "title": "Pg Conf", "type": "string"}, "pooler": {"anyOf": ["$ref": "#/components/schemas/PoolerConfigurationSchema", "type": "null"], "default": null, "examples": [null], "title": "Pooler configuration for master"}, "version": {"description": "Cluster version", "title": "Version", "type": "string"}}, "required": ["pg_conf", "version"], "title": "PostgreSQLServerConfig", "type": "object"}
    ReservationCostReportResponseFormat: {"description": "Response format for Reservation Cost Report", "enum": ["csv_totals", "json"], "title": "ReservationCostReportResponseFormat", "type": "string"}
    ResourceExternalIpWithCostSerializer: {"properties": {"attached_to_vm": {"anyOf": [{"format": "uuid", "type": "string"}, "type": "null"], "description": "ID of the VM the IP is attached to", "title": "Attached To Vm"}, "billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Public IP address Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["externalip_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "ip_address": {"description": "IP address", "examples": ["10.100.178.92"], "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "network_id": {"description": "ID of the network the IP is attached to", "format": "uuid", "title": "Network Id", "type": "string"}, "port_id": {"description": "ID of the port the IP is associated with", "format": "uuid", "title": "Port Id", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "subnet_id": {"description": "ID of the subnet the IP is attached to", "format": "uuid", "title": "Subnet Id", "type": "string"}, "type": {"const": "external_ip", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "port_id", "attached_to_vm", "network_id", "subnet_id", "ip_address", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceExternalIpWithCostSerializer", "type": "object"}
    GpuFlavorHardwareProperties: {"properties": {"gpu_count": {"anyOf": ["type": "integer", "type": "null"], "description": "The total count of available GPUs.", "title": "Gpu Count"}, "gpu_manufacturer": {"anyOf": ["type": "string", "type": "null"], "description": "The manufacturer of the graphics processing GPU", "title": "Gpu Manufacturer"}, "gpu_model": {"anyOf": ["type": "string", "type": "null"], "description": "GPU model", "title": "Gpu Model"}, "nic_eth": {"anyOf": ["type": "string", "type": "null"], "description": "The configuration of the Ethernet ports", "examples": ["2x100;2x25"], "title": "Nic Eth"}, "nic_ib": {"anyOf": ["type": "string", "type": "null"], "description": "The configuration of the InfiniBand ports", "examples": ["8x400"], "title": "Nic Ib"}}, "required": ["gpu_model", "gpu_manufacturer", "gpu_count", "nic_eth", "nic_ib"], "title": "GpuFlavorHardwareProperties", "type": "object"}
    CreateVirtualGpuClusterImageVolumeCheckLimitsSerializer: {"properties": {"image_id": {"description": "Image ID for the volume", "examples": ["3793c250-0b3b-4678-bab3-e11afbc29657"], "title": "Image Id", "type": "string"}, "size": {"description": "Volume size in GiB", "examples": [100], "exclusiveMaximum": 102400, "exclusiveMinimum": 0, "title": "Size", "type": "integer"}, "source": {"const": "image", "title": "Source", "type": "string"}, "type": {"$ref": "#/components/schemas/AllVolumeTypeEnum", "description": "Volume type"}}, "required": ["size", "type", "source", "image_id"], "title": "CreateVirtualGpuClusterImageVolumeCheckLimitsSerializer", "type": "object"}
    AnySubnetInterfaceOutputSerializer: {"properties": {"floating_ip": {"anyOf": ["$ref": "#/components/schemas/NewFloatingIpInterfaceSerializer", "type": "null"], "description": "Floating IP config for this subnet attachment"}, "ip_address": {"anyOf": ["type": "string", "type": "null"], "description": "Fixed IP address", "examples": ["192.168.6.9"], "title": "Ip Address"}, "ip_family": {"description": "Which subnets should be selected: IPv4, IPv6, or use dual stack", "enum": ["dual", "ipv4", "ipv6"], "examples": ["ipv4"], "title": "Ip Family", "type": "string"}, "name": {"anyOf": [{"maxLength": 37, "type": "string"}, "type": "null"], "description": "Interface name", "title": "Name"}, "network_id": {"description": "Network ID the subnet belongs to. Port will be plugged in this network", "examples": ["59905c8e-2619-420a-b046-536096473370"], "title": "Network Id", "type": "string"}, "type": {"const": "any_subnet", "title": "Type", "type": "string"}}, "required": ["network_id", "name", "type", "ip_family", "ip_address", "floating_ip"], "title": "AnySubnetInterfaceOutputSerializer", "type": "object"}
    ConsolidatedStatusEnum: {"enum": ["Active", "Failed", "PartiallyDeployed", "Unknown"], "title": "ConsolidatedStatusEnum", "type": "string"}
    SnapshotStatusChoices: {"enum": ["available", "backing-up", "creating", "deleted", "deleting", "error", "error_deleting", "restoring", "unmanaging"], "title": "SnapshotStatusChoices", "type": "string"}
    TotalFunctionsWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Functions - Total Compute (GB-seconds), Luxembourg-1 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["faas_function_resources_sec"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "GBS", "description": "Unit of billing value", "examples": ["GBS"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "functions", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalFunctionsWithCostSerializer", "type": "object"}
    InstanceFlavorExtendedSerializer: {"description": "Instances flavor schema", "properties": {"architecture": {"description": "Flavor architecture type", "examples": ["x86_64"], "title": "Architecture", "type": "string"}, "capacity": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "Number of available instances of given configuration", "examples": [1], "title": "Capacity"}, "currency_code": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Currency code. Shown if the `include_prices` query parameter if set to true", "examples": ["USD"], "title": "Currency Code"}, "disabled": {"description": "Disabled flavor flag", "examples": [false], "title": "Disabled", "type": "boolean"}, "flavor_id": {"description": "Flavor ID is the same as name", "examples": ["g2-standard-32-64"], "title": "Flavor Id", "type": "string"}, "flavor_name": {"description": "Flavor name", "examples": ["g2-standard-32-64"], "title": "Flavor Name", "type": "string"}, "hardware_description": {"additionalProperties": {"type": "string"}, "default": {}, "description": "Additional hardware description", "title": "Hardware Description", "type": "object"}, "os_type": {"description": "Flavor operating system", "examples": ["linux"], "title": "Os Type", "type": "string"}, "price_per_hour": {"anyOf": ["type": "number", "type": "integer", "type": "null"], "default": null, "description": "Price per hour. Shown if the `include_prices` query parameter if set to true", "examples": [1], "title": "Price Per Hour"}, "price_per_month": {"anyOf": ["type": "number", "type": "integer", "type": "null"], "default": null, "description": "Price per month. Shown if the `include_prices` query parameter if set to true", "examples": [720], "title": "Price Per Month"}, "price_status": {"anyOf": ["$ref": "#/components/schemas/PriceDisplayStatus", "type": "null"], "default": null, "description": "Price status for the UI", "examples": ["show"]}, "ram": {"description": "RAM size in MiB", "examples": [2048], "title": "Ram", "type": "integer"}, "vcpus": {"description": "Virtual CPU count. For bare metal flavors, it's a physical CPU count", "examples": [1], "title": "Vcpus", "type": "integer"}}, "required": ["flavor_id", "flavor_name", "vcpus", "ram", "disabled", "os_type", "architecture"], "title": "Instances flavor schema", "type": "object"}
    ListenerStatusSerializer: {"properties": {"id": {"description": "UUID of the entity", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid", "title": "Id", "type": "string"}, "name": {"description": "Name of the load balancer listener", "examples": ["My Load Balancer Listener"], "title": "Name", "type": "string"}, "operating_status": {"$ref": "#/components/schemas/OperatingStatusEnum", "description": "Operating status of the entity", "examples": ["ONLINE", "DRAINING", "OFFLINE", "DEGRADED", "ERROR", "NO_MONITOR"]}, "pools": {"description": "Pools of the Listeners", "items": {"$ref": "#/components/schemas/PoolStatusSerializer"}, "title": "Pools", "type": "array"}, "provisioning_status": {"$ref": "#/components/schemas/ProvisioningStatusEnum", "description": "Provisioning status of the entity", "examples": ["ACTIVE", "DELETED", "ERROR", "PENDING_CREATE", "PENDING_UPDATE", "PENDING_DELETE"]}}, "required": ["id", "operating_status", "provisioning_status", "name", "pools"], "title": "ListenerStatusSerializer", "type": "object"}
    SchemaFilterEgressTrafficEnum: {"enum": ["instance_name", "instance_type", "port_id", "type", "vm_id"], "title": "SchemaFilterEgressTrafficEnum", "type": "string"}
    NewFloatingIpInterfaceSerializer: {"properties": {"source": {"const": "new", "title": "Source", "type": "string"}}, "required": ["source"], "title": "NewFloatingIpInterfaceSerializer", "type": "object"}
    AppInference: {"properties": {"flavor": {"description": "Flavor of the inference", "title": "Flavor", "type": "string"}, "name": {"description": "Name of the inference", "title": "Name", "type": "string"}}, "required": ["name", "flavor"], "title": "AppInference", "type": "object"}
    HttpMethodEnum: {"enum": ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE"], "title": "HttpMethodEnum", "type": "string"}
    PgUserOverview: {"properties": {"is_secret_revealed": {"description": "Display was secret revealed or not", "examples": [true, false], "title": "Is Secret Revealed", "type": "boolean"}, "name": {"description": "User name", "examples": ["myuser"], "pattern": "^[a-z]*$", "title": "Name", "type": "string"}, "role_attributes": {"description": "User's attributes", "examples": [["INHERIT"]], "items": {"enum": ["BYPASSRLS", "CREATEDB", "CREATEROLE", "INHERIT", "LOGIN", "NOLOGIN"], "type": "string"}, "title": "Role Attributes", "type": "array", "uniqueItems": true}}, "required": ["name", "role_attributes", "is_secret_revealed"], "title": "PgUserOverview", "type": "object"}
    CreateStandardFileShareSerializer: {"additionalProperties": false, "properties": {"access": {"default": [], "description": "Access Rules", "examples": [[{"access_mode": "ro", "ip_address": "10.0.0.1"}]], "items": {"$ref": "#/components/schemas/CreateAccessRuleSerializer"}, "title": "Access", "type": "array"}, "name": {"description": "File share name", "examples": ["test-share-file-system"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "network": {"$ref": "#/components/schemas/FileShareNetworkSerializer", "description": "File share network configuration"}, "protocol": {"const": "NFS", "description": "File share protocol", "examples": ["NFS"], "title": "Protocol", "type": "string"}, "size": {"description": "File share size in GiB", "examples": [5], "minimum": 1, "title": "Size", "type": "integer"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "type_name": {"const": "standard", "default": "standard", "description": "Standard file share type", "title": "Type Name", "type": "string"}, "volume_type": {"const": "default_share_type", "default": "default_share_type", "deprecated": true, "description": "Deprecated. Use `type_name` instead.", "title": "Volume Type", "type": "string"}}, "required": ["name", "protocol", "size", "network"], "title": "CreateStandardFileShareSerializer", "type": "object"}
    PortSerializer: {"properties": {"ip_assignments": {"description": "IP addresses assigned to this port", "examples": [[{"ip_address": "192.168.123.20", "subnet_id": "351b0dd7-ca09-431c-be53-935db3785067"}, {"ip_address": "192.168.120.16", "subnet_id": "0a641ef8-62dc-4146-91e5-6ab4b464df6d"}]], "items": {"$ref": "#/components/schemas/PortIpSubnetIdSerializer"}, "title": "Ip Assignments", "type": "array"}, "mac_address": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "MAC address of the virtual port", "examples": ["00:16:3e:f2:87:16"], "title": "Mac Address"}, "network_id": {"description": "ID of the network the port is attached to", "examples": ["bc688791-f1b0-44eb-97d4-07697294b1e1"], "format": "uuid4", "title": "Network Id", "type": "string"}, "port_id": {"description": "ID of virtual ethernet port object", "examples": ["1f0ca628-a73b-42c0-bdac-7b10d023e097"], "format": "uuid4", "title": "Port Id", "type": "string"}}, "required": ["port_id", "ip_assignments", "network_id"], "title": "PortSerializer", "type": "object"}
    GpuBaremetalFlavorSerializer: {"anyOf": ["$ref": "#/components/schemas/GpuBaremetalFlavorSerializerWithoutPrice", "$ref": "#/components/schemas/GpuBaremetalFlavorSerializerWithPrices"], "title": "GpuBaremetalFlavorSerializer"}
    TagsFilterConditionTypes: {"enum": ["AND", "OR"], "title": "TagsFilterConditionTypes", "type": "string"}
    BillingReservationResourcePricesResponseSerializer: {"properties": {"activity_period": {"description": "Name of the billing period, e.g month", "title": "Activity Period", "type": "string"}, "activity_period_length": {"description": "Length of the full reservation period by `activity_period`", "title": "Activity Period Length", "type": "integer"}, "commit_price_per_month": {"description": "Commit price of the item charged per month", "title": "Commit Price Per Month", "type": "string"}, "commit_price_per_unit": {"description": "Commit price of the item charged per hour", "title": "Commit Price Per Unit", "type": "string"}, "commit_price_total": {"description": "Commit price of the item charged for all period reservation", "title": "Commit Price Total", "type": "string"}, "overcommit_price_per_month": {"description": "Overcommit price of the item charged per month", "title": "Overcommit Price Per Month", "type": "string"}, "overcommit_price_per_unit": {"description": "Overcommit price of the item charged per hour", "title": "Overcommit Price Per Unit", "type": "string"}, "overcommit_price_total": {"description": "Overcommit price of the item charged for all period reservation", "title": "Overcommit Price Total", "type": "string"}, "resource_name": {"description": "Resource name", "title": "Resource Name", "type": "string"}, "unit_name": {"description": "Billing unit name", "title": "Unit Name", "type": "string"}, "unit_size_month": {"description": "Minimal billing size, for example it is 744 hours per 1 month", "title": "Unit Size Month", "type": "string"}, "unit_size_total": {"description": "Unit size month multiplied by count of resources in the reservation", "title": "Unit Size Total", "type": "string"}}, "required": ["resource_name", "unit_name", "unit_size_total", "unit_size_month", "activity_period", "activity_period_length", "commit_price_per_unit", "commit_price_per_month", "commit_price_total", "overcommit_price_per_unit", "overcommit_price_per_month", "overcommit_price_total"], "title": "BillingReservationResourcePricesResponseSerializer", "type": "object"}
    FloatingIPDetailedSerializer: {"properties": {"created_at": {"description": "Datetime when the floating IP was created", "examples": ["2019-06-13T13:58:12+0000"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Task that created this entity", "examples": ["d1e1500b-e2be-40aa-9a4b-cc493fa1af30"], "title": "Creator Task Id"}, "fixed_ip_address": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "description": "IP address of the port the floating IP is attached to", "examples": ["192.168.10.15"], "title": "Fixed Ip Address"}, "floating_ip_address": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "description": "IP Address of the floating IP", "examples": ["172.24.4.34"], "title": "Floating Ip Address"}, "id": {"description": "Floating IP ID", "examples": ["c64e5db1-5f1f-43ec-a8d9-5090df85b82d"], "format": "uuid4", "title": "Id", "type": "string"}, "instance": {"anyOf": ["$ref": "#/components/schemas/InstanceInFloatingSerializer", "type": "null"], "description": "Instance the floating IP is attached to"}, "loadbalancer": {"anyOf": ["$ref": "#/components/schemas/LoadbalancerSerializer", "type": "null"], "description": "Load balancer the floating IP is attached to"}, "port_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Port ID", "examples": ["ee2402d0-f0cd-4503-9b75-69be1d11c5f1"], "title": "Port Id"}, "project_id": {"description": "Project ID", "examples": [1337], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg 1"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [7], "title": "Region Id", "type": "integer"}, "router_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Router ID", "examples": ["11005a33-c5ac-4c96-ab6f-8f2827cc7da6"], "title": "Router Id"}, "status": {"anyOf": ["$ref": "#/components/schemas/FloatingIPStatus", "type": "null"], "description": "Floating IP status", "examples": ["ACTIVE", "DOWN", "ERROR"]}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": ["a4eb4b29-048e-42f6-a5e1-2c18bc001c45"], "title": "Task Id"}, "updated_at": {"description": "Datetime when the floating IP was last updated", "examples": ["2019-06-13T13:58:12+0000"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["project_id", "region_id", "region", "creator_task_id", "fixed_ip_address", "floating_ip_address", "id", "tags", "port_id", "router_id", "status", "task_id", "created_at", "updated_at", "instance", "loadbalancer"], "title": "FloatingIPDetailedSerializer", "type": "object"}
    SubnetInterfaceInputSerializer: {"properties": {"floating_ip": {"$ref": "#/components/schemas/NewFloatingIpInterfaceSerializer", "description": "Floating IP config for this subnet attachment"}, "name": {"description": "Interface name", "maxLength": 37, "title": "Name", "type": "string"}, "network_id": {"description": "Network ID the subnet belongs to. Port will be plugged in this network", "examples": ["59905c8e-2619-420a-b046-536096473370"], "title": "Network Id", "type": "string"}, "subnet_id": {"description": "Port is assigned an IP address from this subnet", "examples": ["e3c6ee77-48cb-416b-b204-11b492cc776e3"], "format": "uuid4", "title": "Subnet Id", "type": "string"}, "type": {"const": "subnet", "title": "Type", "type": "string"}}, "required": ["network_id", "type", "subnet_id"], "title": "SubnetInterfaceInputSerializer", "type": "object"}
    ResourceLogIndexWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Logging as a Service - Gb Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["log_index_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "last_name": {"description": "Name of the log index", "examples": ["log_index_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "last_size": {"description": "Size of the log index in bytes", "examples": [100000000], "title": "Last Size", "type": "integer"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "size_unit": {"description": "Unit of size", "examples": ["bytes"], "title": "Size Unit", "type": "string"}, "type": {"const": "log_index", "title": "Type", "type": "string"}, "uuid": {"anyOf": [{"format": "uuid", "type": "string"}, "type": "null"], "description": "UUID of the log index", "title": "Uuid"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "first_seen", "last_seen", "project_id", "last_size", "size_unit", "last_name", "uuid", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceLogIndexWithCostSerializer", "type": "object"}
    NewInterfaceExternalSchema: {"type": "object", "properties": {"interface_name": {"type": "string", "maxLength": 37, "description": "Interface name"}, "ip_family": {"type": "string", "enum": ["dual", "ipv4", "ipv6"], "description": "Which subnets should be selected: IPv4, IPv6 or use dual stack."}, "port_group": {"type": "integer", "minimum": 0, "maximum": 1, "description": "Each group will be added to the separate trunk."}, "type": {"type": "string", "default": "external", "description": "Must be 'external'. Union tag"}}, "description": "Instance will be attached to default external network", "example": {"type": "external", "ip_family": "dual"}}
    ApplicationContainerScalePricingSerializer: {"properties": {"max": {"description": "Maximum number of containers", "examples": [3], "maximum": 10000, "minimum": 1, "title": "Max", "type": "integer"}}, "required": ["max"], "title": "ApplicationContainerScalePricingSerializer", "type": "object"}
    FileShareStatusChoices: {"enum": ["available", "awaiting_transfer", "backup_creating", "backup_restoring", "backup_restoring_error", "creating", "creating_from_snapshot", "deleted", "deleting", "ensuring", "error", "error_deleting", "extending", "extending_error", "inactive", "manage_error", "manage_starting", "migrating", "migrating_to", "replication_change", "reverting", "reverting_error", "shrinking", "shrinking_error", "shrinking_possible_data_loss_error", "unmanage_error", "unmanage_starting", "unmanaged"], "title": "FileShareStatusChoices", "type": "string"}
    TotalExternalIpWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Public IP address Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["externalip_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "external_ip", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalExternalIpWithCostSerializer", "type": "object"}
    BareMetalFixedAddressSerializer: {"description": "IP addresses of the trunk port and its subports.", "properties": {"addr": {"description": "Address", "examples": ["10.0.0.17"], "title": "Addr", "type": "string"}, "interface_name": {"anyOf": ["type": "string", "type": "null"], "description": "Interface name. This field will be `null` if `with_interfaces_name=true` is not set in the request when listing servers. It will also be `null` if the `interface_name` was not specified during server creation or when attaching the interface.", "examples": ["my-interface"], "title": "Interface Name"}, "subnet_id": {"description": "The unique identifier of the subnet associated with this address.", "examples": ["ba83aec4-7bc1-4979-b934-a11fc1d36cf3"], "title": "Subnet Id", "type": "string"}, "subnet_name": {"description": "The name of the subnet associated with this address.", "examples": ["my-subnet"], "title": "Subnet Name", "type": "string"}, "type": {"const": "fixed", "description": "Type of the address", "examples": ["fixed"], "title": "Type", "type": "string"}}, "required": ["type", "addr", "interface_name", "subnet_name", "subnet_id"], "title": "Fixed IP Address", "type": "object"}
    TotalFunctionCallsWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Functions - Total Requests, Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["faas_function_calls_piece"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "MLS", "description": "Unit of billing value", "examples": ["MLS"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "functions_calls", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalFunctionCallsWithCostSerializer", "type": "object"}
    ServerCredentialsSerializer: {"properties": {"password": {"description": "Used to set the password for the specified 'username' on Linux instances. If 'username' is not provided, the password is applied to the default user of the image. Mutually exclusive with '`user_data`' - only one can be specified.", "examples": ["securepassword"], "format": "password", "title": "Password", "type": "string", "writeOnly": true}, "ssh_key_name": {"description": "Specifies the name of the SSH keypair, created via the\n[/v1/`ssh_keys` endpoint](/docs/api-reference/cloud/ssh-keys/add-or-generate-ssh-key).", "examples": ["my-ssh-key"], "title": "Ssh Key Name", "type": "string"}, "username": {"description": "The 'username' and 'password' fields create a new user on the system", "examples": ["admin"], "title": "Username", "type": "string"}}, "title": "ServerCredentialsSerializer", "type": "object"}
    ContainerScaleSerializerV3: {"properties": {"cooldown_period": {"anyOf": [{"maximum": 3600, "minimum": 1, "type": "integer"}, "type": "null"], "default": 60, "description": "Cooldown period between scaling actions in seconds", "examples": [60], "title": "Cooldown Period"}, "max": {"description": "Maximum scale for the container", "examples": [3], "maximum": 300, "title": "Max", "type": "integer"}, "min": {"description": "Minimum scale for the container", "examples": [1], "minimum": 0, "title": "Min", "type": "integer"}, "polling_interval": {"anyOf": [{"maximum": 3600, "minimum": 5, "type": "integer"}, "type": "null"], "default": 30, "description": "Polling interval for scaling triggers in seconds", "examples": [30], "title": "Polling Interval"}, "triggers": {"$ref": "#/components/schemas/ContainerScaleTriggersSerializer", "default": {"cpu": {"threshold": 80}, "memory": {"threshold": 80}, "gpu_utilization": null, "gpu_memory": null, "http": null, "sqs": null}, "description": "Triggers for scaling actions", "examples": ["cpu": {"threshold": 75}]}}, "required": ["min", "max"], "title": "ContainerScaleSerializerV3", "type": "object"}
    CostReportResourcesResponseFormat: {"enum": ["csv_records", "json"], "title": "CostReportResourcesResponseFormat", "type": "string"}
    TotalSnapshotWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Snapshots for Standard Volumes - Gb Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["snap_t_standard_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "snapshot", "title": "Type", "type": "string"}, "volume_type": {"description": "Type of the volume", "examples": ["standard"], "title": "Volume Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "volume_type", "billing_feature_name", "cost", "currency", "err"], "title": "TotalSnapshotWithCostSerializer", "type": "object"}
    TotalAiVirtualClusterWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["AI Infrastructure: g3-ai-128-768-6000-l40s-48-4 (128vCPU/768GB RAM/6000GB NVMe/L40S-48GB-4GPU) Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["g3-ai-32-192-1500-l40s-48-1_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "flavor": {"description": "Flavor of the Virtual GPU cluster", "examples": ["g3-ai-32-192-1500-l40s-48-1"], "title": "Flavor", "type": "string"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "ai_virtual_cluster", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "billing_feature_name", "cost", "currency", "err"], "title": "TotalAiVirtualClusterWithCostSerializer", "type": "object"}
    K8sClusterDdosProfileUpdateV2Serializer: {"properties": {"enabled": {"description": "Enable advanced DDoS protection", "examples": [true], "title": "Enabled", "type": "boolean"}, "fields": {"default": [], "description": "DDoS profile parameters", "examples": [[{"base_field": 10, "field_value": [45046, 45047]}]], "items": {"$ref": "#/components/schemas/K8sClusterDdosProfileFieldV2Serializer"}, "title": "Fields", "type": "array"}, "profile_template": {"anyOf": ["type": "integer", "type": "null"], "default": null, "description": "DDoS profile template ID", "examples": [29], "title": "Profile Template"}, "profile_template_name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "DDoS profile template name", "title": "Profile Template Name"}}, "required": ["enabled"], "title": "K8sClusterDdosProfileUpdateV2Serializer", "type": "object"}
    VastShareSettingsOutputSerializer: {"properties": {"allowed_characters": {"anyOf": [{"enum": ["LCD", "NPL"], "type": "string"}, "type": "null"], "examples": ["NPL"], "title": "Allowed Characters"}, "path_length": {"anyOf": [{"enum": ["LCD", "NPL"], "type": "string"}, "type": "null"], "examples": ["LCD"], "title": "Path Length"}, "root_squash": {"description": "Enables or disables root squash for NFS clients.\n- If `true`, root squash is enabled: the root user is mapped to nobody for all file and folder management operations on the export.\n- If `false`, root squash is disabled: the NFS client `root` user retains root privileges.", "examples": [true], "title": "Root Squash", "type": "boolean"}, "type_name": {"const": "vast", "description": "Vast file share type", "title": "Type Name", "type": "string"}}, "required": ["type_name", "root_squash", "path_length", "allowed_characters"], "title": "VastShareSettingsOutputSerializer", "type": "object"}
    ServiceEndpointSerializer: {"additionalProperties": false, "properties": {"client_ids": {"description": "List of client IDs to access", "examples": [[1, 22, 333]], "items": {"type": "integer"}, "title": "Client Ids", "type": "array"}, "created_on": {"description": "The endpoint creation datetime timestamp", "examples": ["2021-11-09T12:05:50Z"], "format": "date-time", "title": "Created On", "type": "string"}, "id": {"description": "Endpoint ID", "examples": [1], "title": "Id", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [2], "title": "Region Id", "type": "integer"}, "service": {"$ref": "#/components/schemas/EndpointService", "description": "Endpoint service", "examples": ["laas"]}, "updated_at": {"description": "The endpoint last update datetime timestamp", "examples": ["2022-12-10T13:06:41Z"], "format": "date-time", "title": "Updated At", "type": "string"}, "url": {"description": "Endpoint URL", "examples": ["https://example.com"], "maxLength": 255, "title": "Url", "type": "string"}, "version": {"description": "Service version", "examples": ["v1.2.3"], "maxLength": 32, "title": "Version", "type": "string"}}, "required": ["region_id", "service", "version", "created_on", "updated_at", "id", "url", "client_ids"], "title": "Endpoint object", "type": "object"}
    DetailedInstancePricingPerGBSerializer: {"properties": {"egress_traffic_baremetal": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "The price of egress traffic per GB.", "examples": [0.05, 0.1], "title": "Egress Traffic Baremetal"}}, "title": "DetailedInstancePricingPerGBSerializer", "type": "object"}
    TotalDBAASPostgreSQLMemoryWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Managed PostgreSQL Memory - Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["dbaas_postgresql_memory_gbmin"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "dbaas_postgresql_memory", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalDBAASPostgreSQLMemoryWithCostSerializer", "type": "object"}
    ResourceInstanceWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Instance Type: g1-standard-1-2 (1vCPU/2GB RAM) Luxembourg-2 - Overcommit"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["g1-standard-1-2_min"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "minutes", "description": "Unit of billing value", "examples": ["minutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "first_seen": {"description": "First time the resource was seen in the given period", "examples": ["2024-07-01T00:00:30Z"], "format": "date-time", "title": "First Seen", "type": "string"}, "flavor": {"description": "Flavor of the instance", "examples": ["g1-standard-1-2"], "title": "Flavor", "type": "string"}, "last_name": {"description": "Name of the instance", "examples": ["instance_name"], "title": "Last Name", "type": "string"}, "last_seen": {"description": "Last time the resource was seen in the given period", "examples": ["2024-07-30T23:59:30Z"], "format": "date-time", "title": "Last Seen", "type": "string"}, "project_id": {"description": "ID of the project the resource belongs to", "examples": [10], "title": "Project Id", "type": "integer"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "tags": {"anyOf": [{"items": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": "array"}, "type": "null"], "description": "List of tags", "examples": [["os_distro": "ubuntu", "os_version": "22.04"]], "title": "Tags"}, "type": {"const": "instance", "title": "Type", "type": "string"}, "uuid": {"description": "UUID of the instance", "format": "uuid", "title": "Uuid", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "flavor", "first_seen", "last_seen", "project_id", "last_name", "uuid", "tags", "billing_feature_name", "cost", "currency", "err"], "title": "ResourceInstanceWithCostSerializer", "type": "object"}
    TotalImagesWithCostSerializer: {"properties": {"billing_feature_name": {"anyOf": ["type": "string", "type": "null"], "examples": ["Images - Gb Luxembourg-2 - PAYG"], "title": "Billing Feature Name"}, "billing_metric_name": {"description": "Name of the billing metric", "examples": ["image_gbm"], "title": "Billing Metric Name", "type": "string"}, "billing_value": {"description": "Value of the billing metric", "examples": [1000], "title": "Billing Value", "type": "number"}, "billing_value_unit": {"const": "gbminutes", "description": "Unit of billing value", "examples": ["gbminutes"], "title": "Billing Value Unit", "type": "string"}, "cost": {"anyOf": ["type": "number", "type": "null"], "description": "Cost for requested period", "examples": [1000], "title": "Cost"}, "currency": {"anyOf": ["type": "string", "type": "null"], "description": "Currency of the cost", "examples": ["EUR"], "title": "Currency"}, "err": {"anyOf": ["type": "string", "type": "null"], "description": "Error message", "examples": [null], "title": "Err"}, "region": {"description": "Region ID", "examples": [76], "title": "Region", "type": "integer"}, "region_id": {"description": "Region ID", "examples": [76], "title": "Region Id", "type": "integer"}, "type": {"const": "image", "title": "Type", "type": "string"}}, "required": ["type", "billing_value", "billing_value_unit", "billing_metric_name", "region", "region_id", "billing_feature_name", "cost", "currency", "err"], "title": "TotalImagesWithCostSerializer", "type": "object"}
    CreateBareMetalReservedFixedIpInterfaceSerializer: {"examples": [{"floating_ip": {"source": "new"}, "interface_name": "my-interface", "port_id": "59905c8e-2619-420a-b046-536096473370", "type": "reserved_fixed_ip"}], "properties": {"floating_ip": {"description": "Allows the instance to have a public IP that can be reached from the internet.", "discriminator": {"mapping": {"existing": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer", "new": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer"}, "propertyName": "source"}, "title": "Floating Ip", "anyOf": ["$ref": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer", "$ref": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer"]}, "interface_name": {"description": "Interface name. Defaults to `null` and is returned as `null` in the API response if not set.", "maxLength": 37, "title": "Interface Name", "type": "string"}, "port_group": {"default": 0, "description": "Specifies the trunk group to which this interface belongs. Applicable only for bare metal servers. Each unique port group is mapped to a separate trunk port. Use this to control how interfaces are grouped across trunks.", "maximum": 1, "minimum": 0, "title": "Port Group", "type": "integer"}, "port_id": {"description": "Network ID the subnet belongs to. Port will be plugged in this network.", "title": "Port Id", "type": "string"}, "type": {"const": "reserved_fixed_ip", "description": "An existing available reserved fixed IP will be attached to the instance. If the reserved IP is not public and you choose to add a floating IP, the instance will be accessible from the internet.", "title": "Type", "type": "string"}}, "required": ["type", "port_id"], "title": "CreateBareMetalReservedFixedIpInterfaceSerializer", "type": "object"}
    GpuBaremetalFlavorSerializerWithoutPrice: {"properties": {"architecture": {"anyOf": ["type": "string", "type": "null"], "description": "Flavor architecture type", "examples": ["x86_64"], "title": "Architecture"}, "capacity": {"description": "Number of available instances of given flavor", "examples": [1], "title": "Capacity", "type": "integer"}, "disabled": {"description": "If the flavor is disabled, new resources cannot be created using this flavor.", "examples": [false], "title": "Disabled", "type": "boolean"}, "hardware_description": {"$ref": "#/components/schemas/GpuBaremetalFlavorHardwareDescriptionSerializer", "description": "Additional bare metal hardware description"}, "hardware_properties": {"$ref": "#/components/schemas/GpuFlavorHardwareProperties", "description": "Additional bare metal hardware properties"}, "name": {"description": "Flavor name", "examples": ["g1-gpu-1-2-1"], "title": "Name", "type": "string"}, "supported_features": {"$ref": "#/components/schemas/FlavorFeaturesSerializer", "description": "Set of enabled features based on the flavor's type and configuration"}}, "required": ["name", "architecture", "disabled", "capacity", "hardware_description", "hardware_properties", "supported_features"], "title": "Bare metal GPU flavors chema without price", "type": "object"}
    NewReservedFixedIpSpecificIpAddressSerializer: {"properties": {"ip_address": {"description": "Reserved fixed IP will be allocated the given IP address", "examples": ["192.168.123.20"], "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "is_vip": {"description": "If reserved fixed IP is a VIP", "examples": [false], "title": "Is Vip", "type": "boolean"}, "network_id": {"description": "Reserved fixed IP will be allocated in a subnet of this network", "examples": ["e3c6ee77-48cb-416b-b204-11b492cc776e3"], "format": "uuid4", "title": "Network Id", "type": "string"}, "type": {"const": "ip_address", "description": "Must be '`ip_address`'.", "title": "Type", "type": "string"}}, "required": ["type", "network_id", "ip_address"], "title": "NewReservedFixedIpSpecificIpAddressSerializer", "type": "object"}
    VolumeStatus: {"enum": ["attaching", "available", "awaiting-transfer", "backing-up", "creating", "deleting", "detaching", "downloading", "error", "error_backing-up", "error_deleting", "error_extending", "error_restoring", "extending", "in-use", "maintenance", "reserved", "restoring-backup", "retyping", "reverting", "uploading"], "title": "VolumeStatus", "type": "string"}
    CreateBareMetalAnySubnetInterfaceSerializer: {"examples": [{"floating_ip": {"existing_floating_id": "57be69f6-6f6a-4f03-a4ad-8eb86c69ec0a", "source": "existing"}, "interface_name": "my-any-subnet-interface", "ip_address": "192.168.6.9", "network_id": "59905c8e-2619-420a-b046-536096473370", "type": "any_subnet"}], "properties": {"floating_ip": {"description": "Allows the instance to have a public IP that can be reached from the internet.", "discriminator": {"mapping": {"existing": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer", "new": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer"}, "propertyName": "source"}, "title": "Floating Ip", "anyOf": ["$ref": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer", "$ref": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer"]}, "interface_name": {"description": "Interface name. Defaults to `null` and is returned as `null` in the API response if not set.", "maxLength": 37, "title": "Interface Name", "type": "string"}, "ip_address": {"description": "You can specify a specific IP address from your subnet.", "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "ip_family": {"anyOf": ["$ref": "#/components/schemas/InterfaceIPFamily", "type": "null"], "default": "ipv4", "description": "Specify `ipv4`, `ipv6`, or `dual` to enable both."}, "network_id": {"description": "The network where the instance will be connected.", "format": "uuid4", "title": "Network Id", "type": "string"}, "port_group": {"default": 0, "description": "Specifies the trunk group to which this interface belongs. Applicable only for bare metal servers. Each unique port group is mapped to a separate trunk port. Use this to control how interfaces are grouped across trunks.", "maximum": 1, "minimum": 0, "title": "Port Group", "type": "integer"}, "type": {"const": "any_subnet", "description": "Instance will be attached to a subnet with the largest count of free IPs.", "title": "Type", "type": "string"}}, "required": ["type", "network_id"], "title": "CreateBareMetalAnySubnetInterfaceSerializer", "type": "object"}
    FileShareNetworkSerializer: {"properties": {"network_id": {"description": "Network ID.", "examples": ["024a29e9-b4b7-4c91-9a46-505be123d9f8"], "format": "uuid4", "title": "Network Id", "type": "string"}, "subnet_id": {"description": "Subnetwork ID. If the subnet is not selected, it will be selected automatically.", "examples": ["91200a6c-07e0-42aa-98da-32d1f6545ae7"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}, "required": ["network_id"], "title": "FileShareNetworkSerializer", "type": "object"}
    UpdateSecurityGroupRuleSerializer: {"properties": {"action": {"description": "Action for a rule", "enum": ["create", "delete"], "examples": ["delete"], "title": "Action", "type": "string"}, "description": {"description": "Security grpup rule description", "examples": ["Some description"], "maxLength": 255, "title": "Description", "type": "string"}, "direction": {"description": "Ingress or egress, which is the direction in which the security group rule is applied", "enum": ["egress", "ingress"], "title": "Direction", "type": "string"}, "ethertype": {"anyOf": [{"enum": ["IPv4", "IPv6"], "type": "string"}, "type": "null"], "description": "Must be IPv4 or IPv6, and addresses represented in CIDR must match the ingress or egress rules.", "examples": ["IPv4"], "title": "Ethertype"}, "port_range_max": {"description": "The maximum port number in the range that is matched by the security group rule", "examples": [80], "maximum": 65535, "minimum": 0, "title": "Port Range Max", "type": "integer"}, "port_range_min": {"description": "The minimum port number in the range that is matched by the security group rule", "examples": [80], "maximum": 65535, "minimum": 0, "title": "Port Range Min", "type": "integer"}, "protocol": {"$ref": "#/components/schemas/SecurityGroupProtocolEnum", "description": "Protocol", "examples": ["tcp"]}, "remote_group_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "The remote group UUID to associate with this security group rule", "examples": ["00000000-0000-4000-8000-000000000000"], "title": "Remote Group Id"}, "remote_ip_prefix": {"anyOf": [{"format": "ipvanynetwork", "type": "string"}, "type": "null"], "description": "The remote IP prefix that is matched by this security group rule", "examples": ["10.0.0.0/8"], "title": "Remote Ip Prefix"}, "security_group_rule_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "UUID of rule to be deleted. Required for action 'delete' only", "examples": ["00000000-0000-4000-8000-000000000000"], "title": "Security Group Rule Id"}}, "required": ["action"], "title": "UpdateSecurityGroupRuleSerializer", "type": "object"}
    IngressOptsOutSerializer: {"properties": {"disable_response_buffering": {"description": "Disable response buffering if true. A client usually has a much slower connection and can not consume the response data as fast as it is produced by an upstream application. Ingress tries to buffer the whole response in order to release the upstream application as soon as possible.By default, the response buffering is enabled.", "examples": [true, false], "title": "Disable Response Buffering", "type": "boolean"}}, "required": ["disable_response_buffering"], "title": "IngressOptsOutSerializer", "type": "object"}
    PatchContainerProbeTcpSocketConfigSerializerV2: {"properties": {"port": {"description": "Port number to check if it's open.", "examples": [80, 8080], "maximum": 65535, "minimum": 1, "title": "Port", "type": "integer"}}, "title": "PatchContainerProbeTcpSocketConfigSerializerV2", "type": "object"}
    VolumeOutputSerializer: {"properties": {"boot_index": {"anyOf": [{"minimum": 0, "type": "integer"}, "type": "null"], "description": "Boot index of the volume", "examples": [1], "title": "Boot Index"}, "delete_on_termination": {"description": "Flag indicating whether the volume is deleted on instance termination", "examples": [true], "title": "Delete On Termination", "type": "boolean"}, "image_id": {"anyOf": ["type": "string", "type": "null"], "description": "Image ID for the volume", "examples": ["3793c250-0b3b-4678-bab3-e11afbc29657"], "title": "Image Id"}, "name": {"description": "Volume name", "examples": ["my-data-disk"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "size": {"description": "Volume size in GiB", "examples": [100], "exclusiveMaximum": 102400, "exclusiveMinimum": 0, "title": "Size", "type": "integer"}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "type": {"$ref": "#/components/schemas/AllVolumeTypeEnum", "description": "Volume type"}}, "required": ["size", "type", "name", "tags", "delete_on_termination", "boot_index", "image_id"], "title": "VolumeOutputSerializer", "type": "object"}
    InstanceInterfaceSubportSerializer: {"properties": {"allowed_address_pairs": {"description": "Group of subnet masks and/or IP addresses that share the current IP as VIP", "items": {"$ref": "#/components/schemas/AllowedAddressPairsSerializer"}, "title": "Allowed Address Pairs", "type": "array"}, "floatingip_details": {"description": "Bodies of floating IPs that are NAT-ing IPs of this port", "items": {"$ref": "#/components/schemas/FloatingIPSerializer"}, "title": "Floatingip Details", "type": "array"}, "interface_name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Interface name", "examples": ["my-interface"], "title": "Interface Name"}, "ip_assignments": {"description": "IP addresses assigned to this port", "examples": [[{"ip_address": "192.168.123.20", "subnet_id": "351b0dd7-ca09-431c-be53-935db3785067"}, {"ip_address": "192.168.120.16", "subnet_id": "0a641ef8-62dc-4146-91e5-6ab4b464df6d"}]], "items": {"$ref": "#/components/schemas/PortIpSubnetIdSerializer"}, "title": "Ip Assignments", "type": "array"}, "mac_address": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "MAC address of the virtual port", "examples": ["00:16:3e:f2:87:16"], "title": "Mac Address"}, "network_details": {"$ref": "#/components/schemas/NetworkSubnetworkSerializer", "description": "Body of the network this port is attached to"}, "network_id": {"description": "ID of the network the port is attached to", "examples": ["bc688791-f1b0-44eb-97d4-07697294b1e1"], "format": "uuid4", "title": "Network Id", "type": "string"}, "port_id": {"description": "ID of virtual ethernet port object", "examples": ["1f0ca628-a73b-42c0-bdac-7b10d023e097"], "format": "uuid4", "title": "Port Id", "type": "string"}, "port_security_enabled": {"description": "Port security status", "examples": [true], "title": "Port Security Enabled", "type": "boolean"}, "segmentation_id": {"description": "id of network segment", "examples": [3990], "title": "Segmentation Id", "type": "integer"}, "segmentation_type": {"description": "type of network segment", "examples": ["vlan"], "title": "Segmentation Type", "type": "string"}}, "required": ["port_id", "ip_assignments", "network_id", "port_security_enabled", "network_details", "floatingip_details", "allowed_address_pairs", "segmentation_type", "segmentation_id"], "title": "InstanceInterfaceSubportSerializer", "type": "object"}
    DeprecatedFlavorHardwareDescriptionSchema: {"type": "object", "properties": {"cpu": {"type": "string", "description": "Human-readable CPU description"}, "disk": {"type": "string", "description": "Human-readable disk description"}, "ephemeral": {"type": "string", "description": "Human-readable ephemeral disk description"}, "gpu": {"type": "string", "description": "Human-readable GPU description"}, "ipu": {"type": "string", "description": "Human-readable IPU description of AI cluster"}, "network": {"type": "string", "description": "Human-readable NIC description"}, "poplar_count": {"type": "integer", "description": "Human-readable count of poplar servers of AI cluster"}, "ram": {"type": "string", "description": "Human-readable RAM description"}}, "description": "Various hardware hints for flavor.", "example": {"cpu": "1x Intel Xeon 4C/8T 3.7 GHz", "disk": "2x 250GB SSD", "gpu": "1x NVIDIA 11GB", "ipu": "vPOD-4", "poplar_count": 1, "network": "1x 500Mbps", "ram": "32 GB"}}
    BaseCreateClientProfileSerializer: {"properties": {"fields": {"description": "List of field configurations that customize the protection parameters for this profile", "examples": [[{"base_field": 10, "field_value": [45046, 45047]}]], "items": {"$ref": "#/components/schemas/CreateClientProfileFieldSerializer"}, "title": "Fields", "type": "array"}, "profile_template": {"description": "Unique identifier of the DDoS protection template to use for this profile", "examples": [123], "title": "Profile Template", "type": "integer"}}, "required": ["profile_template"], "title": "BaseCreateClientProfileSerializer", "type": "object"}
    GPUClusterStatus: {"enum": ["active", "deleting", "error", "new", "resizing"], "title": "GPUClusterStatus", "type": "string"}
    AIAppCatalogParameter: {"properties": {"default_value": {"description": "Default value assigned if not provided", "title": "Default Value", "type": "string"}, "description": {"description": "Description of the parameter's purpose", "title": "Description", "type": "string"}, "display_name": {"description": "User-friendly name of the parameter", "title": "Display Name", "type": "string"}, "enum_values": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, "type": "null"], "description": "Allowed values when type is \"enum\"", "title": "Enum Values"}, "max_value": {"anyOf": ["type": "string", "type": "null"], "description": "Maximum value (applies to integer and float types)", "examples": ["100", "111.1"], "title": "Max Value"}, "min_value": {"anyOf": ["type": "string", "type": "null"], "description": "Minimum value (applies to integer and float types)", "examples": ["0", "1.1"], "title": "Min Value"}, "pattern": {"anyOf": ["type": "string", "type": "null"], "description": "Regexp pattern when type is \"string\"", "examples": ["^[a-zA-Z]+$"], "title": "Pattern"}, "required": {"description": "Indicates is parameter mandatory", "title": "Required", "type": "boolean"}, "type": {"description": "Determines the type of the parameter", "enum": ["enum", "float", "integer", "string"], "examples": ["string"], "title": "Type", "type": "string"}}, "required": ["display_name", "description", "default_value", "required", "type", "min_value", "max_value", "enum_values", "pattern"], "title": "AIAppCatalogParameter", "type": "object"}
    DatabaseOverview: {"properties": {"name": {"description": "Database name", "examples": ["mydatabase"], "pattern": "^[a-z]*$", "title": "Name", "type": "string"}, "owner": {"description": "Database owner from users list", "examples": ["myuser"], "title": "Owner", "type": "string"}, "size": {"description": "Size in bytes", "examples": [2048, 4096], "title": "Size", "type": "integer"}}, "required": ["name", "owner", "size"], "title": "DatabaseOverview", "type": "object"}
    PatchLbHealthMonitorSerializer: {"properties": {"delay": {"description": "The time, in seconds, between sending probes to members", "examples": [10], "maximum": 2147483647, "minimum": 1, "title": "Delay", "type": "integer"}, "expected_codes": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Expected HTTP response codes. Can be a single code or a range of codes. Can only be used together with `HTTP` or `HTTPS` health monitor type. For example, 200,202,300-302,401,403,404,500-504. If not specified, the default is 200.", "examples": ["200,301,302"], "title": "Expected Codes"}, "http_method": {"anyOf": ["$ref": "#/components/schemas/HttpMethodEnum", "type": "null"], "default": null, "description": "HTTP method. Can only be used together with `HTTP` or `HTTPS` health monitor type.", "examples": ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE"]}, "max_retries": {"description": "Number of successes before the member is switched to ONLINE state", "examples": [2], "maximum": 10, "minimum": 1, "title": "Max Retries", "type": "integer"}, "max_retries_down": {"description": "Number of failures before the member is switched to ERROR state.", "examples": [2], "maximum": 10, "minimum": 1, "title": "Max Retries Down", "type": "integer"}, "timeout": {"description": "The maximum time to connect. Must be less than the delay value", "examples": [5], "maximum": 2147483, "title": "Timeout", "type": "integer", "x-stainless-naming": {"python": {"method_argument": "api_timeout"}}}, "type": {"anyOf": ["$ref": "#/components/schemas/HealthMonitorTypeEnum", "type": "null"], "default": null, "description": "Health monitor type. Once health monitor is created, cannot be changed.", "examples": ["HTTP", "HTTPS", "PING", "TCP", "K8S"]}, "url_path": {"anyOf": [{"minLength": 1, "type": "string"}, "type": "null"], "default": null, "description": "URL Path. Defaults to '/'. Can only be used together with `HTTP` or `HTTPS` health monitor type.", "examples": ["/"], "title": "Url Path"}}, "required": ["delay", "max_retries", "timeout"], "title": "PatchLbHealthMonitorSerializer", "type": "object"}
    ParameterOverride: {"properties": {"value": {"description": "New value assigned to the overridden parameter", "title": "Value", "type": "string"}}, "required": ["value"], "title": "ParameterOverride", "type": "object"}
    SortingDirections: {"enum": ["asc", "desc"], "title": "SortingDirections", "type": "string"}
    LoadBalancerInstanceRoleEnum: {"enum": ["BACKUP", "MASTER", "STANDALONE"], "title": "LoadBalancerInstanceRoleEnum", "type": "string"}
    StandardShareSettingsOutputSerializer: {"properties": {"type_name": {"const": "standard", "description": "Standard file share type", "title": "Type Name", "type": "string"}}, "required": ["type_name"], "title": "StandardShareSettingsOutputSerializer", "type": "object"}
    ContainerScaleTriggersSerializer: {"properties": {"cpu": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleTriggersThresholdSerializer", "type": "null"], "default": null, "description": "CPU trigger configuration", "examples": ["threshold": 80]}, "gpu_memory": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleTriggersThresholdSerializer", "type": "null"], "default": null, "description": "GPU memory trigger configuration. Calculated by `DCGM_FI_DEV_MEM_COPY_UTIL` metric", "examples": ["threshold": 80]}, "gpu_utilization": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleTriggersThresholdSerializer", "type": "null"], "default": null, "description": "GPU utilization trigger configuration. Calculated by `DCGM_FI_DEV_GPU_UTIL` metric", "examples": ["threshold": 80]}, "http": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleTriggersRateSerializer", "type": "null"], "default": null, "description": "HTTP trigger configuration", "examples": [{"rate": 1, "window": 60}]}, "memory": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleTriggersThresholdSerializer", "type": "null"], "default": null, "description": "Memory trigger configuration", "examples": ["threshold": 80]}, "sqs": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleTriggersSqsSerializer", "type": "null"], "default": null, "description": "SQS trigger configuration"}}, "title": "ContainerScaleTriggersSerializer", "type": "object"}
    GpuVirtualFlavorSerializerWithoutPrice: {"properties": {"architecture": {"anyOf": ["type": "string", "type": "null"], "description": "Flavor architecture type", "examples": ["x86_64"], "title": "Architecture"}, "capacity": {"description": "Number of available instances of given flavor", "examples": [1], "title": "Capacity", "type": "integer"}, "disabled": {"description": "If the flavor is disabled, new resources cannot be created using this flavor.", "examples": [false], "title": "Disabled", "type": "boolean"}, "hardware_description": {"$ref": "#/components/schemas/GpuVirtualFlavorHardwareDescriptionSerializer", "description": "Additional virtual hardware description"}, "hardware_properties": {"$ref": "#/components/schemas/GpuFlavorHardwareProperties", "description": "Additional virtual hardware properties"}, "name": {"description": "Flavor name", "examples": ["g1-gpu-1-2-1"], "title": "Name", "type": "string"}, "supported_features": {"$ref": "#/components/schemas/FlavorFeaturesSerializer", "description": "Set of enabled features based on the flavor's type and configuration"}}, "required": ["name", "architecture", "disabled", "capacity", "hardware_description", "hardware_properties", "supported_features"], "title": "Virtual GPU flavors chema without price", "type": "object"}
    ScalePatch: {"properties": {"max": {"description": "Maximum number of replicas the container can be scaled up to", "title": "Max", "type": "integer"}, "min": {"description": "Minimum number of replicas the component can be scaled down to", "title": "Min", "type": "integer"}}, "title": "ScalePatch", "type": "object"}
    BillingReservationAmountPricesResponseSerializer: {"properties": {"commit_price_per_month": {"description": "Commit price of the item charged per month", "title": "Commit Price Per Month", "type": "string"}, "commit_price_per_unit": {"description": "Commit price of the item charged per hour", "title": "Commit Price Per Unit", "type": "string"}, "commit_price_total": {"description": "Commit price of the item charged for all period reservation", "title": "Commit Price Total", "type": "string"}, "currency_code": {"description": "Currency code (3 letter code per ISO 4217)", "title": "Currency Code", "type": "string"}, "overcommit_price_per_month": {"description": "Overcommit price of the item charged per month", "title": "Overcommit Price Per Month", "type": "string"}, "overcommit_price_per_unit": {"description": "Overcommit price of the item charged per hour", "title": "Overcommit Price Per Unit", "type": "string"}, "overcommit_price_total": {"description": "Overcommit price of the item charged for all period reservation", "title": "Overcommit Price Total", "type": "string"}}, "required": ["commit_price_per_unit", "commit_price_per_month", "commit_price_total", "overcommit_price_per_unit", "overcommit_price_per_month", "overcommit_price_total", "currency_code"], "title": "BillingReservationAmountPricesResponseSerializer", "type": "object"}
    ClientProfileSerializer: {"properties": {"fields": {"description": "List of configured field values for the protection profile", "items": {"$ref": "#/components/schemas/ClientProfileFieldSerializer"}, "title": "Fields", "type": "array"}, "id": {"description": "Unique identifier for the DDoS protection profile", "examples": [0], "title": "Id", "type": "integer"}, "ip_address": {"anyOf": [{"format": "ipv4", "type": "string"}, {"format": "ipv6", "type": "string"}, {"format": "ipv4network", "type": "string"}, {"format": "ipv6network", "type": "string"}, "type": "null"], "description": "IP address or network range (CIDR) that is protected by this DDoS profile", "examples": ["203.0.113.1", "203.0.113.0/24"], "title": "Ip Address"}, "options": {"$ref": "#/components/schemas/ProfileOptionsSerializer", "description": "Configuration options controlling profile activation and BGP routing", "examples": [{"active": true, "bgp": true}]}, "profile_template": {"anyOf": ["$ref": "#/components/schemas/ClientProfileTemplateSerializer", "type": "null"], "description": "Complete template configuration data used for this profile"}, "profile_template_description": {"anyOf": ["type": "string", "type": "null"], "description": "Detailed description of the protection template used for this profile", "examples": ["ARK server ports. Valid port values are in range 1000-65535"], "title": "Profile Template Description"}, "protocols": {"anyOf": [{"items": {"$ref": "#/components/schemas/ProtocolsOnPortSerializer"}, "type": "array"}, "type": "null"], "description": "List of network protocols and ports configured for protection", "examples": [[{"port": "80", "protocols": ["TCP", "HTTP"]}, {"port": "53", "protocols": ["UDP"]}]], "title": "Protocols"}, "site": {"anyOf": [{"maxLength": 50, "type": "string"}, "type": "null"], "description": "Geographic site identifier where the protection is deployed", "examples": ["ED"], "title": "Site"}, "status": {"anyOf": ["$ref": "#/components/schemas/DdosProfileStatusSerializer", "type": "null"], "description": "Current operational status and any error information for the profile", "examples": [{"error_description": "", "status": "Updated"}]}}, "required": ["id", "options", "site", "protocols", "status", "profile_template_description", "profile_template", "fields", "ip_address"], "title": "ClientProfileSerializer", "type": "object"}
    VIPAttachCandidateSerializer: {"properties": {"instance_id": {"description": "ID of the instance that owns the port", "examples": ["bc688791-f1b0-44eb-97d4-07697294b1e1"], "format": "uuid4", "title": "Instance Id", "type": "string"}, "instance_name": {"description": "Name of the instance that owns the port", "examples": ["Virtual Machine 1"], "title": "Instance Name", "type": "string"}, "ip_assignments": {"description": "IP addresses assigned to this port", "items": {"$ref": "#/components/schemas/PortIpWithSubnetSerializer"}, "title": "Ip Assignments", "type": "array"}, "network": {"$ref": "#/components/schemas/NetworkSerializer", "description": "Network details"}, "port_id": {"description": "Port ID that shares VIP", "examples": ["351b0dd7-ca09-431c-be53-935db3785067"], "format": "uuid4", "title": "Port Id", "type": "string"}}, "required": ["port_id", "instance_id", "instance_name", "network", "ip_assignments"], "title": "VIPAttachCandidateSerializer", "type": "object"}
    InferenceObjectReferenceSerializer: {"properties": {"kind": {"$ref": "#/components/schemas/InferenceKind", "description": "Kind of the inference object to be referenced", "examples": ["AppDeployment"]}, "name": {"description": "Name of the inference object to be referenced", "examples": ["my-inference-app"], "title": "Name", "type": "string"}}, "required": ["name", "kind"], "title": "InferenceObjectReferenceSerializer", "type": "object"}
    SingleCreateSecurityGroupSerializer: {"properties": {"description": {"anyOf": ["type": "string", "type": "null"], "description": "Security group description", "examples": ["Some description"], "title": "Description"}, "name": {"description": "Security group name", "examples": ["my_security_group"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "security_group_rules": {"description": "Security group rules", "items": {"$ref": "#/components/schemas/CreateSecurityGroupRuleSerializer"}, "title": "Security Group Rules", "type": "array"}, "tags": {"$ref": "#/components/schemas/RawMetadataSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}}, "required": ["name"], "title": "SingleCreateSecurityGroupSerializer", "type": "object"}
    RegistryRepositorySerializer: {"properties": {"artifact_count": {"description": "Number of artifacts in the repository", "examples": [1], "title": "Artifact Count", "type": "integer"}, "created_at": {"description": "Repository creation date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Created At", "type": "string"}, "id": {"description": "Repository ID", "examples": [1], "title": "Id", "type": "integer"}, "name": {"description": "Repository name", "examples": ["nginx"], "title": "Name", "type": "string"}, "pull_count": {"description": "Number of pools from the repository", "examples": [1], "title": "Pull Count", "type": "integer"}, "registry_id": {"description": "Repository registry ID", "examples": [1], "title": "Registry Id", "type": "integer"}, "updated_at": {"description": "Repository modification date-time", "examples": ["2024-06-18T09:36:53.335000Z"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["id", "registry_id", "name", "artifact_count", "pull_count", "created_at", "updated_at"], "title": "RegistryRepositorySerializer", "type": "object"}
    FlavorPrice: {"properties": {"currency_code": {"anyOf": ["type": "string", "type": "null"], "description": "Currency code. Shown if the `include_prices` query parameter if set to true", "examples": ["USD"], "title": "Currency Code"}, "price_per_hour": {"anyOf": ["type": "number", "type": "integer", "type": "null"], "description": "Price per hour. Shown if the `include_prices` query parameter if set to true", "examples": [1], "title": "Price Per Hour"}, "price_per_month": {"anyOf": ["type": "number", "type": "integer", "type": "null"], "description": "Price per month. Shown if the `include_prices` query parameter if set to true", "examples": [720], "title": "Price Per Month"}, "price_status": {"anyOf": ["$ref": "#/components/schemas/PriceDisplayStatus", "type": "null"], "description": "Price status for the UI", "examples": ["show"]}}, "required": ["currency_code", "price_per_hour", "price_per_month", "price_status"], "title": "Flavor price schema", "type": "object"}
    CreateSecretPayloadSerializer: {"properties": {"certificate": {"description": "SSL certificate in PEM format.", "examples": ["<certificate>"], "format": "password", "title": "Certificate", "type": "string", "writeOnly": true}, "certificate_chain": {"description": "SSL certificate chain of intermediates and root certificates in PEM format.", "examples": ["<certificate_chain>"], "format": "password", "title": "Certificate Chain", "type": "string", "writeOnly": true}, "private_key": {"description": "SSL private key in PEM format.", "examples": ["<private_key>"], "format": "password", "title": "Private Key", "type": "string", "writeOnly": true}}, "required": ["certificate", "private_key", "certificate_chain"], "title": "CreateSecretPayloadSerializer", "type": "object"}
    BillingReservationResourceSerializer: {"properties": {"activity_period": {"description": "Name of the billing period, e.g month", "title": "Activity Period", "type": "string"}, "activity_period_length": {"description": "Length of the full reservation period by `activity_period`", "title": "Activity Period Length", "type": "integer"}, "billing_plan_item_id": {"description": "Billing plan item id", "title": "Billing Plan Item Id", "type": "integer"}, "commit_price_per_month": {"description": "Commit price of the item charged per month", "title": "Commit Price Per Month", "type": "string"}, "commit_price_per_unit": {"description": "Commit price of the item charged per hour", "title": "Commit Price Per Unit", "type": "string"}, "commit_price_total": {"description": "Commit price of the item charged for all period reservation", "title": "Commit Price Total", "type": "string"}, "cpu": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Baremetal CPU description", "title": "Cpu"}, "disk": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Baremetal disk description", "title": "Disk"}, "overcommit_billing_plan_item_id": {"description": "Overcommit billing plan item id", "title": "Overcommit Billing Plan Item Id", "type": "integer"}, "overcommit_price_per_month": {"description": "Overcommit price of the item charged per month", "title": "Overcommit Price Per Month", "type": "string"}, "overcommit_price_per_unit": {"description": "Overcommit price of the item charged per hour", "title": "Overcommit Price Per Unit", "type": "string"}, "overcommit_price_total": {"description": "Overcommit price of the item charged for all period reservation", "title": "Overcommit Price Total", "type": "string"}, "ram": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Baremetal RAM description", "title": "Ram"}, "resource_count": {"description": "Number of reserved resource items", "title": "Resource Count", "type": "integer"}, "resource_name": {"description": "Resource name", "title": "Resource Name", "type": "string"}, "resource_type": {"$ref": "#/components/schemas/BillingReservationType", "description": "Resource type"}, "unit_name": {"description": "Billing unit name", "title": "Unit Name", "type": "string"}, "unit_size_month": {"description": "Minimal billing size, for example it is 744 hours per 1 month.", "title": "Unit Size Month", "type": "string"}, "unit_size_total": {"description": "Unit size month multiplied by count of resources in the reservation", "title": "Unit Size Total", "type": "string"}}, "required": ["billing_plan_item_id", "commit_price_per_unit", "commit_price_per_month", "commit_price_total", "overcommit_billing_plan_item_id", "overcommit_price_per_unit", "overcommit_price_per_month", "overcommit_price_total", "unit_size_month", "unit_name", "unit_size_total", "resource_name", "resource_type", "resource_count", "activity_period", "activity_period_length"], "title": "BillingReservationResourceSerializer", "type": "object"}
    InstanceFlavorHardwareDescriptionSerializer: {"properties": {"ram": {"description": "RAM description", "examples": ["16384"], "title": "Ram", "type": "string"}, "vcpus": {"description": "CPU description", "examples": ["16"], "title": "Vcpus", "type": "string"}}, "required": ["vcpus", "ram"], "title": "InstanceFlavorHardwareDescriptionSchema hardware hints for a flavor", "type": "object"}
    PoolStatusSerializer: {"properties": {"health_monitor": {"$ref": "#/components/schemas/HealthMonitorStatusSerializer", "description": "Health Monitor of the Pool"}, "id": {"description": "UUID of the entity", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid", "title": "Id", "type": "string"}, "members": {"description": "Members (servers) of the pool", "items": {"$ref": "#/components/schemas/MemberStatusSerializer"}, "title": "Members", "type": "array"}, "name": {"description": "Name of the load balancer pool", "examples": ["My Load Balancer Pool"], "title": "Name", "type": "string"}, "operating_status": {"$ref": "#/components/schemas/OperatingStatusEnum", "description": "Operating status of the entity", "examples": ["ONLINE", "DRAINING", "OFFLINE", "DEGRADED", "ERROR", "NO_MONITOR"]}, "provisioning_status": {"$ref": "#/components/schemas/ProvisioningStatusEnum", "description": "Provisioning status of the entity", "examples": ["ACTIVE", "DELETED", "ERROR", "PENDING_CREATE", "PENDING_UPDATE", "PENDING_DELETE"]}}, "required": ["id", "operating_status", "provisioning_status", "name", "members"], "title": "PoolStatusSerializer", "type": "object"}
    TagsFilterConditionSerializer: {"additionalProperties": false, "properties": {"key": {"description": "The name of the tag to filter (e.g., '`os_version`').", "examples": ["os_version"], "maxLength": 128, "minLength": 3, "title": "Key", "type": "string"}, "strict": {"description": "Determines how strictly the tag value must match the specified value. If true, the tag value must exactly match the given value. If false, a less strict match (e.g., partial or case-insensitive match) may be applied.", "examples": [true], "title": "Strict", "type": "boolean"}, "value": {"description": "The value of the tag to filter (e.g., '22.04').", "examples": ["22.04"], "maxLength": 256, "minLength": 3, "title": "Value", "type": "string"}}, "title": "TagsFilterConditionSerializer", "type": "object"}
    LegacyCreateInstanceVolumePricingRequestSchema: {"type": "object", "properties": {"size": {"type": "integer", "description": "Volume size in GiB"}, "snapshot_id": {"type": "string", "description": "Snapshot ID. Mandatory if volume is created from a snapshot"}, "source": {"type": "string", "enum": ["apptemplate", "existing-volume", "image", "new-volume", "snapshot"], "description": "One of: 'new-volume', 'image', 'snapshot', 'apptemplate'"}, "type_name": {"type": "string", "enum": ["cold", "ssd_hiiops", "ssd_local", "ssd_lowlatency", "standard", "ultra"], "description": "One of 'standard', '`ssd_hiiops`', 'cold', 'ultra'"}}, "required": ["source"], "description": "Schema lists only the fields required to calculate price", "example": {"size": 1000, "source": "new-volume", "type_name": "standard"}}
    ConnectedDevicesVIPSerializer: {"properties": {"instance_id": {"description": "ID of the instance that owns the port", "examples": ["bc688791-f1b0-44eb-97d4-07697294b1e1"], "format": "uuid4", "title": "Instance Id", "type": "string"}, "instance_name": {"description": "Name of the instance that owns the port", "examples": ["Virtual Machine 1"], "title": "Instance Name", "type": "string"}, "ip_assignments": {"description": "IP addresses assigned to this port", "items": {"$ref": "#/components/schemas/PortIpWithSubnetSerializer"}, "title": "Ip Assignments", "type": "array"}, "network": {"$ref": "#/components/schemas/NetworkSerializer", "description": "Network details"}, "port_id": {"description": "Port ID that shares VIP", "examples": ["351b0dd7-ca09-431c-be53-935db3785067"], "format": "uuid4", "title": "Port Id", "type": "string"}}, "required": ["port_id", "instance_id", "instance_name", "network", "ip_assignments"], "title": "ConnectedDevicesVIPSerializer", "type": "object"}
    QuotasThresholdSerializer: {"properties": {"global_quotas": {"$ref": "#/components/schemas/GlobalQuotasThresholdSerializer", "description": "Global quota that exceed the threshold"}, "regional_quotas": {"description": "Regional quota that exceed the threshold", "items": {"$ref": "#/components/schemas/RegionalQuotasThresholdSerializer"}, "title": "Regional Quotas", "type": "array"}}, "required": ["global_quotas", "regional_quotas"], "title": "QuotasThresholdSerializer", "type": "object"}
    ContainerOutSerializerV3: {"properties": {"address": {"anyOf": [{"format": "uri", "minLength": 1, "type": "string"}, "type": "null"], "description": "Address of the inference instance", "examples": ["https://example.com"], "title": "Address"}, "deploy_status": {"$ref": "#/components/schemas/DeployStatusSerializer", "description": "Status of the containers deployment", "examples": [{"ready": 1, "total": 3}]}, "error_message": {"anyOf": ["type": "string", "type": "null"], "description": "Error message if the container deployment failed", "examples": ["Failed to pull image", "No capacity available in the region"], "title": "Error Message"}, "region_id": {"description": "Region name for the container", "examples": [1], "title": "Region Id", "type": "integer"}, "scale": {"$ref": "#/components/schemas/ContainerScaleOutSerializerV3", "description": "Scale for the container"}}, "required": ["region_id", "address", "scale", "deploy_status", "error_message"], "title": "ContainerOutSerializerV3", "type": "object"}
    PatchContainerProbeHttpGetConfigSerializerV2: {"properties": {"headers": {"additionalProperties": {"type": "string"}, "description": "HTTP headers to be sent with the request.", "examples": ["Authorization": "Bearer token 123"], "title": "Headers", "type": "object"}, "host": {"description": "Host name to send HTTP request to.", "examples": ["127.0.0.1"], "title": "Host", "type": "string"}, "path": {"description": "The endpoint to send the HTTP request to.", "examples": ["/healthz", "/readiness"], "title": "Path", "type": "string"}, "port": {"description": "Port number the probe should connect to.", "examples": [80, 8080], "maximum": 65535, "minimum": 1, "title": "Port", "type": "integer"}, "schema": {"description": "Schema to use for the HTTP request.", "examples": ["HTTP", "HTTPS"], "pattern": "^(HTTP|HTTPS)$", "title": "Schema", "type": "string"}}, "title": "PatchContainerProbeHttpGetConfigSerializerV2", "type": "object"}
    K8sClusterSlurmAddonV2Serializers: {"discriminator": {"mapping": {"False": "#/components/schemas/K8sClusterSlurmAddonDisableV2Serializer", "True": "#/components/schemas/K8sClusterSlurmAddonEnableV2Serializer"}, "propertyName": "enabled"}, "title": "K8sClusterSlurmAddonV2Serializers", "anyOf": ["$ref": "#/components/schemas/K8sClusterSlurmAddonEnableV2Serializer", "$ref": "#/components/schemas/K8sClusterSlurmAddonDisableV2Serializer"]}
    DetailedInstancePricingSerializer: {"description": "Pricing schema with detailed prices per category.", "examples": [{"external_ip": 14.4, "flavor": 576, "floating_ip": 36, "volumes": {"cold": 78, "ssd_hiiops": 20, "standard": 10, "ultra": 78}}], "properties": {"external_ip": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of external/public IP over the specified period of time.", "examples": [14.4], "title": "External Ip"}, "flavor": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of flavor over the specified period of time.", "examples": [576], "title": "Flavor"}, "floating_ip": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of floating IP over the specified period of time.", "examples": [36], "title": "Floating Ip"}, "volumes": {"anyOf": ["$ref": "#/components/schemas/InstanceVolumesPricingSerializer", "type": "null"], "default": null, "description": "Prices of volumes per type over the specified period of time.", "examples": [{"cold": 78, "ssd_hiiops": 20, "ssd_lowlatency": 10, "standard": 10, "ultra": 78}]}}, "title": "DetailedInstancePricingSerializer", "type": "object"}
    InferenceInstanceProbesOutSerializerV2: {"additionalProperties": false, "properties": {"liveness_probe": {"anyOf": ["$ref": "#/components/schemas/InferenceInstanceContainerProbeConfigurationOutSerializerV2", "type": "null"], "description": "Liveness probe configuration"}, "readiness_probe": {"anyOf": ["$ref": "#/components/schemas/InferenceInstanceContainerProbeConfigurationOutSerializerV2", "type": "null"], "description": "Readiness probe configuration"}, "startup_probe": {"anyOf": ["$ref": "#/components/schemas/InferenceInstanceContainerProbeConfigurationOutSerializerV2", "type": "null"], "description": "Startup probe configuration"}}, "required": ["liveness_probe", "readiness_probe", "startup_probe"], "title": "InferenceInstanceProbesOutSerializerV2", "type": "object"}
    CreateVolumeFromImageSerializer: {"properties": {"attachment_tag": {"description": "Block device attachment tag (not exposed in the user tags). Only used in conjunction with `instance_id_to_attach_to`", "examples": ["device-tag"], "pattern": "^[^,/]{1,60}$", "title": "Attachment Tag", "type": "string"}, "image_id": {"description": "Image ID", "examples": ["169942e0-9b53-42df-95ef-1a8b6525c2bd"], "format": "uuid4", "title": "Image Id", "type": "string"}, "instance_id_to_attach_to": {"description": "`instance_id` to attach newly-created volume to", "examples": ["88f3e0bd-ca86-4cf7-be8b-dd2988e23c2d"], "title": "Instance Id To Attach To", "type": "string"}, "lifecycle_policy_ids": {"description": "List of lifecycle policy IDs (snapshot creation schedules) to associate with the volume", "examples": [[1, 2]], "items": {"type": "integer"}, "title": "Lifecycle Policy Ids", "type": "array"}, "name": {"description": "Volume name", "examples": ["volume-1"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "size": {"description": "Volume size in GiB", "examples": [10], "minimum": 1, "title": "Size", "type": "integer"}, "source": {"const": "image", "description": "Volume source type", "examples": ["image"], "title": "Source", "type": "string"}, "tags": {"$ref": "#/components/schemas/UpdateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "type_name": {"$ref": "#/components/schemas/VolumeTypeName", "description": "Volume type. Defaults to `standard`. If not specified for source `snapshot`, volume type will be derived from the snapshot volume.", "examples": ["standard"]}}, "required": ["name", "source", "image_id", "size"], "title": "CreateVolumeFromImageSerializer", "type": "object"}
    UserRoleSerializer: {"properties": {"role": {"$ref": "#/components/schemas/CustomerAssignableRole", "description": "Available role", "examples": ["ClientAdministrator"]}, "scope": {"description": "Role's scope", "examples": ["Client"], "title": "Scope", "type": "string"}}, "required": ["role", "scope"], "title": "RoleScopeSchema schema", "type": "object"}
    SchemaFilterFunctionsTrafficEnum: {"enum": ["last_name", "type", "uuid"], "title": "SchemaFilterFunctionsTrafficEnum", "type": "string"}
    GlobalQuotasThresholdSerializer: {"properties": {"inference_cpu_millicore_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Inference CPU millicore count limit"}, "inference_cpu_millicore_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Inference CPU millicore count usage"}, "inference_gpu_a100_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Inference GPU A100 Count limit"}, "inference_gpu_a100_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Inference GPU A100 Count usage"}, "inference_gpu_h100_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Inference GPU H100 Count limit"}, "inference_gpu_h100_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Inference GPU H100 Count usage"}, "inference_gpu_l40s_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Inference GPU L40s Count limit"}, "inference_gpu_l40s_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Inference GPU L40s Count usage"}, "inference_instance_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Inference instance count limit"}, "inference_instance_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Inference instance count usage"}, "keypair_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "SSH Keys Count limit"}, "keypair_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "SSH Keys Count usage"}, "project_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Projects Count limit"}, "project_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Projects Count usage"}}, "title": "GlobalQuotasThreshold object", "type": "object"}
    LbPoolSerializer: {"properties": {"ca_secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Secret ID of CA certificate bundle", "title": "Ca Secret Id"}, "creator_task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Task that created this entity", "examples": ["d8334c12-2881-4c4a-84ad-1b21fea73ad1"], "title": "Creator Task Id"}, "crl_secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Secret ID of CA revocation list file", "title": "Crl Secret Id"}, "healthmonitor": {"anyOf": ["$ref": "#/components/schemas/LbHealthMonitorSerializer", "type": "null"], "description": "Health monitor parameters"}, "id": {"description": "Pool ID", "examples": ["9fccf0a3-c0de-441d-9afd-2b9b58b08b9f"], "format": "uuid4", "title": "Id", "type": "string"}, "lb_algorithm": {"$ref": "#/components/schemas/LbAlgorithmEnum", "description": "Load balancer algorithm", "examples": ["ROUND_ROBIN"]}, "listeners": {"description": "Listeners IDs", "examples": [["id": "c63341da-ea44-4027-bbf6-1f1939c783da"]], "items": {"$ref": "#/components/schemas/MandatoryIdSerializerPydantic"}, "title": "Listeners", "type": "array"}, "loadbalancers": {"description": "Load balancers IDs", "examples": [["id": "79943b39-5e67-47e1-8878-85044b39667a"]], "items": {"$ref": "#/components/schemas/MandatoryIdSerializerPydantic"}, "title": "Loadbalancers", "type": "array"}, "members": {"description": "Pool members", "items": {"anyOf": ["$ref": "#/components/schemas/LbPoolMemberSerializer", "$ref": "#/components/schemas/DetailedLbPoolMemberSerializer"]}, "title": "Members", "type": "array"}, "name": {"description": "Pool name", "examples": ["lbaas_test_pool"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "operating_status": {"$ref": "#/components/schemas/OperatingStatusEnum", "description": "Pool operating status", "examples": ["ONLINE"]}, "protocol": {"$ref": "#/components/schemas/LbPoolProtocolEnum", "description": "Protocol", "examples": ["TCP"]}, "provisioning_status": {"$ref": "#/components/schemas/ProvisioningStatusEnum", "description": "Pool lifecycle status", "examples": ["ACTIVE"]}, "secret_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Secret ID for TLS client authentication to the member servers", "title": "Secret Id"}, "session_persistence": {"anyOf": ["$ref": "#/components/schemas/LbSessionPersistence", "type": "null"], "description": "Session persistence parameters"}, "task_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "timeout_client_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Frontend client inactivity timeout in milliseconds", "examples": [50000], "title": "Timeout Client Data"}, "timeout_member_connect": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member connection timeout in milliseconds", "examples": [50000], "title": "Timeout Member Connect"}, "timeout_member_data": {"anyOf": [{"maximum": 86400000, "minimum": 0, "type": "integer"}, "type": "null"], "description": "Backend member inactivity timeout in milliseconds", "examples": [null], "title": "Timeout Member Data"}}, "required": ["id", "name", "lb_algorithm", "protocol", "loadbalancers", "listeners", "members", "session_persistence", "operating_status", "provisioning_status", "creator_task_id", "task_id", "timeout_client_data", "timeout_member_connect", "timeout_member_data", "secret_id", "crl_secret_id", "ca_secret_id", "healthmonitor"], "title": "LbPoolSerializer", "type": "object"}
    CreateGPUClusterExternalInterfaceSerializer: {"properties": {"interface_name": {"description": "Interface name. Defaults to `null` and is returned as `null` in the API response if not set.", "maxLength": 37, "title": "Interface Name", "type": "string"}, "ip_family": {"anyOf": ["$ref": "#/components/schemas/InterfaceIPFamily", "type": "null"], "default": "ipv4", "description": "Specify `ipv4`, `ipv6`, or `dual` to enable both."}, "type": {"const": "external", "description": "A public IP address will be assigned to the server.", "title": "Type", "type": "string"}}, "required": ["type"], "title": "CreateGPUClusterExternalInterfaceSerializer", "type": "object"}
    SubnetInterfaceOutputSerializer: {"properties": {"floating_ip": {"anyOf": ["$ref": "#/components/schemas/NewFloatingIpInterfaceSerializer", "type": "null"], "description": "Floating IP config for this subnet attachment"}, "name": {"anyOf": [{"maxLength": 37, "type": "string"}, "type": "null"], "description": "Interface name", "title": "Name"}, "network_id": {"description": "Network ID the subnet belongs to. Port will be plugged in this network", "examples": ["59905c8e-2619-420a-b046-536096473370"], "title": "Network Id", "type": "string"}, "subnet_id": {"description": "Port is assigned an IP address from this subnet", "examples": ["e3c6ee77-48cb-416b-b204-11b492cc776e3"], "format": "uuid4", "title": "Subnet Id", "type": "string"}, "type": {"const": "subnet", "title": "Type", "type": "string"}}, "required": ["network_id", "name", "type", "subnet_id", "floating_ip"], "title": "SubnetInterfaceOutputSerializer", "type": "object"}
    BillingReservationType: {"enum": ["flavor"], "title": "BillingReservationType", "type": "string"}
    CostReportResourcesSortingRequestSerializer: {"properties": {"billing_value": {"$ref": "#/components/schemas/SortingDirections"}, "first_seen": {"$ref": "#/components/schemas/SortingDirections"}, "last_name": {"$ref": "#/components/schemas/SortingDirections"}, "last_seen": {"$ref": "#/components/schemas/SortingDirections"}, "project": {"$ref": "#/components/schemas/SortingDirections"}, "region": {"$ref": "#/components/schemas/SortingDirections"}, "type": {"$ref": "#/components/schemas/SortingDirections"}}, "title": "CostReportResourcesSortingRequestSerializer", "type": "object"}
    IPVersion: {"enum": [4, 6], "title": "IPVersion", "type": "integer"}
    PGClusterShortSerializer: {"properties": {"cluster_name": {"description": "PostgreSQL cluster name", "examples": ["mycluster"], "title": "Cluster Name", "type": "string"}, "created_at": {"description": "Creation timestamp", "format": "date-time", "title": "Created At", "type": "string"}, "status": {"$ref": "#/components/schemas/ClusterStatus", "description": "Current cluster status"}, "version": {"description": "Cluster version", "examples": ["15"], "title": "Version", "type": "string"}}, "required": ["cluster_name", "version", "created_at", "status"], "title": "PGClusterShortSerializer", "type": "object"}
    ContainerProbeTcpSocketConfigSerializerV2: {"properties": {"port": {"description": "Port number to check if it's open.", "examples": [80, 8080], "maximum": 65535, "minimum": 1, "title": "Port", "type": "integer"}}, "required": ["port"], "title": "ContainerProbeTcpSocketConfigSerializerV2", "type": "object"}
    InferenceKind: {"enum": ["AppDeployment"], "title": "InferenceKind", "type": "string"}
    StartActionInstanceSerializer: {"properties": {"action": {"const": "start", "description": "Instance action name", "examples": ["start"], "title": "Action", "type": "string"}, "activate_profile": {"anyOf": ["type": "boolean", "type": "null"], "default": true, "description": "Used on start instance to activate Advanced DDoS profile", "examples": [true], "title": "Activate Profile"}}, "required": ["action"], "title": "StartActionInstanceSerializer", "type": "object"}
    K8sClusterSlurmAddonDisableV2Serializer: {"properties": {"enabled": {"const": false, "description": "The Slurm add-on will be disabled in the cluster.", "examples": [false], "title": "Enabled", "type": "boolean", "enum": [false]}}, "required": ["enabled"], "title": "K8sClusterSlurmAddonDisableV2Serializer", "type": "object"}
    ContainerProbeHttpGetConfigSerializerV2: {"properties": {"headers": {"additionalProperties": {"type": "string"}, "description": "HTTP headers to be sent with the request.", "examples": ["Authorization": "Bearer token 123"], "title": "Headers", "type": "object"}, "host": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Host name to send HTTP request to.", "examples": ["127.0.0.1"], "title": "Host"}, "path": {"default": "/", "description": "The endpoint to send the HTTP request to.", "examples": ["/healthz", "/readiness"], "title": "Path", "type": "string"}, "port": {"description": "Port number the probe should connect to.", "examples": [80, 8080], "maximum": 65535, "minimum": 1, "title": "Port", "type": "integer"}, "schema": {"default": "HTTP", "description": "Schema to use for the HTTP request.", "examples": ["HTTP", "HTTPS"], "pattern": "^(HTTP|HTTPS)$", "title": "Schema", "type": "string"}}, "required": ["port"], "title": "ContainerProbeHttpGetConfigSerializerV2", "type": "object"}
    CreateGPUClusterFloatingIPSerializer: {"properties": {"source": {"const": "new", "title": "Source", "type": "string"}}, "required": ["source"], "title": "CreateGPUClusterFloatingIPSerializer", "type": "object"}
    AIAppShortFlavor: {"properties": {"name": {"description": "Name of the flavor", "examples": ["inference-16vcpu-232gib-1xh100-80gb"], "title": "Name", "type": "string"}}, "required": ["name"], "title": "AIAppShortFlavor", "type": "object"}
    VirtualGpuClusterInterfaceSerializer: {"properties": {"floating_ips": {"description": "Bodies of floatingips that are NAT-ing ips of this port", "items": {"$ref": "#/components/schemas/FloatingIpDetailsSerializer"}, "title": "Floating Ips", "type": "array"}, "ip_assignments": {"description": "IP addresses assigned to this port", "examples": [[{"ip_address": "192.168.123.20", "subnet_id": "351b0dd7-ca09-431c-be53-935db3785067"}, {"ip_address": "192.168.120.16", "subnet_id": "0a641ef8-62dc-4146-91e5-6ab4b464df6d"}]], "items": {"$ref": "#/components/schemas/PortIpAssignmentSerializer"}, "title": "Ip Assignments", "type": "array"}, "mac_address": {"anyOf": ["type": "string", "type": "null"], "description": "MAC address of the virtual port", "examples": ["00:16:3e:f2:87:16"], "title": "Mac Address"}, "network": {"$ref": "#/components/schemas/NetworkDetailsSerializer", "description": "Body of the network this port is attached to"}, "network_id": {"description": "ID of the network the port is attached to", "examples": ["bc688791-f1b0-44eb-97d4-07697294b1e1"], "format": "uuid4", "title": "Network Id", "type": "string"}, "port_id": {"description": "ID of virtual ethernet port object", "examples": ["1f0ca628-a73b-42c0-bdac-7b10d023e097"], "format": "uuid4", "title": "Port Id", "type": "string"}, "port_security_enabled": {"description": "Port security status", "title": "Port Security Enabled", "type": "boolean"}}, "required": ["port_id", "mac_address", "ip_assignments", "network_id", "port_security_enabled", "network", "floating_ips"], "title": "VirtualGpuClusterInterfaceSerializer", "type": "object"}
    ContainerProbeExecConfigSerializerV2: {"properties": {"command": {"description": "Command to be executed inside the running container.", "examples": [["ls", "-l"]], "items": {"type": "string"}, "title": "Command", "type": "array"}}, "required": ["command"], "title": "ContainerProbeExecConfigSerializerV2", "type": "object"}
    KeystoneState: {"enum": ["DELETED", "INITIALIZATION_FAILED", "INITIALIZED", "NEW"], "title": "KeystoneState", "type": "string"}
    ResourceType: {"enum": ["caas_container", "caas_key", "caas_pull_secret", "dbaas_postgres", "ddos_profile", "external_ip", "faas_function", "faas_key", "faas_namespace", "file_shares", "floating_ip", "gpu_baremetal_server", "gpu_virtual_server", "gpuai_cluster", "image", "inference_api_key", "inference_application", "inference_instance", "inference_registry_credentials", "inference_secret", "instance", "ipu_cluster", "k8s_cluster", "k8s_cluster_template", "k8s_pool", "laas", "laas_topic", "lb_health_monitor", "lb_l7policy", "lb_l7rule", "lblistener", "lbpool", "lbpool_member", "lifecycle_policy", "lifecycle_policy_volume_member", "loadbalancer", "network", "port", "project", "quota_limit_request", "registry", "registry_repository", "registry_repository_artifact", "registry_repository_tag", "registry_user", "registry_user_sercret", "reservation", "role", "router", "secret", "securitygroup", "securitygrouprule", "servergroup", "shared_flavor", "shared_image", "shared_network", "snapshot", "snapshot_schedule", "ssh_key", "subnet", "token", "user", "virtual_gpu_cluster", "volume"], "title": "ResourceType", "type": "string"}
    EndpointService: {"enum": ["ai_service", "caas", "caas_for_inference", "dbaas", "faas", "inference_at_the_edge", "inference_box", "laas", "mkaas", "registry"], "title": "EndpointService", "type": "string"}
    K8sClusterSlurmAddonV2Serializer: {"properties": {"enabled": {"description": "Indicates whether Slurm add-on is deployed in the cluster.\n\nThis add-on is only supported in clusters running Kubernetes v1.31 and v1.32 with at least 1 GPU cluster pool.", "examples": [true, false], "title": "Enabled", "type": "boolean"}, "file_share_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "ID of a VAST file share used as Slurm storage.\n\nThe Slurm add-on creates separate Persistent Volume Claims for different purposes (controller spool, worker spool, jail) on that file share.", "examples": ["cbc94d0e-06c6-4d12-9e86-9782ba14fc8c"], "title": "File Share Id"}, "ssh_key_ids": {"anyOf": [{"items": {"format": "uuid4", "type": "string"}, "type": "array"}, "type": "null"], "description": "IDs of SSH keys authorized for SSH connection to Slurm login nodes.", "examples": [["25735292-bd97-44b0-a1af-d7eab876261d", "efc01f3a-35b9-4385-89f9-e38439093ee7"]], "title": "Ssh Key Ids"}, "worker_count": {"anyOf": ["type": "integer", "type": "null"], "description": "Size of the worker pool, i.e. number of worker nodes.\n\nEach Slurm worker node is backed by a Pod scheduled on one of cluster's GPU nodes.", "examples": [2], "title": "Worker Count"}}, "required": ["enabled", "file_share_id", "ssh_key_ids", "worker_count"], "title": "K8sClusterSlurmAddonV2Serializer", "type": "object"}
    PortIpAssignmentSerializer: {"properties": {"ip_address": {"description": "The IP address assigned to the port from the specified subnet", "examples": ["192.168.123.20"], "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "subnet_id": {"description": "ID of the subnet that allocated the IP", "examples": ["351b0dd7-ca09-431c-be53-935db3785067"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}, "required": ["subnet_id", "ip_address"], "title": "PortIpAssignmentSerializer", "type": "object"}
    NewVolumeInputSerializer: {"properties": {"boot_index": {"description": "Boot index of the volume", "examples": [1], "minimum": 0, "title": "Boot Index", "type": "integer"}, "delete_on_termination": {"default": false, "description": "Flag indicating whether the volume is deleted on instance termination", "examples": [true], "title": "Delete On Termination", "type": "boolean"}, "name": {"description": "Volume name", "examples": ["my-data-disk"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "size": {"description": "Volume size in GiB", "examples": [100], "exclusiveMaximum": 102400, "exclusiveMinimum": 0, "title": "Size", "type": "integer"}, "source": {"const": "new", "title": "Source", "type": "string"}, "tags": {"additionalProperties": {"type": "string"}, "description": "Tags associated with the volume", "examples": ["key1": "value1"], "title": "Tags", "type": "object"}, "type": {"$ref": "#/components/schemas/AllVolumeTypeEnum", "description": "Volume type"}}, "required": ["size", "type", "name", "boot_index", "source"], "title": "NewVolumeInputSerializer", "type": "object"}
    VolumeAttachmentSerializer: {"properties": {"attached_at": {"anyOf": [{"format": "date-time", "type": "string"}, "type": "null"], "default": null, "description": "The date and time when the attachment was created.", "examples": ["2019-07-26T14:22:03+0000"], "title": "Attached At"}, "attachment_id": {"description": "The unique identifier of the attachment object.", "examples": ["f2ed59d9-8068-400c-be4b-c4501ef6f33c"], "title": "Attachment Id", "type": "string"}, "device": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The block device name inside the guest instance.", "examples": ["/dev/vda"], "title": "Device"}, "flavor_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The flavor ID of the instance.", "examples": ["g1-standard-1-2"], "title": "Flavor Id"}, "instance_name": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The name of the instance if attached and the server name is known.", "examples": ["instance-1"], "title": "Instance Name"}, "server_id": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "The unique identifier of the instance.", "examples": ["8dc30d49-bb34-4920-9bbd-03a2587ec0ad"], "title": "Server Id"}, "volume_id": {"description": "The unique identifier of the attached volume.", "examples": ["67baa7d1-08ea-4fc5-bef2-6b2465b7d227"], "title": "Volume Id", "type": "string"}}, "required": ["attachment_id", "volume_id"], "title": "VolumeAttachmentSerializer", "type": "object"}
    HealthMonitorStatusSerializer: {"properties": {"id": {"description": "UUID of the entity", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid", "title": "Id", "type": "string"}, "operating_status": {"$ref": "#/components/schemas/OperatingStatusEnum", "description": "Operating status of the entity", "examples": ["ONLINE", "DRAINING", "OFFLINE", "DEGRADED", "ERROR", "NO_MONITOR"]}, "provisioning_status": {"$ref": "#/components/schemas/ProvisioningStatusEnum", "description": "Provisioning status of the entity", "examples": ["ACTIVE", "DELETED", "ERROR", "PENDING_CREATE", "PENDING_UPDATE", "PENDING_DELETE"]}, "type": {"$ref": "#/components/schemas/HealthMonitorTypeEnum", "description": "Type of the Health Monitor", "examples": ["HTTP", "HTTPS", "PING", "TCP", "K8S"]}}, "required": ["id", "operating_status", "provisioning_status", "type"], "title": "HealthMonitorStatusSerializer", "type": "object"}
    CreateInstanceVolumeSerializer: {"discriminator": {"mapping": {"apptemplate": "#/components/schemas/CreateInstanceCreateVolumeFromApptemplateSerializer", "existing-volume": "#/components/schemas/CreateInstanceExistingVolumeSerializer", "image": "#/components/schemas/CreateInstanceCreateVolumeFromImageSerializer", "new-volume": "#/components/schemas/CreateInstanceCreateNewVolumeSerializer", "snapshot": "#/components/schemas/CreateInstanceCreateVolumeFromSnapshotSerializer"}, "propertyName": "source"}, "title": "Create Instance Volume schema", "anyOf": ["$ref": "#/components/schemas/CreateInstanceCreateNewVolumeSerializer", "$ref": "#/components/schemas/CreateInstanceCreateVolumeFromImageSerializer", "$ref": "#/components/schemas/CreateInstanceCreateVolumeFromSnapshotSerializer", "$ref": "#/components/schemas/CreateInstanceCreateVolumeFromApptemplateSerializer", "$ref": "#/components/schemas/CreateInstanceExistingVolumeSerializer"]}
    CreateBareMetalExternalInterfaceSerializer: {"description": "Instance will be attached to default external network", "examples": [{"interface_name": "eth0", "ip_family": "ipv4", "type": "external"}], "properties": {"interface_name": {"description": "Interface name. Defaults to `null` and is returned as `null` in the API response if not set.", "maxLength": 37, "title": "Interface Name", "type": "string"}, "ip_family": {"anyOf": ["$ref": "#/components/schemas/InterfaceIPFamily", "type": "null"], "default": "ipv4", "description": "Specify `ipv4`, `ipv6`, or `dual` to enable both."}, "port_group": {"default": 0, "description": "Specifies the trunk group to which this interface belongs. Applicable only for bare metal servers. Each unique port group is mapped to a separate trunk port. Use this to control how interfaces are grouped across trunks.", "maximum": 1, "minimum": 0, "title": "Port Group", "type": "integer"}, "type": {"const": "external", "description": "A public IP address will be assigned to the instance.", "title": "Type", "type": "string"}}, "required": ["type"], "title": "CreateBareMetalExternalInterfaceSerializer", "type": "object"}
    VolumePriceWithDiscountSerializer: {"properties": {"discount": {"anyOf": ["type": "number", "type": "null"], "description": "Discount value within range [0..1] where 1 is 100%.", "examples": [0.1, 0.02, 0.99, 0], "title": "Discount"}, "price": {"description": "Price for specified category.", "examples": [78], "title": "Price", "type": "number"}, "type": {"$ref": "#/components/schemas/AllVolumeTypeEnum", "description": "Type of volume.", "examples": ["ultra", "ssd_lowlatency", "cold", "ssd_hiiops"]}}, "required": ["type", "discount", "price"], "title": "VolumePriceWithDiscountSerializer", "type": "object"}
    PatchContainerProbeExecConfigSerializerV2: {"properties": {"command": {"description": "Command to be executed inside the running container.", "examples": [["ls", "-l"]], "items": {"type": "string"}, "title": "Command", "type": "array"}}, "title": "PatchContainerProbeExecConfigSerializerV2", "type": "object"}
    CreateInstanceCreateVolumeFromSnapshotSerializer: {"properties": {"attachment_tag": {"description": "Block device attachment tag (not exposed in the normal tags)", "examples": ["boot", "data", "logs"], "pattern": "^[^,/]{1,60}$", "title": "Attachment Tag", "type": "string"}, "boot_index": {"description": "- `0` means that this is the primary boot device;\n- A unique positive value is set for the secondary bootable devices;\n- A negative number means that the boot is prohibited.", "examples": [0], "title": "Boot Index", "type": "integer"}, "delete_on_termination": {"default": false, "description": "Set to `true` to automatically delete the volume when the instance is deleted.", "examples": [false], "title": "Delete On Termination", "type": "boolean"}, "name": {"description": "The name of the volume. If not specified, a name will be generated automatically.", "examples": ["boot-volume"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "size": {"description": "Volume size in GiB.", "examples": [20], "minimum": 1, "title": "Size", "type": "integer"}, "snapshot_id": {"description": "Snapshot ID.", "examples": ["f01fd9a0-9548-48ba-82dc-a8c8b2d6f2f1"], "format": "uuid4", "title": "Snapshot Id", "type": "string"}, "source": {"const": "snapshot", "description": "New volume will be created from the snapshot and attached to the instance.", "examples": ["snapshot"], "title": "Source", "type": "string"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "type_name": {"$ref": "#/components/schemas/SnapshottableVolumeTypeChoices", "description": "Specifies the volume type. If omitted, the type from the source volume will be used by default.", "examples": ["ssd_hiiops"]}}, "required": ["source", "snapshot_id", "size"], "title": "CreateInstanceCreateVolumeFromSnapshotSerializer", "type": "object"}
    CreateBareMetalSubnetInterfaceSerializer: {"description": "The instance will get an IP address from the selected network.\nIf you choose to add a floating IP, the instance will be reachable from the internet.\nOtherwise, it will only have a private IP within the network.", "examples": [{"floating_ip": {"existing_floating_id": "57be69f6-6f6a-4f03-a4ad-8eb86c69ec0a", "source": "existing"}, "network_id": "59905c8e-2619-420a-b046-536096473370", "subnet_id": "e3c6ee77-48cb-416b-b204-11b492cc776e3", "type": "subnet"}], "properties": {"floating_ip": {"description": "Allows the instance to have a public IP that can be reached from the internet.", "discriminator": {"mapping": {"existing": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer", "new": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer"}, "propertyName": "source"}, "title": "Floating Ip", "anyOf": ["$ref": "#/components/schemas/NewInstanceFloatingIpInterfaceSerializer", "$ref": "#/components/schemas/ExistingInstanceFloatingIpInterfaceSerializer"]}, "interface_name": {"description": "Interface name. Defaults to `null` and is returned as `null` in the API response if not set.", "maxLength": 37, "title": "Interface Name", "type": "string"}, "network_id": {"description": "The network where the instance will be connected.", "format": "uuid4", "title": "Network Id", "type": "string"}, "port_group": {"default": 0, "description": "Specifies the trunk group to which this interface belongs. Applicable only for bare metal servers. Each unique port group is mapped to a separate trunk port. Use this to control how interfaces are grouped across trunks.", "maximum": 1, "minimum": 0, "title": "Port Group", "type": "integer"}, "subnet_id": {"description": "The instance will get an IP address from this subnet.", "format": "uuid4", "title": "Subnet Id", "type": "string"}, "type": {"const": "subnet", "description": "The instance will get an IP address from the selected network. If you choose to add a floating IP, the instance will be reachable from the internet. Otherwise, it will only have a private IP within the network.", "title": "Type", "type": "string"}}, "required": ["type", "network_id", "subnet_id"], "title": "CreateBareMetalSubnetInterfaceSerializer", "type": "object"}
    InferenceContainerPricingV2Serializer: {"properties": {"region_id": {"description": "Region ID for the container", "examples": [7], "title": "Region Id", "type": "integer"}, "scale": {"$ref": "#/components/schemas/InferenceContainerScalePricingV2Serializer", "description": "Scale for the container"}}, "required": ["region_id", "scale"], "title": "InferenceContainerPricingV2Serializer", "type": "object"}
    SnapshottableVolumeTypeChoices: {"description": "Snapshots are currently supported only for these volume types.", "enum": ["ssd_hiiops", "standard"], "title": "SnapshottableVolumeTypeChoices", "type": "string"}
    BasicActionInstanceSerializer: {"properties": {"action": {"description": "Instance action name", "enum": ["reboot", "reboot_hard", "resume", "stop", "suspend"], "examples": ["stop"], "title": "Action", "type": "string"}}, "required": ["action"], "title": "BasicActionInstanceSerializer", "type": "object"}
    ContainerScaleTriggersRateSerializer: {"properties": {"rate": {"description": "Request count per 'window' seconds for the http trigger", "examples": [1], "maximum": 1000, "minimum": 1, "title": "Rate", "type": "integer"}, "window": {"description": "Time window for rate calculation in seconds", "examples": [60], "maximum": 3600, "minimum": 1, "title": "Window", "type": "integer"}}, "required": ["rate", "window"], "title": "ContainerScaleTriggersRateSerializer", "type": "object"}
    InstanceBriefSerializer: {"properties": {"instance_id": {"description": "The ID of the instance, corresponding to the attribute 'id'.", "examples": ["142988bb-aa1e-4862-bffb-1bc2f0036c77"], "title": "Instance Id", "type": "string"}, "instance_name": {"description": "The name of the instance, corresponding to the attribute 'name'.", "examples": ["test_instance"], "title": "Instance Name", "type": "string"}}, "required": ["instance_id", "instance_name"], "title": "Instance brief details schema", "type": "object"}
    InstanceInFloatingSerializer: {"properties": {"addresses": {"additionalProperties": {"items": {"anyOf": ["$ref": "#/components/schemas/InstanceFloatingAddressSerializer", "$ref": "#/components/schemas/InstanceFixedAddressShortSerializer", "$ref": "#/components/schemas/InstanceFixedAddressSerializer"]}, "type": "array"}, "description": "Map of `network_name` to list of addresses in that network", "title": "Addresses", "type": "object"}, "created_at": {"description": "Datetime when instance was created", "examples": ["2023-11-29T10:56:49Z"], "format": "date-time", "title": "Created At", "type": "string"}, "creator_task_id": {"description": "Task that created this entity", "examples": ["d1e1500b-e2be-40aa-9a4b-cc493fa1af30"], "title": "Creator Task Id", "type": "string"}, "flavor": {"$ref": "#/components/schemas/BaseFlavorSerializer", "description": "Flavor"}, "id": {"description": "Instance ID", "examples": ["6c6aa80f-7836-4dc2-a2ae-125e248be476"], "format": "uuid4", "title": "Id", "type": "string"}, "instance_description": {"anyOf": ["type": "string", "type": "null"], "description": "Instance description", "examples": ["Instance description"], "title": "Instance Description"}, "name": {"description": "Instance name", "examples": ["my-instance-1"], "title": "Name", "type": "string"}, "project_id": {"description": "Project ID", "examples": [111], "title": "Project Id", "type": "integer"}, "region": {"description": "Region name", "examples": ["Luxembourg"], "title": "Region", "type": "string"}, "region_id": {"description": "Region ID", "examples": [4], "title": "Region Id", "type": "integer"}, "security_groups": {"description": "Security groups", "items": {"$ref": "#/components/schemas/NameSerializerPydantic"}, "title": "Security Groups", "type": "array"}, "ssh_key_name": {"anyOf": ["type": "string", "type": "null"], "description": "SSH key name assigned to instance", "examples": ["my-ssh-key"], "title": "Ssh Key Name"}, "status": {"$ref": "#/components/schemas/InstanceStatus", "description": "Instance status", "examples": ["ACTIVE"]}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "task_id": {"anyOf": ["type": "string", "type": "null"], "description": "The UUID of the active task that currently holds a lock on the resource. This lock prevents concurrent modifications to ensure consistency. If `null`, the resource is not locked.", "examples": [null], "title": "Task Id"}, "task_state": {"anyOf": ["type": "string", "type": "null"], "description": "Task state", "examples": [null], "title": "Task State"}, "vm_state": {"$ref": "#/components/schemas/InstanceVMState", "description": "Virtual machine state (active)", "examples": ["active"]}, "volumes": {"description": "List of volumes", "items": {"$ref": "#/components/schemas/InstanceVolumeSerializer"}, "title": "Volumes", "type": "array"}}, "required": ["id", "name", "created_at", "status", "vm_state", "volumes", "flavor", "tags", "instance_description", "addresses", "security_groups", "ssh_key_name", "creator_task_id", "task_state", "task_id", "region", "region_id", "project_id"], "title": "InstanceInFloatingSerializer", "type": "object"}
    FloatingIpDetailsSerializer: {"properties": {"created_at": {"description": "Datetime when the floating IP was created", "examples": ["2025-04-04T13:55:31Z"], "format": "date-time", "title": "Created At", "type": "string"}, "fixed_ip_address": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "description": "IP address of the port the floating IP is attached to", "examples": ["192.168.10.15"], "title": "Fixed Ip Address"}, "floating_ip_address": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "description": "IP Address of the floating IP", "examples": ["172.24.4.34"], "title": "Floating Ip Address"}, "id": {"description": "Floating IP ID", "examples": ["c64e5db1-5f1f-43ec-a8d9-5090df85b82d"], "format": "uuid4", "title": "Id", "type": "string"}, "port_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Port ID the floating IP is attached to. The `fixed_ip_address` is the IP address of the port.", "examples": ["ee2402d0-f0cd-4503-9b75-69be1d11c5f1"], "title": "Port Id"}, "router_id": {"anyOf": [{"format": "uuid4", "type": "string"}, "type": "null"], "description": "Router ID", "examples": ["11005a33-c5ac-4c96-ab6f-8f2827cc7da6"], "title": "Router Id"}, "status": {"anyOf": ["$ref": "#/components/schemas/FloatingIPStatus", "type": "null"], "description": "Floating IP status", "examples": ["ACTIVE", "DOWN", "ERROR"]}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "updated_at": {"description": "Datetime when the floating IP was last updated", "examples": ["2025-04-04T13:56:31Z"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["id", "fixed_ip_address", "floating_ip_address", "tags", "port_id", "router_id", "status", "created_at", "updated_at"], "title": "FloatingIpDetailsSerializer", "type": "object"}
    DeprecatedCreateClientProfileFieldSchema: {"type": "object", "properties": {"base_field": {"type": ["integer", "null"], "writeOnly": true, "description": "ID of DDoS profile field"}, "field_name": {"type": ["string", "null"], "description": "Name of DDoS profile field"}, "field_value": {"writeOnly": true, "description": "Complex value. Only one of 'value' or '`field_value`' must be specified."}, "value": {"type": ["string", "null"], "writeOnly": true, "maxLength": 500, "description": "Basic type value. Only one of 'value' or '`field_value`' must be specified."}}, "example": {"value": null, "field_value": [45046, 45047], "base_field": 10}}
    VolumeLimiterStatsSerializer: {"description": "Schema representing the Quality of Service (QoS) parameters for a volume.", "properties": {"MBps_base_limit": {"description": "The sustained bandwidth limit in megabytes per second (MBps).", "examples": [50], "title": "Mbps Base Limit", "type": "integer"}, "MBps_burst_limit": {"description": "The burst bandwidth limit in megabytes per second (MBps).", "examples": [200], "title": "Mbps Burst Limit", "type": "integer"}, "iops_base_limit": {"description": "The sustained IOPS (Input/Output Operations Per Second) limit.", "examples": [1000], "title": "Iops Base Limit", "type": "integer"}, "iops_burst_limit": {"description": "The burst IOPS limit.", "examples": [5000], "title": "Iops Burst Limit", "type": "integer"}}, "required": ["iops_base_limit", "iops_burst_limit", "MBps_base_limit", "MBps_burst_limit"], "title": "VolumeLimiterStatsSerializer", "type": "object"}
    SchemaFilterAiVirtualClusterEnum: {"enum": ["flavor", "last_name", "type", "uuid"], "title": "SchemaFilterAiVirtualClusterEnum", "type": "string"}
    CreateVirtualGpuClusterNewVolumeCheckLimitsSerializer: {"properties": {"size": {"description": "Volume size in GiB", "examples": [100], "exclusiveMaximum": 102400, "exclusiveMinimum": 0, "title": "Size", "type": "integer"}, "source": {"const": "new", "title": "Source", "type": "string"}, "type": {"$ref": "#/components/schemas/AllVolumeTypeEnum", "description": "Volume type"}}, "required": ["size", "type", "source"], "title": "CreateVirtualGpuClusterNewVolumeCheckLimitsSerializer", "type": "object"}
    InstanceVolumesPricingSerializer: {"description": "Pricing schema with detailed prices per volume type.", "examples": [{"cold": 78, "ssd_hiiops": 20, "ssd_lowlatency": 10, "standard": 10, "ultra": 78}], "properties": {"cold": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of cold volume over the specified period of time.", "examples": [78], "title": "Cold"}, "ssd_hiiops": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of `ssd_hiiops` volume over the specified period of time.", "examples": [20], "title": "Ssd Hiiops"}, "ssd_lowlatency": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of `ssd_lowlatency` volume over the specified period of time.", "examples": [10], "title": "Ssd Lowlatency"}, "standard": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of standard volume over the specified period of time.", "examples": [10], "title": "Standard"}, "ultra": {"anyOf": ["type": "number", "type": "null"], "default": null, "description": "Price of ultra volume over the specified period of time.", "examples": [78], "title": "Ultra"}}, "title": "InstanceVolumesPricingSerializer", "type": "object"}
    ContainerScaleTriggersThresholdSerializer: {"properties": {"threshold": {"description": "Threshold value for the trigger in percentage", "examples": [75], "maximum": 100, "minimum": 1, "title": "Threshold", "type": "integer"}}, "required": ["threshold"], "title": "ContainerScaleTriggersThresholdSerializer", "type": "object"}
    GpuVirtualFlavorHardwareDescriptionSerializer: {"properties": {"gpu": {"anyOf": ["type": "string", "type": "null"], "description": "Human-readable GPU description", "examples": ["1x NVIDIA 11GB"], "title": "Gpu"}, "local_storage": {"anyOf": ["type": "integer", "type": "null"], "description": "Local storage capacity in GiB", "examples": [3000], "title": "Local Storage"}, "ram": {"anyOf": ["type": "integer", "type": "null"], "description": "RAM size in MiB", "examples": [2048], "title": "Ram"}, "vcpus": {"anyOf": ["type": "integer", "type": "null"], "description": "Virtual CPU count", "examples": [1], "title": "Vcpus"}}, "required": ["vcpus", "ram", "gpu", "local_storage"], "title": "GpuVirtualFlavorHardwareDescriptionSerializer", "type": "object"}
    NetworkDetailsSerializer: {"properties": {"created_at": {"description": "Datetime when the network was created", "examples": ["2025-04-04T13:55:31Z"], "format": "date-time", "title": "Created At", "type": "string"}, "external": {"description": "True if the network `router:external` attribute", "examples": [true], "title": "External", "type": "boolean"}, "id": {"description": "Network ID", "examples": ["eed97610-708d-43a5-a9a5-caebd2b7b4ee"], "format": "uuid4", "title": "Id", "type": "string"}, "mtu": {"description": "MTU (maximum transmission unit)", "examples": [1500], "title": "Mtu", "type": "integer"}, "name": {"description": "Network name", "examples": ["public"], "title": "Name", "type": "string"}, "port_security_enabled": {"description": "Indicates `port_security_enabled` status of all newly created in the network ports.", "examples": [true, false], "title": "Port Security Enabled", "type": "boolean"}, "segmentation_id": {"anyOf": ["type": "integer", "type": "null"], "description": "Id of network segment", "examples": [9], "title": "Segmentation Id"}, "shared": {"description": "True when the network is shared with your project by external owner", "examples": [false], "title": "Shared", "type": "boolean"}, "subnets": {"anyOf": [{"items": {"$ref": "#/components/schemas/SubnetDetailsSerializer"}, "type": "array"}, "type": "null"], "description": "List of subnetworks", "title": "Subnets"}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "type": {"description": "Network type (vlan, vxlan)", "examples": ["vlan"], "title": "Type", "type": "string"}, "updated_at": {"description": "Datetime when the network was last updated", "examples": ["2025-04-04T13:56:31Z"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["id", "name", "mtu", "created_at", "updated_at", "type", "segmentation_id", "external", "shared", "subnets", "tags", "port_security_enabled"], "title": "NetworkDetailsSerializer", "type": "object"}
    K8sClusterNFSV2Serializer: {"properties": {"vast_enabled": {"description": "Indicates the status of VAST NFS integration", "examples": [true], "title": "Vast Enabled", "type": "boolean"}}, "required": ["vast_enabled"], "title": "K8sClusterNFSV2Serializer", "type": "object"}
    RegionComponentStatus: {"properties": {"error": {"description": "Error message if the component is in an error state", "title": "Error", "type": "string"}, "status": {"description": "Current state of the component in a specific region", "title": "Status", "type": "string"}}, "required": ["status", "error"], "title": "RegionComponentStatus", "type": "object"}
    PoolerModes: {"enum": ["session", "statement", "transaction"], "title": "PoolerModes", "type": "string"}
    RegionalQuotasThresholdSerializer: {"properties": {"baremetal_basic_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Basic bare metal servers count limit"}, "baremetal_basic_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Basic bare metal servers count usage"}, "baremetal_gpu_a100_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Bare metal A100 GPU server count limit"}, "baremetal_gpu_a100_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Bare metal A100 GPU server count usage"}, "baremetal_gpu_h100_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Bare metal H100 GPU server count limit"}, "baremetal_gpu_h100_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Bare metal H100 GPU server count usage"}, "baremetal_gpu_h200_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Bare metal H200 GPU server count limit"}, "baremetal_gpu_h200_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Bare metal H200 GPU server count usage"}, "baremetal_gpu_l40s_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Bare metal L40S GPU server count limit"}, "baremetal_gpu_l40s_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Bare metal L40S GPU server count usage"}, "baremetal_hf_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "High-frequency bare metal servers count limit"}, "baremetal_hf_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "High-frequency bare metal servers count usage"}, "baremetal_infrastructure_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Infrastructure bare metal servers count limit"}, "baremetal_infrastructure_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Infrastructure bare metal servers count usage"}, "baremetal_network_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Bare metal Network Count limit"}, "baremetal_network_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Bare metal Network Count usage"}, "baremetal_storage_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Storage bare metal servers count limit"}, "baremetal_storage_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Storage bare metal servers count usage"}, "caas_container_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Containers count limit"}, "caas_container_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Containers count usage"}, "caas_cpu_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "mCPU count for containers limit"}, "caas_cpu_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "mCPU count for containers usage"}, "caas_gpu_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Containers gpu count limit"}, "caas_gpu_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Containers gpu count usage"}, "caas_ram_size_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "MB memory count for containers limit"}, "caas_ram_size_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "MB memory count for containers usage"}, "cluster_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer",
          "description": "K8s clusters count limit"}, "cluster_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "K8s clusters count usage"}, "cpu_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "vCPU Count limit"}, "cpu_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "vCPU Count usage"}, "dbaas_postgres_cluster_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "DBaaS cluster count limit"}, "dbaas_postgres_cluster_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "DBaaS cluster count usage"}, "external_ip_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "External IP Count limit"}, "external_ip_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "External IP Count usage"}, "faas_cpu_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "mCPU count for functions limit"}, "faas_cpu_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "mCPU count for functions usage"}, "faas_function_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Functions count limit"}, "faas_function_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Functions count usage"}, "faas_namespace_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Functions namespace count limit"}, "faas_namespace_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Functions namespace count usage"}, "faas_ram_size_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "MB memory count for functions limit"}, "faas_ram_size_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "MB memory count for functions usage"}, "firewall_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Firewalls Count limit"}, "firewall_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Firewalls Count usage"}, "floating_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Floating IP Count limit"}, "floating_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Floating IP Count usage"}, "gpu_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "GPU Count limit"}, "gpu_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "GPU Count usage"}, "gpu_virtual_a100_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Virtual A100 GPU card count limit"}, "gpu_virtual_a100_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Virtual A100 GPU card count usage"}, "gpu_virtual_h100_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Virtual H100 GPU card count limit"}, "gpu_virtual_h100_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Virtual H100 GPU card count usage"}, "gpu_virtual_h200_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Virtual H200 GPU card count limit"}, "gpu_virtual_h200_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Virtual H200 GPU card count usage"}, "gpu_virtual_l40s_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Virtual L40S GPU card count limit"}, "gpu_virtual_l40s_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Virtual L40S GPU card count
            usage"}, "image_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Images Count limit"}, "image_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Images Count usage"}, "image_size_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Images Size, GiB limit"}, "image_size_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Images Size, GiB usage"}, "ipu_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "IPU Count limit"}, "ipu_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "IPU Count usage"}, "laas_topic_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "LaaS Topics Count limit"}, "laas_topic_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "LaaS Topics Count usage"}, "loadbalancer_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Load Balancers Count limit"}, "loadbalancer_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Load Balancers Count usage"}, "network_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Networks Count limit"}, "network_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Networks Count usage"}, "ram_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "RAM Size, GiB limit"}, "ram_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "RAM Size, GiB usage"}, "region_id": {"description": "Region id", "examples": [2], "title": "Region Id", "type": "integer"}, "region_name": {"description": "Region name", "examples": ["Luxembourg"], "title": "Region Name", "type": "string"}, "registry_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Registries count limit"}, "registry_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Registries count usage"}, "registry_storage_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Registries volume usage, GiB limit"}, "registry_storage_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Registries volume usage, GiB usage"}, "router_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Routers Count limit"}, "router_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Routers Count usage"}, "secret_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Secret Count limit"}, "secret_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Secret Count usage"}, "servergroup_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Placement Group Count limit"}, "servergroup_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Placement Group Count usage"}, "sfs_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Shared file system Count limit"}, "sfs_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Shared file system Count usage"}, "sfs_size_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Shared file system Size, GiB limit"}, "sfs_size_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Shared file system Size, GiB usage"}, "shared_vm_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Basic VMs Count limit"}, "shared_vm_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer",
          "description": "Basic VMs Count usage"}, "snapshot_schedule_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Snapshot Schedules Count limit"}, "snapshot_schedule_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Snapshot Schedules Count usage"}, "subnet_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Subnets Count limit"}, "subnet_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Subnets Count usage"}, "vm_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Instances Dedicated Count limit"}, "vm_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Instances Dedicated Count usage"}, "volume_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Volumes Count limit"}, "volume_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Volumes Count usage"}, "volume_size_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Volumes Size, GiB limit"}, "volume_size_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Volumes Size, GiB usage"}, "volume_snapshots_count_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Snapshots Count limit"}, "volume_snapshots_count_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Snapshots Count usage"}, "volume_snapshots_size_limit": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Snapshots Size, GiB limit"}, "volume_snapshots_size_usage": {"$ref": "#/components/schemas/QuotaCountForThresholdSerializer", "description": "Snapshots Size, GiB usage"}}, "required": ["region_id", "region_name"], "title": "RegionalQuotasThresholdSerializer", "type": "object"}
    InferenceInstanceContainerProbeConfigurationOutSerializerV2: {"properties": {"enabled": {"description": "Whether the probe is enabled or not.", "examples": [true, false], "title": "Enabled", "type": "boolean"}, "probe": {"anyOf": ["$ref": "#/components/schemas/ContainerProbeOutSerializerV2", "type": "null"], "description": "Probe configuration (exec, `http_get` or `tcp_socket`)"}}, "required": ["enabled", "probe"], "title": "InferenceInstanceContainerProbeConfigurationOutSerializerV2", "type": "object"}
    CreateInstanceCreateVolumeFromImageSerializer: {"properties": {"attachment_tag": {"description": "Block device attachment tag (not exposed in the normal tags)", "examples": ["boot", "data", "logs"], "pattern": "^[^,/]{1,60}$", "title": "Attachment Tag", "type": "string"}, "boot_index": {"description": "- `0` means that this is the primary boot device;\n- A unique positive value is set for the secondary bootable devices;\n- A negative number means that the boot is prohibited.", "examples": [0], "title": "Boot Index", "type": "integer"}, "delete_on_termination": {"default": false, "description": "Set to `true` to automatically delete the volume when the instance is deleted.", "examples": [false], "title": "Delete On Termination", "type": "boolean"}, "image_id": {"description": "Image ID.", "examples": ["f01fd9a0-9548-48ba-82dc-a8c8b2d6f2f1"], "format": "uuid4", "title": "Image Id", "type": "string"}, "name": {"description": "The name of the volume. If not specified, a name will be generated automatically.", "examples": ["boot-volume"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "size": {"description": "Volume size in GiB.\n- For instances: **specify the desired volume size explicitly**.\n- For basic VMs: the size is set automatically based on the flavor.", "examples": [20], "minimum": 1, "title": "Size", "type": "integer"}, "source": {"const": "image", "description": "New volume will be created from the image and attached to the instance. Specify `boot_index=0` to boot from this volume.", "examples": ["image"], "title": "Source", "type": "string"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "type_name": {"$ref": "#/components/schemas/VolumeTypeName", "default": "standard", "description": "Volume type name. Supported values:\n- `standard` - Network SSD block storage offering stable performance with high random I/O and data reliability (6 IOPS per 1 GiB, 0.4 MB/s per 1 GiB). Max IOPS: 4500. Max bandwidth: 300 MB/s.\n- `ssd_hiiops` - High-performance SSD storage for latency-sensitive transactional workloads (60 IOPS per 1 GiB, 2.5 MB/s per 1 GiB). Max IOPS: 9000. Max bandwidth: 500 MB/s.\n- `ssd_lowlatency` - SSD storage optimized for low-latency and real-time processing. Max IOPS: 5000. Average latency: 300 Âµs. Snapshots and volume resizing are **not** supported for `ssd_lowlatency`.", "examples": ["ssd_hiiops"]}}, "required": ["source", "image_id"], "title": "CreateInstanceCreateVolumeFromImageSerializer", "type": "object"}
    SubnetDetailsSerializer: {"properties": {"available_ips": {"anyOf": ["type": "integer", "type": "null"], "description": "Number of available ips in subnet", "examples": [250], "title": "Available Ips"}, "cidr": {"description": "CIDR", "examples": ["192.168.13.0/24"], "format": "ipvanynetwork", "title": "Cidr", "type": "string"}, "created_at": {"description": "Datetime when the subnet was created", "examples": ["2025-04-04T13:55:31Z"], "format": "date-time", "title": "Created At", "type": "string"}, "dns_nameservers": {"anyOf": [{"items": {"format": "ipvanyaddress", "type": "string"}, "type": "array"}, "type": "null"], "description": "List IP addresses of a DNS resolver reachable from the network", "examples": [["8.8.8.8", "8.8.4.4"]], "title": "Dns Nameservers"}, "enable_dhcp": {"description": "Indicates whether DHCP is enabled for this subnet. If true, IP addresses will be assigned automatically", "examples": [true], "title": "Enable Dhcp", "type": "boolean"}, "gateway_ip": {"anyOf": [{"format": "ipvanyaddress", "type": "string"}, "type": "null"], "description": "Default GW IPv4 address, advertised in DHCP routes of this subnet. If null, no gateway is advertised by this subnet.", "examples": ["192.168.13.1"], "title": "Gateway Ip"}, "has_router": {"deprecated": true, "description": "Deprecated. Always returns `false`.", "examples": [false], "title": "Has Router", "type": "boolean"}, "host_routes": {"anyOf": [{"items": {"$ref": "#/components/schemas/RouteOutSerializer"}, "type": "array"}, "type": "null"], "description": "List of custom static routes to advertise via DHCP.", "examples": [[]], "title": "Host Routes"}, "id": {"description": "Subnet id.", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Id", "type": "string"}, "ip_version": {"$ref": "#/components/schemas/IPVersion", "description": "IP version used by the subnet (IPv4 or IPv6)", "examples": [4]}, "name": {"description": "Subnet name", "examples": ["subnet_3"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "network_id": {"description": "Network ID", "examples": ["b30d0de7-bca2-4c83-9c57-9e645bd2cc92"], "format": "uuid4", "title": "Network Id", "type": "string"}, "tags": {"description": "List of key-value tags associated with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": [[{"key": "my-tag", "read_only": false, "value": "my-tag-value"}]], "items": {"$ref": "#/components/schemas/TagSerializer"}, "title": "Tags", "type": "array"}, "total_ips": {"anyOf": ["type": "integer", "type": "null"], "description": "Total number of ips in subnet", "examples": [253], "title": "Total Ips"}, "updated_at": {"description": "Datetime when the subnet was last updated", "examples": ["2025-04-04T13:56:31Z"], "format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["name", "id", "network_id", "ip_version", "enable_dhcp", "cidr", "available_ips", "total_ips", "has_router", "dns_nameservers", "host_routes", "gateway_ip", "tags", "created_at", "updated_at"], "title": "SubnetDetailsSerializer", "type": "object"}
    AllVolumeTypeEnum: {"enum": ["cold", "ssd_hiiops", "ssd_local", "ssd_lowlatency", "standard", "ultra"], "title": "AllVolumeTypeEnum", "type": "string"}
    BaseFlavorSerializer: {"properties": {"flavor_id": {"description": "Flavor ID is the same as name", "examples": ["g2-standard-32-64"], "title": "Flavor Id", "type": "string"}, "flavor_name": {"description": "Flavor name", "examples": ["g2-standard-32-64"], "title": "Flavor Name", "type": "string"}, "ram": {"description": "RAM size in MiB", "examples": [2048], "title": "Ram", "type": "integer"}, "vcpus": {"description": "Virtual CPU count. For bare metal flavors, it's a physical CPU count", "examples": [1], "title": "Vcpus", "type": "integer"}}, "required": ["flavor_id", "flavor_name", "vcpus", "ram"], "title": "BaseFlavorSerializer", "type": "object"}
    GpuBaremetalFlavorHardwareDescriptionSerializer: {"properties": {"cpu": {"description": "Human-readable CPU description", "examples": ["1x Intel Xeon 4C/8T 3.7 GHz"], "title": "Cpu", "type": "string"}, "disk": {"description": "Human-readable disk description", "examples": ["2x 250GiB SSD"], "title": "Disk", "type": "string"}, "gpu": {"description": "Human-readable GPU description", "examples": ["1x NVIDIA 11GB"], "title": "Gpu", "type": "string"}, "network": {"description": "Human-readable NIC description", "examples": ["1x 500Mbps"], "title": "Network", "type": "string"}, "ram": {"description": "Human-readable RAM description", "examples": ["32 GiB"], "title": "Ram", "type": "string"}}, "required": ["cpu", "ram", "disk", "network", "gpu"], "title": "GpuBaremetalFlavorHardwareDescriptionSerializer", "type": "object"}
    GpuBaremetalFlavorSerializerWithPrices: {"properties": {"architecture": {"anyOf": ["type": "string", "type": "null"], "description": "Flavor architecture type", "examples": ["x86_64"], "title": "Architecture"}, "capacity": {"description": "Number of available instances of given flavor", "examples": [1], "title": "Capacity", "type": "integer"}, "disabled": {"description": "If the flavor is disabled, new resources cannot be created using this flavor.", "examples": [false], "title": "Disabled", "type": "boolean"}, "hardware_description": {"$ref": "#/components/schemas/GpuBaremetalFlavorHardwareDescriptionSerializer", "description": "Additional virtual hardware description"}, "hardware_properties": {"$ref": "#/components/schemas/GpuFlavorHardwareProperties", "description": "Additional bare metal hardware properties"}, "name": {"description": "Flavor name", "examples": ["g1-gpu-1-2-1"], "title": "Name", "type": "string"}, "price": {"$ref": "#/components/schemas/FlavorPrice", "description": "Flavor price"}, "supported_features": {"$ref": "#/components/schemas/FlavorFeaturesSerializer", "description": "Set of enabled features based on the flavor's type and configuration"}}, "required": ["name", "price", "architecture", "disabled", "capacity", "hardware_description", "hardware_properties", "supported_features"], "title": "Bare metal GPU flavors chema with price", "type": "object"}
    CreateInstanceCreateVolumeFromApptemplateSerializer: {"properties": {"apptemplate_id": {"description": "App template ID.", "examples": ["grafana"], "title": "Apptemplate Id", "type": "string"}, "attachment_tag": {"description": "Block device attachment tag (not exposed in the normal tags)", "examples": ["boot", "data", "logs"], "pattern": "^[^,/]{1,60}$", "title": "Attachment Tag", "type": "string"}, "boot_index": {"description": "- `0` means that this is the primary boot device;\n- A unique positive value is set for the secondary bootable devices;\n- A negative number means that the boot is prohibited.", "examples": [0], "title": "Boot Index", "type": "integer"}, "delete_on_termination": {"default": false, "description": "Set to `true` to automatically delete the volume when the instance is deleted.", "examples": [false], "title": "Delete On Termination", "type": "boolean"}, "name": {"description": "The name of the volume. If not specified, a name will be generated automatically.", "examples": ["boot-volume"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "size": {"description": "Volume size in GiB.", "examples": [20], "minimum": 1, "title": "Size", "type": "integer"}, "source": {"const": "apptemplate", "description": "New volume will be created from the app template and attached to the instance.", "examples": ["apptemplate"], "title": "Source", "type": "string"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "type_name": {"$ref": "#/components/schemas/VolumeTypeName", "default": "standard", "description": "Volume type name. Supported values:\n- `standard` - Network SSD block storage offering stable performance with high random I/O and data reliability (6 IOPS per 1 GiB, 0.4 MB/s per 1 GiB). Max IOPS: 4500. Max bandwidth: 300 MB/s.\n- `ssd_hiiops` - High-performance SSD storage for latency-sensitive transactional workloads (60 IOPS per 1 GiB, 2.5 MB/s per 1 GiB). Max IOPS: 9000. Max bandwidth: 500 MB/s.\n- `ssd_lowlatency` - SSD storage optimized for low-latency and real-time processing. Max IOPS: 5000. Average latency: 300 Âµs. Snapshots and volume resizing are **not** supported for `ssd_lowlatency`.", "examples": ["ssd_hiiops"]}}, "required": ["source", "apptemplate_id"], "title": "CreateInstanceCreateVolumeFromApptemplateSerializer", "type": "object"}
    QuotaCountForThresholdSerializer: {"properties": {"limit": {"description": "Ð¡urrent quota limit", "examples": [10], "maximum": 9223372036854776000, "minimum": 0, "title": "Limit", "type": "integer"}, "usage": {"description": "Ð¡urrent amount of resource used", "examples": [8], "minimum": 0, "title": "Usage", "type": "integer"}}, "required": ["usage", "limit"], "title": "QuotaCountForThresholdSerializer", "type": "object"}
    ContainerScaleTriggersSqsSerializer: {"properties": {"activation_queue_length": {"description": "Number of messages for activation", "minimum": 1, "title": "Activation Queue Length", "type": "integer"}, "aws_endpoint": {"anyOf": ["type": "string", "type": "null"], "default": null, "description": "Custom AWS endpoint", "title": "Aws Endpoint"}, "aws_region": {"description": "AWS region", "examples": ["us-east-1"], "minLength": 1, "title": "Aws Region", "type": "string"}, "queue_length": {"description": "Number of messages for one replica", "examples": [10], "minimum": 1, "title": "Queue Length", "type": "integer"}, "queue_url": {"description": "SQS queue URL", "examples": ["https://sqs.us-east-1.amazonaws.com/123456789012/MyQueue"], "minLength": 1, "title": "Queue Url", "type": "string"}, "scale_on_delayed": {"default": false, "description": "Scale on delayed messages", "title": "Scale On Delayed", "type": "boolean"}, "scale_on_flight": {"default": false, "description": "Scale on in-flight messages", "title": "Scale On Flight", "type": "boolean"}, "secret_name": {"description": "Auth secret name", "minLength": 1, "title": "Secret Name", "type": "string"}}, "required": ["queue_url", "queue_length", "activation_queue_length", "aws_region", "secret_name"], "title": "ContainerScaleTriggersSqsSerializer", "type": "object"}
    CreateInstanceExistingVolumeSerializer: {"properties": {"attachment_tag": {"description": "Block device attachment tag (not exposed in the normal tags)", "examples": ["boot", "data", "logs"], "pattern": "^[^,/]{1,60}$", "title": "Attachment Tag", "type": "string"}, "boot_index": {"description": "- `0` means that this is the primary boot device;\n- A unique positive value is set for the secondary bootable devices;\n- A negative number means that the boot is prohibited.", "examples": [0], "title": "Boot Index", "type": "integer"}, "delete_on_termination": {"default": false, "description": "Set to `true` to automatically delete the volume when the instance is deleted.", "examples": [false], "title": "Delete On Termination", "type": "boolean"}, "source": {"const": "existing-volume", "description": "Existing available volume will be attached to the instance.", "examples": ["existing-volume"], "title": "Source", "type": "string"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "volume_id": {"description": "Volume ID.", "examples": ["f01fd9a0-9548-48ba-82dc-a8c8b2d6f2f1"], "format": "uuid4", "title": "Volume Id", "type": "string"}}, "required": ["source", "volume_id"], "title": "CreateInstanceExistingVolumeSerializer", "type": "object"}
    ContainerScaleOutSerializerV3: {"properties": {"cooldown_period": {"anyOf": ["type": "integer", "type": "null"], "description": "Cooldown period between scaling actions in seconds", "examples": [60], "title": "Cooldown Period"}, "max": {"description": "Maximum scale for the container", "examples": [3], "title": "Max", "type": "integer"}, "min": {"description": "Minimum scale for the container", "examples": [1], "title": "Min", "type": "integer"}, "polling_interval": {"anyOf": ["type": "integer", "type": "null"], "description": "Polling interval for scaling triggers in seconds", "examples": [30], "title": "Polling Interval"}, "triggers": {"$ref": "#/components/schemas/ContainerScaleTriggersOutSerializer", "description": "Triggers for scaling actions"}}, "required": ["min", "max", "cooldown_period", "polling_interval", "triggers"], "title": "ContainerScaleOutSerializerV3", "type": "object"}
    PortIpWithSubnetSerializer: {"properties": {"ip_address": {"description": "IP address", "examples": ["192.168.123.20"], "format": "ipvanyaddress", "title": "Ip Address", "type": "string"}, "subnet": {"$ref": "#/components/schemas/SubnetSerializer", "description": "Subnet details"}, "subnet_id": {"description": "ID of the subnet that allocated the IP", "examples": ["b39792c3-3160-4356-912e-ba396c95cdcf"], "format": "uuid4", "title": "Subnet Id", "type": "string"}}, "required": ["subnet_id", "ip_address", "subnet"], "title": "PortIpWithSubnetSerializer", "type": "object"}
    LbPoolMemberSerializer: {"properties": {"id": {"description": "Member ID must be provided if an existing member is being updated", "examples": ["a7e7e8d6-0bf7-4ac9-8170-831b47ee2ba9"], "format": "uuid4", "title": "Id", "type": "string"}}, "required": ["id"], "title": "LbPoolMemberSerializer", "type": "object"}
    MemberStatusSerializer: {"properties": {"address": {"description": "Address of the member (server)", "examples": ["95.85.95.85", "2.56.220.2"], "format": "ipvanyaddress", "title": "Address", "type": "string"}, "id": {"description": "UUID of the entity", "examples": ["00000000-0000-4000-8000-000000000000"], "format": "uuid", "title": "Id", "type": "string"}, "operating_status": {"$ref": "#/components/schemas/OperatingStatusEnum", "description": "Operating status of the entity", "examples": ["ONLINE", "DRAINING", "OFFLINE", "DEGRADED", "ERROR", "NO_MONITOR"]}, "protocol_port": {"description": "Port of the member (server)", "examples": [53, 80, 443], "exclusiveMaximum": 65536, "exclusiveMinimum": 0, "title": "Protocol Port", "type": "integer"}, "provisioning_status": {"$ref": "#/components/schemas/ProvisioningStatusEnum", "description": "Provisioning status of the entity", "examples": ["ACTIVE", "DELETED", "ERROR", "PENDING_CREATE", "PENDING_UPDATE", "PENDING_DELETE"]}}, "required": ["id", "operating_status", "provisioning_status", "address", "protocol_port"], "title": "MemberStatusSerializer", "type": "object"}
    CreateInstanceCreateNewVolumeSerializer: {"properties": {"attachment_tag": {"description": "Block device attachment tag (not exposed in the normal tags)", "examples": ["boot", "data", "logs"], "pattern": "^[^,/]{1,60}$", "title": "Attachment Tag", "type": "string"}, "delete_on_termination": {"default": false, "description": "Set to `true` to automatically delete the volume when the instance is deleted.", "examples": [false], "title": "Delete On Termination", "type": "boolean"}, "name": {"description": "The name of the volume. If not specified, a name will be generated automatically.", "examples": ["boot-volume"], "pattern": "^[a-zA-Z0-9][a-zA-Z 0-9._\\-]{1,61}[a-zA-Z0-9._]$", "title": "Name", "type": "string"}, "size": {"description": "Volume size in GiB.", "examples": [20], "minimum": 1, "title": "Size", "type": "integer"}, "source": {"const": "new-volume", "description": "New volume will be created from scratch and attached to the instance.", "examples": ["new-volume"], "title": "Source", "type": "string"}, "tags": {"$ref": "#/components/schemas/CreateTagsSerializer", "description": "Key-value tags to associate with the resource. A tag is a key-value pair that can be associated with a resource, enabling efficient filtering and grouping for better organization and management. Some tags are read-only and cannot be modified by the user. Tags are also integrated with cost reports, allowing cost data to be filtered based on tag keys or values.", "examples": ["my-tag": "my-tag-value"]}, "type_name": {"$ref": "#/components/schemas/VolumeTypeName", "default": "standard", "description": "Volume type name. Supported values:\n- `standard` - Network SSD block storage offering stable performance with high random I/O and data reliability (6 IOPS per 1 GiB, 0.4 MB/s per 1 GiB). Max IOPS: 4500. Max bandwidth: 300 MB/s.\n- `ssd_hiiops` - High-performance SSD storage for latency-sensitive transactional workloads (60 IOPS per 1 GiB, 2.5 MB/s per 1 GiB). Max IOPS: 9000. Max bandwidth: 500 MB/s.\n- `ssd_lowlatency` - SSD storage optimized for low-latency and real-time processing. Max IOPS: 5000. Average latency: 300 Âµs. Snapshots and volume resizing are **not** supported for `ssd_lowlatency`.", "examples": ["ssd_hiiops"]}}, "required": ["source", "size"], "title": "CreateInstanceCreateNewVolumeSerializer", "type": "object"}
    InferenceContainerScalePricingV2Serializer: {"properties": {"max": {"description": "Maximum number of containers", "examples": [3], "maximum": 10000000000000000, "minimum": 1, "title": "Max", "type": "integer"}}, "required": ["max"], "title": "InferenceContainerScalePricingV2Serializer", "type": "object"}
    ContainerProbeOutSerializerV2: {"properties": {"exec": {"anyOf": ["$ref": "#/components/schemas/ContainerProbeExecConfigOutSerializerV2", "type": "null"], "description": "Exec probe configuration"}, "failure_threshold": {"description": "The number of consecutive probe failures that mark the container as unhealthy.", "examples": [3], "title": "Failure Threshold", "type": "integer"}, "http_get": {"anyOf": ["$ref": "#/components/schemas/ContainerProbeHttpGetConfigOutSerializerV2", "type": "null"], "description": "HTTP GET probe configuration"}, "initial_delay_seconds": {"description": "The initial delay before starting the first probe.", "examples": [0, 10], "title": "Initial Delay Seconds", "type": "integer"}, "period_seconds": {"description": "How often (in seconds) to perform the probe.", "examples": [5, 10], "title": "Period Seconds", "type": "integer"}, "success_threshold": {"description": "The number of consecutive successful probes that mark the container as healthy.", "examples": [1], "title": "Success Threshold", "type": "integer"}, "tcp_socket": {"anyOf": ["$ref": "#/components/schemas/ContainerProbeTcpSocketConfigOutSerializerV2", "type": "null"], "description": "TCP socket probe configuration"}, "timeout_seconds": {"description": "The timeout for each probe.", "examples": [1, 5], "title": "Timeout Seconds", "type": "integer"}}, "required": ["failure_threshold", "initial_delay_seconds", "period_seconds", "timeout_seconds", "success_threshold", "exec", "tcp_socket", "http_get"], "title": "ContainerProbeOutSerializerV2", "type": "object"}
    ContainerScaleTriggersOutSerializer: {"properties": {"cpu": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleTriggersThresholdOutSerializer", "type": "null"], "description": "CPU trigger configuration", "examples": ["threshold": 80]}, "gpu_memory": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleTriggersThresholdOutSerializer", "type": "null"], "description": "GPU memory trigger configuration. Calculated by `DCGM_FI_DEV_MEM_COPY_UTIL` metric", "examples": ["threshold": 80]}, "gpu_utilization": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleTriggersThresholdOutSerializer", "type": "null"], "description": "GPU utilization trigger configuration. Calculated by `DCGM_FI_DEV_GPU_UTIL` metric", "examples": ["threshold": 80]}, "http": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleTriggersRateOutSerializer", "type": "null"], "description": "HTTP trigger configuration", "examples": [{"rate": 1, "window": 60}]}, "memory": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleTriggersThresholdOutSerializer", "type": "null"], "description": "Memory trigger configuration", "examples": ["threshold": 80]}, "sqs": {"anyOf": ["$ref": "#/components/schemas/ContainerScaleTriggersSqsOutSerializer", "type": "null"], "description": "SQS trigger configuration"}}, "required": ["cpu", "memory", "gpu_utilization", "gpu_memory", "http", "sqs"], "title": "ContainerScaleTriggersOutSerializer", "type": "object"}
    ContainerScaleTriggersThresholdOutSerializer: {"properties": {"threshold": {"description": "Threshold value for the trigger in percentage", "examples": [75], "title": "Threshold", "type": "integer"}}, "required": ["threshold"], "title": "ContainerScaleTriggersThresholdOutSerializer", "type": "object"}
    ContainerProbeHttpGetConfigOutSerializerV2: {"properties": {"headers": {"additionalProperties": {"type": "string"}, "description": "HTTP headers to be sent with the request.", "examples": ["Authorization": "Bearer token 123"], "title": "Headers", "type": "object"}, "host": {"anyOf": ["type": "string", "type": "null"], "description": "Host name to send HTTP request to.", "examples": ["127.0.0.1"], "title": "Host"}, "path": {"description": "The endpoint to send the HTTP request to.", "examples": ["/healthz", "/readiness"], "title": "Path", "type": "string"}, "port": {"description": "Port number the probe should connect to.", "examples": [80, 8080], "title": "Port", "type": "integer"}, "schema": {"description": "Schema to use for the HTTP request.", "examples": ["HTTP", "HTTPS"], "title": "Schema", "type": "string"}}, "required": ["headers", "host", "path", "port", "schema"], "title": "ContainerProbeHttpGetConfigOutSerializerV2", "type": "object"}
    ContainerScaleTriggersRateOutSerializer: {"properties": {"rate": {"description": "Request count per 'window' seconds for the http trigger", "examples": [1], "title": "Rate", "type": "integer"}, "window": {"description": "Time window for rate calculation in seconds", "examples": [60], "title": "Window", "type": "integer"}}, "required": ["rate", "window"], "title": "ContainerScaleTriggersRateOutSerializer", "type": "object"}
    ContainerScaleTriggersSqsOutSerializer: {"properties": {"activation_queue_length": {"description": "Number of messages for activation", "examples": [5], "title": "Activation Queue Length", "type": "integer"}, "aws_endpoint": {"anyOf": ["type": "string", "type": "null"], "description": "Custom AWS endpoint", "title": "Aws Endpoint"}, "aws_region": {"description": "AWS region", "examples": ["us-east-1"], "title": "Aws Region", "type": "string"}, "queue_length": {"description": "Number of messages for one replica", "examples": [10], "title": "Queue Length", "type": "integer"}, "queue_url": {"description": "SQS queue URL", "examples": ["https://sqs.us-east-1.amazonaws.com/123456789012/MyQueue"], "title": "Queue Url", "type": "string"}, "scale_on_delayed": {"description": "Scale on delayed messages", "examples": [true, false], "title": "Scale On Delayed", "type": "boolean"}, "scale_on_flight": {"description": "Scale on in-flight messages", "examples": [true, false], "title": "Scale On Flight", "type": "boolean"}, "secret_name": {"description": "Auth secret name", "title": "Secret Name", "type": "string"}}, "required": ["queue_url", "queue_length", "activation_queue_length", "scale_on_flight", "scale_on_delayed", "aws_region", "aws_endpoint", "secret_name"], "title": "ContainerScaleTriggersSqsOutSerializer", "type": "object"}
    ContainerProbeTcpSocketConfigOutSerializerV2: {"properties": {"port": {"description": "Port number to check if it's open.", "examples": [80, 8080], "title": "Port", "type": "integer"}}, "required": ["port"], "title": "ContainerProbeTcpSocketConfigOutSerializerV2", "type": "object"}
    ContainerProbeExecConfigOutSerializerV2: {"properties": {"command": {"description": "Command to be executed inside the running container.", "examples": [["ls", "-l"]], "items": {"type": "string"}, "title": "Command", "type": "array"}}, "required": ["command"], "title": "ContainerProbeExecConfigOutSerializerV2", "type": "object"}
  securitySchemes:
    APIKey:
      description: "API key for authentication. Make sure to include the word `apikey`, followed by a single space and then your token.\nExample: `apikey 1234$abcdef`"
      type: apiKey
      in: header
      name: Authorization
