openapi: 3.1.0
info:
  title: DDoS Protection
  version: 2.0.0
  description: |-
    DDoS Protection API provides API to manage "Advanced DDoS Protection".

    DDoS Protection API base URLs:
      - https://api.___serverHost___/security/iaas
      - https://api.___serverHost___/security/sifter

    Event logs API base URL:
      - https://api.___serverHost___/security/notifier

    # Glossary
    - **Client** - a user of the service.
    - **Profile** - DDoS protection profile, describing how to protect a client's network. Profile is a set of protection policies that can be applied to a client's network. Essentially, it is a result of applying a profile template to a set of parameters (fields).
    - **Profile field** - a field of a profile, specifying a configurable parameter of a profile. E.g. rate limit of a policy, or ACL rule. Profile field is essentially a template field with a particular value. Profile value is validated against the template field's validation schema.
    - **Profile template** - a set of protection policies that can be used to create a profile. In other words, this is a blueprint for creating a profile.
    - **Event Log** - a record that contains detailed information about detected DDoS attack events, including alert type, client information, notification status, and attack metrics.
    Template may be private, meaning that it belongs to a specific client and not available for other clients, or common, meaning that it is available for all clients.
    - **Profile template field** - a field of a profile template. This is what a client can set when creating a profile. Can be required or optional. E.g. rate limit of a policy, or ACL rule. Contains validation schema for the field value.
    - **Protection policy** - a set of rules that define how to protect a client's network. Defined in template
    - **BGP announce** - a set of prefixes that are announced to the client's network. Defined in template
    - **Site** - a location where the client's network is located. Can be specified in profile or template.
    - **ACL** - Access-control list, a subsystem used for splitting traffic to an origin server into flows. Each flow has its own processing policy.
    Each rule in ACL has a set of attributes, such as source IP (`sip`, `sip_list` params) , destination IP (`dip`, `dip_list` params),
    source port (`sport`, `sport_list` params), destination port (`dport`, `dport_list` params),
    protocol (`proto`, `proto_list` params), and policy. More details you can find in the validation schema of `acl_list` field in the template.



    # Description
    This API provides the following functionality:
    - **Profiles** - Create, Read, Update and Delete operations for profiles
    - **Profile Templates** - Read operations for profile templates
    - **BGP Announces** - Read and update operations for BGP announces
    - **Event Logs** - Read event logs for a client

    ### How to use
    In order to protect a network(s), protection profile needs to be created. To create a profile, the following steps need to be taken:
    1. Choose a protection template from a list of available templates. Use the `GET /iaas/profile-templates` endpoint to get a list of available templates.
    If the list of available templates is empty, you don't know which template to use, or you don't have a template that suits your needs, contact the support team.
    2. Create a profile using the `POST /iaas/v2/profiles` endpoint. You need to provide the following parameters:
        - `profile_template` - ID of the template you want to use
        Setting a different value in this case will apply protection rules in a different location than intended.
        - `ip_address` - IP address (optional). If protection networks are specified directly in template, setting this field will have no effect.
        - `fields` - an array of fields, not null (can be empty though). You can find available for configuration fields in `fields` field of the selected template.
           All the fields that a marked as required in the template must be provided:
            - `base_field` - ID of the field in profile template

            or

            - `field_name` - name of the field (use `name_in_config` parameter of the field)

            and

            - `field_value` - value of the field, must conform to the validation schema of the field

       Upon creation, profile ID can be found in the response. It can be used to track the status of the profile and to work with profile further.
       If something went wrong, error details can be found in the `status` field in the response.
       Profile is active after successful creation.

       > Keep in mind that 2xx response code in response does not mean that profile is successfully created, because it's applied asynchronously and this process might take up to 2 minutes.
       Use `status` field of profile to track the status of the profile.

    Next, you can update, deactivate/activate profile, or delete it.

    ### BGP
    BGP (Border Gateway Protocol) announcements are messages that routers use to share information about available network routes on the internet.
    Routers, particularly those used by ISPs and large networks, use BGP to exchange routes with each other, effectively building a map of how data should travel across the internet.

    BGP announces are typically defined in profile templates.

    BGP announce API is used to check which prefixes are announced to the client's network and to enable or disable the announces. This API is used to work with networks that are defined in active protected profiles,
    meaning that the client must have at least one active profile to work with BGP announces. This API does not provide functionality of creating or updating announces directly (for security reasons), it is done through templates.

    # Authentication
    All endpoints require authentication.
    You can find the available authorization methods in this section: <a href="https://api.___serverHost___/docs/iam#section/Authentication">Authorization methods</a>
paths:
  /notifier/v1/event_logs:
    get:
      tags:
      - Event Logs
      summary: Event Logs Clients View
      operationId: event_logs_clients_view_api_v1_event_logs_get
      parameters:
      - name: date_from
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: string
          default: '2024-01-23'
          title: Date From
      - name: date_to
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: string
          default: '2025-01-23'
          title: Date To
      - name: alert_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/AlertType'
          - type: 'null'
          title: Alert Type
      - name: targeted_ip_addresses
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Targeted Ip Addresses
      - name: ordering
        in: query
        required: false
        schema:
          enum:
          - attack_start_time
          - -attack_start_time
          - attack_power_bps
          - -attack_power_bps
          - attack_power_pps
          - -attack_power_pps
          - number_of_ip_involved_in_attack
          - -number_of_ip_involved_in_attack
          - alert_type
          - -alert_type
          type: string
          default: attack_start_time
          title: Ordering
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 500
          minimum: 1
          default: 10
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitOffsetPage_TypeVar_Customized_EventLogClientsOutSchema_'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /sifter/v2/protected_addresses/announces:
    get:
      tags:
      - BGP announces
      summary: Get BGP announces
      description: Get BGP announces filtered by parameters. Shows announces in active
        profiles, meaning that to get a non-empty response, the client must have at
        least one active profile.
      operationId: get_announces_v2_protected_addresses_announces_get
      parameters:
      - name: site
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            minLength: 1
            maxLength: 100
          - type: 'null'
          title: Site
      - name: origin
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/Origin'
          - type: 'null'
          title: Origin
      - name: announced
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Announced
      - name: client_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Client Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClientAnnounces'
                title: Response Get Announces V2 Protected Addresses Announces Get
                type: array
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - BGP announces
      summary: Change BGP announces
      description: Change BGP announces (it can be enabled or disabled, but not created
        or updated). Can be applied to already existing announces in active profiles,
        meaning that the client must have at least one active profile.
      operationId: change_announces_v2_protected_addresses_announces_post
      parameters:
      - name: client_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Client Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnounceIn'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Change Announces V2 Protected Addresses Announces
                  Post
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /iaas/profile-templates:
    get:
      tags:
      - Templates
      operationId: profile_templates_list
      description: Get list of profile templates. Profile template is used as a template
        to create profile. Client receives only common and created for him profile
        templates.
      summary: Get profile templates
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientProfileTemplate'
          description: ''
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /iaas/v2/profiles:
    get:
      tags:
      - Profiles
      operationId: v2_profiles_list
      description: Get list of protection profiles. Client receives only profiles
        created by him
      summary: Get profiles
      parameters:
      - in: query
        name: exclude_empty_address
        schema:
          type: boolean
      - in: query
        name: include_deleted
        schema:
          type: boolean
      - in: query
        name: ip_address
        schema:
          type: string
      - in: query
        name: site
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientProfileReadV2'
          description: ''
    post:
      tags:
      - Profiles
      operationId: v2_profiles_create
      description: Create protection profile. Protection is enabled at the same time
        as profile is created
      summary: Create profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProfile'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileReadV2'
          description: ''
  /iaas/v2/profiles/{id}:
    get:
      tags:
      - Profiles
      operationId: v2_profiles_retrieve
      description: Get profile by id
      summary: Get profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileReadV2'
          description: ''
        '404':
          description: Profile not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      tags:
      - Profiles
      operationId: v2_profiles_update
      description: Update profile. Protection policies are updated at the same time
        as profile updated
      summary: Update profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUpdateProfileTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientUpdateProfileTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientUpdateProfileTemplate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileReadV2'
          description: ''
        '400':
          description: Bad request
        '404':
          description: Profile not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
      - Profiles
      operationId: v2_profiles_destroy
      description: Delete protection profile. Protection is disabled at the same time
        as profile is deleted
      summary: Delete profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      responses:
        '204':
          description: No response body
        '404':
          description: Profile not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /iaas/v2/profiles/{id}/recreate:
    put:
      tags:
      - Profiles
      operationId: v2_profiles_recreate_update
      description: Recreate profile with another profile template (for other cases
        use detail API)
      summary: Recreate profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUpdateProfileTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientUpdateProfileTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientUpdateProfileTemplate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileReadV2'
          description: ''
        '400':
          description: Bad request
        '404':
          description: Profile not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      deprecated: true
      tags:
      - Profiles
      operationId: v2_profiles_recreate_partial_update
      description: Recreate profile with another profile template (for other cases
        use detail API)
      summary: Recreate profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClientUpdateProfileTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClientUpdateProfileTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClientUpdateProfileTemplate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileReadV2'
          description: ''
        '400':
          description: Bad request
        '404':
          description: Profile not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /iaas/v2/profiles/{id}/update-and-activate:
    put:
      deprecated: true
      tags:
      - Profiles
      operationId: v2_profiles_update_and_activate_update
      description: Update profile and activate protection. Protection policies are
        updated at the same time as profile updated
      summary: Update profile and activate protection
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProfile'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileReadV2'
          description: ''
        '400':
          description: Bad request
        '404':
          description: Profile not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      deprecated: true
      tags:
      - Profiles
      operationId: v2_profiles_update_and_activate_partial_update
      description: Update profile and activate protection. Protection policies are
        updated at the same time as profile updated
      summary: Update profile and activate protection
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClientProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileReadV2'
          description: ''
        '400':
          description: Bad request
        '404':
          description: Profile not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /iaas/v2/profiles/create-and-activate:
    post:
      deprecated: true
      tags:
      - Profiles
      operationId: v2_profiles_create_and_activate_create
      description: Create protection profile and activate protection. Protection policies
        are activated at the same time as profile created
      summary: Create profile and activate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProfile'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileReadV2'
          description: ''
        '404':
          description: Profile not found
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
components:
  schemas:
    ClientAnnounces:
      properties:
        announced:
          examples:
          - - 192.9.9.1/32
            - 203.0.113.1/32
          items:
            format: ipv4network
            type: string
          title: Announced
          type: array
        client_id:
          examples:
          - '128120'
          minimum: 0.0
          title: Client Id
          type: integer
        not_announced:
          examples:
          - - 122.2.2.1/32
            - 120.0.113.2/32
          items:
            format: ipv4network
            type: string
          title: Not Announced
          type: array
      required:
      - client_id
      - announced
      - not_announced
      title: ClientAnnounces
      type: object
    AnnounceIn:
      properties:
        announce:
          examples:
          - 192.9.9.1/32
          format: ipv4network
          title: Announce
          type: string
        enabled:
          examples:
          - true
          title: Enabled
          type: boolean
      required:
      - announce
      - enabled
      title: AnnounceIn
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Origin:
      type: string
      enum:
      - STATIC
      - DYNAMIC
      title: Origin
    Request:
      properties: {}
      type: object
      title: Request
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    ClientProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        profile_template:
          type: integer
          examples:
          - 1
          - 2
        ip_address:
          type: string
          examples:
          - 123.43.2.10
          - 123.65.9.5
          nullable: true
          maxLength: 50
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ClientProfileField'
          writeOnly: true
        site:
          type: string
          examples:
          - ED
          - DC3
      required:
      - fields
      - id
      - profile_template
    ClientProfileField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        field_type:
          type: string
          readOnly: true
        required:
          type: boolean
          readOnly: true
        default:
          type: string
          readOnly: true
        field_value:
          type: object
          additionalProperties: {}
          nullable: true
          examples:
          - - 12
            - 54
            - 43
          - key: value
          - value
        base_field:
          type: integer
          examples:
          - 1
          - 2
        validation_schema:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - base_field
      - default
      - description
      - field_type
      - id
      - name
      - required
      - validation_schema
    ClientProfileReadV2:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        profile_template:
          $ref: '#/components/schemas/ClientProfileTemplate'
        ip_address:
          type: string
          examples:
          - 10.32.5.12
          - 195.23.43.64
          nullable: true
          maxLength: 50
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ClientProfileField'
          readOnly: true
        site:
          type: string
          examples:
          - ED
          - DC3
        options:
          allOf:
          - $ref: '#/components/schemas/ProfileV1Options'
          readOnly: true
        protocols:
          type: array
          items:
            type: object
            additionalProperties: {}
          readOnly: true
        status:
          type: object
          additionalProperties: {}
          readOnly: true
        plan:
          type: string
          readOnly: true
      required:
      - fields
      - id
      - options
      - plan
      - profile_template
      - protocols
      - site
      - status
    ClientProfileTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ClientProfileTemplateField'
          readOnly: true
        base_template:
          type: integer
          nullable: true
        version:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        template_sifter:
          type: string
          nullable: true
      required:
      - created
      - fields
      - id
      - name
      - version
    ClientProfileTemplateField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
        description:
          type: string
          maxLength: 255
        field_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FieldTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        required:
          type: boolean
        default:
          type: string
          nullable: true
          maxLength: 100
        validation_schema:
          type: object
          additionalProperties: {}
      required:
      - id
      - name
    ClientUpdateProfileTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        profile_template:
          type: integer
          examples:
          - 1
          - 2
        ip_address:
          type: string
          nullable: true
          maxLength: 50
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ClientProfileField'
          writeOnly: true
        site:
          type: string
          examples:
          - ED
          - DC3
      required:
      - fields
      - id
      - profile_template
    FieldTypeEnum:
      enum:
      - int
      - bool
      - str
      type: string
      description: |-
        * `int` - Int
        * `bool` - Bool
        * `str` - Str
    NullEnum:
      enum:
      - null
    PatchedClientProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        profile_template:
          type: integer
          examples:
          - 1
          - 2
        ip_address:
          type: string
          nullable: true
          maxLength: 50
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ClientProfileField'
          writeOnly: true
        site:
          type: string
          examples:
          - ED
          - DC3
    PatchedClientUpdateProfileTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        profile_template:
          type: integer
          examples:
          - 1
          - 2
        ip_address:
          type: string
          nullable: true
          maxLength: 50
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ClientProfileField'
          writeOnly: true
        site:
          type: string
          examples:
          - ED
          - DC3
    ProfileV1Options:
      type: object
      properties:
        bgp:
          type: boolean
        active:
          type: boolean
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          readOnly: true
      required:
      - active
      - bgp
      - price
    AlertType:
      type: string
      enum:
      - ddos_alert
      - rtbh_alert
      title: AlertType
    EventLogClientsOutSchema:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        alert_type:
          anyOf:
          - $ref: '#/components/schemas/AlertType'
          - type: 'null'
        client_id:
          anyOf:
          - type: integer
          - type: 'null'
          title: Client Id
        notification_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Notification Type
        attack_start_time:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Attack Start Time
        attack_power_bps:
          anyOf:
          - type: number
          - type: 'null'
          title: Attack Power Bps
        attack_power_pps:
          anyOf:
          - type: number
          - type: 'null'
          title: Attack Power Pps
        number_of_ip_involved_in_attack:
          anyOf:
          - type: integer
          - type: 'null'
          title: Number Of Ip Involved In Attack
        targeted_ip_addresses:
          anyOf:
          - type: string
          - type: 'null'
          title: Targeted Ip Addresses
      type: object
      required:
      - id
      title: EventLogClientsOutSchema
    LimitOffsetPage_TypeVar_Customized_EventLogClientsOutSchema_:
      properties:
        results:
          items:
            $ref: '#/components/schemas/EventLogClientsOutSchema'
          type: array
          title: Results
        count:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Count
        limit:
          anyOf:
          - type: integer
            minimum: 1.0
          - type: 'null'
          title: Limit
        offset:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Offset
      type: object
      required:
      - results
      - count
      - limit
      - offset
      title: LimitOffsetPage[TypeVar]Customized[EventLogClientsOutSchema]
servers:
- url: https://api.___serverHost___/security
